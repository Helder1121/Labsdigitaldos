

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 21:52:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0009                     _PORTE	set	9
   284  0008                     _PORTD	set	8
   285  0006                     _PORTB	set	6
   286  0007                     _PORTCbits	set	7
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0088                     _TRISD	set	136
   290  0089                     _TRISE	set	137
   291  0094                     _SSPSTATbits	set	148
   292  0094                     _SSPSTAT	set	148
   293  043A                     _TRISC2	set	1082
   294  0439                     _TRISC1	set	1081
   295  0438                     _TRISC0	set	1080
   296  043B                     _TRISC3	set	1083
   297  043D                     _TRISC5	set	1085
   298  0189                     _ANSELH	set	393
   299  0188                     _ANSEL	set	392
   300                           
   301                           	psect	cinit
   302  07FC                     start_initialization:	
   303                           ; #config settings
   304                           
   305  07FC                     __initialization:
   306  07FC                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  07FC                     __end_of__initialization:
   310  07FC  0183               	clrf	3
   311  07FD  120A  118A  2F95   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	cstackCOMMON
   314  0070                     __pcstackCOMMON:
   315  0070                     ?_setup:
   316  0070                     ?_spiInit:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_spiReceiveWait:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ??_spiReceiveWait:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_spiWrite:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_spiWrite:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_spiRead:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_spiRead:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     spiInit@sDataSample:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     spiWrite@dat:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0070                     	ds	1
   349  0071                     spiInit@sClockIdle:
   350                           
   351                           ; 1 bytes @ 0x1
   352  0071                     	ds	1
   353  0072                     spiInit@sTransmitEdge:
   354                           
   355                           ; 1 bytes @ 0x2
   356  0072                     	ds	1
   357  0073                     ??_spiInit:
   358  0073                     spiInit@sType:	
   359                           ; 1 bytes @ 0x3
   360                           
   361                           
   362                           ; 1 bytes @ 0x3
   363  0073                     	ds	1
   364  0074                     ??_setup:
   365  0074                     ??_main:	
   366                           ; 1 bytes @ 0x4
   367                           
   368                           
   369                           ; 1 bytes @ 0x4
   370  0074                     	ds	2
   371                           
   372                           	psect	maintext
   373  0795                     __pmaintext:	
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 49 in file "Mast.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : B00/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          2       0       0       0       0
   396 ;;      Totals:         2       0       0       0       0
   397 ;;Total ram usage:        2 bytes
   398 ;; Hardware stack levels required when called:    2
   399 ;; This function calls:
   400 ;;		_setup
   401 ;;		_spiRead
   402 ;;		_spiWrite
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _main
   410  0795                     _main:
   411  0795                     l759:	
   412                           ;incstack = 0
   413                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   414                           
   415                           
   416                           ;Mast.c: 50:     setup();
   417  0795  120A  118A  2776  120A  118A  	fcall	_setup
   418  079A                     l761:
   419                           
   420                           ;Mast.c: 55:         PORTCbits.RC2 = 0;
   421  079A  1283               	bcf	3,5	;RP0=0, select bank0
   422  079B  1303               	bcf	3,6	;RP1=0, select bank0
   423  079C  1107               	bcf	7,2	;volatile
   424  079D                     l763:
   425                           
   426                           ;Mast.c: 56:         _delay((unsigned long)((1)*(8000000/4000.0)));
   427  079D  3003               	movlw	3
   428  079E  00F5               	movwf	??_main+1
   429  079F  3097               	movlw	151
   430  07A0  00F4               	movwf	??_main
   431  07A1                     u47:
   432  07A1  0BF4               	decfsz	??_main,f
   433  07A2  2FA1               	goto	u47
   434  07A3  0BF5               	decfsz	??_main+1,f
   435  07A4  2FA1               	goto	u47
   436  07A5  2FA6               	nop2
   437  07A6                     l765:
   438                           
   439                           ;Mast.c: 58:         spiWrite(1);
   440  07A6  3001               	movlw	1
   441  07A7  120A  118A  274A  120A  118A  	fcall	_spiWrite
   442  07AC                     l767:
   443                           
   444                           ;Mast.c: 59:         PORTB = spiRead();
   445  07AC  120A  118A  2757  120A  118A  	fcall	_spiRead
   446  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   447  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   448  07B3  0086               	movwf	6	;volatile
   449  07B4                     l769:
   450                           
   451                           ;Mast.c: 61:         _delay((unsigned long)((1)*(8000000/4000.0)));
   452  07B4  3003               	movlw	3
   453  07B5  00F5               	movwf	??_main+1
   454  07B6  3097               	movlw	151
   455  07B7  00F4               	movwf	??_main
   456  07B8                     u57:
   457  07B8  0BF4               	decfsz	??_main,f
   458  07B9  2FB8               	goto	u57
   459  07BA  0BF5               	decfsz	??_main+1,f
   460  07BB  2FB8               	goto	u57
   461  07BC  2FBD               	nop2
   462  07BD                     l771:
   463                           
   464                           ;Mast.c: 62:          PORTCbits.RC2 = 1;
   465  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   466  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   467  07BF  1507               	bsf	7,2	;volatile
   468  07C0                     l773:
   469                           
   470                           ;Mast.c: 64:         _delay((unsigned long)((1)*(8000000/4000.0)));
   471  07C0  3003               	movlw	3
   472  07C1  00F5               	movwf	??_main+1
   473  07C2  3097               	movlw	151
   474  07C3  00F4               	movwf	??_main
   475  07C4                     u67:
   476  07C4  0BF4               	decfsz	??_main,f
   477  07C5  2FC4               	goto	u67
   478  07C6  0BF5               	decfsz	??_main+1,f
   479  07C7  2FC4               	goto	u67
   480  07C8  2FC9               	nop2
   481  07C9                     l775:
   482                           
   483                           ;Mast.c: 65:         PORTCbits.RC1 = 0;
   484  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   485  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   486  07CB  1087               	bcf	7,1	;volatile
   487  07CC                     l777:
   488                           
   489                           ;Mast.c: 66:         _delay((unsigned long)((1)*(8000000/4000.0)));
   490  07CC  3003               	movlw	3
   491  07CD  00F5               	movwf	??_main+1
   492  07CE  3097               	movlw	151
   493  07CF  00F4               	movwf	??_main
   494  07D0                     u77:
   495  07D0  0BF4               	decfsz	??_main,f
   496  07D1  2FD0               	goto	u77
   497  07D2  0BF5               	decfsz	??_main+1,f
   498  07D3  2FD0               	goto	u77
   499  07D4  2FD5               	nop2
   500                           
   501                           ;Mast.c: 68:         spiWrite(1);
   502  07D5  3001               	movlw	1
   503  07D6  120A  118A  274A  120A  118A  	fcall	_spiWrite
   504                           
   505                           ;Mast.c: 69:         PORTD = spiRead();
   506  07DB  120A  118A  2757  120A  118A  	fcall	_spiRead
   507  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   508  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   509  07E2  0088               	movwf	8	;volatile
   510  07E3                     l779:
   511                           
   512                           ;Mast.c: 71:         _delay((unsigned long)((1)*(8000000/4000.0)));
   513  07E3  3003               	movlw	3
   514  07E4  00F5               	movwf	??_main+1
   515  07E5  3097               	movlw	151
   516  07E6  00F4               	movwf	??_main
   517  07E7                     u87:
   518  07E7  0BF4               	decfsz	??_main,f
   519  07E8  2FE7               	goto	u87
   520  07E9  0BF5               	decfsz	??_main+1,f
   521  07EA  2FE7               	goto	u87
   522  07EB  2FEC               	nop2
   523  07EC                     l781:
   524                           
   525                           ;Mast.c: 72:         PORTCbits.RC1 = 1;
   526  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   527  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   528  07EE  1487               	bsf	7,1	;volatile
   529  07EF                     l783:
   530                           
   531                           ;Mast.c: 73:         _delay((unsigned long)((1)*(8000000/4000.0)));
   532  07EF  3003               	movlw	3
   533  07F0  00F5               	movwf	??_main+1
   534  07F1  3097               	movlw	151
   535  07F2  00F4               	movwf	??_main
   536  07F3                     u97:
   537  07F3  0BF4               	decfsz	??_main,f
   538  07F4  2FF3               	goto	u97
   539  07F5  0BF5               	decfsz	??_main+1,f
   540  07F6  2FF3               	goto	u97
   541  07F7  2FF8               	nop2
   542  07F8  2F9A               	goto	l761
   543  07F9  120A  118A  2800   	ljmp	start
   544  07FC                     __end_of_main:
   545                           
   546                           	psect	text1
   547  074A                     __ptext1:	
   548 ;; *************** function _spiWrite *****************
   549 ;; Defined at:
   550 ;;		line 35 in file "SPI.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  dat             1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  dat             1    0[COMMON] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _spiWrite
   579  074A                     _spiWrite:
   580                           
   581                           ;incstack = 0
   582                           ; Regs used in _spiWrite: [wreg]
   583                           ;spiWrite@dat stored from wreg
   584  074A  00F0               	movwf	spiWrite@dat
   585  074B                     l681:
   586                           
   587                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   588  074B  0870               	movf	spiWrite@dat,w
   589  074C  1283               	bcf	3,5	;RP0=0, select bank0
   590  074D  1303               	bcf	3,6	;RP1=0, select bank0
   591  074E  0093               	movwf	19	;volatile
   592  074F                     l26:
   593  074F  0008               	return
   594  0750                     __end_of_spiWrite:
   595                           
   596                           	psect	text2
   597  0757                     __ptext2:	
   598 ;; *************** function _spiRead *****************
   599 ;; Defined at:
   600 ;;		line 48 in file "SPI.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      unsigned char 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    1
   621 ;; This function calls:
   622 ;;		_spiReceiveWait
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _spiRead
   630  0757                     _spiRead:
   631  0757                     l683:	
   632                           ;incstack = 0
   633                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   634                           
   635                           
   636                           ;SPI.c: 50:     spiReceiveWait();
   637  0757  120A  118A  2750  120A  118A  	fcall	_spiReceiveWait
   638  075C                     l685:
   639                           
   640                           ;SPI.c: 51:     return(SSPBUF);
   641  075C  1283               	bcf	3,5	;RP0=0, select bank0
   642  075D  1303               	bcf	3,6	;RP1=0, select bank0
   643  075E  0813               	movf	19,w	;volatile
   644  075F                     l34:
   645  075F  0008               	return
   646  0760                     __end_of_spiRead:
   647                           
   648                           	psect	text3
   649  0750                     __ptext3:	
   650 ;; *************** function _spiReceiveWait *****************
   651 ;; Defined at:
   652 ;;		line 30 in file "SPI.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		None
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_spiRead
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _spiReceiveWait
   681  0750                     _spiReceiveWait:
   682  0750                     l679:	
   683                           ;incstack = 0
   684                           ; Regs used in _spiReceiveWait: []
   685                           
   686  0750                     l20:	
   687                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   688                           
   689  0750  1683               	bsf	3,5	;RP0=1, select bank1
   690  0751  1303               	bcf	3,6	;RP1=0, select bank1
   691  0752  1C14               	btfss	20,0	;volatile
   692  0753  2F55               	goto	u21
   693  0754  2F56               	goto	u20
   694  0755                     u21:
   695  0755  2F50               	goto	l20
   696  0756                     u20:
   697  0756                     l23:
   698  0756  0008               	return
   699  0757                     __end_of_spiReceiveWait:
   700                           
   701                           	psect	text4
   702  0776                     __ptext4:	
   703 ;; *************** function _setup *****************
   704 ;; Defined at:
   705 ;;		line 81 in file "Mast.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0
   722 ;;      Totals:         0       0       0       0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    1
   726 ;; This function calls:
   727 ;;		_spiInit
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _setup
   735  0776                     _setup:
   736  0776                     l745:	
   737                           ;incstack = 0
   738                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   739                           
   740                           
   741                           ;Mast.c: 82:     ANSEL = 0;
   742  0776  1683               	bsf	3,5	;RP0=1, select bank3
   743  0777  1703               	bsf	3,6	;RP1=1, select bank3
   744  0778  0188               	clrf	8	;volatile
   745                           
   746                           ;Mast.c: 83:     ANSELH = 0;
   747  0779  0189               	clrf	9	;volatile
   748                           
   749                           ;Mast.c: 85:     TRISE = 0;
   750  077A  1683               	bsf	3,5	;RP0=1, select bank1
   751  077B  1303               	bcf	3,6	;RP1=0, select bank1
   752  077C  0189               	clrf	9	;volatile
   753                           
   754                           ;Mast.c: 86:     TRISD = 0;
   755  077D  0188               	clrf	8	;volatile
   756                           
   757                           ;Mast.c: 88:     PORTE = 0;
   758  077E  1283               	bcf	3,5	;RP0=0, select bank0
   759  077F  1303               	bcf	3,6	;RP1=0, select bank0
   760  0780  0189               	clrf	9	;volatile
   761                           
   762                           ;Mast.c: 89:     PORTD = 0;
   763  0781  0188               	clrf	8	;volatile
   764  0782                     l747:
   765                           
   766                           ;Mast.c: 91:     TRISC0 = 0;
   767  0782  1683               	bsf	3,5	;RP0=1, select bank1
   768  0783  1303               	bcf	3,6	;RP1=0, select bank1
   769  0784  1007               	bcf	7,0	;volatile
   770  0785                     l749:
   771                           
   772                           ;Mast.c: 92:     TRISC1 = 0;
   773  0785  1087               	bcf	7,1	;volatile
   774  0786                     l751:
   775                           
   776                           ;Mast.c: 93:     TRISC2 = 0;
   777  0786  1107               	bcf	7,2	;volatile
   778  0787                     l753:
   779                           
   780                           ;Mast.c: 95:     PORTCbits.RC1 = 1;
   781  0787  1283               	bcf	3,5	;RP0=0, select bank0
   782  0788  1303               	bcf	3,6	;RP1=0, select bank0
   783  0789  1487               	bsf	7,1	;volatile
   784  078A                     l755:
   785                           
   786                           ;Mast.c: 96:     PORTCbits.RC2 = 1;
   787  078A  1507               	bsf	7,2	;volatile
   788  078B                     l757:
   789                           
   790                           ;Mast.c: 98:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
   791  078B  01F0               	clrf	spiInit@sDataSample
   792  078C  01F1               	clrf	spiInit@sClockIdle
   793  078D  01F2               	clrf	spiInit@sTransmitEdge
   794  078E  3024               	movlw	36
   795  078F  120A  118A  2760  120A  118A  	fcall	_spiInit
   796  0794                     l77:
   797  0794  0008               	return
   798  0795                     __end_of_setup:
   799                           
   800                           	psect	text5
   801  0760                     __ptext5:	
   802 ;; *************** function _spiInit *****************
   803 ;; Defined at:
   804 ;;		line 12 in file "SPI.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  sType           1    wreg     enum E1264
   807 ;;  sDataSample     1    0[COMMON] enum E1272
   808 ;;  sClockIdle      1    1[COMMON] enum E1276
   809 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  sType           1    3[COMMON] enum E1264
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         3       0       0       0       0
   822 ;;      Locals:         1       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         4       0       0       0       0
   825 ;;Total ram usage:        4 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_setup
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _spiInit
   836  0760                     _spiInit:
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   840                           ;spiInit@sType stored from wreg
   841  0760  00F3               	movwf	spiInit@sType
   842  0761                     l735:
   843                           
   844                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle;SPI
      +                          .c: 13: sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 
      +                          = 0;
   845  0761  1683               	bsf	3,5	;RP0=1, select bank1
   846  0762  1303               	bcf	3,6	;RP1=0, select bank1
   847  0763  1287               	bcf	7,5	;volatile
   848                           
   849                           ;SPI.c: 16:     if(sType & 0b00000100)
   850  0764  1D73               	btfss	spiInit@sType,2
   851  0765  2F67               	goto	u31
   852  0766  2F68               	goto	u30
   853  0767                     u31:
   854  0767  2F6C               	goto	l741
   855  0768                     u30:
   856  0768                     l737:
   857                           
   858                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   859  0768  0872               	movf	spiInit@sTransmitEdge,w
   860  0769  0094               	movwf	20	;volatile
   861  076A                     l739:
   862                           
   863                           ;SPI.c: 19:         TRISC3 = 1;
   864  076A  1587               	bsf	7,3	;volatile
   865                           
   866                           ;SPI.c: 20:     }
   867  076B  2F70               	goto	l16
   868  076C                     l741:
   869                           
   870                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   871  076C  0870               	movf	spiInit@sDataSample,w
   872  076D  0472               	iorwf	spiInit@sTransmitEdge,w
   873  076E  0094               	movwf	20	;volatile
   874  076F                     l743:
   875                           
   876                           ;SPI.c: 24:         TRISC3 = 0;
   877  076F  1187               	bcf	7,3	;volatile
   878  0770                     l16:	
   879                           ;SPI.c: 25:     }
   880                           
   881                           
   882                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   883  0770  0873               	movf	spiInit@sType,w
   884  0771  0471               	iorwf	spiInit@sClockIdle,w
   885  0772  1283               	bcf	3,5	;RP0=0, select bank0
   886  0773  1303               	bcf	3,6	;RP1=0, select bank0
   887  0774  0094               	movwf	20	;volatile
   888  0775                     l17:
   889  0775  0008               	return
   890  0776                     __end_of_spiInit:
   891  007E                     btemp	set	126	;btemp
   892  007E                     wtemp0	set	126
   893                           
   894                           	psect	config
   895                           
   896                           ;Config register CONFIG1 @ 0x2007
   897                           ;	Oscillator Selection bits
   898                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   899                           ;	Watchdog Timer Enable bit
   900                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   901                           ;	Power-up Timer Enable bit
   902                           ;	PWRTE = OFF, PWRT disabled
   903                           ;	RE3/MCLR pin function select bit
   904                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   905                           ;	Code Protection bit
   906                           ;	CP = OFF, Program memory code protection is disabled
   907                           ;	Data Code Protection bit
   908                           ;	CPD = OFF, Data memory code protection is disabled
   909                           ;	Brown Out Reset Selection bits
   910                           ;	BOREN = OFF, BOR disabled
   911                           ;	Internal External Switchover bit
   912                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   913                           ;	Fail-Safe Clock Monitor Enabled bit
   914                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   915                           ;	Low Voltage Programming Enable bit
   916                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   917                           ;	In-Circuit Debugger Mode bit
   918                           ;	DEBUG = 0x1, unprogrammed default
   919  2007                     	org	8199
   920  2007  20D1               	dw	8401
   921                           
   922                           ;Config register CONFIG2 @ 0x2008
   923                           ;	Brown-out Reset Selection bit
   924                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   925                           ;	Flash Program Memory Self Write Enable bits
   926                           ;	WRT = OFF, Write protection off
   927  2008                     	org	8200
   928  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 21:52:16 2021

            _SSPSTATbits 0094                       l20 0750                       l23 0756  
                     l16 0770                       l17 0775                       l34 075F  
                     l26 074F                       l77 0794                       u20 0756  
                     u21 0755                       u30 0768                       u31 0767  
                     u47 07A1                       u57 07B8                       u67 07C4  
                     u77 07D0                       u87 07E7                       u97 07F3  
                    l741 076C                      l743 076F                      l735 0761  
                    l751 0786                      l737 0768                      l753 0787  
                    l745 0776                      l681 074B                      l761 079A  
                    l739 076A                      l755 078A                      l747 0782  
                    l683 0757                      l771 07BD                      l763 079D  
                    l757 078B                      l749 0785                      l685 075C  
                    l781 07EC                      l773 07C0                      l765 07A6  
                    l679 0750                      l783 07EF                      l775 07C9  
                    l767 07AC                      l759 0795                      l777 07CC  
                    l769 07B4                      l779 07E3                     _main 0795  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISD 0088                    _TRISE 0089  
                  _setup 0776          __end_of_spiInit 0776          __end_of_spiRead 0760  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_spiWrite 0750  
              ??_spiInit 0073                ??_spiRead 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0795                  ??_setup 0074  
             __pmaintext 0795  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 074A                  __ptext2 0757  
                __ptext3 0750                  __ptext4 0776                  __ptext5 0760  
                _spiInit 0760                  _spiRead 0757     end_of_initialization 07FC  
             ??_spiWrite 0070                _PORTCbits 0007              spiWrite@dat 0070  
         _spiReceiveWait 0750      start_initialization 07FC   __end_of_spiReceiveWait 0757  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0070                 ?_spiRead 0070           __size_of_setup 001F  
   spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 0067                 _spiWrite 074A  
           spiInit@sType 0073        spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
