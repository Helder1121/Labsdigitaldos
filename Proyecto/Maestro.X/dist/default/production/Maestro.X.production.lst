

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 13:03:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  0003                     __pstrings:
   486  0003                     stringtab:
   487  0003                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  0003  1BFF               	btfsc	btemp+1,7
   491  0004  280D               	ljmp	stringcode
   492  0005  1383               	bcf	3,7
   493  0006  187F               	btfsc	btemp+1,0
   494  0007  1783               	bsf	3,7
   495  0008  0800               	movf	0,w
   496  0009  0A84               	incf	4,f
   497  000A  1903               	skipnz
   498  000B  0AFF               	incf	btemp+1,f
   499  000C  0008               	return
   500  000D                     stringcode:
   501  000D                     stringdir:
   502  000D  3000               	movlw	high stringdir
   503  000E  008A               	movwf	10
   504  000F  0804               	movf	4,w
   505  0010  0A84               	incf	4,f
   506  0011  0782               	addwf	2,f
   507  0012                     __stringbase:
   508  0012  3400               	retlw	0
   509  0013                     __end_of__stringtab:
   510  0013                     __powers_:
   511  0013  3400               	retlw	0
   512  0014  3400               	retlw	0
   513  0015  3480               	retlw	128
   514  0016  343F               	retlw	63
   515  0017  3400               	retlw	0
   516  0018  3400               	retlw	0
   517  0019  3420               	retlw	32
   518  001A  3441               	retlw	65
   519  001B  3400               	retlw	0
   520  001C  3400               	retlw	0
   521  001D  34C8               	retlw	200
   522  001E  3442               	retlw	66
   523  001F  3400               	retlw	0
   524  0020  3400               	retlw	0
   525  0021  347A               	retlw	122
   526  0022  3444               	retlw	68
   527  0023  3400               	retlw	0
   528  0024  3440               	retlw	64
   529  0025  341C               	retlw	28
   530  0026  3446               	retlw	70
   531  0027  3400               	retlw	0
   532  0028  3450               	retlw	80
   533  0029  34C3               	retlw	195
   534  002A  3447               	retlw	71
   535  002B  3400               	retlw	0
   536  002C  3424               	retlw	36
   537  002D  3474               	retlw	116
   538  002E  3449               	retlw	73
   539  002F  3480               	retlw	128
   540  0030  3496               	retlw	150
   541  0031  3418               	retlw	24
   542  0032  344B               	retlw	75
   543  0033  3420               	retlw	32
   544  0034  34BC               	retlw	188
   545  0035  34BE               	retlw	190
   546  0036  344C               	retlw	76
   547  0037  3428               	retlw	40
   548  0038  346B               	retlw	107
   549  0039  346E               	retlw	110
   550  003A  344E               	retlw	78
   551  003B  34F9               	retlw	249
   552  003C  3402               	retlw	2
   553  003D  3415               	retlw	21
   554  003E  3450               	retlw	80
   555  003F  34EC               	retlw	236
   556  0040  3478               	retlw	120
   557  0041  34AD               	retlw	173
   558  0042  3460               	retlw	96
   559  0043  34CA               	retlw	202
   560  0044  34F2               	retlw	242
   561  0045  3449               	retlw	73
   562  0046  3471               	retlw	113
   563  0047                     __end_of__powers_:
   564  0047                     __npowers_:
   565  0047  3400               	retlw	0
   566  0048  3400               	retlw	0
   567  0049  3480               	retlw	128
   568  004A  343F               	retlw	63
   569  004B  34CD               	retlw	205
   570  004C  34CC               	retlw	204
   571  004D  34CC               	retlw	204
   572  004E  343D               	retlw	61
   573  004F  340A               	retlw	10
   574  0050  34D7               	retlw	215
   575  0051  3423               	retlw	35
   576  0052  343C               	retlw	60
   577  0053  346F               	retlw	111
   578  0054  3412               	retlw	18
   579  0055  3483               	retlw	131
   580  0056  343A               	retlw	58
   581  0057  3417               	retlw	23
   582  0058  34B7               	retlw	183
   583  0059  34D1               	retlw	209
   584  005A  3438               	retlw	56
   585  005B  34AC               	retlw	172
   586  005C  34C5               	retlw	197
   587  005D  3427               	retlw	39
   588  005E  3437               	retlw	55
   589  005F  34BD               	retlw	189
   590  0060  3437               	retlw	55
   591  0061  3486               	retlw	134
   592  0062  3435               	retlw	53
   593  0063  3495               	retlw	149
   594  0064  34BF               	retlw	191
   595  0065  34D6               	retlw	214
   596  0066  3433               	retlw	51
   597  0067  3477               	retlw	119
   598  0068  34CC               	retlw	204
   599  0069  342B               	retlw	43
   600  006A  3432               	retlw	50
   601  006B  345F               	retlw	95
   602  006C  3470               	retlw	112
   603  006D  3489               	retlw	137
   604  006E  3430               	retlw	48
   605  006F  34FF               	retlw	255
   606  0070  34E6               	retlw	230
   607  0071  34DB               	retlw	219
   608  0072  342E               	retlw	46
   609  0073  3408               	retlw	8
   610  0074  34E5               	retlw	229
   611  0075  343C               	retlw	60
   612  0076  341E               	retlw	30
   613  0077  3460               	retlw	96
   614  0078  3442               	retlw	66
   615  0079  34A2               	retlw	162
   616  007A  340D               	retlw	13
   617  007B                     __end_of__npowers_:
   618  007B                     _dpowers:
   619  007B  3401               	retlw	1
   620  007C  3400               	retlw	0
   621  007D  3400               	retlw	0
   622  007E  3400               	retlw	0
   623  007F  340A               	retlw	10
   624  0080  3400               	retlw	0
   625  0081  3400               	retlw	0
   626  0082  3400               	retlw	0
   627  0083  3464               	retlw	100
   628  0084  3400               	retlw	0
   629  0085  3400               	retlw	0
   630  0086  3400               	retlw	0
   631  0087  34E8               	retlw	232
   632  0088  3403               	retlw	3
   633  0089  3400               	retlw	0
   634  008A  3400               	retlw	0
   635  008B  3410               	retlw	16
   636  008C  3427               	retlw	39
   637  008D  3400               	retlw	0
   638  008E  3400               	retlw	0
   639  008F  34A0               	retlw	160
   640  0090  3486               	retlw	134
   641  0091  3401               	retlw	1
   642  0092  3400               	retlw	0
   643  0093  3440               	retlw	64
   644  0094  3442               	retlw	66
   645  0095  340F               	retlw	15
   646  0096  3400               	retlw	0
   647  0097  3480               	retlw	128
   648  0098  3496               	retlw	150
   649  0099  3498               	retlw	152
   650  009A  3400               	retlw	0
   651  009B  3400               	retlw	0
   652  009C  34E1               	retlw	225
   653  009D  34F5               	retlw	245
   654  009E  3405               	retlw	5
   655  009F  3400               	retlw	0
   656  00A0  34CA               	retlw	202
   657  00A1  349A               	retlw	154
   658  00A2  343B               	retlw	59
   659  00A3                     __end_of_dpowers:
   660  0019                     _TXREG	set	25
   661  001A                     _RCREG	set	26
   662  0018                     _RCSTAbits	set	24
   663  0006                     _PORTB	set	6
   664  0008                     _PORTD	set	8
   665  0009                     _PORTE	set	9
   666  0007                     _PORTCbits	set	7
   667  0013                     _SSPBUF	set	19
   668  0014                     _SSPCON	set	20
   669  0065                     _RCIF	set	101
   670  0049                     _RE1	set	73
   671  0048                     _RE0	set	72
   672  0047                     _RD7	set	71
   673  0046                     _RD6	set	70
   674  0045                     _RD5	set	69
   675  0044                     _RD4	set	68
   676  0043                     _RD3	set	67
   677  0042                     _RD2	set	66
   678  0041                     _RD1	set	65
   679  0040                     _RD0	set	64
   680  0098                     _TXSTAbits	set	152
   681  0099                     _SPBRG	set	153
   682  0088                     _TRISD	set	136
   683  0089                     _TRISE	set	137
   684  0086                     _TRISB	set	134
   685  0094                     _SSPSTATbits	set	148
   686  0094                     _SSPSTAT	set	148
   687  04C1                     _TRMT	set	1217
   688  043A                     _TRISC2	set	1082
   689  0439                     _TRISC1	set	1081
   690  0438                     _TRISC0	set	1080
   691  043B                     _TRISC3	set	1083
   692  043D                     _TRISC5	set	1085
   693  0189                     _ANSELH	set	393
   694  0188                     _ANSEL	set	392
   695  00A3                     STR_2:
   696  00A3  3425               	retlw	37	;'%'
   697  00A4  3431               	retlw	49	;'1'
   698  00A5  342E               	retlw	46	;'.'
   699  00A6  3430               	retlw	48	;'0'
   700  00A7  3466               	retlw	102	;'f'
   701  00A8  3420               	retlw	32	;' '
   702  00A9  3420               	retlw	32	;' '
   703  00AA  3420               	retlw	32	;' '
   704  00AB  3425               	retlw	37	;'%'
   705  00AC  3464               	retlw	100	;'d'
   706  00AD  3420               	retlw	32	;' '
   707  00AE  3420               	retlw	32	;' '
   708  00AF  3420               	retlw	32	;' '
   709  00B0  3425               	retlw	37	;'%'
   710  00B1  3433               	retlw	51	;'3'
   711  00B2  342E               	retlw	46	;'.'
   712  00B3  3430               	retlw	48	;'0'
   713  00B4  3466               	retlw	102	;'f'
   714  00B5  3400               	retlw	0
   715  00B6                     STR_1:
   716  00B6  3453               	retlw	83	;'S'
   717  00B7  3431               	retlw	49	;'1'
   718  00B8  3420               	retlw	32	;' '
   719  00B9  3420               	retlw	32	;' '
   720  00BA  3420               	retlw	32	;' '
   721  00BB  3443               	retlw	67	;'C'
   722  00BC  344F               	retlw	79	;'O'
   723  00BD  344E               	retlw	78	;'N'
   724  00BE  3454               	retlw	84	;'T'
   725  00BF  3420               	retlw	32	;' '
   726  00C0  3420               	retlw	32	;' '
   727  00C1  3420               	retlw	32	;' '
   728  00C2  3453               	retlw	83	;'S'
   729  00C3  3433               	retlw	51	;'3'
   730  00C4  3400               	retlw	0
   731  00B6                     
   732                           	psect	cinit
   733  07EF                     start_initialization:	
   734                           ; #config settings
   735                           
   736  07EF                     __initialization:
   737                           
   738                           ; Clear objects allocated to BANK0
   739  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   740  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   741  07F1  01EE               	clrf	__pbssBANK0& (0+127)
   742  07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   743                           
   744                           ; Clear objects allocated to BANK1
   745  07F3  1383               	bcf	3,7	;select IRP bank0
   746  07F4  30CE               	movlw	low __pbssBANK1
   747  07F5  0084               	movwf	4
   748  07F6  30EB               	movlw	low (__pbssBANK1+29)
   749  07F7  160A  158A  2146  120A  118A  	fcall	clear_ram0
   750  07FC                     end_of_initialization:	
   751                           ;End of C runtime variable initialization code
   752                           
   753  07FC                     __end_of__initialization:
   754  07FC  0183               	clrf	3
   755  07FD  120A  118A  291C   	ljmp	_main	;jump to C main() function
   756                           
   757                           	psect	bssBANK0
   758  006E                     __pbssBANK0:
   759  006E                     _ADC1:
   760  006E                     	ds	1
   761  006F                     _cont:
   762  006F                     	ds	1
   763                           
   764                           	psect	bssBANK1
   765  00CE                     __pbssBANK1:
   766  00CE                     _temp:
   767  00CE                     	ds	4
   768  00D2                     _v1:
   769  00D2                     	ds	4
   770  00D6                     _ADC2:
   771  00D6                     	ds	1
   772  00D7                     _data:
   773  00D7                     	ds	20
   774                           
   775                           	psect	clrtext
   776  1946                     clear_ram0:	
   777                           ;	Called with FSR containing the base address, and
   778                           ;	W with the last address+1
   779                           
   780  1946  0064               	clrwdt	;clear the watchdog before getting into this loop
   781  1947                     clrloop0:
   782  1947  0180               	clrf	0	;clear RAM location pointed to by FSR
   783  1948  0A84               	incf	4,f	;increment pointer
   784  1949  0604               	xorwf	4,w	;XOR with final address
   785  194A  1903               	btfsc	3,2	;have we reached the end yet?
   786  194B  3400               	retlw	0	;all done for this memory range, return
   787  194C  0604               	xorwf	4,w	;XOR again to restore value
   788  194D  2947               	goto	clrloop0	;do the next byte
   789                           
   790                           	psect	cstackBANK1
   791  00A0                     __pcstackBANK1:
   792  00A0                     ?_sprintf:
   793  00A0                     sprintf@f:	
   794                           ; 2 bytes @ 0x0
   795                           
   796                           
   797                           ; 1 bytes @ 0x0
   798  00A0                     	ds	11
   799  00AB                     ??_sprintf:
   800                           
   801                           ; 1 bytes @ 0xB
   802  00AB                     	ds	5
   803  00B0                     _sprintf$1140:
   804                           
   805                           ; 4 bytes @ 0x10
   806  00B0                     	ds	4
   807  00B4                     sprintf@ap:
   808                           
   809                           ; 1 bytes @ 0x14
   810  00B4                     	ds	1
   811  00B5                     sprintf@flag:
   812                           
   813                           ; 2 bytes @ 0x15
   814  00B5                     	ds	2
   815  00B7                     sprintf@width:
   816                           
   817                           ; 2 bytes @ 0x17
   818  00B7                     	ds	2
   819  00B9                     sprintf@tmpval:
   820                           
   821                           ; 4 bytes @ 0x19
   822  00B9                     	ds	4
   823  00BD                     sprintf@val:
   824                           
   825                           ; 4 bytes @ 0x1D
   826  00BD                     	ds	4
   827  00C1                     sprintf@eexp:
   828                           
   829                           ; 2 bytes @ 0x21
   830  00C1                     	ds	2
   831  00C3                     sprintf@fval:
   832                           
   833                           ; 4 bytes @ 0x23
   834  00C3                     	ds	4
   835  00C7                     sprintf@sp:
   836                           
   837                           ; 1 bytes @ 0x27
   838  00C7                     	ds	1
   839  00C8                     sprintf@prec:
   840                           
   841                           ; 2 bytes @ 0x28
   842  00C8                     	ds	2
   843  00CA                     sprintf@c:
   844                           
   845                           ; 1 bytes @ 0x2A
   846  00CA                     	ds	1
   847  00CB                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x2B
   850  00CB                     	ds	3
   851                           
   852                           	psect	cstackCOMMON
   853  0070                     __pcstackCOMMON:
   854  0070                     ?_isdigit:
   855  0070                     ?___fleq:	
   856                           ; 1 bit 
   857                           
   858  0070                     ?___flge:	
   859                           ; 1 bit 
   860                           
   861  0070                     ?_setup:	
   862                           ; 1 bit 
   863                           
   864  0070                     ?__baudios:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??__baudios:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_config_txsta:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ??_config_txsta:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_config_rcsta:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ??_config_rcsta:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_Lcd_Init:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_LCD_Limpia:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_contador:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_ADC_lectura:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_Write_USART:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ??_Write_USART:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ??_isdigit:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_spiInit:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_spiReceiveWait:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ??_spiReceiveWait:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_spiWrite:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ??_spiWrite:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_spiRead:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ??_spiRead:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_main:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_Puerto:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ??_Puerto:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_LCD_CMD:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_datosLCD:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?__Umul8_16:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?___wmul:	
   943                           ; 2 bytes @ 0x0
   944                           
   945  0070                     ?___awmod:	
   946                           ; 2 bytes @ 0x0
   947                           
   948  0070                     ?___lwmod:	
   949                           ; 2 bytes @ 0x0
   950                           
   951  0070                     ?__tdiv_to_l_:	
   952                           ; 2 bytes @ 0x0
   953                           
   954  0070                     ?__div_to_l_:	
   955                           ; 4 bytes @ 0x0
   956                           
   957  0070                     ?___lldiv:	
   958                           ; 4 bytes @ 0x0
   959                           
   960  0070                     ?___flneg:	
   961                           ; 4 bytes @ 0x0
   962                           
   963  0070                     ?___xxtofl:	
   964                           ; 4 bytes @ 0x0
   965                           
   966  0070                     spiInit@sDataSample:	
   967                           ; 4 bytes @ 0x0
   968                           
   969  0070                     spiWrite@dat:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     Puerto@x:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     Write_USART@a:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     __Umul8_16@multiplicand:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     _isdigit$951:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ___wmul@multiplier:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ___awmod@divisor:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0070                     ___lwmod@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  0070                     ___lldiv@divisor:	
   994                           ; 2 bytes @ 0x0
   995                           
   996  0070                     __div_to_l_@f1:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0070                     ___fleq@ff1:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002  0070                     ___flge@ff1:	
  1003                           ; 4 bytes @ 0x0
  1004                           
  1005  0070                     ___flneg@f1:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008  0070                     __tdiv_to_l_@f1:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  0070                     ___xxtofl@val:	
  1012                           ; 4 bytes @ 0x0
  1013                           
  1014                           
  1015                           ; 4 bytes @ 0x0
  1016  0070                     	ds	1
  1017  0071                     ??_contador:
  1018  0071                     ?_Write_USART_String:	
  1019                           ; 1 bytes @ 0x1
  1020                           
  1021  0071                     ??_LCD_CMD:	
  1022                           ; 1 bytes @ 0x1
  1023                           
  1024  0071                     ??_datosLCD:	
  1025                           ; 1 bytes @ 0x1
  1026                           
  1027  0071                     spiInit@sClockIdle:	
  1028                           ; 1 bytes @ 0x1
  1029                           
  1030  0071                     isdigit@c:	
  1031                           ; 1 bytes @ 0x1
  1032                           
  1033  0071                     Write_USART_String@a:	
  1034                           ; 1 bytes @ 0x1
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x1
  1038  0071                     	ds	1
  1039  0072                     ??__Umul8_16:
  1040  0072                     spiInit@sTransmitEdge:	
  1041                           ; 1 bytes @ 0x2
  1042                           
  1043  0072                     LCD_CMD@a:	
  1044                           ; 1 bytes @ 0x2
  1045                           
  1046  0072                     ___wmul@multiplicand:	
  1047                           ; 1 bytes @ 0x2
  1048                           
  1049  0072                     ___awmod@dividend:	
  1050                           ; 2 bytes @ 0x2
  1051                           
  1052  0072                     ___lwmod@dividend:	
  1053                           ; 2 bytes @ 0x2
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0x2
  1057  0072                     	ds	1
  1058  0073                     ?_Lcd_Write_String:
  1059  0073                     ??_Write_USART_String:	
  1060                           ; 1 bytes @ 0x3
  1061                           
  1062  0073                     ??_spiInit:	
  1063                           ; 1 bytes @ 0x3
  1064                           
  1065  0073                     spiInit@sType:	
  1066                           ; 1 bytes @ 0x3
  1067                           
  1068  0073                     datosLCD@x:	
  1069                           ; 1 bytes @ 0x3
  1070                           
  1071  0073                     Lcd_Write_String@a:	
  1072                           ; 1 bytes @ 0x3
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x3
  1076  0073                     	ds	1
  1077  0074                     ??_setup:
  1078  0074                     ??_Lcd_Init:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081  0074                     ??_LCD_Limpia:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084  0074                     ?_Lcd_Set_Cursor:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087  0074                     ??___wmul:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090  0074                     ??___awmod:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093  0074                     ??___flneg:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0074                     ??___lwmod:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  0074                     ??___xxtofl:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  0074                     Lcd_Set_Cursor@y:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     Write_USART_String@i:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0074                     ___wmul@product:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111  0074                     __Umul8_16@product:	
  1112                           ; 2 bytes @ 0x4
  1113                           
  1114  0074                     ___lldiv@dividend:	
  1115                           ; 2 bytes @ 0x4
  1116                           
  1117  0074                     __div_to_l_@f2:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120  0074                     ___fleq@ff2:	
  1121                           ; 4 bytes @ 0x4
  1122                           
  1123  0074                     ___flge@ff2:	
  1124                           ; 4 bytes @ 0x4
  1125                           
  1126  0074                     __tdiv_to_l_@f2:	
  1127                           ; 4 bytes @ 0x4
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x4
  1131  0074                     	ds	1
  1132  0075                     ??_Lcd_Set_Cursor:
  1133  0075                     ??_Lcd_Write_String:	
  1134                           ; 1 bytes @ 0x5
  1135                           
  1136  0075                     ___awmod@counter:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139  0075                     ___lwmod@counter:	
  1140                           ; 1 bytes @ 0x5
  1141                           
  1142                           
  1143                           ; 1 bytes @ 0x5
  1144  0075                     	ds	1
  1145  0076                     ?___lwdiv:
  1146  0076                     Lcd_Set_Cursor@x:	
  1147                           ; 2 bytes @ 0x6
  1148                           
  1149  0076                     ___awmod@sign:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152  0076                     ___lwdiv@divisor:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0076                     __Umul8_16@word_mpld:	
  1156                           ; 2 bytes @ 0x6
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x6
  1160  0076                     	ds	1
  1161  0077                     ?___awdiv:
  1162  0077                     Lcd_Set_Cursor@a:	
  1163                           ; 2 bytes @ 0x7
  1164                           
  1165  0077                     ___awdiv@divisor:	
  1166                           ; 1 bytes @ 0x7
  1167                           
  1168                           
  1169                           ; 2 bytes @ 0x7
  1170  0077                     	ds	1
  1171  0078                     ??__tdiv_to_l_:
  1172  0078                     ??__div_to_l_:	
  1173                           ; 1 bytes @ 0x8
  1174                           
  1175  0078                     ??___lldiv:	
  1176                           ; 1 bytes @ 0x8
  1177                           
  1178  0078                     ??___fleq:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181  0078                     ??___flge:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  0078                     __Umul8_16@multiplier:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0078                     ___xxtofl@sign:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190  0078                     Lcd_Write_String@i:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193  0078                     ___lwdiv@dividend:	
  1194                           ; 2 bytes @ 0x8
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0x8
  1198  0078                     	ds	1
  1199  0079                     ___xxtofl@exp:
  1200  0079                     ___awdiv@dividend:	
  1201                           ; 1 bytes @ 0x9
  1202                           
  1203  0079                     ___lldiv@quotient:	
  1204                           ; 2 bytes @ 0x9
  1205                           
  1206                           
  1207                           ; 4 bytes @ 0x9
  1208  0079                     	ds	1
  1209  007A                     ??___lwdiv:
  1210  007A                     ___xxtofl@arg:	
  1211                           ; 1 bytes @ 0xA
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0xA
  1215  007A                     	ds	1
  1216  007B                     ??___awdiv:
  1217  007B                     ___lwdiv@quotient:	
  1218                           ; 1 bytes @ 0xB
  1219                           
  1220                           
  1221                           ; 2 bytes @ 0xB
  1222  007B                     	ds	2
  1223  007D                     ___lldiv@counter:
  1224  007D                     ___lwdiv@counter:	
  1225                           ; 1 bytes @ 0xD
  1226                           
  1227                           
  1228                           ; 1 bytes @ 0xD
  1229  007D                     	ds	1
  1230  007E                     ??___flsub:
  1231                           
  1232                           	psect	cstackBANK0
  1233  0020                     __pcstackBANK0:	
  1234                           ; 1 bytes @ 0xE
  1235                           
  1236  0020                     ??_ADC_lectura:
  1237  0020                     ?_temperatura:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0020                     ?___llmod:	
  1241                           ; 4 bytes @ 0x0
  1242                           
  1243  0020                     ___awdiv@counter:	
  1244                           ; 4 bytes @ 0x0
  1245                           
  1246  0020                     __div_to_l_@quot:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0020                     __tdiv_to_l_@quot:	
  1250                           ; 4 bytes @ 0x0
  1251                           
  1252  0020                     ___llmod@divisor:	
  1253                           ; 4 bytes @ 0x0
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x0
  1257  0020                     	ds	1
  1258  0021                     ___awdiv@sign:
  1259                           
  1260                           ; 1 bytes @ 0x1
  1261  0021                     	ds	1
  1262  0022                     ___awdiv@quotient:
  1263                           
  1264                           ; 2 bytes @ 0x2
  1265  0022                     	ds	2
  1266  0024                     ??_temperatura:
  1267  0024                     ?___flmul:	
  1268                           ; 1 bytes @ 0x4
  1269                           
  1270  0024                     __div_to_l_@cntr:	
  1271                           ; 4 bytes @ 0x4
  1272                           
  1273  0024                     __tdiv_to_l_@cntr:	
  1274                           ; 1 bytes @ 0x4
  1275                           
  1276  0024                     ___llmod@dividend:	
  1277                           ; 1 bytes @ 0x4
  1278                           
  1279  0024                     ___flmul@b:	
  1280                           ; 4 bytes @ 0x4
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x4
  1284  0024                     	ds	1
  1285  0025                     __div_to_l_@exp1:
  1286  0025                     __tdiv_to_l_@exp1:	
  1287                           ; 1 bytes @ 0x5
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x5
  1291  0025                     	ds	3
  1292  0028                     ??___llmod:
  1293  0028                     ___flmul@a:	
  1294                           ; 1 bytes @ 0x8
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x8
  1298  0028                     	ds	1
  1299  0029                     ___llmod@counter:
  1300                           
  1301                           ; 1 bytes @ 0x9
  1302  0029                     	ds	3
  1303  002C                     ??___flmul:
  1304                           
  1305                           ; 1 bytes @ 0xC
  1306  002C                     	ds	5
  1307  0031                     ___flmul@sign:
  1308                           
  1309                           ; 1 bytes @ 0x11
  1310  0031                     	ds	1
  1311  0032                     ___flmul@grs:
  1312                           
  1313                           ; 4 bytes @ 0x12
  1314  0032                     	ds	4
  1315  0036                     ___flmul@aexp:
  1316                           
  1317                           ; 1 bytes @ 0x16
  1318  0036                     	ds	1
  1319  0037                     ___flmul@bexp:
  1320                           
  1321                           ; 1 bytes @ 0x17
  1322  0037                     	ds	1
  1323  0038                     ___flmul@prod:
  1324                           
  1325                           ; 4 bytes @ 0x18
  1326  0038                     	ds	4
  1327  003C                     ___flmul@temp:
  1328                           
  1329                           ; 2 bytes @ 0x1C
  1330  003C                     	ds	2
  1331  003E                     ?_fround:
  1332  003E                     ?_scale:	
  1333                           ; 4 bytes @ 0x1E
  1334                           
  1335                           
  1336                           ; 4 bytes @ 0x1E
  1337  003E                     	ds	4
  1338  0042                     ??_fround:
  1339  0042                     ??_scale:	
  1340                           ; 1 bytes @ 0x22
  1341                           
  1342                           
  1343                           ; 1 bytes @ 0x22
  1344  0042                     	ds	7
  1345  0049                     _fround$1138:
  1346                           
  1347                           ; 4 bytes @ 0x29
  1348  0049                     	ds	3
  1349  004C                     _scale$1139:
  1350                           
  1351                           ; 4 bytes @ 0x2C
  1352  004C                     	ds	1
  1353  004D                     _fround$1137:
  1354                           
  1355                           ; 4 bytes @ 0x2D
  1356  004D                     	ds	3
  1357  0050                     scale@scl:
  1358                           
  1359                           ; 1 bytes @ 0x30
  1360  0050                     	ds	1
  1361  0051                     ?___fltol:
  1362  0051                     fround@prec:	
  1363                           ; 4 bytes @ 0x31
  1364                           
  1365  0051                     ___fltol@f1:	
  1366                           ; 1 bytes @ 0x31
  1367                           
  1368                           
  1369                           ; 4 bytes @ 0x31
  1370  0051                     	ds	1
  1371  0052                     ?___fladd:
  1372  0052                     ___fladd@b:	
  1373                           ; 4 bytes @ 0x32
  1374                           
  1375                           
  1376                           ; 4 bytes @ 0x32
  1377  0052                     	ds	3
  1378  0055                     ??___fltol:
  1379                           
  1380                           ; 1 bytes @ 0x35
  1381  0055                     	ds	1
  1382  0056                     ___fladd@a:
  1383                           
  1384                           ; 4 bytes @ 0x36
  1385  0056                     	ds	4
  1386  005A                     ??___fladd:
  1387  005A                     ___fltol@sign1:	
  1388                           ; 1 bytes @ 0x3A
  1389                           
  1390                           
  1391                           ; 1 bytes @ 0x3A
  1392  005A                     	ds	1
  1393  005B                     ___fltol@exp1:
  1394                           
  1395                           ; 1 bytes @ 0x3B
  1396  005B                     	ds	7
  1397  0062                     ___fladd@signs:
  1398                           
  1399                           ; 1 bytes @ 0x42
  1400  0062                     	ds	1
  1401  0063                     ___fladd@aexp:
  1402                           
  1403                           ; 1 bytes @ 0x43
  1404  0063                     	ds	1
  1405  0064                     ___fladd@bexp:
  1406                           
  1407                           ; 1 bytes @ 0x44
  1408  0064                     	ds	1
  1409  0065                     ___fladd@grs:
  1410                           
  1411                           ; 1 bytes @ 0x45
  1412  0065                     	ds	1
  1413  0066                     ?___flsub:
  1414  0066                     ___flsub@a:	
  1415                           ; 4 bytes @ 0x46
  1416                           
  1417                           
  1418                           ; 4 bytes @ 0x46
  1419  0066                     	ds	4
  1420  006A                     ___flsub@b:
  1421                           
  1422                           ; 4 bytes @ 0x4A
  1423  006A                     	ds	4
  1424                           
  1425                           	psect	maintext
  1426  011C                     __pmaintext:	
  1427 ;;
  1428 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1429 ;;
  1430 ;; *************** function _main *****************
  1431 ;; Defined at:
  1432 ;;		line 56 in file "Mast.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : B00/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          0       0       3       0       0
  1449 ;;      Totals:         0       0       3       0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels required when called:    4
  1452 ;; This function calls:
  1453 ;;		_ADC_lectura
  1454 ;;		_LCD_Limpia
  1455 ;;		_Lcd_Init
  1456 ;;		_Lcd_Set_Cursor
  1457 ;;		_Lcd_Write_String
  1458 ;;		_Write_USART
  1459 ;;		_Write_USART_String
  1460 ;;		__baudios
  1461 ;;		_config_rcsta
  1462 ;;		_config_txsta
  1463 ;;		_contador
  1464 ;;		_setup
  1465 ;;		_sprintf
  1466 ;;		_temperatura
  1467 ;; This function is called by:
  1468 ;;		Startup code after reset
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _main
  1474  011C                     _main:
  1475  011C                     l3708:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1478                           
  1479                           
  1480                           ;Mast.c: 57:     setup();
  1481  011C  160A  158A  21E3  120A  118A  	fcall	_setup
  1482                           
  1483                           ;Mast.c: 59:     _baudios();
  1484  0121  160A  158A  2132  120A  118A  	fcall	__baudios
  1485  0126                     l3710:
  1486                           
  1487                           ;Mast.c: 60:     config_txsta();
  1488  0126  160A  158A  214E  120A  118A  	fcall	_config_txsta
  1489  012B                     l3712:
  1490                           
  1491                           ;Mast.c: 61:     config_rcsta();
  1492  012B  160A  158A  213E  120A  118A  	fcall	_config_rcsta
  1493                           
  1494                           ;Mast.c: 62:     Lcd_Init();
  1495  0130  160A  158A  261F  120A  118A  	fcall	_Lcd_Init
  1496                           
  1497                           ;Mast.c: 63:     LCD_Limpia();
  1498  0135  160A  158A  216F  120A  118A  	fcall	_LCD_Limpia
  1499  013A                     l111:	
  1500                           ;Mast.c: 67:     while(1){
  1501                           
  1502                           
  1503                           ;Mast.c: 68:         contador();
  1504  013A  160A  158A  22C5  120A  118A  	fcall	_contador
  1505                           
  1506                           ;Mast.c: 69:         ADC_lectura();
  1507  013F  160A  158A  23F5  120A  118A  	fcall	_ADC_lectura
  1508                           
  1509                           ;Mast.c: 71:         LCD_Limpia();
  1510  0144  160A  158A  216F  120A  118A  	fcall	_LCD_Limpia
  1511                           
  1512                           ;Mast.c: 72:         Lcd_Set_Cursor(1,1);
  1513  0149  01F4               	clrf	Lcd_Set_Cursor@y
  1514  014A  0AF4               	incf	Lcd_Set_Cursor@y,f
  1515  014B  3001               	movlw	1
  1516  014C  160A  158A  2206  120A  118A  	fcall	_Lcd_Set_Cursor
  1517  0151                     l3714:
  1518                           
  1519                           ;Mast.c: 73:         Lcd_Write_String("S1   CONT   S3");
  1520  0151  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1521  0152  00F3               	movwf	Lcd_Write_String@a
  1522  0153  3080               	movlw	128
  1523  0154  00F4               	movwf	Lcd_Write_String@a+1
  1524  0155  160A  158A  236F  120A  118A  	fcall	_Lcd_Write_String
  1525  015A                     l3716:
  1526                           
  1527                           ;Mast.c: 76:         temp = temperatura();
  1528  015A  160A  158A  2550  120A  118A  	fcall	_temperatura
  1529  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0161  0823               	movf	?_temperatura+3,w
  1532  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1533  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1534  0164  00D1               	movwf	(_temp+3)^(0+128)
  1535  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0167  0822               	movf	?_temperatura+2,w
  1538  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1539  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1540  016A  00D0               	movwf	(_temp+2)^(0+128)
  1541  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1542  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1543  016D  0821               	movf	?_temperatura+1,w
  1544  016E  1683               	bsf	3,5	;RP0=1, select bank1
  1545  016F  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0170  00CF               	movwf	(_temp+1)^(0+128)
  1547  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0173  0820               	movf	?_temperatura,w
  1550  0174  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0175  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0176  00CE               	movwf	_temp^(0+128)
  1553                           
  1554                           ;Mast.c: 77:         sprintf(data, "%1.0f   %d   %3.0f" ,v1,cont,temp);
  1555  0177  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1556  0178  00CB               	movwf	??_main^(0+128)
  1557  0179  084B               	movf	??_main^(0+128),w
  1558  017A  00A0               	movwf	sprintf@f^(0+128)
  1559  017B  0855               	movf	(_v1+3)^(0+128),w
  1560  017C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1561  017D  0854               	movf	(_v1+2)^(0+128),w
  1562  017E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1563  017F  0853               	movf	(_v1+1)^(0+128),w
  1564  0180  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1565  0181  0852               	movf	_v1^(0+128),w
  1566  0182  00A1               	movwf	(?_sprintf^(0+128)+1)
  1567  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0185  086F               	movf	_cont,w
  1570  0186  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0187  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0188  00CC               	movwf	(??_main+1)^(0+128)
  1573  0189  01CD               	clrf	((??_main+1)^(0+128)+1)
  1574  018A  084C               	movf	(??_main+1)^(0+128),w
  1575  018B  00A5               	movwf	(?_sprintf^(0+128)+5)
  1576  018C  084D               	movf	(??_main+2)^(0+128),w
  1577  018D  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1578  018E  0851               	movf	(_temp+3)^(0+128),w
  1579  018F  00AA               	movwf	((?_sprintf+3)^(0+128)+7)
  1580  0190  0850               	movf	(_temp+2)^(0+128),w
  1581  0191  00A9               	movwf	((?_sprintf+2)^(0+128)+7)
  1582  0192  084F               	movf	(_temp+1)^(0+128),w
  1583  0193  00A8               	movwf	((?_sprintf+1)^(0+128)+7)
  1584  0194  084E               	movf	_temp^(0+128),w
  1585  0195  00A7               	movwf	(?_sprintf^(0+128)+7)
  1586  0196  30D7               	movlw	(low (_data| 0))& (0+255)
  1587  0197  160A  118A  253E  120A  118A  	fcall	_sprintf
  1588  019C                     l3718:
  1589                           
  1590                           ;Mast.c: 79:         Lcd_Set_Cursor(2,1);
  1591  019C  01F4               	clrf	Lcd_Set_Cursor@y
  1592  019D  0AF4               	incf	Lcd_Set_Cursor@y,f
  1593  019E  3002               	movlw	2
  1594  019F  160A  158A  2206  120A  118A  	fcall	_Lcd_Set_Cursor
  1595  01A4                     l3720:
  1596                           
  1597                           ;Mast.c: 80:         Lcd_Write_String(data);
  1598  01A4  30D7               	movlw	(low (_data| 0))& (0+255)
  1599  01A5  00F3               	movwf	Lcd_Write_String@a
  1600  01A6  3000               	movlw	0
  1601  01A7  00F4               	movwf	Lcd_Write_String@a+1
  1602  01A8  160A  158A  236F  120A  118A  	fcall	_Lcd_Write_String
  1603  01AD                     l3722:
  1604                           
  1605                           ;Mast.c: 82:         Write_USART_String("S1   CONT   S3");
  1606  01AD  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1607  01AE  00F1               	movwf	Write_USART_String@a
  1608  01AF  3080               	movlw	128
  1609  01B0  00F2               	movwf	Write_USART_String@a+1
  1610  01B1  160A  158A  229A  120A  118A  	fcall	_Write_USART_String
  1611  01B6                     l3724:
  1612                           
  1613                           ;Mast.c: 83:         Write_USART(13);
  1614  01B6  300D               	movlw	13
  1615  01B7  160A  158A  2163  120A  118A  	fcall	_Write_USART
  1616  01BC                     l3726:
  1617                           
  1618                           ;Mast.c: 84:         Write_USART(10);
  1619  01BC  300A               	movlw	10
  1620  01BD  160A  158A  2163  120A  118A  	fcall	_Write_USART
  1621  01C2                     l3728:
  1622                           
  1623                           ;Mast.c: 86:         Write_USART_String(data);
  1624  01C2  30D7               	movlw	(low (_data| 0))& (0+255)
  1625  01C3  00F1               	movwf	Write_USART_String@a
  1626  01C4  3000               	movlw	0
  1627  01C5  00F2               	movwf	Write_USART_String@a+1
  1628  01C6  160A  158A  229A  120A  118A  	fcall	_Write_USART_String
  1629                           
  1630                           ;Mast.c: 87:         Write_USART(13);
  1631  01CB  300D               	movlw	13
  1632  01CC  160A  158A  2163  120A  118A  	fcall	_Write_USART
  1633                           
  1634                           ;Mast.c: 88:         Write_USART(10);
  1635  01D1  300A               	movlw	10
  1636  01D2  160A  158A  2163  120A  118A  	fcall	_Write_USART
  1637  01D7                     l3730:
  1638                           
  1639                           ;Mast.c: 89:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1640  01D7  3006               	movlw	6
  1641  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1642  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1643  01DA  00CD               	movwf	(??_main^(0+128)+2)
  1644  01DB  3013               	movlw	19
  1645  01DC  00CC               	movwf	(??_main^(0+128)+1)
  1646  01DD  30AD               	movlw	173
  1647  01DE  00CB               	movwf	??_main^(0+128)
  1648  01DF                     u5887:
  1649  01DF  0BCB               	decfsz	??_main^(0+128),f
  1650  01E0  29DF               	goto	u5887
  1651  01E1  0BCC               	decfsz	(??_main^(0+128)+1),f
  1652  01E2  29DF               	goto	u5887
  1653  01E3  0BCD               	decfsz	(??_main^(0+128)+2),f
  1654  01E4  29DF               	goto	u5887
  1655  01E5  293A               	goto	l111
  1656  01E6  120A  118A  2800   	ljmp	start
  1657  01E9                     __end_of_main:
  1658                           
  1659                           	psect	text1
  1660  1D50                     __ptext1:	
  1661 ;; *************** function _temperatura *****************
  1662 ;; Defined at:
  1663 ;;		line 117 in file "Mast.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  4    0[BANK0 ] float 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       4       0       0       0
  1678 ;;      Locals:         0       0       0       0       0
  1679 ;;      Temps:          0       4       0       0       0
  1680 ;;      Totals:         0       8       0       0       0
  1681 ;;Total ram usage:        8 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    2
  1684 ;; This function calls:
  1685 ;;		___xxtofl
  1686 ;;		_spiRead
  1687 ;;		_spiWrite
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _temperatura
  1695  1D50                     _temperatura:
  1696  1D50                     l3394:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _temperatura: [wreg+status,2+status,0+pclath+cstack]
  1699                           
  1700                           
  1701                           ;Mast.c: 118:     PORTCbits.RC2 = 0;
  1702  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  1703  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  1704  1D52  1107               	bcf	7,2	;volatile
  1705  1D53                     l3396:
  1706                           
  1707                           ;Mast.c: 119:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1708  1D53  3003               	movlw	3
  1709  1D54  1283               	bcf	3,5	;RP0=0, select bank0
  1710  1D55  1303               	bcf	3,6	;RP1=0, select bank0
  1711  1D56  00A5               	movwf	??_temperatura+1
  1712  1D57  3097               	movlw	151
  1713  1D58  00A4               	movwf	??_temperatura
  1714  1D59                     u5897:
  1715  1D59  0BA4               	decfsz	??_temperatura,f
  1716  1D5A  2D59               	goto	u5897
  1717  1D5B  0BA5               	decfsz	??_temperatura+1,f
  1718  1D5C  2D59               	goto	u5897
  1719  1D5D                     l3398:
  1720                           
  1721                           ;Mast.c: 121:     spiWrite(1);
  1722  1D5D  3001               	movlw	1
  1723  1D5E  120A  158A  2000  160A  158A  	fcall	_spiWrite
  1724  1D63                     l3400:
  1725                           
  1726                           ;Mast.c: 122:     temp = spiRead();
  1727  1D63  160A  118A  2000  160A  158A  	fcall	_spiRead
  1728  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  1729  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  1730  1D6A  00A4               	movwf	??_temperatura
  1731  1D6B  01A5               	clrf	??_temperatura+1
  1732  1D6C  01A6               	clrf	??_temperatura+2
  1733  1D6D  01A7               	clrf	??_temperatura+3
  1734  1D6E  0827               	movf	??_temperatura+3,w
  1735  1D6F  00F3               	movwf	___xxtofl@val+3
  1736  1D70  0826               	movf	??_temperatura+2,w
  1737  1D71  00F2               	movwf	___xxtofl@val+2
  1738  1D72  0825               	movf	??_temperatura+1,w
  1739  1D73  00F1               	movwf	___xxtofl@val+1
  1740  1D74  0824               	movf	??_temperatura,w
  1741  1D75  00F0               	movwf	___xxtofl@val
  1742  1D76  3000               	movlw	0
  1743  1D77  160A  158A  2689  160A  158A  	fcall	___xxtofl
  1744  1D7C  0873               	movf	?___xxtofl+3,w
  1745  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  1746  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  1747  1D7F  00D1               	movwf	(_temp+3)^(0+128)
  1748  1D80  0872               	movf	?___xxtofl+2,w
  1749  1D81  00D0               	movwf	(_temp+2)^(0+128)
  1750  1D82  0871               	movf	?___xxtofl+1,w
  1751  1D83  00CF               	movwf	(_temp+1)^(0+128)
  1752  1D84  0870               	movf	?___xxtofl,w
  1753  1D85  00CE               	movwf	_temp^(0+128)
  1754                           
  1755                           ;Mast.c: 124:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1756  1D86  3003               	movlw	3
  1757  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  1758  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  1759  1D89  00A5               	movwf	??_temperatura+1
  1760  1D8A  3097               	movlw	151
  1761  1D8B  00A4               	movwf	??_temperatura
  1762  1D8C                     u5907:
  1763  1D8C  0BA4               	decfsz	??_temperatura,f
  1764  1D8D  2D8C               	goto	u5907
  1765  1D8E  0BA5               	decfsz	??_temperatura+1,f
  1766  1D8F  2D8C               	goto	u5907
  1767  1D90                     l3402:
  1768                           
  1769                           ;Mast.c: 125:     PORTCbits.RC2 = 1;
  1770  1D90  1283               	bcf	3,5	;RP0=0, select bank0
  1771  1D91  1303               	bcf	3,6	;RP1=0, select bank0
  1772  1D92  1507               	bsf	7,2	;volatile
  1773                           
  1774                           ;Mast.c: 126:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1775  1D93  3003               	movlw	3
  1776  1D94  1283               	bcf	3,5	;RP0=0, select bank0
  1777  1D95  1303               	bcf	3,6	;RP1=0, select bank0
  1778  1D96  00A5               	movwf	??_temperatura+1
  1779  1D97  3097               	movlw	151
  1780  1D98  00A4               	movwf	??_temperatura
  1781  1D99                     u5917:
  1782  1D99  0BA4               	decfsz	??_temperatura,f
  1783  1D9A  2D99               	goto	u5917
  1784  1D9B  0BA5               	decfsz	??_temperatura+1,f
  1785  1D9C  2D99               	goto	u5917
  1786                           
  1787                           ;Mast.c: 127:     return temp;
  1788  1D9D  1683               	bsf	3,5	;RP0=1, select bank1
  1789  1D9E  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1D9F  0851               	movf	(_temp+3)^(0+128),w
  1791  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1792  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  1793  1DA2  00A3               	movwf	?_temperatura+3
  1794  1DA3  1683               	bsf	3,5	;RP0=1, select bank1
  1795  1DA4  1303               	bcf	3,6	;RP1=0, select bank1
  1796  1DA5  0850               	movf	(_temp+2)^(0+128),w
  1797  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
  1798  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
  1799  1DA8  00A2               	movwf	?_temperatura+2
  1800  1DA9  1683               	bsf	3,5	;RP0=1, select bank1
  1801  1DAA  1303               	bcf	3,6	;RP1=0, select bank1
  1802  1DAB  084F               	movf	(_temp+1)^(0+128),w
  1803  1DAC  1283               	bcf	3,5	;RP0=0, select bank0
  1804  1DAD  1303               	bcf	3,6	;RP1=0, select bank0
  1805  1DAE  00A1               	movwf	?_temperatura+1
  1806  1DAF  1683               	bsf	3,5	;RP0=1, select bank1
  1807  1DB0  1303               	bcf	3,6	;RP1=0, select bank1
  1808  1DB1  084E               	movf	_temp^(0+128),w
  1809  1DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1810  1DB3  1303               	bcf	3,6	;RP1=0, select bank0
  1811  1DB4  00A0               	movwf	?_temperatura
  1812  1DB5                     l123:
  1813  1DB5  0008               	return
  1814  1DB6                     __end_of_temperatura:
  1815                           
  1816                           	psect	text2
  1817  153E                     __ptext2:	
  1818 ;; *************** function _sprintf *****************
  1819 ;; Defined at:
  1820 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  sp              1    wreg     PTR unsigned char 
  1823 ;;		 -> data(20), 
  1824 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1825 ;;		 -> STR_2(19), 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1828 ;;		 -> data(20), 
  1829 ;;  fval            4   35[BANK1 ] PTR unsigned char 
  1830 ;;  val             4   29[BANK1 ] unsigned long 
  1831 ;;  tmpval          4   25[BANK1 ] struct .
  1832 ;;  prec            2   40[BANK1 ] int 
  1833 ;;  eexp            2   33[BANK1 ] int 
  1834 ;;  width           2   23[BANK1 ] int 
  1835 ;;  flag            2   21[BANK1 ] unsigned short 
  1836 ;;  cp              2    0        PTR const unsigned char 
  1837 ;;  len             2    0        unsigned int 
  1838 ;;  c               1   42[BANK1 ] unsigned char 
  1839 ;;  ap              1   20[BANK1 ] PTR void [1]
  1840 ;;		 -> ?_sprintf(2), 
  1841 ;;  d               1    0        unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  2    0[BANK1 ] int 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0      11       0       0
  1852 ;;      Locals:         0       0      27       0       0
  1853 ;;      Temps:          0       0       5       0       0
  1854 ;;      Totals:         0       0      43       0       0
  1855 ;;Total ram usage:       43 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		___awdiv
  1860 ;;		___fladd
  1861 ;;		___fleq
  1862 ;;		___flge
  1863 ;;		___flmul
  1864 ;;		___flneg
  1865 ;;		___flsub
  1866 ;;		___fltol
  1867 ;;		___lldiv
  1868 ;;		___llmod
  1869 ;;		___wmul
  1870 ;;		___xxtofl
  1871 ;;		__div_to_l_
  1872 ;;		__tdiv_to_l_
  1873 ;;		_fround
  1874 ;;		_isdigit
  1875 ;;		_scale
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _sprintf
  1883  153E                     _sprintf:
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1887                           ;sprintf@sp stored from wreg
  1888  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1889  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1890  1540  00C7               	movwf	sprintf@sp^(0+128)
  1891  1541                     l3406:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1894  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1895  1542  00AB               	movwf	??_sprintf^(0+128)
  1896  1543  082B               	movf	??_sprintf^(0+128),w
  1897  1544  00B4               	movwf	sprintf@ap^(0+128)
  1898  1545                     L1:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1901  1545  120A  118A  2FD6   	goto	l3688
  1902  1548                     l3408:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1905  1548  3025               	movlw	37
  1906  1549  064A               	xorwf	sprintf@c^(0+128),w
  1907  154A  1903               	btfsc	3,2
  1908  154B  2D4D               	goto	u5341
  1909  154C  2D4E               	goto	u5340
  1910  154D                     u5341:
  1911  154D  2D5A               	goto	l3414
  1912  154E                     u5340:
  1913  154E                     l3410:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1916  154E  084A               	movf	sprintf@c^(0+128),w
  1917  154F  00AB               	movwf	??_sprintf^(0+128)
  1918  1550  0847               	movf	sprintf@sp^(0+128),w
  1919  1551  0084               	movwf	4
  1920  1552  082B               	movf	??_sprintf^(0+128),w
  1921  1553  1383               	bcf	3,7	;select IRP bank0
  1922  1554  0080               	movwf	0
  1923  1555                     l3412:
  1924  1555  3001               	movlw	1
  1925  1556  00AB               	movwf	??_sprintf^(0+128)
  1926  1557  082B               	movf	??_sprintf^(0+128),w
  1927  1558  07C7               	addwf	sprintf@sp^(0+128),f
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1930  1559  2D45               	goto	L1
  1931  155A                     l3414:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1934  155A  01B7               	clrf	sprintf@width^(0+128)
  1935  155B  01B8               	clrf	(sprintf@width+1)^(0+128)
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1938  155C  01B5               	clrf	sprintf@flag^(0+128)
  1939  155D  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1940  155E                     l3416:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1943  155E  0820               	movf	sprintf@f^(0+128),w
  1944  155F  0084               	movwf	4
  1945  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  1946  1565  160A  158A  217C  160A  118A  	fcall	_isdigit
  1947  156A  1C03               	btfss	3,0
  1948  156B  2D6D               	goto	u5351
  1949  156C  2D6E               	goto	u5350
  1950  156D                     u5351:
  1951  156D  2DAE               	goto	l3428
  1952  156E                     u5350:
  1953  156E                     l3418:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1956  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1957  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1958  1570  01B7               	clrf	sprintf@width^(0+128)
  1959  1571  01B8               	clrf	(sprintf@width+1)^(0+128)
  1960  1572                     l3420:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1963  1572  300A               	movlw	10
  1964  1573  00F0               	movwf	___wmul@multiplier
  1965  1574  3000               	movlw	0
  1966  1575  00F1               	movwf	___wmul@multiplier+1
  1967  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1968  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1969  1578  0838               	movf	(sprintf@width+1)^(0+128),w
  1970  1579  00F3               	movwf	___wmul@multiplicand+1
  1971  157A  0837               	movf	sprintf@width^(0+128),w
  1972  157B  00F2               	movwf	___wmul@multiplicand
  1973  157C  160A  158A  224E  160A  118A  	fcall	___wmul
  1974  1581  0871               	movf	?___wmul+1,w
  1975  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1976  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1977  1584  00B8               	movwf	(sprintf@width+1)^(0+128)
  1978  1585  0870               	movf	?___wmul,w
  1979  1586  00B7               	movwf	sprintf@width^(0+128)
  1980  1587                     l3422:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1983  1587  0820               	movf	sprintf@f^(0+128),w
  1984  1588  0084               	movwf	4
  1985  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  1986  158E  3ED0               	addlw	208
  1987  158F  00AB               	movwf	??_sprintf^(0+128)
  1988  1590  30FF               	movlw	255
  1989  1591  1803               	skipnc
  1990  1592  3000               	movlw	0
  1991  1593  00AC               	movwf	(??_sprintf^(0+128)+1)
  1992  1594  082B               	movf	??_sprintf^(0+128),w
  1993  1595  07B7               	addwf	sprintf@width^(0+128),f
  1994  1596  1803               	skipnc
  1995  1597  0AB8               	incf	(sprintf@width+1)^(0+128),f
  1996  1598  082C               	movf	(??_sprintf+1)^(0+128),w
  1997  1599  07B8               	addwf	(sprintf@width+1)^(0+128),f
  1998  159A                     l3424:
  1999  159A  3001               	movlw	1
  2000  159B  00AB               	movwf	??_sprintf^(0+128)
  2001  159C  082B               	movf	??_sprintf^(0+128),w
  2002  159D  07A0               	addwf	sprintf@f^(0+128),f
  2003  159E                     l3426:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2006  159E  0820               	movf	sprintf@f^(0+128),w
  2007  159F  0084               	movwf	4
  2008  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  2009  15A5  160A  158A  217C  160A  118A  	fcall	_isdigit
  2010  15AA  1803               	btfsc	3,0
  2011  15AB  2DAD               	goto	u5361
  2012  15AC  2DAE               	goto	u5360
  2013  15AD                     u5361:
  2014  15AD  2D72               	goto	l3420
  2015  15AE                     u5360:
  2016  15AE                     l3428:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2019  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2020  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2021  15B0  0820               	movf	sprintf@f^(0+128),w
  2022  15B1  0084               	movwf	4
  2023  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  2024  15B7  3A2E               	xorlw	46
  2025  15B8  1D03               	skipz
  2026  15B9  2DBB               	goto	u5371
  2027  15BA  2DBC               	goto	u5370
  2028  15BB                     u5371:
  2029  15BB  2E01               	goto	l3444
  2030  15BC                     u5370:
  2031  15BC                     l3430:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2034  15BC  1736               	bsf	(sprintf@flag^(0+128)+1),6
  2035  15BD                     l3432:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2038  15BD  3001               	movlw	1
  2039  15BE  00AB               	movwf	??_sprintf^(0+128)
  2040  15BF  082B               	movf	??_sprintf^(0+128),w
  2041  15C0  07A0               	addwf	sprintf@f^(0+128),f
  2042  15C1                     l3434:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2045  15C1  01C8               	clrf	sprintf@prec^(0+128)
  2046  15C2  01C9               	clrf	(sprintf@prec+1)^(0+128)
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2049  15C3  2DF0               	goto	l3442
  2050  15C4                     l3436:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2053  15C4  300A               	movlw	10
  2054  15C5  00F0               	movwf	___wmul@multiplier
  2055  15C6  3000               	movlw	0
  2056  15C7  00F1               	movwf	___wmul@multiplier+1
  2057  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2058  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2059  15CA  0849               	movf	(sprintf@prec+1)^(0+128),w
  2060  15CB  00F3               	movwf	___wmul@multiplicand+1
  2061  15CC  0848               	movf	sprintf@prec^(0+128),w
  2062  15CD  00F2               	movwf	___wmul@multiplicand
  2063  15CE  160A  158A  224E  160A  118A  	fcall	___wmul
  2064  15D3  0871               	movf	?___wmul+1,w
  2065  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2066  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2067  15D6  00C9               	movwf	(sprintf@prec+1)^(0+128)
  2068  15D7  0870               	movf	?___wmul,w
  2069  15D8  00C8               	movwf	sprintf@prec^(0+128)
  2070  15D9                     l3438:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2073  15D9  0820               	movf	sprintf@f^(0+128),w
  2074  15DA  0084               	movwf	4
  2075  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  2076  15E0  3ED0               	addlw	208
  2077  15E1  00AB               	movwf	??_sprintf^(0+128)
  2078  15E2  30FF               	movlw	255
  2079  15E3  1803               	skipnc
  2080  15E4  3000               	movlw	0
  2081  15E5  00AC               	movwf	(??_sprintf^(0+128)+1)
  2082  15E6  082B               	movf	??_sprintf^(0+128),w
  2083  15E7  07C8               	addwf	sprintf@prec^(0+128),f
  2084  15E8  1803               	skipnc
  2085  15E9  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  2086  15EA  082C               	movf	(??_sprintf+1)^(0+128),w
  2087  15EB  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  2088  15EC                     l3440:
  2089  15EC  3001               	movlw	1
  2090  15ED  00AB               	movwf	??_sprintf^(0+128)
  2091  15EE  082B               	movf	??_sprintf^(0+128),w
  2092  15EF  07A0               	addwf	sprintf@f^(0+128),f
  2093  15F0                     l3442:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2096  15F0  0820               	movf	sprintf@f^(0+128),w
  2097  15F1  0084               	movwf	4
  2098  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  2099  15F7  160A  158A  217C  160A  118A  	fcall	_isdigit
  2100  15FC  1803               	btfsc	3,0
  2101  15FD  2DFF               	goto	u5381
  2102  15FE  2E00               	goto	u5380
  2103  15FF                     u5381:
  2104  15FF  2DC4               	goto	l3436
  2105  1600                     u5380:
  2106  1600  2E07               	goto	l3450
  2107  1601                     l3444:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2110  1601  01C8               	clrf	sprintf@prec^(0+128)
  2111  1602  01C9               	clrf	(sprintf@prec+1)^(0+128)
  2112  1603                     l3446:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2115  1603  1636               	bsf	(sprintf@flag^(0+128)+1),4
  2116  1604  2E07               	goto	l3450
  2117  1605                     l363:	
  2118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2119                           
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2122  1605  1536               	bsf	(sprintf@flag^(0+128)+1),2
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2125  1606  2E29               	goto	l3452
  2126  1607                     l3450:
  2127  1607  3001               	movlw	1
  2128  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2129  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2130  160A  07A0               	addwf	sprintf@f^(0+128),f
  2131  160B  30FF               	movlw	-1
  2132  160C  0720               	addwf	sprintf@f^(0+128),w
  2133  160D  0084               	movwf	4
  2134  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  2135  1613  00CA               	movwf	sprintf@c^(0+128)
  2136  1614  00AB               	movwf	??_sprintf^(0+128)
  2137  1615  01AC               	clrf	(??_sprintf^(0+128)+1)
  2138                           
  2139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 1, Range of values is 0 to 0
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte            4     3 (average)
  2145                           ; direct_byte           11     8 (fixed)
  2146                           ; jumptable            260     6 (fixed)
  2147                           ;	Chosen strategy is simple_byte
  2148  1616  082C               	movf	(??_sprintf+1)^(0+128),w
  2149  1617  3A00               	xorlw	0	; case 0
  2150  1618  1903               	skipnz
  2151  1619  2E1B               	goto	l3762
  2152  161A  2D45               	goto	L1
  2153  161B                     l3762:
  2154                           
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 4, Range of values is 0 to 105
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte           13     7 (average)
  2160                           ; jumptable            260     6 (fixed)
  2161                           ;	Chosen strategy is simple_byte
  2162  161B  082B               	movf	??_sprintf^(0+128),w
  2163  161C  3A00               	xorlw	0	; case 0
  2164  161D  1903               	skipnz
  2165  161E  2FFD               	goto	L3
  2166  161F  3A64               	xorlw	100	; case 100
  2167  1620  1903               	skipnz
  2168  1621  2E29               	goto	l3452
  2169  1622  3A02               	xorlw	2	; case 102
  2170  1623  1903               	skipnz
  2171  1624  2E05               	goto	l363
  2172  1625  3A0F               	xorlw	15	; case 105
  2173  1626  1903               	skipnz
  2174  1627  2E29               	goto	l3452
  2175  1628  2D45               	goto	L1
  2176  1629                     l3452:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2179  1629  3000               	movlw	0
  2180  162A  0535               	andwf	sprintf@flag^(0+128),w
  2181  162B  00AB               	movwf	??_sprintf^(0+128)
  2182  162C  3007               	movlw	7
  2183  162D  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2184  162E  00AC               	movwf	(??_sprintf+1)^(0+128)
  2185  162F  082B               	movf	??_sprintf^(0+128),w
  2186  1630  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2187  1631  1903               	btfsc	3,2
  2188  1632  2E34               	goto	u5391
  2189  1633  2E37               	goto	u5390
  2190  1634                     u5391:
  2191  1634  120A  118A  2E39   	goto	l3610
  2192  1637                     u5390:
  2193  1637                     l3454:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2196  1637  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2197  1638  2E3A               	goto	u5401
  2198  1639  2E3B               	goto	u5400
  2199  163A                     u5401:
  2200  163A  2E3F               	goto	l3458
  2201  163B                     u5400:
  2202  163B                     l3456:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2205  163B  3006               	movlw	6
  2206  163C  00C8               	movwf	sprintf@prec^(0+128)
  2207  163D  3000               	movlw	0
  2208  163E  00C9               	movwf	(sprintf@prec^(0+128)+1)
  2209  163F                     l3458:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2212  163F  0834               	movf	sprintf@ap^(0+128),w
  2213  1640  0084               	movwf	4
  2214  1641  1383               	bcf	3,7	;select IRP bank0
  2215  1642  0800               	movf	0,w
  2216  1643  00C3               	movwf	sprintf@fval^(0+128)
  2217  1644  0A84               	incf	4,f
  2218  1645  0800               	movf	0,w
  2219  1646  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2220  1647  0A84               	incf	4,f
  2221  1648  0800               	movf	0,w
  2222  1649  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2223  164A  0A84               	incf	4,f
  2224  164B  0800               	movf	0,w
  2225  164C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2226  164D                     l3460:
  2227  164D  3004               	movlw	4
  2228  164E  00AB               	movwf	??_sprintf^(0+128)
  2229  164F  082B               	movf	??_sprintf^(0+128),w
  2230  1650  07B4               	addwf	sprintf@ap^(0+128),f
  2231  1651                     l3462:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2234  1651  0846               	movf	(sprintf@fval+3)^(0+128),w
  2235  1652  00F3               	movwf	___flge@ff1+3
  2236  1653  0845               	movf	(sprintf@fval+2)^(0+128),w
  2237  1654  00F2               	movwf	___flge@ff1+2
  2238  1655  0844               	movf	(sprintf@fval+1)^(0+128),w
  2239  1656  00F1               	movwf	___flge@ff1+1
  2240  1657  0843               	movf	sprintf@fval^(0+128),w
  2241  1658  00F0               	movwf	___flge@ff1
  2242  1659  3000               	movlw	0
  2243  165A  00F7               	movwf	___flge@ff2+3
  2244  165B  3000               	movlw	0
  2245  165C  00F6               	movwf	___flge@ff2+2
  2246  165D  3000               	movlw	0
  2247  165E  00F5               	movwf	___flge@ff2+1
  2248  165F  3000               	movlw	0
  2249  1660  00F4               	movwf	___flge@ff2
  2250  1661  160A  118A  2009  160A  118A  	fcall	___flge
  2251  1666  1803               	btfsc	3,0
  2252  1667  2E69               	goto	u5411
  2253  1668  2E6A               	goto	u5410
  2254  1669                     u5411:
  2255  1669  2E87               	goto	l3468
  2256  166A                     u5410:
  2257  166A                     l3464:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2260  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2261  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2262  166C  0846               	movf	(sprintf@fval+3)^(0+128),w
  2263  166D  00F3               	movwf	___flneg@f1+3
  2264  166E  0845               	movf	(sprintf@fval+2)^(0+128),w
  2265  166F  00F2               	movwf	___flneg@f1+2
  2266  1670  0844               	movf	(sprintf@fval+1)^(0+128),w
  2267  1671  00F1               	movwf	___flneg@f1+1
  2268  1672  0843               	movf	sprintf@fval^(0+128),w
  2269  1673  00F0               	movwf	___flneg@f1
  2270  1674  160A  158A  2158  160A  118A  	fcall	___flneg
  2271  1679  0873               	movf	?___flneg+3,w
  2272  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2273  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2274  167C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2275  167D  0872               	movf	?___flneg+2,w
  2276  167E  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2277  167F  0871               	movf	?___flneg+1,w
  2278  1680  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2279  1681  0870               	movf	?___flneg,w
  2280  1682  00C3               	movwf	sprintf@fval^(0+128)
  2281  1683                     l3466:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2284  1683  3003               	movlw	3
  2285  1684  04B5               	iorwf	sprintf@flag^(0+128),f
  2286  1685  3000               	movlw	0
  2287  1686  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2288  1687                     l3468:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2291  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2292  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2293  1689  01C1               	clrf	sprintf@eexp^(0+128)
  2294  168A  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  2295  168B                     l3470:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2298  168B  0846               	movf	(sprintf@fval+3)^(0+128),w
  2299  168C  00F3               	movwf	___fleq@ff1+3
  2300  168D  0845               	movf	(sprintf@fval+2)^(0+128),w
  2301  168E  00F2               	movwf	___fleq@ff1+2
  2302  168F  0844               	movf	(sprintf@fval+1)^(0+128),w
  2303  1690  00F1               	movwf	___fleq@ff1+1
  2304  1691  0843               	movf	sprintf@fval^(0+128),w
  2305  1692  00F0               	movwf	___fleq@ff1
  2306  1693  3000               	movlw	0
  2307  1694  00F7               	movwf	___fleq@ff2+3
  2308  1695  3000               	movlw	0
  2309  1696  00F6               	movwf	___fleq@ff2+2
  2310  1697  3000               	movlw	0
  2311  1698  00F5               	movwf	___fleq@ff2+1
  2312  1699  3000               	movlw	0
  2313  169A  00F4               	movwf	___fleq@ff2
  2314  169B  160A  158A  2443  160A  118A  	fcall	___fleq
  2315  16A0  1803               	btfsc	3,0
  2316  16A1  2EA3               	goto	u5421
  2317  16A2  2EA4               	goto	u5420
  2318  16A3                     u5421:
  2319  16A3  2F94               	goto	l3496
  2320  16A4                     u5420:
  2321  16A4                     l3472:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2324  16A4  1003               	clrc
  2325  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2326  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2327  16A7  0D45               	rlf	(sprintf@fval+2)^(0+128),w
  2328  16A8  0D46               	rlf	(sprintf@fval+3)^(0+128),w
  2329  16A9  3E82               	addlw	130
  2330  16AA  00C1               	movwf	sprintf@eexp^(0+128)
  2331  16AB  30FF               	movlw	255
  2332  16AC  1803               	skipnc
  2333  16AD  3000               	movlw	0
  2334  16AE  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  2335  16AF                     l3474:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2338  16AF  30FF               	movlw	255
  2339  16B0  07C1               	addwf	sprintf@eexp^(0+128),f
  2340  16B1  1803               	skipnc
  2341  16B2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2342  16B3  30FF               	movlw	255
  2343  16B4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2344  16B5                     l3476:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2347  16B5  3003               	movlw	3
  2348  16B6  00F0               	movwf	___wmul@multiplier
  2349  16B7  3000               	movlw	0
  2350  16B8  00F1               	movwf	___wmul@multiplier+1
  2351  16B9  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2352  16BA  00F3               	movwf	___wmul@multiplicand+1
  2353  16BB  0841               	movf	sprintf@eexp^(0+128),w
  2354  16BC  00F2               	movwf	___wmul@multiplicand
  2355  16BD  160A  158A  224E  160A  118A  	fcall	___wmul
  2356  16C2  0871               	movf	?___wmul+1,w
  2357  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2358  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2359  16C5  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2360  16C6  0870               	movf	?___wmul,w
  2361  16C7  00C1               	movwf	sprintf@eexp^(0+128)
  2362  16C8                     l3478:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2365  16C8  300A               	movlw	10
  2366  16C9  00F7               	movwf	___awdiv@divisor
  2367  16CA  3000               	movlw	0
  2368  16CB  00F8               	movwf	___awdiv@divisor+1
  2369  16CC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2370  16CD  00FA               	movwf	___awdiv@dividend+1
  2371  16CE  0841               	movf	sprintf@eexp^(0+128),w
  2372  16CF  00F9               	movwf	___awdiv@dividend
  2373  16D0  160A  158A  25B6  160A  118A  	fcall	___awdiv
  2374  16D5  0878               	movf	?___awdiv+1,w
  2375  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2376  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2377  16D8  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2378  16D9  0877               	movf	?___awdiv,w
  2379  16DA  00C1               	movwf	sprintf@eexp^(0+128)
  2380  16DB                     l3480:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2383  16DB  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  2384  16DC  2EDE               	goto	u5431
  2385  16DD  2EDF               	goto	u5430
  2386  16DE                     u5431:
  2387  16DE  2EE5               	goto	l3484
  2388  16DF                     u5430:
  2389  16DF                     l3482:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2392  16DF  30FF               	movlw	255
  2393  16E0  07C1               	addwf	sprintf@eexp^(0+128),f
  2394  16E1  1803               	skipnc
  2395  16E2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2396  16E3  30FF               	movlw	255
  2397  16E4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2398  16E5                     l3484:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2401  16E5  0341               	decf	sprintf@eexp^(0+128),w
  2402  16E6  3AFF               	xorlw	255
  2403  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2404  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2405  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2406  16EE  0841               	movf	?_scale+3,w
  2407  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2408  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2409  16F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2410  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2411  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2412  16F4  0840               	movf	?_scale+2,w
  2413  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2414  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2415  16F7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2416  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2417  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2418  16FA  083F               	movf	?_scale+1,w
  2419  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2420  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2421  16FD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2422  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2423  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2424  1700  083E               	movf	?_scale,w
  2425  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2426  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2427  1703  00B9               	movwf	sprintf@tmpval^(0+128)
  2428  1704                     l3486:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2431  1704  0846               	movf	(sprintf@fval+3)^(0+128),w
  2432  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2433  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2434  1707  00A7               	movwf	___flmul@b+3
  2435  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2436  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2437  170A  0845               	movf	(sprintf@fval+2)^(0+128),w
  2438  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2439  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2440  170D  00A6               	movwf	___flmul@b+2
  2441  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2442  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2443  1710  0844               	movf	(sprintf@fval+1)^(0+128),w
  2444  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2445  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2446  1713  00A5               	movwf	___flmul@b+1
  2447  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2448  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2449  1716  0843               	movf	sprintf@fval^(0+128),w
  2450  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2451  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2452  1719  00A4               	movwf	___flmul@b
  2453  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2454  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2455  171C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2456  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2457  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2458  171F  00AB               	movwf	___flmul@a+3
  2459  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2460  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2461  1722  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2462  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2463  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2464  1725  00AA               	movwf	___flmul@a+2
  2465  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2466  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2467  1728  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2468  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2469  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2470  172B  00A9               	movwf	___flmul@a+1
  2471  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2472  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2473  172E  0839               	movf	sprintf@tmpval^(0+128),w
  2474  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2475  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2476  1731  00A8               	movwf	___flmul@a
  2477  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2478  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2479  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2480  1739  0827               	movf	?___flmul+3,w
  2481  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2482  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2483  173C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2484  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2485  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2486  173F  0826               	movf	?___flmul+2,w
  2487  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2488  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2489  1742  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2490  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2491  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2492  1745  0825               	movf	?___flmul+1,w
  2493  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2494  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2495  1748  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2496  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2497  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2498  174B  0824               	movf	?___flmul,w
  2499  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2500  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2501  174E  00B9               	movwf	sprintf@tmpval^(0+128)
  2502  174F                     l3488:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2505  174F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2506  1750  00F3               	movwf	___flge@ff1+3
  2507  1751  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2508  1752  00F2               	movwf	___flge@ff1+2
  2509  1753  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2510  1754  00F1               	movwf	___flge@ff1+1
  2511  1755  0839               	movf	sprintf@tmpval^(0+128),w
  2512  1756  00F0               	movwf	___flge@ff1
  2513  1757  303F               	movlw	63
  2514  1758  00F7               	movwf	___flge@ff2+3
  2515  1759  3080               	movlw	128
  2516  175A  00F6               	movwf	___flge@ff2+2
  2517  175B  3000               	movlw	0
  2518  175C  00F5               	movwf	___flge@ff2+1
  2519  175D  3000               	movlw	0
  2520  175E  00F4               	movwf	___flge@ff2
  2521  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2522  1764  1803               	btfsc	3,0
  2523  1765  2F67               	goto	u5441
  2524  1766  2F68               	goto	u5440
  2525  1767                     u5441:
  2526  1767  2F71               	goto	l3492
  2527  1768                     u5440:
  2528  1768                     l3490:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2531  1768  30FF               	movlw	255
  2532  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2533  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2534  176B  07C1               	addwf	sprintf@eexp^(0+128),f
  2535  176C  1803               	skipnc
  2536  176D  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2537  176E  30FF               	movlw	255
  2538  176F  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2539  1770  2F94               	goto	l3496
  2540  1771                     l3492:
  2541  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2542  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2543  1773  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2544  1774  00F3               	movwf	___flge@ff1+3
  2545  1775  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2546  1776  00F2               	movwf	___flge@ff1+2
  2547  1777  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2548  1778  00F1               	movwf	___flge@ff1+1
  2549  1779  0839               	movf	sprintf@tmpval^(0+128),w
  2550  177A  00F0               	movwf	___flge@ff1
  2551  177B  3041               	movlw	65
  2552  177C  00F7               	movwf	___flge@ff2+3
  2553  177D  3020               	movlw	32
  2554  177E  00F6               	movwf	___flge@ff2+2
  2555  177F  3000               	movlw	0
  2556  1780  00F5               	movwf	___flge@ff2+1
  2557  1781  3000               	movlw	0
  2558  1782  00F4               	movwf	___flge@ff2
  2559  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2560  1788  1C03               	btfss	3,0
  2561  1789  2F8B               	goto	u5451
  2562  178A  2F8C               	goto	u5450
  2563  178B                     u5451:
  2564  178B  2F94               	goto	l3496
  2565  178C                     u5450:
  2566  178C                     l3494:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2569  178C  3001               	movlw	1
  2570  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2571  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2572  178F  07C1               	addwf	sprintf@eexp^(0+128),f
  2573  1790  1803               	skipnc
  2574  1791  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2575  1792  3000               	movlw	0
  2576  1793  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2577  1794                     l3496:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2580  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2581  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2582  1796  0849               	movf	(sprintf@prec+1)^(0+128),w
  2583  1797  3A80               	xorlw	128
  2584  1798  00FF               	movwf	btemp+1
  2585  1799  3080               	movlw	128
  2586  179A  027F               	subwf	btemp+1,w
  2587  179B  1D03               	skipz
  2588  179C  2F9F               	goto	u5465
  2589  179D  300D               	movlw	13
  2590  179E  0248               	subwf	sprintf@prec^(0+128),w
  2591  179F                     u5465:
  2592  179F  1803               	skipnc
  2593  17A0  2FA2               	goto	u5461
  2594  17A1  2FA3               	goto	u5460
  2595  17A2                     u5461:
  2596  17A2  2FEA               	goto	l3500
  2597  17A3                     u5460:
  2598  17A3                     l3498:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2601  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2602  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2603  17A5  0848               	movf	sprintf@prec^(0+128),w
  2604  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2605  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2606  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2607  17AD  0841               	movf	?_fround+3,w
  2608  17AE  00D5               	movwf	___fladd@b+3
  2609  17AF  0840               	movf	?_fround+2,w
  2610  17B0  00D4               	movwf	___fladd@b+2
  2611  17B1  083F               	movf	?_fround+1,w
  2612  17B2  00D3               	movwf	___fladd@b+1
  2613  17B3  083E               	movf	?_fround,w
  2614  17B4  00D2               	movwf	___fladd@b
  2615  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2616  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2617  17B7  0846               	movf	(sprintf@fval+3)^(0+128),w
  2618  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2619  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2620  17BA  00D9               	movwf	___fladd@a+3
  2621  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2622  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2623  17BD  0845               	movf	(sprintf@fval+2)^(0+128),w
  2624  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2625  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2626  17C0  00D8               	movwf	___fladd@a+2
  2627  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2628  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2629  17C3  0844               	movf	(sprintf@fval+1)^(0+128),w
  2630  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2631  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2632  17C6  00D7               	movwf	___fladd@a+1
  2633  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2634  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2635  17C9  0843               	movf	sprintf@fval^(0+128),w
  2636  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2637  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2638  17CC  00D6               	movwf	___fladd@a
  2639  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2640  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2641  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2642  17D4  0855               	movf	?___fladd+3,w
  2643  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2644  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2645  17D7  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2646  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2647  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2648  17DA  0854               	movf	?___fladd+2,w
  2649  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2650  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2651  17DD  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2652  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2653  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2654  17E0  0853               	movf	?___fladd+1,w
  2655  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2656  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2657  17E3  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2658  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2659  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2660  17E6  0852               	movf	?___fladd,w
  2661  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2662  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2663  17E9  00C3               	movwf	sprintf@fval^(0+128)
  2664  17EA                     l3500:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2667  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2668  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2669  17EC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2670  17ED  3A80               	xorlw	128
  2671  17EE  00FF               	movwf	btemp+1
  2672  17EF  3080               	movlw	128
  2673  17F0  027F               	subwf	btemp+1,w
  2674  17F1  1D03               	skipz
  2675  17F2  2FF5               	goto	u5475
  2676  17F3  300A               	movlw	10
  2677  17F4  0241               	subwf	sprintf@eexp^(0+128),w
  2678  17F5                     u5475:
  2679  17F5  1803               	skipnc
  2680  17F6  2FFA               	goto	u5471
  2681  17F7  120A  118A  29E9   	goto	u5470
  2682  17FA                     u5471:
  2683  17FA  120A  118A  2A3A   	goto	l3508
  2684  17FD                     L3:
  2685  17FD                     L2:
  2686  17FD  120A  118A  2FEA   	ljmp	l3690
  2687                           
  2688                           	psect	text3
  2689  0940                     __ptext3:	
  2690 ;; *************** function _scale *****************
  2691 ;; Defined at:
  2692 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  scl             1    wreg     char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  scl             1   48[BANK0 ] char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  4   30[BANK0 ] char 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2706 ;;      Params:         0       4       0       0       0
  2707 ;;      Locals:         0       5       0       0       0
  2708 ;;      Temps:          0      10       0       0       0
  2709 ;;      Totals:         0      19       0       0       0
  2710 ;;Total ram usage:       19 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    2
  2713 ;; This function calls:
  2714 ;;		___awdiv
  2715 ;;		___awmod
  2716 ;;		___flmul
  2717 ;; This function is called by:
  2718 ;;		_sprintf
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _scale
  2724  0940                     _scale:
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2728                           ;scale@scl stored from wreg
  2729  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0942  00D0               	movwf	scale@scl
  2732  0943                     l2962:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2735  0943  1FD0               	btfss	scale@scl,7
  2736  0944  2946               	goto	u4321
  2737  0945  2947               	goto	u4320
  2738  0946                     u4321:
  2739  0946  2AF4               	goto	l2984
  2740  0947                     u4320:
  2741  0947                     l2964:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2744  0947  09D0               	comf	scale@scl,f
  2745  0948  0AD0               	incf	scale@scl,f
  2746  0949                     l2966:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2749  0949  0850               	movf	scale@scl,w
  2750  094A  3A80               	xorlw	128
  2751  094B  3E12               	addlw	-238
  2752  094C  1C03               	skipc
  2753  094D  294F               	goto	u4331
  2754  094E  2950               	goto	u4330
  2755  094F                     u4331:
  2756  094F  2A38               	goto	l2974
  2757  0950                     u4330:
  2758  0950                     l2968:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2761  0950  300A               	movlw	10
  2762  0951  00F7               	movwf	___awdiv@divisor
  2763  0952  3000               	movlw	0
  2764  0953  00F8               	movwf	___awdiv@divisor+1
  2765  0954  0850               	movf	scale@scl,w
  2766  0955  00F2               	movwf	___awmod@dividend
  2767  0956  01F3               	clrf	___awmod@dividend+1
  2768  0957  1BF2               	btfsc	___awmod@dividend,7
  2769  0958  03F3               	decf	___awmod@dividend+1,f
  2770  0959  3064               	movlw	100
  2771  095A  00F0               	movwf	___awmod@divisor
  2772  095B  3000               	movlw	0
  2773  095C  00F1               	movwf	___awmod@divisor+1
  2774  095D  160A  158A  2491  120A  158A  	fcall	___awmod
  2775  0962  0871               	movf	?___awmod+1,w
  2776  0963  00FA               	movwf	___awdiv@dividend+1
  2777  0964  0870               	movf	?___awmod,w
  2778  0965  00F9               	movwf	___awdiv@dividend
  2779  0966  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2780  096B  0877               	movf	?___awdiv,w
  2781  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2782  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2783  096E  00C2               	movwf	??_scale
  2784  096F  3001               	movlw	1
  2785  0970                     u4345:
  2786  0970  1003               	clrc
  2787  0971  0DC2               	rlf	??_scale,f
  2788  0972  3EFF               	addlw	-1
  2789  0973  1D03               	skipz
  2790  0974  2970               	goto	u4345
  2791  0975  1003               	clrc
  2792  0976  0D42               	rlf	??_scale,w
  2793  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2794  0978  0084               	movwf	4
  2795  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  2796  097E  00C3               	movwf	??_scale+1
  2797  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  2798  0984  00C4               	movwf	??_scale+2
  2799  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  2800  098A  00C5               	movwf	??_scale+3
  2801  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  2802  0990  00C6               	movwf	??_scale+4
  2803  0991  0846               	movf	??_scale+4,w
  2804  0992  00A7               	movwf	___flmul@b+3
  2805  0993  0845               	movf	??_scale+3,w
  2806  0994  00A6               	movwf	___flmul@b+2
  2807  0995  0844               	movf	??_scale+2,w
  2808  0996  00A5               	movwf	___flmul@b+1
  2809  0997  0843               	movf	??_scale+1,w
  2810  0998  00A4               	movwf	___flmul@b
  2811  0999  3064               	movlw	100
  2812  099A  00F7               	movwf	___awdiv@divisor
  2813  099B  3000               	movlw	0
  2814  099C  00F8               	movwf	___awdiv@divisor+1
  2815  099D  0850               	movf	scale@scl,w
  2816  099E  00F9               	movwf	___awdiv@dividend
  2817  099F  01FA               	clrf	___awdiv@dividend+1
  2818  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2819  09A1  03FA               	decf	___awdiv@dividend+1,f
  2820  09A2  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2821  09A7  0877               	movf	?___awdiv,w
  2822  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2823  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2824  09AA  00C7               	movwf	??_scale+5
  2825  09AB  3001               	movlw	1
  2826  09AC                     u4355:
  2827  09AC  1003               	clrc
  2828  09AD  0DC7               	rlf	??_scale+5,f
  2829  09AE  3EFF               	addlw	-1
  2830  09AF  1D03               	skipz
  2831  09B0  29AC               	goto	u4355
  2832  09B1  1003               	clrc
  2833  09B2  0D47               	rlf	??_scale+5,w
  2834  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2835  09B4  0084               	movwf	4
  2836  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  2837  09BA  00C8               	movwf	??_scale+6
  2838  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  2839  09C0  00C9               	movwf	??_scale+7
  2840  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  2841  09C6  00CA               	movwf	??_scale+8
  2842  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  2843  09CC  00CB               	movwf	??_scale+9
  2844  09CD  084B               	movf	??_scale+9,w
  2845  09CE  00AB               	movwf	___flmul@a+3
  2846  09CF  084A               	movf	??_scale+8,w
  2847  09D0  00AA               	movwf	___flmul@a+2
  2848  09D1  0849               	movf	??_scale+7,w
  2849  09D2  00A9               	movwf	___flmul@a+1
  2850  09D3  0848               	movf	??_scale+6,w
  2851  09D4  00A8               	movwf	___flmul@a
  2852  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2853  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2854  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2855  09DC  0827               	movf	?___flmul+3,w
  2856  09DD  00CF               	movwf	_scale$1139+3
  2857  09DE  0826               	movf	?___flmul+2,w
  2858  09DF  00CE               	movwf	_scale$1139+2
  2859  09E0  0825               	movf	?___flmul+1,w
  2860  09E1  00CD               	movwf	_scale$1139+1
  2861  09E2  0824               	movf	?___flmul,w
  2862  09E3  00CC               	movwf	_scale$1139
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2865  09E4  300A               	movlw	10
  2866  09E5  00F0               	movwf	___awmod@divisor
  2867  09E6  3000               	movlw	0
  2868  09E7  00F1               	movwf	___awmod@divisor+1
  2869  09E8  0850               	movf	scale@scl,w
  2870  09E9  00F2               	movwf	___awmod@dividend
  2871  09EA  01F3               	clrf	___awmod@dividend+1
  2872  09EB  1BF2               	btfsc	___awmod@dividend,7
  2873  09EC  03F3               	decf	___awmod@dividend+1,f
  2874  09ED  160A  158A  2491  120A  158A  	fcall	___awmod
  2875  09F2  0870               	movf	?___awmod,w
  2876  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2877  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2878  09F5  00C2               	movwf	??_scale
  2879  09F6  3001               	movlw	1
  2880  09F7                     u4365:
  2881  09F7  1003               	clrc
  2882  09F8  0DC2               	rlf	??_scale,f
  2883  09F9  3EFF               	addlw	-1
  2884  09FA  1D03               	skipz
  2885  09FB  29F7               	goto	u4365
  2886  09FC  1003               	clrc
  2887  09FD  0D42               	rlf	??_scale,w
  2888  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2889  09FF  0084               	movwf	4
  2890  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  2891  0A05  00C3               	movwf	??_scale+1
  2892  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  2893  0A0B  00C4               	movwf	??_scale+2
  2894  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2895  0A11  00C5               	movwf	??_scale+3
  2896  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  2897  0A17  00C6               	movwf	??_scale+4
  2898  0A18  0846               	movf	??_scale+4,w
  2899  0A19  00A7               	movwf	___flmul@b+3
  2900  0A1A  0845               	movf	??_scale+3,w
  2901  0A1B  00A6               	movwf	___flmul@b+2
  2902  0A1C  0844               	movf	??_scale+2,w
  2903  0A1D  00A5               	movwf	___flmul@b+1
  2904  0A1E  0843               	movf	??_scale+1,w
  2905  0A1F  00A4               	movwf	___flmul@b
  2906  0A20  084F               	movf	_scale$1139+3,w
  2907  0A21  00AB               	movwf	___flmul@a+3
  2908  0A22  084E               	movf	_scale$1139+2,w
  2909  0A23  00AA               	movwf	___flmul@a+2
  2910  0A24  084D               	movf	_scale$1139+1,w
  2911  0A25  00A9               	movwf	___flmul@a+1
  2912  0A26  084C               	movf	_scale$1139,w
  2913  0A27  00A8               	movwf	___flmul@a
  2914  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2915  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0A2F  0827               	movf	?___flmul+3,w
  2918  0A30  00C1               	movwf	?_scale+3
  2919  0A31  0826               	movf	?___flmul+2,w
  2920  0A32  00C0               	movwf	?_scale+2
  2921  0A33  0825               	movf	?___flmul+1,w
  2922  0A34  00BF               	movwf	?_scale+1
  2923  0A35  0824               	movf	?___flmul,w
  2924  0A36  00BE               	movwf	?_scale
  2925  0A37  2C9E               	goto	l341
  2926  0A38                     l2974:
  2927  0A38  0850               	movf	scale@scl,w
  2928  0A39  3A80               	xorlw	128
  2929  0A3A  3E75               	addlw	-139
  2930  0A3B  1C03               	skipc
  2931  0A3C  2A3E               	goto	u4371
  2932  0A3D  2A3F               	goto	u4370
  2933  0A3E                     u4371:
  2934  0A3E  2AC7               	goto	l2980
  2935  0A3F                     u4370:
  2936  0A3F                     l2976:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2939  0A3F  300A               	movlw	10
  2940  0A40  00F0               	movwf	___awmod@divisor
  2941  0A41  3000               	movlw	0
  2942  0A42  00F1               	movwf	___awmod@divisor+1
  2943  0A43  0850               	movf	scale@scl,w
  2944  0A44  00F2               	movwf	___awmod@dividend
  2945  0A45  01F3               	clrf	___awmod@dividend+1
  2946  0A46  1BF2               	btfsc	___awmod@dividend,7
  2947  0A47  03F3               	decf	___awmod@dividend+1,f
  2948  0A48  160A  158A  2491  120A  158A  	fcall	___awmod
  2949  0A4D  0870               	movf	?___awmod,w
  2950  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0A50  00C2               	movwf	??_scale
  2953  0A51  3001               	movlw	1
  2954  0A52                     u4385:
  2955  0A52  1003               	clrc
  2956  0A53  0DC2               	rlf	??_scale,f
  2957  0A54  3EFF               	addlw	-1
  2958  0A55  1D03               	skipz
  2959  0A56  2A52               	goto	u4385
  2960  0A57  1003               	clrc
  2961  0A58  0D42               	rlf	??_scale,w
  2962  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2963  0A5A  0084               	movwf	4
  2964  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  2965  0A60  00C3               	movwf	??_scale+1
  2966  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  2967  0A66  00C4               	movwf	??_scale+2
  2968  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  2969  0A6C  00C5               	movwf	??_scale+3
  2970  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  2971  0A72  00C6               	movwf	??_scale+4
  2972  0A73  0846               	movf	??_scale+4,w
  2973  0A74  00A7               	movwf	___flmul@b+3
  2974  0A75  0845               	movf	??_scale+3,w
  2975  0A76  00A6               	movwf	___flmul@b+2
  2976  0A77  0844               	movf	??_scale+2,w
  2977  0A78  00A5               	movwf	___flmul@b+1
  2978  0A79  0843               	movf	??_scale+1,w
  2979  0A7A  00A4               	movwf	___flmul@b
  2980  0A7B  300A               	movlw	10
  2981  0A7C  00F7               	movwf	___awdiv@divisor
  2982  0A7D  3000               	movlw	0
  2983  0A7E  00F8               	movwf	___awdiv@divisor+1
  2984  0A7F  0850               	movf	scale@scl,w
  2985  0A80  00F9               	movwf	___awdiv@dividend
  2986  0A81  01FA               	clrf	___awdiv@dividend+1
  2987  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2988  0A83  03FA               	decf	___awdiv@dividend+1,f
  2989  0A84  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2990  0A89  0877               	movf	?___awdiv,w
  2991  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0A8C  00C7               	movwf	??_scale+5
  2994  0A8D  3001               	movlw	1
  2995  0A8E                     u4395:
  2996  0A8E  1003               	clrc
  2997  0A8F  0DC7               	rlf	??_scale+5,f
  2998  0A90  3EFF               	addlw	-1
  2999  0A91  1D03               	skipz
  3000  0A92  2A8E               	goto	u4395
  3001  0A93  1003               	clrc
  3002  0A94  0D47               	rlf	??_scale+5,w
  3003  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3004  0A96  0084               	movwf	4
  3005  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  3006  0A9C  00C8               	movwf	??_scale+6
  3007  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  3008  0AA2  00C9               	movwf	??_scale+7
  3009  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  3010  0AA8  00CA               	movwf	??_scale+8
  3011  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  3012  0AAE  00CB               	movwf	??_scale+9
  3013  0AAF  084B               	movf	??_scale+9,w
  3014  0AB0  00AB               	movwf	___flmul@a+3
  3015  0AB1  084A               	movf	??_scale+8,w
  3016  0AB2  00AA               	movwf	___flmul@a+2
  3017  0AB3  0849               	movf	??_scale+7,w
  3018  0AB4  00A9               	movwf	___flmul@a+1
  3019  0AB5  0848               	movf	??_scale+6,w
  3020  0AB6  00A8               	movwf	___flmul@a
  3021  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3022  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0ABE  0827               	movf	?___flmul+3,w
  3025  0ABF  00C1               	movwf	?_scale+3
  3026  0AC0  0826               	movf	?___flmul+2,w
  3027  0AC1  00C0               	movwf	?_scale+2
  3028  0AC2  0825               	movf	?___flmul+1,w
  3029  0AC3  00BF               	movwf	?_scale+1
  3030  0AC4  0824               	movf	?___flmul,w
  3031  0AC5  00BE               	movwf	?_scale
  3032  0AC6  2C9E               	goto	l341
  3033  0AC7                     l2980:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3036  0AC7  0850               	movf	scale@scl,w
  3037  0AC8  00C2               	movwf	??_scale
  3038  0AC9  3001               	movlw	1
  3039  0ACA                     u4405:
  3040  0ACA  1003               	clrc
  3041  0ACB  0DC2               	rlf	??_scale,f
  3042  0ACC  3EFF               	addlw	-1
  3043  0ACD  1D03               	skipz
  3044  0ACE  2ACA               	goto	u4405
  3045  0ACF  1003               	clrc
  3046  0AD0  0D42               	rlf	??_scale,w
  3047  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3048  0AD2  0084               	movwf	4
  3049  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  3050  0AD8  00C3               	movwf	??_scale+1
  3051  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  3052  0ADE  00C4               	movwf	??_scale+2
  3053  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  3054  0AE4  00C5               	movwf	??_scale+3
  3055  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  3056  0AEA  00C6               	movwf	??_scale+4
  3057  0AEB  0846               	movf	??_scale+4,w
  3058  0AEC  00C1               	movwf	?_scale+3
  3059  0AED  0845               	movf	??_scale+3,w
  3060  0AEE  00C0               	movwf	?_scale+2
  3061  0AEF  0844               	movf	??_scale+2,w
  3062  0AF0  00BF               	movwf	?_scale+1
  3063  0AF1  0843               	movf	??_scale+1,w
  3064  0AF2  00BE               	movwf	?_scale
  3065  0AF3  2C9E               	goto	l341
  3066  0AF4                     l2984:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3069  0AF4  0850               	movf	scale@scl,w
  3070  0AF5  3A80               	xorlw	128
  3071  0AF6  3E12               	addlw	-238
  3072  0AF7  1C03               	skipc
  3073  0AF8  2AFA               	goto	u4411
  3074  0AF9  2AFB               	goto	u4410
  3075  0AFA                     u4411:
  3076  0AFA  2BE3               	goto	l2992
  3077  0AFB                     u4410:
  3078  0AFB                     l2986:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3081  0AFB  300A               	movlw	10
  3082  0AFC  00F7               	movwf	___awdiv@divisor
  3083  0AFD  3000               	movlw	0
  3084  0AFE  00F8               	movwf	___awdiv@divisor+1
  3085  0AFF  0850               	movf	scale@scl,w
  3086  0B00  00F2               	movwf	___awmod@dividend
  3087  0B01  01F3               	clrf	___awmod@dividend+1
  3088  0B02  1BF2               	btfsc	___awmod@dividend,7
  3089  0B03  03F3               	decf	___awmod@dividend+1,f
  3090  0B04  3064               	movlw	100
  3091  0B05  00F0               	movwf	___awmod@divisor
  3092  0B06  3000               	movlw	0
  3093  0B07  00F1               	movwf	___awmod@divisor+1
  3094  0B08  160A  158A  2491  120A  158A  	fcall	___awmod
  3095  0B0D  0871               	movf	?___awmod+1,w
  3096  0B0E  00FA               	movwf	___awdiv@dividend+1
  3097  0B0F  0870               	movf	?___awmod,w
  3098  0B10  00F9               	movwf	___awdiv@dividend
  3099  0B11  160A  158A  25B6  120A  158A  	fcall	___awdiv
  3100  0B16  0877               	movf	?___awdiv,w
  3101  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0B19  00C2               	movwf	??_scale
  3104  0B1A  3001               	movlw	1
  3105  0B1B                     u4425:
  3106  0B1B  1003               	clrc
  3107  0B1C  0DC2               	rlf	??_scale,f
  3108  0B1D  3EFF               	addlw	-1
  3109  0B1E  1D03               	skipz
  3110  0B1F  2B1B               	goto	u4425
  3111  0B20  1003               	clrc
  3112  0B21  0D42               	rlf	??_scale,w
  3113  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3114  0B23  0084               	movwf	4
  3115  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  3116  0B29  00C3               	movwf	??_scale+1
  3117  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  3118  0B2F  00C4               	movwf	??_scale+2
  3119  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  3120  0B35  00C5               	movwf	??_scale+3
  3121  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  3122  0B3B  00C6               	movwf	??_scale+4
  3123  0B3C  0846               	movf	??_scale+4,w
  3124  0B3D  00A7               	movwf	___flmul@b+3
  3125  0B3E  0845               	movf	??_scale+3,w
  3126  0B3F  00A6               	movwf	___flmul@b+2
  3127  0B40  0844               	movf	??_scale+2,w
  3128  0B41  00A5               	movwf	___flmul@b+1
  3129  0B42  0843               	movf	??_scale+1,w
  3130  0B43  00A4               	movwf	___flmul@b
  3131  0B44  3064               	movlw	100
  3132  0B45  00F7               	movwf	___awdiv@divisor
  3133  0B46  3000               	movlw	0
  3134  0B47  00F8               	movwf	___awdiv@divisor+1
  3135  0B48  0850               	movf	scale@scl,w
  3136  0B49  00F9               	movwf	___awdiv@dividend
  3137  0B4A  01FA               	clrf	___awdiv@dividend+1
  3138  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3139  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3140  0B4D  160A  158A  25B6  120A  158A  	fcall	___awdiv
  3141  0B52  0877               	movf	?___awdiv,w
  3142  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0B55  00C7               	movwf	??_scale+5
  3145  0B56  3001               	movlw	1
  3146  0B57                     u4435:
  3147  0B57  1003               	clrc
  3148  0B58  0DC7               	rlf	??_scale+5,f
  3149  0B59  3EFF               	addlw	-1
  3150  0B5A  1D03               	skipz
  3151  0B5B  2B57               	goto	u4435
  3152  0B5C  1003               	clrc
  3153  0B5D  0D47               	rlf	??_scale+5,w
  3154  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3155  0B5F  0084               	movwf	4
  3156  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  3157  0B65  00C8               	movwf	??_scale+6
  3158  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  3159  0B6B  00C9               	movwf	??_scale+7
  3160  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  3161  0B71  00CA               	movwf	??_scale+8
  3162  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  3163  0B77  00CB               	movwf	??_scale+9
  3164  0B78  084B               	movf	??_scale+9,w
  3165  0B79  00AB               	movwf	___flmul@a+3
  3166  0B7A  084A               	movf	??_scale+8,w
  3167  0B7B  00AA               	movwf	___flmul@a+2
  3168  0B7C  0849               	movf	??_scale+7,w
  3169  0B7D  00A9               	movwf	___flmul@a+1
  3170  0B7E  0848               	movf	??_scale+6,w
  3171  0B7F  00A8               	movwf	___flmul@a
  3172  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3173  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0B87  0827               	movf	?___flmul+3,w
  3176  0B88  00CF               	movwf	_scale$1139+3
  3177  0B89  0826               	movf	?___flmul+2,w
  3178  0B8A  00CE               	movwf	_scale$1139+2
  3179  0B8B  0825               	movf	?___flmul+1,w
  3180  0B8C  00CD               	movwf	_scale$1139+1
  3181  0B8D  0824               	movf	?___flmul,w
  3182  0B8E  00CC               	movwf	_scale$1139
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3185  0B8F  300A               	movlw	10
  3186  0B90  00F0               	movwf	___awmod@divisor
  3187  0B91  3000               	movlw	0
  3188  0B92  00F1               	movwf	___awmod@divisor+1
  3189  0B93  0850               	movf	scale@scl,w
  3190  0B94  00F2               	movwf	___awmod@dividend
  3191  0B95  01F3               	clrf	___awmod@dividend+1
  3192  0B96  1BF2               	btfsc	___awmod@dividend,7
  3193  0B97  03F3               	decf	___awmod@dividend+1,f
  3194  0B98  160A  158A  2491  120A  158A  	fcall	___awmod
  3195  0B9D  0870               	movf	?___awmod,w
  3196  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0BA0  00C2               	movwf	??_scale
  3199  0BA1  3001               	movlw	1
  3200  0BA2                     u4445:
  3201  0BA2  1003               	clrc
  3202  0BA3  0DC2               	rlf	??_scale,f
  3203  0BA4  3EFF               	addlw	-1
  3204  0BA5  1D03               	skipz
  3205  0BA6  2BA2               	goto	u4445
  3206  0BA7  1003               	clrc
  3207  0BA8  0D42               	rlf	??_scale,w
  3208  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3209  0BAA  0084               	movwf	4
  3210  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3211  0BB0  00C3               	movwf	??_scale+1
  3212  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3213  0BB6  00C4               	movwf	??_scale+2
  3214  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3215  0BBC  00C5               	movwf	??_scale+3
  3216  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3217  0BC2  00C6               	movwf	??_scale+4
  3218  0BC3  0846               	movf	??_scale+4,w
  3219  0BC4  00A7               	movwf	___flmul@b+3
  3220  0BC5  0845               	movf	??_scale+3,w
  3221  0BC6  00A6               	movwf	___flmul@b+2
  3222  0BC7  0844               	movf	??_scale+2,w
  3223  0BC8  00A5               	movwf	___flmul@b+1
  3224  0BC9  0843               	movf	??_scale+1,w
  3225  0BCA  00A4               	movwf	___flmul@b
  3226  0BCB  084F               	movf	_scale$1139+3,w
  3227  0BCC  00AB               	movwf	___flmul@a+3
  3228  0BCD  084E               	movf	_scale$1139+2,w
  3229  0BCE  00AA               	movwf	___flmul@a+2
  3230  0BCF  084D               	movf	_scale$1139+1,w
  3231  0BD0  00A9               	movwf	___flmul@a+1
  3232  0BD1  084C               	movf	_scale$1139,w
  3233  0BD2  00A8               	movwf	___flmul@a
  3234  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3235  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0BDA  0827               	movf	?___flmul+3,w
  3238  0BDB  00C1               	movwf	?_scale+3
  3239  0BDC  0826               	movf	?___flmul+2,w
  3240  0BDD  00C0               	movwf	?_scale+2
  3241  0BDE  0825               	movf	?___flmul+1,w
  3242  0BDF  00BF               	movwf	?_scale+1
  3243  0BE0  0824               	movf	?___flmul,w
  3244  0BE1  00BE               	movwf	?_scale
  3245  0BE2  2C9E               	goto	l341
  3246  0BE3                     l2992:
  3247  0BE3  0850               	movf	scale@scl,w
  3248  0BE4  3A80               	xorlw	128
  3249  0BE5  3E75               	addlw	-139
  3250  0BE6  1C03               	skipc
  3251  0BE7  2BE9               	goto	u4451
  3252  0BE8  2BEA               	goto	u4450
  3253  0BE9                     u4451:
  3254  0BE9  2C72               	goto	l2998
  3255  0BEA                     u4450:
  3256  0BEA                     l2994:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3259  0BEA  300A               	movlw	10
  3260  0BEB  00F0               	movwf	___awmod@divisor
  3261  0BEC  3000               	movlw	0
  3262  0BED  00F1               	movwf	___awmod@divisor+1
  3263  0BEE  0850               	movf	scale@scl,w
  3264  0BEF  00F2               	movwf	___awmod@dividend
  3265  0BF0  01F3               	clrf	___awmod@dividend+1
  3266  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3267  0BF2  03F3               	decf	___awmod@dividend+1,f
  3268  0BF3  160A  158A  2491  120A  158A  	fcall	___awmod
  3269  0BF8  0870               	movf	?___awmod,w
  3270  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0BFB  00C2               	movwf	??_scale
  3273  0BFC  3001               	movlw	1
  3274  0BFD                     u4465:
  3275  0BFD  1003               	clrc
  3276  0BFE  0DC2               	rlf	??_scale,f
  3277  0BFF  3EFF               	addlw	-1
  3278  0C00  1D03               	skipz
  3279  0C01  2BFD               	goto	u4465
  3280  0C02  1003               	clrc
  3281  0C03  0D42               	rlf	??_scale,w
  3282  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3283  0C05  0084               	movwf	4
  3284  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3285  0C0B  00C3               	movwf	??_scale+1
  3286  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3287  0C11  00C4               	movwf	??_scale+2
  3288  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3289  0C17  00C5               	movwf	??_scale+3
  3290  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3291  0C1D  00C6               	movwf	??_scale+4
  3292  0C1E  0846               	movf	??_scale+4,w
  3293  0C1F  00A7               	movwf	___flmul@b+3
  3294  0C20  0845               	movf	??_scale+3,w
  3295  0C21  00A6               	movwf	___flmul@b+2
  3296  0C22  0844               	movf	??_scale+2,w
  3297  0C23  00A5               	movwf	___flmul@b+1
  3298  0C24  0843               	movf	??_scale+1,w
  3299  0C25  00A4               	movwf	___flmul@b
  3300  0C26  300A               	movlw	10
  3301  0C27  00F7               	movwf	___awdiv@divisor
  3302  0C28  3000               	movlw	0
  3303  0C29  00F8               	movwf	___awdiv@divisor+1
  3304  0C2A  0850               	movf	scale@scl,w
  3305  0C2B  00F9               	movwf	___awdiv@dividend
  3306  0C2C  01FA               	clrf	___awdiv@dividend+1
  3307  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3308  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3309  0C2F  160A  158A  25B6  120A  158A  	fcall	___awdiv
  3310  0C34  0877               	movf	?___awdiv,w
  3311  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0C37  00C7               	movwf	??_scale+5
  3314  0C38  3001               	movlw	1
  3315  0C39                     u4475:
  3316  0C39  1003               	clrc
  3317  0C3A  0DC7               	rlf	??_scale+5,f
  3318  0C3B  3EFF               	addlw	-1
  3319  0C3C  1D03               	skipz
  3320  0C3D  2C39               	goto	u4475
  3321  0C3E  1003               	clrc
  3322  0C3F  0D47               	rlf	??_scale+5,w
  3323  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3324  0C41  0084               	movwf	4
  3325  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3326  0C47  00C8               	movwf	??_scale+6
  3327  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3328  0C4D  00C9               	movwf	??_scale+7
  3329  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3330  0C53  00CA               	movwf	??_scale+8
  3331  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3332  0C59  00CB               	movwf	??_scale+9
  3333  0C5A  084B               	movf	??_scale+9,w
  3334  0C5B  00AB               	movwf	___flmul@a+3
  3335  0C5C  084A               	movf	??_scale+8,w
  3336  0C5D  00AA               	movwf	___flmul@a+2
  3337  0C5E  0849               	movf	??_scale+7,w
  3338  0C5F  00A9               	movwf	___flmul@a+1
  3339  0C60  0848               	movf	??_scale+6,w
  3340  0C61  00A8               	movwf	___flmul@a
  3341  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3342  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0C69  0827               	movf	?___flmul+3,w
  3345  0C6A  00C1               	movwf	?_scale+3
  3346  0C6B  0826               	movf	?___flmul+2,w
  3347  0C6C  00C0               	movwf	?_scale+2
  3348  0C6D  0825               	movf	?___flmul+1,w
  3349  0C6E  00BF               	movwf	?_scale+1
  3350  0C6F  0824               	movf	?___flmul,w
  3351  0C70  00BE               	movwf	?_scale
  3352  0C71  2C9E               	goto	l341
  3353  0C72                     l2998:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3356  0C72  0850               	movf	scale@scl,w
  3357  0C73  00C2               	movwf	??_scale
  3358  0C74  3001               	movlw	1
  3359  0C75                     u4485:
  3360  0C75  1003               	clrc
  3361  0C76  0DC2               	rlf	??_scale,f
  3362  0C77  3EFF               	addlw	-1
  3363  0C78  1D03               	skipz
  3364  0C79  2C75               	goto	u4485
  3365  0C7A  1003               	clrc
  3366  0C7B  0D42               	rlf	??_scale,w
  3367  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3368  0C7D  0084               	movwf	4
  3369  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3370  0C83  00C3               	movwf	??_scale+1
  3371  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3372  0C89  00C4               	movwf	??_scale+2
  3373  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3374  0C8F  00C5               	movwf	??_scale+3
  3375  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3376  0C95  00C6               	movwf	??_scale+4
  3377  0C96  0846               	movf	??_scale+4,w
  3378  0C97  00C1               	movwf	?_scale+3
  3379  0C98  0845               	movf	??_scale+3,w
  3380  0C99  00C0               	movwf	?_scale+2
  3381  0C9A  0844               	movf	??_scale+2,w
  3382  0C9B  00BF               	movwf	?_scale+1
  3383  0C9C  0843               	movf	??_scale+1,w
  3384  0C9D  00BE               	movwf	?_scale
  3385  0C9E                     l341:
  3386  0C9E  0008               	return
  3387  0C9F                     __end_of_scale:
  3388                           
  3389                           	psect	text4
  3390  1C91                     __ptext4:	
  3391 ;; *************** function ___awmod *****************
  3392 ;; Defined at:
  3393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  divisor         2    0[COMMON] int 
  3396 ;;  dividend        2    2[COMMON] int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  sign            1    6[COMMON] unsigned char 
  3399 ;;  counter         1    5[COMMON] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    0[COMMON] int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         4       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0
  3411 ;;      Temps:          1       0       0       0       0
  3412 ;;      Totals:         7       0       0       0       0
  3413 ;;Total ram usage:        7 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_scale
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function ___awmod
  3424  1C91                     ___awmod:
  3425  1C91                     l2474:	
  3426                           ;incstack = 0
  3427                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3428                           
  3429  1C91  01F6               	clrf	___awmod@sign
  3430  1C92                     l2476:
  3431  1C92  1FF3               	btfss	___awmod@dividend+1,7
  3432  1C93  2C95               	goto	u3171
  3433  1C94  2C96               	goto	u3170
  3434  1C95                     u3171:
  3435  1C95  2C9D               	goto	l2482
  3436  1C96                     u3170:
  3437  1C96                     l2478:
  3438  1C96  09F2               	comf	___awmod@dividend,f
  3439  1C97  09F3               	comf	___awmod@dividend+1,f
  3440  1C98  0AF2               	incf	___awmod@dividend,f
  3441  1C99  1903               	skipnz
  3442  1C9A  0AF3               	incf	___awmod@dividend+1,f
  3443  1C9B                     l2480:
  3444  1C9B  01F6               	clrf	___awmod@sign
  3445  1C9C  0AF6               	incf	___awmod@sign,f
  3446  1C9D                     l2482:
  3447  1C9D  1FF1               	btfss	___awmod@divisor+1,7
  3448  1C9E  2CA0               	goto	u3181
  3449  1C9F  2CA1               	goto	u3180
  3450  1CA0                     u3181:
  3451  1CA0  2CA6               	goto	l2486
  3452  1CA1                     u3180:
  3453  1CA1                     l2484:
  3454  1CA1  09F0               	comf	___awmod@divisor,f
  3455  1CA2  09F1               	comf	___awmod@divisor+1,f
  3456  1CA3  0AF0               	incf	___awmod@divisor,f
  3457  1CA4  1903               	skipnz
  3458  1CA5  0AF1               	incf	___awmod@divisor+1,f
  3459  1CA6                     l2486:
  3460  1CA6  0870               	movf	___awmod@divisor,w
  3461  1CA7  0471               	iorwf	___awmod@divisor+1,w
  3462  1CA8  1903               	btfsc	3,2
  3463  1CA9  2CAB               	goto	u3191
  3464  1CAA  2CAC               	goto	u3190
  3465  1CAB                     u3191:
  3466  1CAB  2CDB               	goto	l2504
  3467  1CAC                     u3190:
  3468  1CAC                     l2488:
  3469  1CAC  01F5               	clrf	___awmod@counter
  3470  1CAD  0AF5               	incf	___awmod@counter,f
  3471  1CAE  2CBA               	goto	l2494
  3472  1CAF                     l2490:
  3473  1CAF  3001               	movlw	1
  3474  1CB0                     u3205:
  3475  1CB0  1003               	clrc
  3476  1CB1  0DF0               	rlf	___awmod@divisor,f
  3477  1CB2  0DF1               	rlf	___awmod@divisor+1,f
  3478  1CB3  3EFF               	addlw	-1
  3479  1CB4  1D03               	skipz
  3480  1CB5  2CB0               	goto	u3205
  3481  1CB6                     l2492:
  3482  1CB6  3001               	movlw	1
  3483  1CB7  00F4               	movwf	??___awmod
  3484  1CB8  0874               	movf	??___awmod,w
  3485  1CB9  07F5               	addwf	___awmod@counter,f
  3486  1CBA                     l2494:
  3487  1CBA  1FF1               	btfss	___awmod@divisor+1,7
  3488  1CBB  2CBD               	goto	u3211
  3489  1CBC  2CBE               	goto	u3210
  3490  1CBD                     u3211:
  3491  1CBD  2CAF               	goto	l2490
  3492  1CBE                     u3210:
  3493  1CBE                     l2496:
  3494  1CBE  0871               	movf	___awmod@divisor+1,w
  3495  1CBF  0273               	subwf	___awmod@dividend+1,w
  3496  1CC0  1D03               	skipz
  3497  1CC1  2CC4               	goto	u3225
  3498  1CC2  0870               	movf	___awmod@divisor,w
  3499  1CC3  0272               	subwf	___awmod@dividend,w
  3500  1CC4                     u3225:
  3501  1CC4  1C03               	skipc
  3502  1CC5  2CC7               	goto	u3221
  3503  1CC6  2CC8               	goto	u3220
  3504  1CC7                     u3221:
  3505  1CC7  2CCE               	goto	l2500
  3506  1CC8                     u3220:
  3507  1CC8                     l2498:
  3508  1CC8  0870               	movf	___awmod@divisor,w
  3509  1CC9  02F2               	subwf	___awmod@dividend,f
  3510  1CCA  0871               	movf	___awmod@divisor+1,w
  3511  1CCB  1C03               	skipc
  3512  1CCC  03F3               	decf	___awmod@dividend+1,f
  3513  1CCD  02F3               	subwf	___awmod@dividend+1,f
  3514  1CCE                     l2500:
  3515  1CCE  3001               	movlw	1
  3516  1CCF                     u3235:
  3517  1CCF  1003               	clrc
  3518  1CD0  0CF1               	rrf	___awmod@divisor+1,f
  3519  1CD1  0CF0               	rrf	___awmod@divisor,f
  3520  1CD2  3EFF               	addlw	-1
  3521  1CD3  1D03               	skipz
  3522  1CD4  2CCF               	goto	u3235
  3523  1CD5                     l2502:
  3524  1CD5  3001               	movlw	1
  3525  1CD6  02F5               	subwf	___awmod@counter,f
  3526  1CD7  1D03               	btfss	3,2
  3527  1CD8  2CDA               	goto	u3241
  3528  1CD9  2CDB               	goto	u3240
  3529  1CDA                     u3241:
  3530  1CDA  2CBE               	goto	l2496
  3531  1CDB                     u3240:
  3532  1CDB                     l2504:
  3533  1CDB  0876               	movf	___awmod@sign,w
  3534  1CDC  1903               	btfsc	3,2
  3535  1CDD  2CDF               	goto	u3251
  3536  1CDE  2CE0               	goto	u3250
  3537  1CDF                     u3251:
  3538  1CDF  2CE5               	goto	l2508
  3539  1CE0                     u3250:
  3540  1CE0                     l2506:
  3541  1CE0  09F2               	comf	___awmod@dividend,f
  3542  1CE1  09F3               	comf	___awmod@dividend+1,f
  3543  1CE2  0AF2               	incf	___awmod@dividend,f
  3544  1CE3  1903               	skipnz
  3545  1CE4  0AF3               	incf	___awmod@dividend+1,f
  3546  1CE5                     l2508:
  3547  1CE5  0873               	movf	___awmod@dividend+1,w
  3548  1CE6  00F1               	movwf	?___awmod+1
  3549  1CE7  0872               	movf	___awmod@dividend,w
  3550  1CE8  00F0               	movwf	?___awmod
  3551  1CE9                     l603:
  3552  1CE9  0008               	return
  3553  1CEA                     __end_of___awmod:
  3554                           
  3555                           	psect	text5
  3556  1DB6                     __ptext5:	
  3557 ;; *************** function ___awdiv *****************
  3558 ;; Defined at:
  3559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  divisor         2    7[COMMON] int 
  3562 ;;  dividend        2    9[COMMON] int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  quotient        2    2[BANK0 ] int 
  3565 ;;  sign            1    1[BANK0 ] unsigned char 
  3566 ;;  counter         1    0[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  2    7[COMMON] int 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         4       0       0       0       0
  3577 ;;      Locals:         0       4       0       0       0
  3578 ;;      Temps:          1       0       0       0       0
  3579 ;;      Totals:         5       4       0       0       0
  3580 ;;Total ram usage:        9 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_scale
  3586 ;;		_sprintf
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           
  3591                           ;psect for function ___awdiv
  3592  1DB6                     ___awdiv:
  3593  1DB6                     l2430:	
  3594                           ;incstack = 0
  3595                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3596                           
  3597  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  3598  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  3599  1DB8  01A1               	clrf	___awdiv@sign
  3600  1DB9                     l2432:
  3601  1DB9  1FF8               	btfss	___awdiv@divisor+1,7
  3602  1DBA  2DBC               	goto	u3071
  3603  1DBB  2DBD               	goto	u3070
  3604  1DBC                     u3071:
  3605  1DBC  2DC4               	goto	l2438
  3606  1DBD                     u3070:
  3607  1DBD                     l2434:
  3608  1DBD  09F7               	comf	___awdiv@divisor,f
  3609  1DBE  09F8               	comf	___awdiv@divisor+1,f
  3610  1DBF  0AF7               	incf	___awdiv@divisor,f
  3611  1DC0  1903               	skipnz
  3612  1DC1  0AF8               	incf	___awdiv@divisor+1,f
  3613  1DC2                     l2436:
  3614  1DC2  01A1               	clrf	___awdiv@sign
  3615  1DC3  0AA1               	incf	___awdiv@sign,f
  3616  1DC4                     l2438:
  3617  1DC4  1FFA               	btfss	___awdiv@dividend+1,7
  3618  1DC5  2DC7               	goto	u3081
  3619  1DC6  2DC8               	goto	u3080
  3620  1DC7                     u3081:
  3621  1DC7  2DD1               	goto	l2444
  3622  1DC8                     u3080:
  3623  1DC8                     l2440:
  3624  1DC8  09F9               	comf	___awdiv@dividend,f
  3625  1DC9  09FA               	comf	___awdiv@dividend+1,f
  3626  1DCA  0AF9               	incf	___awdiv@dividend,f
  3627  1DCB  1903               	skipnz
  3628  1DCC  0AFA               	incf	___awdiv@dividend+1,f
  3629  1DCD                     l2442:
  3630  1DCD  3001               	movlw	1
  3631  1DCE  00FB               	movwf	??___awdiv
  3632  1DCF  087B               	movf	??___awdiv,w
  3633  1DD0  06A1               	xorwf	___awdiv@sign,f
  3634  1DD1                     l2444:
  3635  1DD1  01A2               	clrf	___awdiv@quotient
  3636  1DD2  01A3               	clrf	___awdiv@quotient+1
  3637  1DD3                     l2446:
  3638  1DD3  0877               	movf	___awdiv@divisor,w
  3639  1DD4  0478               	iorwf	___awdiv@divisor+1,w
  3640  1DD5  1903               	btfsc	3,2
  3641  1DD6  2DD8               	goto	u3091
  3642  1DD7  2DD9               	goto	u3090
  3643  1DD8                     u3091:
  3644  1DD8  2E10               	goto	l2466
  3645  1DD9                     u3090:
  3646  1DD9                     l2448:
  3647  1DD9  01A0               	clrf	___awdiv@counter
  3648  1DDA  0AA0               	incf	___awdiv@counter,f
  3649  1DDB  2DE7               	goto	l2454
  3650  1DDC                     l2450:
  3651  1DDC  3001               	movlw	1
  3652  1DDD                     u3105:
  3653  1DDD  1003               	clrc
  3654  1DDE  0DF7               	rlf	___awdiv@divisor,f
  3655  1DDF  0DF8               	rlf	___awdiv@divisor+1,f
  3656  1DE0  3EFF               	addlw	-1
  3657  1DE1  1D03               	skipz
  3658  1DE2  2DDD               	goto	u3105
  3659  1DE3                     l2452:
  3660  1DE3  3001               	movlw	1
  3661  1DE4  00FB               	movwf	??___awdiv
  3662  1DE5  087B               	movf	??___awdiv,w
  3663  1DE6  07A0               	addwf	___awdiv@counter,f
  3664  1DE7                     l2454:
  3665  1DE7  1FF8               	btfss	___awdiv@divisor+1,7
  3666  1DE8  2DEA               	goto	u3111
  3667  1DE9  2DEB               	goto	u3110
  3668  1DEA                     u3111:
  3669  1DEA  2DDC               	goto	l2450
  3670  1DEB                     u3110:
  3671  1DEB                     l2456:
  3672  1DEB  3001               	movlw	1
  3673  1DEC                     u3125:
  3674  1DEC  1003               	clrc
  3675  1DED  0DA2               	rlf	___awdiv@quotient,f
  3676  1DEE  0DA3               	rlf	___awdiv@quotient+1,f
  3677  1DEF  3EFF               	addlw	-1
  3678  1DF0  1D03               	skipz
  3679  1DF1  2DEC               	goto	u3125
  3680  1DF2  0878               	movf	___awdiv@divisor+1,w
  3681  1DF3  027A               	subwf	___awdiv@dividend+1,w
  3682  1DF4  1D03               	skipz
  3683  1DF5  2DF8               	goto	u3135
  3684  1DF6  0877               	movf	___awdiv@divisor,w
  3685  1DF7  0279               	subwf	___awdiv@dividend,w
  3686  1DF8                     u3135:
  3687  1DF8  1C03               	skipc
  3688  1DF9  2DFB               	goto	u3131
  3689  1DFA  2DFC               	goto	u3130
  3690  1DFB                     u3131:
  3691  1DFB  2E03               	goto	l2462
  3692  1DFC                     u3130:
  3693  1DFC                     l2458:
  3694  1DFC  0877               	movf	___awdiv@divisor,w
  3695  1DFD  02F9               	subwf	___awdiv@dividend,f
  3696  1DFE  0878               	movf	___awdiv@divisor+1,w
  3697  1DFF  1C03               	skipc
  3698  1E00  03FA               	decf	___awdiv@dividend+1,f
  3699  1E01  02FA               	subwf	___awdiv@dividend+1,f
  3700  1E02                     l2460:
  3701  1E02  1422               	bsf	___awdiv@quotient,0
  3702  1E03                     l2462:
  3703  1E03  3001               	movlw	1
  3704  1E04                     u3145:
  3705  1E04  1003               	clrc
  3706  1E05  0CF8               	rrf	___awdiv@divisor+1,f
  3707  1E06  0CF7               	rrf	___awdiv@divisor,f
  3708  1E07  3EFF               	addlw	-1
  3709  1E08  1D03               	skipz
  3710  1E09  2E04               	goto	u3145
  3711  1E0A                     l2464:
  3712  1E0A  3001               	movlw	1
  3713  1E0B  02A0               	subwf	___awdiv@counter,f
  3714  1E0C  1D03               	btfss	3,2
  3715  1E0D  2E0F               	goto	u3151
  3716  1E0E  2E10               	goto	u3150
  3717  1E0F                     u3151:
  3718  1E0F  2DEB               	goto	l2456
  3719  1E10                     u3150:
  3720  1E10                     l2466:
  3721  1E10  0821               	movf	___awdiv@sign,w
  3722  1E11  1903               	btfsc	3,2
  3723  1E12  2E14               	goto	u3161
  3724  1E13  2E15               	goto	u3160
  3725  1E14                     u3161:
  3726  1E14  2E1A               	goto	l2470
  3727  1E15                     u3160:
  3728  1E15                     l2468:
  3729  1E15  09A2               	comf	___awdiv@quotient,f
  3730  1E16  09A3               	comf	___awdiv@quotient+1,f
  3731  1E17  0AA2               	incf	___awdiv@quotient,f
  3732  1E18  1903               	skipnz
  3733  1E19  0AA3               	incf	___awdiv@quotient+1,f
  3734  1E1A                     l2470:
  3735  1E1A  0823               	movf	___awdiv@quotient+1,w
  3736  1E1B  00F8               	movwf	?___awdiv+1
  3737  1E1C  0822               	movf	___awdiv@quotient,w
  3738  1E1D  00F7               	movwf	?___awdiv
  3739  1E1E                     l590:
  3740  1E1E  0008               	return
  3741  1E1F                     __end_of___awdiv:
  3742                           
  3743                           	psect	text6
  3744  197C                     __ptext6:	
  3745 ;; *************** function _isdigit *****************
  3746 ;; Defined at:
  3747 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  c               1    wreg     unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  c               1    1[COMMON] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         2       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         2       0       0       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_sprintf
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _isdigit
  3776  197C                     _isdigit:
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3780                           ;isdigit@c stored from wreg
  3781  197C  00F1               	movwf	isdigit@c
  3782  197D                     l3002:
  3783  197D  01F0               	clrf	_isdigit$951
  3784  197E                     l3004:
  3785  197E  303A               	movlw	58
  3786  197F  0271               	subwf	isdigit@c,w
  3787  1980  1803               	skipnc
  3788  1981  2983               	goto	u4491
  3789  1982  2984               	goto	u4490
  3790  1983                     u4491:
  3791  1983  298C               	goto	l3010
  3792  1984                     u4490:
  3793  1984                     l3006:
  3794  1984  3030               	movlw	48
  3795  1985  0271               	subwf	isdigit@c,w
  3796  1986  1C03               	skipc
  3797  1987  2989               	goto	u4501
  3798  1988  298A               	goto	u4500
  3799  1989                     u4501:
  3800  1989  298C               	goto	l3010
  3801  198A                     u4500:
  3802  198A                     l3008:
  3803  198A  01F0               	clrf	_isdigit$951
  3804  198B  0AF0               	incf	_isdigit$951,f
  3805  198C                     l3010:
  3806  198C  0C70               	rrf	_isdigit$951,w
  3807  198D                     l924:
  3808  198D  0008               	return
  3809  198E                     __end_of_isdigit:
  3810                           
  3811                           	psect	text7
  3812  10AB                     __ptext7:	
  3813 ;; *************** function _fround *****************
  3814 ;; Defined at:
  3815 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  prec            1    wreg     unsigned char 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  prec            1   49[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  4   30[BANK0 ] unsigned char 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       4       0       0       0
  3830 ;;      Locals:         0       9       0       0       0
  3831 ;;      Temps:          0       7       0       0       0
  3832 ;;      Totals:         0      20       0       0       0
  3833 ;;Total ram usage:       20 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    2
  3836 ;; This function calls:
  3837 ;;		___flmul
  3838 ;;		___lwdiv
  3839 ;;		___lwmod
  3840 ;; This function is called by:
  3841 ;;		_sprintf
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _fround
  3847  10AB                     _fround:
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3851                           ;fround@prec stored from wreg
  3852  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  3853  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  3854  10AD  00D1               	movwf	fround@prec
  3855  10AE                     l2944:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3858  10AE  306E               	movlw	110
  3859  10AF  0251               	subwf	fround@prec,w
  3860  10B0  1C03               	skipc
  3861  10B1  28B3               	goto	u4241
  3862  10B2  28B4               	goto	u4240
  3863  10B3                     u4241:
  3864  10B3  29C1               	goto	l2952
  3865  10B4                     u4240:
  3866  10B4                     l2946:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3869  10B4  303F               	movlw	63
  3870  10B5  00A7               	movwf	___flmul@b+3
  3871  10B6  3000               	movlw	0
  3872  10B7  00A6               	movwf	___flmul@b+2
  3873  10B8  3000               	movlw	0
  3874  10B9  00A5               	movwf	___flmul@b+1
  3875  10BA  3000               	movlw	0
  3876  10BB  00A4               	movwf	___flmul@b
  3877  10BC  3064               	movlw	100
  3878  10BD  00F6               	movwf	___lwdiv@divisor
  3879  10BE  3000               	movlw	0
  3880  10BF  00F7               	movwf	___lwdiv@divisor+1
  3881  10C0  0851               	movf	fround@prec,w
  3882  10C1  00C2               	movwf	??_fround
  3883  10C2  01C3               	clrf	??_fround+1
  3884  10C3  0842               	movf	??_fround,w
  3885  10C4  00F8               	movwf	___lwdiv@dividend
  3886  10C5  0843               	movf	??_fround+1,w
  3887  10C6  00F9               	movwf	___lwdiv@dividend+1
  3888  10C7  160A  158A  23B1  160A  118A  	fcall	___lwdiv
  3889  10CC  0876               	movf	?___lwdiv,w
  3890  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  3891  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  3892  10CF  00C4               	movwf	??_fround+2
  3893  10D0  3001               	movlw	1
  3894  10D1                     u4255:
  3895  10D1  1003               	clrc
  3896  10D2  0DC4               	rlf	??_fround+2,f
  3897  10D3  3EFF               	addlw	-1
  3898  10D4  1D03               	skipz
  3899  10D5  28D1               	goto	u4255
  3900  10D6  1003               	clrc
  3901  10D7  0D44               	rlf	??_fround+2,w
  3902  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3903  10D9  0084               	movwf	4
  3904  10DA  120A  118A  200D  160A  118A  	fcall	stringdir
  3905  10DF  00C5               	movwf	??_fround+3
  3906  10E0  120A  118A  200D  160A  118A  	fcall	stringdir
  3907  10E5  00C6               	movwf	??_fround+4
  3908  10E6  120A  118A  200D  160A  118A  	fcall	stringdir
  3909  10EB  00C7               	movwf	??_fround+5
  3910  10EC  120A  118A  200D  160A  118A  	fcall	stringdir
  3911  10F1  00C8               	movwf	??_fround+6
  3912  10F2  0848               	movf	??_fround+6,w
  3913  10F3  00AB               	movwf	___flmul@a+3
  3914  10F4  0847               	movf	??_fround+5,w
  3915  10F5  00AA               	movwf	___flmul@a+2
  3916  10F6  0846               	movf	??_fround+4,w
  3917  10F7  00A9               	movwf	___flmul@a+1
  3918  10F8  0845               	movf	??_fround+3,w
  3919  10F9  00A8               	movwf	___flmul@a
  3920  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  3921  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  3922  1100  1303               	bcf	3,6	;RP1=0, select bank0
  3923  1101  0827               	movf	?___flmul+3,w
  3924  1102  00D0               	movwf	_fround$1137+3
  3925  1103  0826               	movf	?___flmul+2,w
  3926  1104  00CF               	movwf	_fround$1137+2
  3927  1105  0825               	movf	?___flmul+1,w
  3928  1106  00CE               	movwf	_fround$1137+1
  3929  1107  0824               	movf	?___flmul,w
  3930  1108  00CD               	movwf	_fround$1137
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3933  1109  300A               	movlw	10
  3934  110A  00F6               	movwf	___lwdiv@divisor
  3935  110B  3000               	movlw	0
  3936  110C  00F7               	movwf	___lwdiv@divisor+1
  3937  110D  0851               	movf	fround@prec,w
  3938  110E  00C2               	movwf	??_fround
  3939  110F  01C3               	clrf	??_fround+1
  3940  1110  0842               	movf	??_fround,w
  3941  1111  00F2               	movwf	___lwmod@dividend
  3942  1112  0843               	movf	??_fround+1,w
  3943  1113  00F3               	movwf	___lwmod@dividend+1
  3944  1114  3064               	movlw	100
  3945  1115  00F0               	movwf	___lwmod@divisor
  3946  1116  3000               	movlw	0
  3947  1117  00F1               	movwf	___lwmod@divisor+1
  3948  1118  160A  158A  22F7  160A  118A  	fcall	___lwmod
  3949  111D  0871               	movf	?___lwmod+1,w
  3950  111E  00F9               	movwf	___lwdiv@dividend+1
  3951  111F  0870               	movf	?___lwmod,w
  3952  1120  00F8               	movwf	___lwdiv@dividend
  3953  1121  160A  158A  23B1  160A  118A  	fcall	___lwdiv
  3954  1126  0876               	movf	?___lwdiv,w
  3955  1127  1283               	bcf	3,5	;RP0=0, select bank0
  3956  1128  1303               	bcf	3,6	;RP1=0, select bank0
  3957  1129  00C4               	movwf	??_fround+2
  3958  112A  3001               	movlw	1
  3959  112B                     u4265:
  3960  112B  1003               	clrc
  3961  112C  0DC4               	rlf	??_fround+2,f
  3962  112D  3EFF               	addlw	-1
  3963  112E  1D03               	skipz
  3964  112F  292B               	goto	u4265
  3965  1130  1003               	clrc
  3966  1131  0D44               	rlf	??_fround+2,w
  3967  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3968  1133  0084               	movwf	4
  3969  1134  120A  118A  200D  160A  118A  	fcall	stringdir
  3970  1139  00C5               	movwf	??_fround+3
  3971  113A  120A  118A  200D  160A  118A  	fcall	stringdir
  3972  113F  00C6               	movwf	??_fround+4
  3973  1140  120A  118A  200D  160A  118A  	fcall	stringdir
  3974  1145  00C7               	movwf	??_fround+5
  3975  1146  120A  118A  200D  160A  118A  	fcall	stringdir
  3976  114B  00C8               	movwf	??_fround+6
  3977  114C  0848               	movf	??_fround+6,w
  3978  114D  00A7               	movwf	___flmul@b+3
  3979  114E  0847               	movf	??_fround+5,w
  3980  114F  00A6               	movwf	___flmul@b+2
  3981  1150  0846               	movf	??_fround+4,w
  3982  1151  00A5               	movwf	___flmul@b+1
  3983  1152  0845               	movf	??_fround+3,w
  3984  1153  00A4               	movwf	___flmul@b
  3985  1154  0850               	movf	_fround$1137+3,w
  3986  1155  00AB               	movwf	___flmul@a+3
  3987  1156  084F               	movf	_fround$1137+2,w
  3988  1157  00AA               	movwf	___flmul@a+2
  3989  1158  084E               	movf	_fround$1137+1,w
  3990  1159  00A9               	movwf	___flmul@a+1
  3991  115A  084D               	movf	_fround$1137,w
  3992  115B  00A8               	movwf	___flmul@a
  3993  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  3994  1161  1283               	bcf	3,5	;RP0=0, select bank0
  3995  1162  1303               	bcf	3,6	;RP1=0, select bank0
  3996  1163  0827               	movf	?___flmul+3,w
  3997  1164  00CC               	movwf	_fround$1138+3
  3998  1165  0826               	movf	?___flmul+2,w
  3999  1166  00CB               	movwf	_fround$1138+2
  4000  1167  0825               	movf	?___flmul+1,w
  4001  1168  00CA               	movwf	_fround$1138+1
  4002  1169  0824               	movf	?___flmul,w
  4003  116A  00C9               	movwf	_fround$1138
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4006  116B  300A               	movlw	10
  4007  116C  00F0               	movwf	___lwmod@divisor
  4008  116D  3000               	movlw	0
  4009  116E  00F1               	movwf	___lwmod@divisor+1
  4010  116F  0851               	movf	fround@prec,w
  4011  1170  00C2               	movwf	??_fround
  4012  1171  01C3               	clrf	??_fround+1
  4013  1172  0842               	movf	??_fround,w
  4014  1173  00F2               	movwf	___lwmod@dividend
  4015  1174  0843               	movf	??_fround+1,w
  4016  1175  00F3               	movwf	___lwmod@dividend+1
  4017  1176  160A  158A  22F7  160A  118A  	fcall	___lwmod
  4018  117B  0870               	movf	?___lwmod,w
  4019  117C  1283               	bcf	3,5	;RP0=0, select bank0
  4020  117D  1303               	bcf	3,6	;RP1=0, select bank0
  4021  117E  00C4               	movwf	??_fround+2
  4022  117F  3001               	movlw	1
  4023  1180                     u4275:
  4024  1180  1003               	clrc
  4025  1181  0DC4               	rlf	??_fround+2,f
  4026  1182  3EFF               	addlw	-1
  4027  1183  1D03               	skipz
  4028  1184  2980               	goto	u4275
  4029  1185  1003               	clrc
  4030  1186  0D44               	rlf	??_fround+2,w
  4031  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4032  1188  0084               	movwf	4
  4033  1189  120A  118A  200D  160A  118A  	fcall	stringdir
  4034  118E  00C5               	movwf	??_fround+3
  4035  118F  120A  118A  200D  160A  118A  	fcall	stringdir
  4036  1194  00C6               	movwf	??_fround+4
  4037  1195  120A  118A  200D  160A  118A  	fcall	stringdir
  4038  119A  00C7               	movwf	??_fround+5
  4039  119B  120A  118A  200D  160A  118A  	fcall	stringdir
  4040  11A0  00C8               	movwf	??_fround+6
  4041  11A1  0848               	movf	??_fround+6,w
  4042  11A2  00A7               	movwf	___flmul@b+3
  4043  11A3  0847               	movf	??_fround+5,w
  4044  11A4  00A6               	movwf	___flmul@b+2
  4045  11A5  0846               	movf	??_fround+4,w
  4046  11A6  00A5               	movwf	___flmul@b+1
  4047  11A7  0845               	movf	??_fround+3,w
  4048  11A8  00A4               	movwf	___flmul@b
  4049  11A9  084C               	movf	_fround$1138+3,w
  4050  11AA  00AB               	movwf	___flmul@a+3
  4051  11AB  084B               	movf	_fround$1138+2,w
  4052  11AC  00AA               	movwf	___flmul@a+2
  4053  11AD  084A               	movf	_fround$1138+1,w
  4054  11AE  00A9               	movwf	___flmul@a+1
  4055  11AF  0849               	movf	_fround$1138,w
  4056  11B0  00A8               	movwf	___flmul@a
  4057  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  4058  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4059  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4060  11B8  0827               	movf	?___flmul+3,w
  4061  11B9  00C1               	movwf	?_fround+3
  4062  11BA  0826               	movf	?___flmul+2,w
  4063  11BB  00C0               	movwf	?_fround+2
  4064  11BC  0825               	movf	?___flmul+1,w
  4065  11BD  00BF               	movwf	?_fround+1
  4066  11BE  0824               	movf	?___flmul,w
  4067  11BF  00BE               	movwf	?_fround
  4068  11C0  2AB5               	goto	l334
  4069  11C1                     l2952:
  4070  11C1  300B               	movlw	11
  4071  11C2  0251               	subwf	fround@prec,w
  4072  11C3  1C03               	skipc
  4073  11C4  29C6               	goto	u4281
  4074  11C5  29C7               	goto	u4280
  4075  11C6                     u4281:
  4076  11C6  2A72               	goto	l2958
  4077  11C7                     u4280:
  4078  11C7                     l2954:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4081  11C7  303F               	movlw	63
  4082  11C8  00A7               	movwf	___flmul@b+3
  4083  11C9  3000               	movlw	0
  4084  11CA  00A6               	movwf	___flmul@b+2
  4085  11CB  3000               	movlw	0
  4086  11CC  00A5               	movwf	___flmul@b+1
  4087  11CD  3000               	movlw	0
  4088  11CE  00A4               	movwf	___flmul@b
  4089  11CF  300A               	movlw	10
  4090  11D0  00F6               	movwf	___lwdiv@divisor
  4091  11D1  3000               	movlw	0
  4092  11D2  00F7               	movwf	___lwdiv@divisor+1
  4093  11D3  0851               	movf	fround@prec,w
  4094  11D4  00C2               	movwf	??_fround
  4095  11D5  01C3               	clrf	??_fround+1
  4096  11D6  0842               	movf	??_fround,w
  4097  11D7  00F8               	movwf	___lwdiv@dividend
  4098  11D8  0843               	movf	??_fround+1,w
  4099  11D9  00F9               	movwf	___lwdiv@dividend+1
  4100  11DA  160A  158A  23B1  160A  118A  	fcall	___lwdiv
  4101  11DF  0876               	movf	?___lwdiv,w
  4102  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  4103  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  4104  11E2  00C4               	movwf	??_fround+2
  4105  11E3  3001               	movlw	1
  4106  11E4                     u4295:
  4107  11E4  1003               	clrc
  4108  11E5  0DC4               	rlf	??_fround+2,f
  4109  11E6  3EFF               	addlw	-1
  4110  11E7  1D03               	skipz
  4111  11E8  29E4               	goto	u4295
  4112  11E9  1003               	clrc
  4113  11EA  0D44               	rlf	??_fround+2,w
  4114  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4115  11EC  0084               	movwf	4
  4116  11ED  120A  118A  200D  160A  118A  	fcall	stringdir
  4117  11F2  00C5               	movwf	??_fround+3
  4118  11F3  120A  118A  200D  160A  118A  	fcall	stringdir
  4119  11F8  00C6               	movwf	??_fround+4
  4120  11F9  120A  118A  200D  160A  118A  	fcall	stringdir
  4121  11FE  00C7               	movwf	??_fround+5
  4122  11FF  120A  118A  200D  160A  118A  	fcall	stringdir
  4123  1204  00C8               	movwf	??_fround+6
  4124  1205  0848               	movf	??_fround+6,w
  4125  1206  00AB               	movwf	___flmul@a+3
  4126  1207  0847               	movf	??_fround+5,w
  4127  1208  00AA               	movwf	___flmul@a+2
  4128  1209  0846               	movf	??_fround+4,w
  4129  120A  00A9               	movwf	___flmul@a+1
  4130  120B  0845               	movf	??_fround+3,w
  4131  120C  00A8               	movwf	___flmul@a
  4132  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  4133  1212  1283               	bcf	3,5	;RP0=0, select bank0
  4134  1213  1303               	bcf	3,6	;RP1=0, select bank0
  4135  1214  0827               	movf	?___flmul+3,w
  4136  1215  00D0               	movwf	_fround$1137+3
  4137  1216  0826               	movf	?___flmul+2,w
  4138  1217  00CF               	movwf	_fround$1137+2
  4139  1218  0825               	movf	?___flmul+1,w
  4140  1219  00CE               	movwf	_fround$1137+1
  4141  121A  0824               	movf	?___flmul,w
  4142  121B  00CD               	movwf	_fround$1137
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4145  121C  300A               	movlw	10
  4146  121D  00F0               	movwf	___lwmod@divisor
  4147  121E  3000               	movlw	0
  4148  121F  00F1               	movwf	___lwmod@divisor+1
  4149  1220  0851               	movf	fround@prec,w
  4150  1221  00C2               	movwf	??_fround
  4151  1222  01C3               	clrf	??_fround+1
  4152  1223  0842               	movf	??_fround,w
  4153  1224  00F2               	movwf	___lwmod@dividend
  4154  1225  0843               	movf	??_fround+1,w
  4155  1226  00F3               	movwf	___lwmod@dividend+1
  4156  1227  160A  158A  22F7  160A  118A  	fcall	___lwmod
  4157  122C  0870               	movf	?___lwmod,w
  4158  122D  1283               	bcf	3,5	;RP0=0, select bank0
  4159  122E  1303               	bcf	3,6	;RP1=0, select bank0
  4160  122F  00C4               	movwf	??_fround+2
  4161  1230  3001               	movlw	1
  4162  1231                     u4305:
  4163  1231  1003               	clrc
  4164  1232  0DC4               	rlf	??_fround+2,f
  4165  1233  3EFF               	addlw	-1
  4166  1234  1D03               	skipz
  4167  1235  2A31               	goto	u4305
  4168  1236  1003               	clrc
  4169  1237  0D44               	rlf	??_fround+2,w
  4170  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4171  1239  0084               	movwf	4
  4172  123A  120A  118A  200D  160A  118A  	fcall	stringdir
  4173  123F  00C5               	movwf	??_fround+3
  4174  1240  120A  118A  200D  160A  118A  	fcall	stringdir
  4175  1245  00C6               	movwf	??_fround+4
  4176  1246  120A  118A  200D  160A  118A  	fcall	stringdir
  4177  124B  00C7               	movwf	??_fround+5
  4178  124C  120A  118A  200D  160A  118A  	fcall	stringdir
  4179  1251  00C8               	movwf	??_fround+6
  4180  1252  0848               	movf	??_fround+6,w
  4181  1253  00A7               	movwf	___flmul@b+3
  4182  1254  0847               	movf	??_fround+5,w
  4183  1255  00A6               	movwf	___flmul@b+2
  4184  1256  0846               	movf	??_fround+4,w
  4185  1257  00A5               	movwf	___flmul@b+1
  4186  1258  0845               	movf	??_fround+3,w
  4187  1259  00A4               	movwf	___flmul@b
  4188  125A  0850               	movf	_fround$1137+3,w
  4189  125B  00AB               	movwf	___flmul@a+3
  4190  125C  084F               	movf	_fround$1137+2,w
  4191  125D  00AA               	movwf	___flmul@a+2
  4192  125E  084E               	movf	_fround$1137+1,w
  4193  125F  00A9               	movwf	___flmul@a+1
  4194  1260  084D               	movf	_fround$1137,w
  4195  1261  00A8               	movwf	___flmul@a
  4196  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  4197  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4198  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4199  1269  0827               	movf	?___flmul+3,w
  4200  126A  00C1               	movwf	?_fround+3
  4201  126B  0826               	movf	?___flmul+2,w
  4202  126C  00C0               	movwf	?_fround+2
  4203  126D  0825               	movf	?___flmul+1,w
  4204  126E  00BF               	movwf	?_fround+1
  4205  126F  0824               	movf	?___flmul,w
  4206  1270  00BE               	movwf	?_fround
  4207  1271  2AB5               	goto	l334
  4208  1272                     l2958:
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4211  1272  303F               	movlw	63
  4212  1273  00A7               	movwf	___flmul@b+3
  4213  1274  3000               	movlw	0
  4214  1275  00A6               	movwf	___flmul@b+2
  4215  1276  3000               	movlw	0
  4216  1277  00A5               	movwf	___flmul@b+1
  4217  1278  3000               	movlw	0
  4218  1279  00A4               	movwf	___flmul@b
  4219  127A  0851               	movf	fround@prec,w
  4220  127B  00C2               	movwf	??_fround
  4221  127C  3001               	movlw	1
  4222  127D                     u4315:
  4223  127D  1003               	clrc
  4224  127E  0DC2               	rlf	??_fround,f
  4225  127F  3EFF               	addlw	-1
  4226  1280  1D03               	skipz
  4227  1281  2A7D               	goto	u4315
  4228  1282  1003               	clrc
  4229  1283  0D42               	rlf	??_fround,w
  4230  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4231  1285  0084               	movwf	4
  4232  1286  120A  118A  200D  160A  118A  	fcall	stringdir
  4233  128B  00C3               	movwf	??_fround+1
  4234  128C  120A  118A  200D  160A  118A  	fcall	stringdir
  4235  1291  00C4               	movwf	??_fround+2
  4236  1292  120A  118A  200D  160A  118A  	fcall	stringdir
  4237  1297  00C5               	movwf	??_fround+3
  4238  1298  120A  118A  200D  160A  118A  	fcall	stringdir
  4239  129D  00C6               	movwf	??_fround+4
  4240  129E  0846               	movf	??_fround+4,w
  4241  129F  00AB               	movwf	___flmul@a+3
  4242  12A0  0845               	movf	??_fround+3,w
  4243  12A1  00AA               	movwf	___flmul@a+2
  4244  12A2  0844               	movf	??_fround+2,w
  4245  12A3  00A9               	movwf	___flmul@a+1
  4246  12A4  0843               	movf	??_fround+1,w
  4247  12A5  00A8               	movwf	___flmul@a
  4248  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  4249  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4250  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4251  12AD  0827               	movf	?___flmul+3,w
  4252  12AE  00C1               	movwf	?_fround+3
  4253  12AF  0826               	movf	?___flmul+2,w
  4254  12B0  00C0               	movwf	?_fround+2
  4255  12B1  0825               	movf	?___flmul+1,w
  4256  12B2  00BF               	movwf	?_fround+1
  4257  12B3  0824               	movf	?___flmul,w
  4258  12B4  00BE               	movwf	?_fround
  4259  12B5                     l334:
  4260  12B5  0008               	return
  4261  12B6                     __end_of_fround:
  4262                           
  4263                           	psect	text8
  4264  1AF7                     __ptext8:	
  4265 ;; *************** function ___lwmod *****************
  4266 ;; Defined at:
  4267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  divisor         2    0[COMMON] unsigned int 
  4270 ;;  dividend        2    2[COMMON] unsigned int 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  counter         1    5[COMMON] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  2    0[COMMON] unsigned int 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         4       0       0       0       0
  4283 ;;      Locals:         1       0       0       0       0
  4284 ;;      Temps:          1       0       0       0       0
  4285 ;;      Totals:         6       0       0       0       0
  4286 ;;Total ram usage:        6 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_fround
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function ___lwmod
  4297  1AF7                     ___lwmod:
  4298  1AF7                     l2538:	
  4299                           ;incstack = 0
  4300                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4301                           
  4302  1AF7  0870               	movf	___lwmod@divisor,w
  4303  1AF8  0471               	iorwf	___lwmod@divisor+1,w
  4304  1AF9  1903               	btfsc	3,2
  4305  1AFA  2AFC               	goto	u3331
  4306  1AFB  2AFD               	goto	u3330
  4307  1AFC                     u3331:
  4308  1AFC  2B2C               	goto	l2556
  4309  1AFD                     u3330:
  4310  1AFD                     l2540:
  4311  1AFD  01F5               	clrf	___lwmod@counter
  4312  1AFE  0AF5               	incf	___lwmod@counter,f
  4313  1AFF  2B0B               	goto	l2546
  4314  1B00                     l2542:
  4315  1B00  3001               	movlw	1
  4316  1B01                     u3345:
  4317  1B01  1003               	clrc
  4318  1B02  0DF0               	rlf	___lwmod@divisor,f
  4319  1B03  0DF1               	rlf	___lwmod@divisor+1,f
  4320  1B04  3EFF               	addlw	-1
  4321  1B05  1D03               	skipz
  4322  1B06  2B01               	goto	u3345
  4323  1B07                     l2544:
  4324  1B07  3001               	movlw	1
  4325  1B08  00F4               	movwf	??___lwmod
  4326  1B09  0874               	movf	??___lwmod,w
  4327  1B0A  07F5               	addwf	___lwmod@counter,f
  4328  1B0B                     l2546:
  4329  1B0B  1FF1               	btfss	___lwmod@divisor+1,7
  4330  1B0C  2B0E               	goto	u3351
  4331  1B0D  2B0F               	goto	u3350
  4332  1B0E                     u3351:
  4333  1B0E  2B00               	goto	l2542
  4334  1B0F                     u3350:
  4335  1B0F                     l2548:
  4336  1B0F  0871               	movf	___lwmod@divisor+1,w
  4337  1B10  0273               	subwf	___lwmod@dividend+1,w
  4338  1B11  1D03               	skipz
  4339  1B12  2B15               	goto	u3365
  4340  1B13  0870               	movf	___lwmod@divisor,w
  4341  1B14  0272               	subwf	___lwmod@dividend,w
  4342  1B15                     u3365:
  4343  1B15  1C03               	skipc
  4344  1B16  2B18               	goto	u3361
  4345  1B17  2B19               	goto	u3360
  4346  1B18                     u3361:
  4347  1B18  2B1F               	goto	l2552
  4348  1B19                     u3360:
  4349  1B19                     l2550:
  4350  1B19  0870               	movf	___lwmod@divisor,w
  4351  1B1A  02F2               	subwf	___lwmod@dividend,f
  4352  1B1B  0871               	movf	___lwmod@divisor+1,w
  4353  1B1C  1C03               	skipc
  4354  1B1D  03F3               	decf	___lwmod@dividend+1,f
  4355  1B1E  02F3               	subwf	___lwmod@dividend+1,f
  4356  1B1F                     l2552:
  4357  1B1F  3001               	movlw	1
  4358  1B20                     u3375:
  4359  1B20  1003               	clrc
  4360  1B21  0CF1               	rrf	___lwmod@divisor+1,f
  4361  1B22  0CF0               	rrf	___lwmod@divisor,f
  4362  1B23  3EFF               	addlw	-1
  4363  1B24  1D03               	skipz
  4364  1B25  2B20               	goto	u3375
  4365  1B26                     l2554:
  4366  1B26  3001               	movlw	1
  4367  1B27  02F5               	subwf	___lwmod@counter,f
  4368  1B28  1D03               	btfss	3,2
  4369  1B29  2B2B               	goto	u3381
  4370  1B2A  2B2C               	goto	u3380
  4371  1B2B                     u3381:
  4372  1B2B  2B0F               	goto	l2548
  4373  1B2C                     u3380:
  4374  1B2C                     l2556:
  4375  1B2C  0873               	movf	___lwmod@dividend+1,w
  4376  1B2D  00F1               	movwf	?___lwmod+1
  4377  1B2E  0872               	movf	___lwmod@dividend,w
  4378  1B2F  00F0               	movwf	?___lwmod
  4379  1B30                     l753:
  4380  1B30  0008               	return
  4381  1B31                     __end_of___lwmod:
  4382                           
  4383                           	psect	text9
  4384  1BB1                     __ptext9:	
  4385 ;; *************** function ___lwdiv *****************
  4386 ;; Defined at:
  4387 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  divisor         2    6[COMMON] unsigned int 
  4390 ;;  dividend        2    8[COMMON] unsigned int 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  quotient        2   11[COMMON] unsigned int 
  4393 ;;  counter         1   13[COMMON] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  2    6[COMMON] unsigned int 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         4       0       0       0       0
  4404 ;;      Locals:         3       0       0       0       0
  4405 ;;      Temps:          1       0       0       0       0
  4406 ;;      Totals:         8       0       0       0       0
  4407 ;;Total ram usage:        8 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_fround
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function ___lwdiv
  4418  1BB1                     ___lwdiv:
  4419  1BB1                     l2512:	
  4420                           ;incstack = 0
  4421                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4422                           
  4423  1BB1  01FB               	clrf	___lwdiv@quotient
  4424  1BB2  01FC               	clrf	___lwdiv@quotient+1
  4425  1BB3                     l2514:
  4426  1BB3  0876               	movf	___lwdiv@divisor,w
  4427  1BB4  0477               	iorwf	___lwdiv@divisor+1,w
  4428  1BB5  1903               	btfsc	3,2
  4429  1BB6  2BB8               	goto	u3261
  4430  1BB7  2BB9               	goto	u3260
  4431  1BB8                     u3261:
  4432  1BB8  2BF0               	goto	l2534
  4433  1BB9                     u3260:
  4434  1BB9                     l2516:
  4435  1BB9  01FD               	clrf	___lwdiv@counter
  4436  1BBA  0AFD               	incf	___lwdiv@counter,f
  4437  1BBB  2BC7               	goto	l2522
  4438  1BBC                     l2518:
  4439  1BBC  3001               	movlw	1
  4440  1BBD                     u3275:
  4441  1BBD  1003               	clrc
  4442  1BBE  0DF6               	rlf	___lwdiv@divisor,f
  4443  1BBF  0DF7               	rlf	___lwdiv@divisor+1,f
  4444  1BC0  3EFF               	addlw	-1
  4445  1BC1  1D03               	skipz
  4446  1BC2  2BBD               	goto	u3275
  4447  1BC3                     l2520:
  4448  1BC3  3001               	movlw	1
  4449  1BC4  00FA               	movwf	??___lwdiv
  4450  1BC5  087A               	movf	??___lwdiv,w
  4451  1BC6  07FD               	addwf	___lwdiv@counter,f
  4452  1BC7                     l2522:
  4453  1BC7  1FF7               	btfss	___lwdiv@divisor+1,7
  4454  1BC8  2BCA               	goto	u3281
  4455  1BC9  2BCB               	goto	u3280
  4456  1BCA                     u3281:
  4457  1BCA  2BBC               	goto	l2518
  4458  1BCB                     u3280:
  4459  1BCB                     l2524:
  4460  1BCB  3001               	movlw	1
  4461  1BCC                     u3295:
  4462  1BCC  1003               	clrc
  4463  1BCD  0DFB               	rlf	___lwdiv@quotient,f
  4464  1BCE  0DFC               	rlf	___lwdiv@quotient+1,f
  4465  1BCF  3EFF               	addlw	-1
  4466  1BD0  1D03               	skipz
  4467  1BD1  2BCC               	goto	u3295
  4468  1BD2  0877               	movf	___lwdiv@divisor+1,w
  4469  1BD3  0279               	subwf	___lwdiv@dividend+1,w
  4470  1BD4  1D03               	skipz
  4471  1BD5  2BD8               	goto	u3305
  4472  1BD6  0876               	movf	___lwdiv@divisor,w
  4473  1BD7  0278               	subwf	___lwdiv@dividend,w
  4474  1BD8                     u3305:
  4475  1BD8  1C03               	skipc
  4476  1BD9  2BDB               	goto	u3301
  4477  1BDA  2BDC               	goto	u3300
  4478  1BDB                     u3301:
  4479  1BDB  2BE3               	goto	l2530
  4480  1BDC                     u3300:
  4481  1BDC                     l2526:
  4482  1BDC  0876               	movf	___lwdiv@divisor,w
  4483  1BDD  02F8               	subwf	___lwdiv@dividend,f
  4484  1BDE  0877               	movf	___lwdiv@divisor+1,w
  4485  1BDF  1C03               	skipc
  4486  1BE0  03F9               	decf	___lwdiv@dividend+1,f
  4487  1BE1  02F9               	subwf	___lwdiv@dividend+1,f
  4488  1BE2                     l2528:
  4489  1BE2  147B               	bsf	___lwdiv@quotient,0
  4490  1BE3                     l2530:
  4491  1BE3  3001               	movlw	1
  4492  1BE4                     u3315:
  4493  1BE4  1003               	clrc
  4494  1BE5  0CF7               	rrf	___lwdiv@divisor+1,f
  4495  1BE6  0CF6               	rrf	___lwdiv@divisor,f
  4496  1BE7  3EFF               	addlw	-1
  4497  1BE8  1D03               	skipz
  4498  1BE9  2BE4               	goto	u3315
  4499  1BEA                     l2532:
  4500  1BEA  3001               	movlw	1
  4501  1BEB  02FD               	subwf	___lwdiv@counter,f
  4502  1BEC  1D03               	btfss	3,2
  4503  1BED  2BEF               	goto	u3321
  4504  1BEE  2BF0               	goto	u3320
  4505  1BEF                     u3321:
  4506  1BEF  2BCB               	goto	l2524
  4507  1BF0                     u3320:
  4508  1BF0                     l2534:
  4509  1BF0  087C               	movf	___lwdiv@quotient+1,w
  4510  1BF1  00F7               	movwf	?___lwdiv+1
  4511  1BF2  087B               	movf	___lwdiv@quotient,w
  4512  1BF3  00F6               	movwf	?___lwdiv
  4513  1BF4                     l743:
  4514  1BF4  0008               	return
  4515  1BF5                     __end_of___lwdiv:
  4516                           
  4517                           	psect	text10
  4518  0C9F                     __ptext10:	
  4519 ;; *************** function ___flmul *****************
  4520 ;; Defined at:
  4521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  b               4    4[BANK0 ] unsigned int 
  4524 ;;  a               4    8[BANK0 ] unsigned int 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  prod            4   24[BANK0 ] struct .
  4527 ;;  grs             4   18[BANK0 ] unsigned long 
  4528 ;;  temp            2   28[BANK0 ] struct .
  4529 ;;  bexp            1   23[BANK0 ] unsigned char 
  4530 ;;  aexp            1   22[BANK0 ] unsigned char 
  4531 ;;  sign            1   17[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  4    4[BANK0 ] unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       8       0       0       0
  4542 ;;      Locals:         0      13       0       0       0
  4543 ;;      Temps:          0       5       0       0       0
  4544 ;;      Totals:         0      26       0       0       0
  4545 ;;Total ram usage:       26 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    1
  4548 ;; This function calls:
  4549 ;;		__Umul8_16
  4550 ;; This function is called by:
  4551 ;;		_fround
  4552 ;;		_scale
  4553 ;;		_sprintf
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           
  4558                           ;psect for function ___flmul
  4559  0C9F                     ___flmul:
  4560  0C9F                     l2754:	
  4561                           ;incstack = 0
  4562                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4563                           
  4564  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0CA1  0827               	movf	___flmul@b+3,w
  4567  0CA2  3980               	andlw	128
  4568  0CA3  00AC               	movwf	??___flmul
  4569  0CA4  082C               	movf	??___flmul,w
  4570  0CA5  00B1               	movwf	___flmul@sign
  4571  0CA6                     l2756:
  4572  0CA6  0827               	movf	___flmul@b+3,w
  4573  0CA7  00AC               	movwf	??___flmul
  4574  0CA8  072C               	addwf	??___flmul,w
  4575  0CA9  00AD               	movwf	??___flmul+1
  4576  0CAA  082D               	movf	??___flmul+1,w
  4577  0CAB  00B7               	movwf	___flmul@bexp
  4578  0CAC                     l2758:
  4579  0CAC  1FA6               	btfss	___flmul@b+2,7
  4580  0CAD  2CAF               	goto	u3851
  4581  0CAE  2CB0               	goto	u3850
  4582  0CAF                     u3851:
  4583  0CAF  2CB1               	goto	l2762
  4584  0CB0                     u3850:
  4585  0CB0                     l2760:
  4586  0CB0  1437               	bsf	___flmul@bexp,0
  4587  0CB1                     l2762:
  4588  0CB1  0837               	movf	___flmul@bexp,w
  4589  0CB2  1903               	btfsc	3,2
  4590  0CB3  2CB5               	goto	u3861
  4591  0CB4  2CB6               	goto	u3860
  4592  0CB5                     u3861:
  4593  0CB5  2CC5               	goto	l2770
  4594  0CB6                     u3860:
  4595  0CB6                     l2764:
  4596  0CB6  0A37               	incf	___flmul@bexp,w
  4597  0CB7  1D03               	btfss	3,2
  4598  0CB8  2CBA               	goto	u3871
  4599  0CB9  2CBB               	goto	u3870
  4600  0CBA                     u3871:
  4601  0CBA  2CC3               	goto	l2768
  4602  0CBB                     u3870:
  4603  0CBB                     l2766:
  4604  0CBB  3000               	movlw	0
  4605  0CBC  00A7               	movwf	___flmul@b+3
  4606  0CBD  3000               	movlw	0
  4607  0CBE  00A6               	movwf	___flmul@b+2
  4608  0CBF  3000               	movlw	0
  4609  0CC0  00A5               	movwf	___flmul@b+1
  4610  0CC1  3000               	movlw	0
  4611  0CC2  00A4               	movwf	___flmul@b
  4612  0CC3                     l2768:
  4613  0CC3  17A6               	bsf	___flmul@b+2,7
  4614  0CC4  2CCD               	goto	l2772
  4615  0CC5                     l2770:
  4616  0CC5  3000               	movlw	0
  4617  0CC6  00A7               	movwf	___flmul@b+3
  4618  0CC7  3000               	movlw	0
  4619  0CC8  00A6               	movwf	___flmul@b+2
  4620  0CC9  3000               	movlw	0
  4621  0CCA  00A5               	movwf	___flmul@b+1
  4622  0CCB  3000               	movlw	0
  4623  0CCC  00A4               	movwf	___flmul@b
  4624  0CCD                     l2772:
  4625  0CCD  082B               	movf	___flmul@a+3,w
  4626  0CCE  3980               	andlw	128
  4627  0CCF  00AC               	movwf	??___flmul
  4628  0CD0  082C               	movf	??___flmul,w
  4629  0CD1  06B1               	xorwf	___flmul@sign,f
  4630  0CD2                     l2774:
  4631  0CD2  082B               	movf	___flmul@a+3,w
  4632  0CD3  00AC               	movwf	??___flmul
  4633  0CD4  072C               	addwf	??___flmul,w
  4634  0CD5  00AD               	movwf	??___flmul+1
  4635  0CD6  082D               	movf	??___flmul+1,w
  4636  0CD7  00B6               	movwf	___flmul@aexp
  4637  0CD8                     l2776:
  4638  0CD8  1FAA               	btfss	___flmul@a+2,7
  4639  0CD9  2CDB               	goto	u3881
  4640  0CDA  2CDC               	goto	u3880
  4641  0CDB                     u3881:
  4642  0CDB  2CDD               	goto	l2780
  4643  0CDC                     u3880:
  4644  0CDC                     l2778:
  4645  0CDC  1436               	bsf	___flmul@aexp,0
  4646  0CDD                     l2780:
  4647  0CDD  0836               	movf	___flmul@aexp,w
  4648  0CDE  1903               	btfsc	3,2
  4649  0CDF  2CE1               	goto	u3891
  4650  0CE0  2CE2               	goto	u3890
  4651  0CE1                     u3891:
  4652  0CE1  2CF1               	goto	l2788
  4653  0CE2                     u3890:
  4654  0CE2                     l2782:
  4655  0CE2  0A36               	incf	___flmul@aexp,w
  4656  0CE3  1D03               	btfss	3,2
  4657  0CE4  2CE6               	goto	u3901
  4658  0CE5  2CE7               	goto	u3900
  4659  0CE6                     u3901:
  4660  0CE6  2CEF               	goto	l2786
  4661  0CE7                     u3900:
  4662  0CE7                     l2784:
  4663  0CE7  3000               	movlw	0
  4664  0CE8  00AB               	movwf	___flmul@a+3
  4665  0CE9  3000               	movlw	0
  4666  0CEA  00AA               	movwf	___flmul@a+2
  4667  0CEB  3000               	movlw	0
  4668  0CEC  00A9               	movwf	___flmul@a+1
  4669  0CED  3000               	movlw	0
  4670  0CEE  00A8               	movwf	___flmul@a
  4671  0CEF                     l2786:
  4672  0CEF  17AA               	bsf	___flmul@a+2,7
  4673  0CF0  2CF9               	goto	l2790
  4674  0CF1                     l2788:
  4675  0CF1  3000               	movlw	0
  4676  0CF2  00AB               	movwf	___flmul@a+3
  4677  0CF3  3000               	movlw	0
  4678  0CF4  00AA               	movwf	___flmul@a+2
  4679  0CF5  3000               	movlw	0
  4680  0CF6  00A9               	movwf	___flmul@a+1
  4681  0CF7  3000               	movlw	0
  4682  0CF8  00A8               	movwf	___flmul@a
  4683  0CF9                     l2790:
  4684  0CF9  0836               	movf	___flmul@aexp,w
  4685  0CFA  1903               	btfsc	3,2
  4686  0CFB  2CFD               	goto	u3911
  4687  0CFC  2CFE               	goto	u3910
  4688  0CFD                     u3911:
  4689  0CFD  2D03               	goto	l2794
  4690  0CFE                     u3910:
  4691  0CFE                     l2792:
  4692  0CFE  0837               	movf	___flmul@bexp,w
  4693  0CFF  1D03               	btfss	3,2
  4694  0D00  2D02               	goto	u3921
  4695  0D01  2D03               	goto	u3920
  4696  0D02                     u3921:
  4697  0D02  2D0C               	goto	l2798
  4698  0D03                     u3920:
  4699  0D03                     l2794:
  4700  0D03  3000               	movlw	0
  4701  0D04  00A7               	movwf	?___flmul+3
  4702  0D05  3000               	movlw	0
  4703  0D06  00A6               	movwf	?___flmul+2
  4704  0D07  3000               	movlw	0
  4705  0D08  00A5               	movwf	?___flmul+1
  4706  0D09  3000               	movlw	0
  4707  0D0A  00A4               	movwf	?___flmul
  4708  0D0B  2FFF               	goto	l860
  4709  0D0C                     l2798:
  4710  0D0C  0824               	movf	___flmul@b,w
  4711  0D0D  00AC               	movwf	??___flmul
  4712  0D0E  082C               	movf	??___flmul,w
  4713  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4714  0D10  082A               	movf	___flmul@a+2,w
  4715  0D11  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4716  0D16  0871               	movf	?__Umul8_16+1,w
  4717  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4718  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4719  0D19  00BD               	movwf	___flmul@temp+1
  4720  0D1A  0870               	movf	?__Umul8_16,w
  4721  0D1B  00BC               	movwf	___flmul@temp
  4722  0D1C                     l2800:
  4723  0D1C  083C               	movf	___flmul@temp,w
  4724  0D1D  00AC               	movwf	??___flmul
  4725  0D1E  01AD               	clrf	??___flmul+1
  4726  0D1F  01AE               	clrf	??___flmul+2
  4727  0D20  01AF               	clrf	??___flmul+3
  4728  0D21  082F               	movf	??___flmul+3,w
  4729  0D22  00B5               	movwf	___flmul@grs+3
  4730  0D23  082E               	movf	??___flmul+2,w
  4731  0D24  00B4               	movwf	___flmul@grs+2
  4732  0D25  082D               	movf	??___flmul+1,w
  4733  0D26  00B3               	movwf	___flmul@grs+1
  4734  0D27  082C               	movf	??___flmul,w
  4735  0D28  00B2               	movwf	___flmul@grs
  4736  0D29                     l2802:
  4737  0D29  083D               	movf	___flmul@temp+1,w
  4738  0D2A  00AC               	movwf	??___flmul
  4739  0D2B  01AD               	clrf	??___flmul+1
  4740  0D2C  01AE               	clrf	??___flmul+2
  4741  0D2D  01AF               	clrf	??___flmul+3
  4742  0D2E  082F               	movf	??___flmul+3,w
  4743  0D2F  00BB               	movwf	___flmul@prod+3
  4744  0D30  082E               	movf	??___flmul+2,w
  4745  0D31  00BA               	movwf	___flmul@prod+2
  4746  0D32  082D               	movf	??___flmul+1,w
  4747  0D33  00B9               	movwf	___flmul@prod+1
  4748  0D34  082C               	movf	??___flmul,w
  4749  0D35  00B8               	movwf	___flmul@prod
  4750  0D36  0825               	movf	___flmul@b+1,w
  4751  0D37  00AC               	movwf	??___flmul
  4752  0D38  082C               	movf	??___flmul,w
  4753  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4754  0D3A  0829               	movf	___flmul@a+1,w
  4755  0D3B  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4756  0D40  0871               	movf	?__Umul8_16+1,w
  4757  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4759  0D43  00BD               	movwf	___flmul@temp+1
  4760  0D44  0870               	movf	?__Umul8_16,w
  4761  0D45  00BC               	movwf	___flmul@temp
  4762  0D46                     l2804:
  4763  0D46  083C               	movf	___flmul@temp,w
  4764  0D47  00AC               	movwf	??___flmul
  4765  0D48  01AD               	clrf	??___flmul+1
  4766  0D49  01AE               	clrf	??___flmul+2
  4767  0D4A  01AF               	clrf	??___flmul+3
  4768  0D4B  082C               	movf	??___flmul,w
  4769  0D4C  07B2               	addwf	___flmul@grs,f
  4770  0D4D  082D               	movf	??___flmul+1,w
  4771  0D4E  1103               	clrz
  4772  0D4F  1803               	skipnc
  4773  0D50  3E01               	addlw	1
  4774  0D51  1903               	skipnz
  4775  0D52  2D54               	goto	u3931
  4776  0D53  07B3               	addwf	___flmul@grs+1,f
  4777  0D54                     u3931:
  4778  0D54  082E               	movf	??___flmul+2,w
  4779  0D55  1103               	clrz
  4780  0D56  1803               	skipnc
  4781  0D57  3E01               	addlw	1
  4782  0D58  1903               	skipnz
  4783  0D59  2D5B               	goto	u3932
  4784  0D5A  07B4               	addwf	___flmul@grs+2,f
  4785  0D5B                     u3932:
  4786  0D5B  082F               	movf	??___flmul+3,w
  4787  0D5C  1103               	clrz
  4788  0D5D  1803               	skipnc
  4789  0D5E  3E01               	addlw	1
  4790  0D5F  1903               	skipnz
  4791  0D60  2D62               	goto	u3933
  4792  0D61  07B5               	addwf	___flmul@grs+3,f
  4793  0D62                     u3933:
  4794  0D62                     l2806:
  4795  0D62  083D               	movf	___flmul@temp+1,w
  4796  0D63  00AC               	movwf	??___flmul
  4797  0D64  01AD               	clrf	??___flmul+1
  4798  0D65  01AE               	clrf	??___flmul+2
  4799  0D66  01AF               	clrf	??___flmul+3
  4800  0D67  082C               	movf	??___flmul,w
  4801  0D68  07B8               	addwf	___flmul@prod,f
  4802  0D69  082D               	movf	??___flmul+1,w
  4803  0D6A  1103               	clrz
  4804  0D6B  1803               	skipnc
  4805  0D6C  3E01               	addlw	1
  4806  0D6D  1903               	skipnz
  4807  0D6E  2D70               	goto	u3941
  4808  0D6F  07B9               	addwf	___flmul@prod+1,f
  4809  0D70                     u3941:
  4810  0D70  082E               	movf	??___flmul+2,w
  4811  0D71  1103               	clrz
  4812  0D72  1803               	skipnc
  4813  0D73  3E01               	addlw	1
  4814  0D74  1903               	skipnz
  4815  0D75  2D77               	goto	u3942
  4816  0D76  07BA               	addwf	___flmul@prod+2,f
  4817  0D77                     u3942:
  4818  0D77  082F               	movf	??___flmul+3,w
  4819  0D78  1103               	clrz
  4820  0D79  1803               	skipnc
  4821  0D7A  3E01               	addlw	1
  4822  0D7B  1903               	skipnz
  4823  0D7C  2D7E               	goto	u3943
  4824  0D7D  07BB               	addwf	___flmul@prod+3,f
  4825  0D7E                     u3943:
  4826  0D7E  0826               	movf	___flmul@b+2,w
  4827  0D7F  00AC               	movwf	??___flmul
  4828  0D80  082C               	movf	??___flmul,w
  4829  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4830  0D82  0828               	movf	___flmul@a,w
  4831  0D83  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4832  0D88  0871               	movf	?__Umul8_16+1,w
  4833  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0D8B  00BD               	movwf	___flmul@temp+1
  4836  0D8C  0870               	movf	?__Umul8_16,w
  4837  0D8D  00BC               	movwf	___flmul@temp
  4838  0D8E                     l2808:
  4839  0D8E  083C               	movf	___flmul@temp,w
  4840  0D8F  00AC               	movwf	??___flmul
  4841  0D90  01AD               	clrf	??___flmul+1
  4842  0D91  01AE               	clrf	??___flmul+2
  4843  0D92  01AF               	clrf	??___flmul+3
  4844  0D93  082C               	movf	??___flmul,w
  4845  0D94  07B2               	addwf	___flmul@grs,f
  4846  0D95  082D               	movf	??___flmul+1,w
  4847  0D96  1103               	clrz
  4848  0D97  1803               	skipnc
  4849  0D98  3E01               	addlw	1
  4850  0D99  1903               	skipnz
  4851  0D9A  2D9C               	goto	u3951
  4852  0D9B  07B3               	addwf	___flmul@grs+1,f
  4853  0D9C                     u3951:
  4854  0D9C  082E               	movf	??___flmul+2,w
  4855  0D9D  1103               	clrz
  4856  0D9E  1803               	skipnc
  4857  0D9F  3E01               	addlw	1
  4858  0DA0  1903               	skipnz
  4859  0DA1  2DA3               	goto	u3952
  4860  0DA2  07B4               	addwf	___flmul@grs+2,f
  4861  0DA3                     u3952:
  4862  0DA3  082F               	movf	??___flmul+3,w
  4863  0DA4  1103               	clrz
  4864  0DA5  1803               	skipnc
  4865  0DA6  3E01               	addlw	1
  4866  0DA7  1903               	skipnz
  4867  0DA8  2DAA               	goto	u3953
  4868  0DA9  07B5               	addwf	___flmul@grs+3,f
  4869  0DAA                     u3953:
  4870  0DAA                     l2810:
  4871  0DAA  083D               	movf	___flmul@temp+1,w
  4872  0DAB  00AC               	movwf	??___flmul
  4873  0DAC  01AD               	clrf	??___flmul+1
  4874  0DAD  01AE               	clrf	??___flmul+2
  4875  0DAE  01AF               	clrf	??___flmul+3
  4876  0DAF  082C               	movf	??___flmul,w
  4877  0DB0  07B8               	addwf	___flmul@prod,f
  4878  0DB1  082D               	movf	??___flmul+1,w
  4879  0DB2  1103               	clrz
  4880  0DB3  1803               	skipnc
  4881  0DB4  3E01               	addlw	1
  4882  0DB5  1903               	skipnz
  4883  0DB6  2DB8               	goto	u3961
  4884  0DB7  07B9               	addwf	___flmul@prod+1,f
  4885  0DB8                     u3961:
  4886  0DB8  082E               	movf	??___flmul+2,w
  4887  0DB9  1103               	clrz
  4888  0DBA  1803               	skipnc
  4889  0DBB  3E01               	addlw	1
  4890  0DBC  1903               	skipnz
  4891  0DBD  2DBF               	goto	u3962
  4892  0DBE  07BA               	addwf	___flmul@prod+2,f
  4893  0DBF                     u3962:
  4894  0DBF  082F               	movf	??___flmul+3,w
  4895  0DC0  1103               	clrz
  4896  0DC1  1803               	skipnc
  4897  0DC2  3E01               	addlw	1
  4898  0DC3  1903               	skipnz
  4899  0DC4  2DC6               	goto	u3963
  4900  0DC5  07BB               	addwf	___flmul@prod+3,f
  4901  0DC6                     u3963:
  4902  0DC6                     l2812:
  4903  0DC6  3008               	movlw	8
  4904  0DC7  00AC               	movwf	??___flmul
  4905  0DC8                     u3975:
  4906  0DC8  1003               	clrc
  4907  0DC9  0DB2               	rlf	___flmul@grs,f
  4908  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4909  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4910  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4911  0DCD  0BAC               	decfsz	??___flmul,f
  4912  0DCE  2DC8               	goto	u3975
  4913  0DCF                     l2814:
  4914  0DCF  0825               	movf	___flmul@b+1,w
  4915  0DD0  00AC               	movwf	??___flmul
  4916  0DD1  082C               	movf	??___flmul,w
  4917  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4918  0DD3  0828               	movf	___flmul@a,w
  4919  0DD4  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4920  0DD9  0871               	movf	?__Umul8_16+1,w
  4921  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4922  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4923  0DDC  00BD               	movwf	___flmul@temp+1
  4924  0DDD  0870               	movf	?__Umul8_16,w
  4925  0DDE  00BC               	movwf	___flmul@temp
  4926  0DDF                     l2816:
  4927  0DDF  083C               	movf	___flmul@temp,w
  4928  0DE0  00AC               	movwf	??___flmul
  4929  0DE1  083D               	movf	___flmul@temp+1,w
  4930  0DE2  00AD               	movwf	??___flmul+1
  4931  0DE3  01AE               	clrf	??___flmul+2
  4932  0DE4  01AF               	clrf	??___flmul+3
  4933  0DE5  082C               	movf	??___flmul,w
  4934  0DE6  07B2               	addwf	___flmul@grs,f
  4935  0DE7  082D               	movf	??___flmul+1,w
  4936  0DE8  1103               	clrz
  4937  0DE9  1803               	skipnc
  4938  0DEA  3E01               	addlw	1
  4939  0DEB  1903               	skipnz
  4940  0DEC  2DEE               	goto	u3981
  4941  0DED  07B3               	addwf	___flmul@grs+1,f
  4942  0DEE                     u3981:
  4943  0DEE  082E               	movf	??___flmul+2,w
  4944  0DEF  1103               	clrz
  4945  0DF0  1803               	skipnc
  4946  0DF1  3E01               	addlw	1
  4947  0DF2  1903               	skipnz
  4948  0DF3  2DF5               	goto	u3982
  4949  0DF4  07B4               	addwf	___flmul@grs+2,f
  4950  0DF5                     u3982:
  4951  0DF5  082F               	movf	??___flmul+3,w
  4952  0DF6  1103               	clrz
  4953  0DF7  1803               	skipnc
  4954  0DF8  3E01               	addlw	1
  4955  0DF9  1903               	skipnz
  4956  0DFA  2DFC               	goto	u3983
  4957  0DFB  07B5               	addwf	___flmul@grs+3,f
  4958  0DFC                     u3983:
  4959  0DFC                     l2818:
  4960  0DFC  0824               	movf	___flmul@b,w
  4961  0DFD  00AC               	movwf	??___flmul
  4962  0DFE  082C               	movf	??___flmul,w
  4963  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4964  0E00  0829               	movf	___flmul@a+1,w
  4965  0E01  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4966  0E06  0871               	movf	?__Umul8_16+1,w
  4967  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0E09  00BD               	movwf	___flmul@temp+1
  4970  0E0A  0870               	movf	?__Umul8_16,w
  4971  0E0B  00BC               	movwf	___flmul@temp
  4972  0E0C                     l2820:
  4973  0E0C  083C               	movf	___flmul@temp,w
  4974  0E0D  00AC               	movwf	??___flmul
  4975  0E0E  083D               	movf	___flmul@temp+1,w
  4976  0E0F  00AD               	movwf	??___flmul+1
  4977  0E10  01AE               	clrf	??___flmul+2
  4978  0E11  01AF               	clrf	??___flmul+3
  4979  0E12  082C               	movf	??___flmul,w
  4980  0E13  07B2               	addwf	___flmul@grs,f
  4981  0E14  082D               	movf	??___flmul+1,w
  4982  0E15  1103               	clrz
  4983  0E16  1803               	skipnc
  4984  0E17  3E01               	addlw	1
  4985  0E18  1903               	skipnz
  4986  0E19  2E1B               	goto	u3991
  4987  0E1A  07B3               	addwf	___flmul@grs+1,f
  4988  0E1B                     u3991:
  4989  0E1B  082E               	movf	??___flmul+2,w
  4990  0E1C  1103               	clrz
  4991  0E1D  1803               	skipnc
  4992  0E1E  3E01               	addlw	1
  4993  0E1F  1903               	skipnz
  4994  0E20  2E22               	goto	u3992
  4995  0E21  07B4               	addwf	___flmul@grs+2,f
  4996  0E22                     u3992:
  4997  0E22  082F               	movf	??___flmul+3,w
  4998  0E23  1103               	clrz
  4999  0E24  1803               	skipnc
  5000  0E25  3E01               	addlw	1
  5001  0E26  1903               	skipnz
  5002  0E27  2E29               	goto	u3993
  5003  0E28  07B5               	addwf	___flmul@grs+3,f
  5004  0E29                     u3993:
  5005  0E29                     l2822:
  5006  0E29  3008               	movlw	8
  5007  0E2A  00AC               	movwf	??___flmul
  5008  0E2B                     u4005:
  5009  0E2B  1003               	clrc
  5010  0E2C  0DB2               	rlf	___flmul@grs,f
  5011  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5012  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5013  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5014  0E30  0BAC               	decfsz	??___flmul,f
  5015  0E31  2E2B               	goto	u4005
  5016  0E32  0824               	movf	___flmul@b,w
  5017  0E33  00AC               	movwf	??___flmul
  5018  0E34  082C               	movf	??___flmul,w
  5019  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5020  0E36  0828               	movf	___flmul@a,w
  5021  0E37  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  5022  0E3C  0871               	movf	?__Umul8_16+1,w
  5023  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5024  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5025  0E3F  00BD               	movwf	___flmul@temp+1
  5026  0E40  0870               	movf	?__Umul8_16,w
  5027  0E41  00BC               	movwf	___flmul@temp
  5028  0E42                     l2824:
  5029  0E42  083C               	movf	___flmul@temp,w
  5030  0E43  00AC               	movwf	??___flmul
  5031  0E44  083D               	movf	___flmul@temp+1,w
  5032  0E45  00AD               	movwf	??___flmul+1
  5033  0E46  01AE               	clrf	??___flmul+2
  5034  0E47  01AF               	clrf	??___flmul+3
  5035  0E48  082C               	movf	??___flmul,w
  5036  0E49  07B2               	addwf	___flmul@grs,f
  5037  0E4A  082D               	movf	??___flmul+1,w
  5038  0E4B  1103               	clrz
  5039  0E4C  1803               	skipnc
  5040  0E4D  3E01               	addlw	1
  5041  0E4E  1903               	skipnz
  5042  0E4F  2E51               	goto	u4011
  5043  0E50  07B3               	addwf	___flmul@grs+1,f
  5044  0E51                     u4011:
  5045  0E51  082E               	movf	??___flmul+2,w
  5046  0E52  1103               	clrz
  5047  0E53  1803               	skipnc
  5048  0E54  3E01               	addlw	1
  5049  0E55  1903               	skipnz
  5050  0E56  2E58               	goto	u4012
  5051  0E57  07B4               	addwf	___flmul@grs+2,f
  5052  0E58                     u4012:
  5053  0E58  082F               	movf	??___flmul+3,w
  5054  0E59  1103               	clrz
  5055  0E5A  1803               	skipnc
  5056  0E5B  3E01               	addlw	1
  5057  0E5C  1903               	skipnz
  5058  0E5D  2E5F               	goto	u4013
  5059  0E5E  07B5               	addwf	___flmul@grs+3,f
  5060  0E5F                     u4013:
  5061  0E5F                     l2826:
  5062  0E5F  0825               	movf	___flmul@b+1,w
  5063  0E60  00AC               	movwf	??___flmul
  5064  0E61  082C               	movf	??___flmul,w
  5065  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5066  0E63  082A               	movf	___flmul@a+2,w
  5067  0E64  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  5068  0E69  0871               	movf	?__Umul8_16+1,w
  5069  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0E6C  00BD               	movwf	___flmul@temp+1
  5072  0E6D  0870               	movf	?__Umul8_16,w
  5073  0E6E  00BC               	movwf	___flmul@temp
  5074  0E6F  083C               	movf	___flmul@temp,w
  5075  0E70  00AC               	movwf	??___flmul
  5076  0E71  083D               	movf	___flmul@temp+1,w
  5077  0E72  00AD               	movwf	??___flmul+1
  5078  0E73  01AE               	clrf	??___flmul+2
  5079  0E74  01AF               	clrf	??___flmul+3
  5080  0E75  082C               	movf	??___flmul,w
  5081  0E76  07B8               	addwf	___flmul@prod,f
  5082  0E77  082D               	movf	??___flmul+1,w
  5083  0E78  1103               	clrz
  5084  0E79  1803               	skipnc
  5085  0E7A  3E01               	addlw	1
  5086  0E7B  1903               	skipnz
  5087  0E7C  2E7E               	goto	u4021
  5088  0E7D  07B9               	addwf	___flmul@prod+1,f
  5089  0E7E                     u4021:
  5090  0E7E  082E               	movf	??___flmul+2,w
  5091  0E7F  1103               	clrz
  5092  0E80  1803               	skipnc
  5093  0E81  3E01               	addlw	1
  5094  0E82  1903               	skipnz
  5095  0E83  2E85               	goto	u4022
  5096  0E84  07BA               	addwf	___flmul@prod+2,f
  5097  0E85                     u4022:
  5098  0E85  082F               	movf	??___flmul+3,w
  5099  0E86  1103               	clrz
  5100  0E87  1803               	skipnc
  5101  0E88  3E01               	addlw	1
  5102  0E89  1903               	skipnz
  5103  0E8A  2E8C               	goto	u4023
  5104  0E8B  07BB               	addwf	___flmul@prod+3,f
  5105  0E8C                     u4023:
  5106  0E8C                     l2828:
  5107  0E8C  0826               	movf	___flmul@b+2,w
  5108  0E8D  00AC               	movwf	??___flmul
  5109  0E8E  082C               	movf	??___flmul,w
  5110  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5111  0E90  0829               	movf	___flmul@a+1,w
  5112  0E91  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  5113  0E96  0871               	movf	?__Umul8_16+1,w
  5114  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0E99  00BD               	movwf	___flmul@temp+1
  5117  0E9A  0870               	movf	?__Umul8_16,w
  5118  0E9B  00BC               	movwf	___flmul@temp
  5119  0E9C                     l2830:
  5120  0E9C  083C               	movf	___flmul@temp,w
  5121  0E9D  00AC               	movwf	??___flmul
  5122  0E9E  083D               	movf	___flmul@temp+1,w
  5123  0E9F  00AD               	movwf	??___flmul+1
  5124  0EA0  01AE               	clrf	??___flmul+2
  5125  0EA1  01AF               	clrf	??___flmul+3
  5126  0EA2  082C               	movf	??___flmul,w
  5127  0EA3  07B8               	addwf	___flmul@prod,f
  5128  0EA4  082D               	movf	??___flmul+1,w
  5129  0EA5  1103               	clrz
  5130  0EA6  1803               	skipnc
  5131  0EA7  3E01               	addlw	1
  5132  0EA8  1903               	skipnz
  5133  0EA9  2EAB               	goto	u4031
  5134  0EAA  07B9               	addwf	___flmul@prod+1,f
  5135  0EAB                     u4031:
  5136  0EAB  082E               	movf	??___flmul+2,w
  5137  0EAC  1103               	clrz
  5138  0EAD  1803               	skipnc
  5139  0EAE  3E01               	addlw	1
  5140  0EAF  1903               	skipnz
  5141  0EB0  2EB2               	goto	u4032
  5142  0EB1  07BA               	addwf	___flmul@prod+2,f
  5143  0EB2                     u4032:
  5144  0EB2  082F               	movf	??___flmul+3,w
  5145  0EB3  1103               	clrz
  5146  0EB4  1803               	skipnc
  5147  0EB5  3E01               	addlw	1
  5148  0EB6  1903               	skipnz
  5149  0EB7  2EB9               	goto	u4033
  5150  0EB8  07BB               	addwf	___flmul@prod+3,f
  5151  0EB9                     u4033:
  5152  0EB9  0826               	movf	___flmul@b+2,w
  5153  0EBA  00AC               	movwf	??___flmul
  5154  0EBB  082C               	movf	??___flmul,w
  5155  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5156  0EBD  082A               	movf	___flmul@a+2,w
  5157  0EBE  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  5158  0EC3  0871               	movf	?__Umul8_16+1,w
  5159  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5160  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5161  0EC6  00BD               	movwf	___flmul@temp+1
  5162  0EC7  0870               	movf	?__Umul8_16,w
  5163  0EC8  00BC               	movwf	___flmul@temp
  5164  0EC9                     l2832:
  5165  0EC9  083C               	movf	___flmul@temp,w
  5166  0ECA  00AC               	movwf	??___flmul
  5167  0ECB  083D               	movf	___flmul@temp+1,w
  5168  0ECC  00AD               	movwf	??___flmul+1
  5169  0ECD  01AE               	clrf	??___flmul+2
  5170  0ECE  01AF               	clrf	??___flmul+3
  5171  0ECF  3008               	movlw	8
  5172  0ED0                     u4045:
  5173  0ED0  1003               	clrc
  5174  0ED1  0DAC               	rlf	??___flmul,f
  5175  0ED2  0DAD               	rlf	??___flmul+1,f
  5176  0ED3  0DAE               	rlf	??___flmul+2,f
  5177  0ED4  0DAF               	rlf	??___flmul+3,f
  5178  0ED5                     u4040:
  5179  0ED5  3EFF               	addlw	-1
  5180  0ED6  1D03               	skipz
  5181  0ED7  2ED0               	goto	u4045
  5182  0ED8  082C               	movf	??___flmul,w
  5183  0ED9  07B8               	addwf	___flmul@prod,f
  5184  0EDA  082D               	movf	??___flmul+1,w
  5185  0EDB  1103               	clrz
  5186  0EDC  1803               	skipnc
  5187  0EDD  3E01               	addlw	1
  5188  0EDE  1903               	skipnz
  5189  0EDF  2EE1               	goto	u4051
  5190  0EE0  07B9               	addwf	___flmul@prod+1,f
  5191  0EE1                     u4051:
  5192  0EE1  082E               	movf	??___flmul+2,w
  5193  0EE2  1103               	clrz
  5194  0EE3  1803               	skipnc
  5195  0EE4  3E01               	addlw	1
  5196  0EE5  1903               	skipnz
  5197  0EE6  2EE8               	goto	u4052
  5198  0EE7  07BA               	addwf	___flmul@prod+2,f
  5199  0EE8                     u4052:
  5200  0EE8  082F               	movf	??___flmul+3,w
  5201  0EE9  1103               	clrz
  5202  0EEA  1803               	skipnc
  5203  0EEB  3E01               	addlw	1
  5204  0EEC  1903               	skipnz
  5205  0EED  2EEF               	goto	u4053
  5206  0EEE  07BB               	addwf	___flmul@prod+3,f
  5207  0EEF                     u4053:
  5208  0EEF                     l2834:
  5209  0EEF  0832               	movf	___flmul@grs,w
  5210  0EF0  00AC               	movwf	??___flmul
  5211  0EF1  0833               	movf	___flmul@grs+1,w
  5212  0EF2  00AD               	movwf	??___flmul+1
  5213  0EF3  0834               	movf	___flmul@grs+2,w
  5214  0EF4  00AE               	movwf	??___flmul+2
  5215  0EF5  0835               	movf	___flmul@grs+3,w
  5216  0EF6  00AF               	movwf	??___flmul+3
  5217  0EF7  3018               	movlw	24
  5218  0EF8                     u4065:
  5219  0EF8  1003               	clrc
  5220  0EF9  0CAF               	rrf	??___flmul+3,f
  5221  0EFA  0CAE               	rrf	??___flmul+2,f
  5222  0EFB  0CAD               	rrf	??___flmul+1,f
  5223  0EFC  0CAC               	rrf	??___flmul,f
  5224  0EFD                     u4060:
  5225  0EFD  3EFF               	addlw	-1
  5226  0EFE  1D03               	skipz
  5227  0EFF  2EF8               	goto	u4065
  5228  0F00  082C               	movf	??___flmul,w
  5229  0F01  07B8               	addwf	___flmul@prod,f
  5230  0F02  082D               	movf	??___flmul+1,w
  5231  0F03  1103               	clrz
  5232  0F04  1803               	skipnc
  5233  0F05  3E01               	addlw	1
  5234  0F06  1903               	skipnz
  5235  0F07  2F09               	goto	u4071
  5236  0F08  07B9               	addwf	___flmul@prod+1,f
  5237  0F09                     u4071:
  5238  0F09  082E               	movf	??___flmul+2,w
  5239  0F0A  1103               	clrz
  5240  0F0B  1803               	skipnc
  5241  0F0C  3E01               	addlw	1
  5242  0F0D  1903               	skipnz
  5243  0F0E  2F10               	goto	u4072
  5244  0F0F  07BA               	addwf	___flmul@prod+2,f
  5245  0F10                     u4072:
  5246  0F10  082F               	movf	??___flmul+3,w
  5247  0F11  1103               	clrz
  5248  0F12  1803               	skipnc
  5249  0F13  3E01               	addlw	1
  5250  0F14  1903               	skipnz
  5251  0F15  2F17               	goto	u4073
  5252  0F16  07BB               	addwf	___flmul@prod+3,f
  5253  0F17                     u4073:
  5254  0F17                     l2836:
  5255  0F17  3008               	movlw	8
  5256  0F18  00AC               	movwf	??___flmul
  5257  0F19                     u4085:
  5258  0F19  1003               	clrc
  5259  0F1A  0DB2               	rlf	___flmul@grs,f
  5260  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5261  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5262  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5263  0F1E  0BAC               	decfsz	??___flmul,f
  5264  0F1F  2F19               	goto	u4085
  5265  0F20                     l2838:
  5266  0F20  0837               	movf	___flmul@bexp,w
  5267  0F21  0736               	addwf	___flmul@aexp,w
  5268  0F22  00AC               	movwf	??___flmul
  5269  0F23  01AD               	clrf	??___flmul+1
  5270  0F24  0DAD               	rlf	??___flmul+1,f
  5271  0F25  082C               	movf	??___flmul,w
  5272  0F26  3E82               	addlw	130
  5273  0F27  00BC               	movwf	___flmul@temp
  5274  0F28  082D               	movf	??___flmul+1,w
  5275  0F29  1803               	skipnc
  5276  0F2A  3E01               	addlw	1
  5277  0F2B  3EFF               	addlw	255
  5278  0F2C  00BD               	movwf	___flmul@temp+1
  5279  0F2D  2F4B               	goto	l2850
  5280  0F2E                     l2840:
  5281  0F2E  3001               	movlw	1
  5282  0F2F  00AC               	movwf	??___flmul
  5283  0F30                     u4095:
  5284  0F30  1003               	clrc
  5285  0F31  0DB8               	rlf	___flmul@prod,f
  5286  0F32  0DB9               	rlf	___flmul@prod+1,f
  5287  0F33  0DBA               	rlf	___flmul@prod+2,f
  5288  0F34  0DBB               	rlf	___flmul@prod+3,f
  5289  0F35  0BAC               	decfsz	??___flmul,f
  5290  0F36  2F30               	goto	u4095
  5291  0F37                     l2842:
  5292  0F37  1FB5               	btfss	___flmul@grs+3,7
  5293  0F38  2F3A               	goto	u4101
  5294  0F39  2F3B               	goto	u4100
  5295  0F3A                     u4101:
  5296  0F3A  2F3C               	goto	l2846
  5297  0F3B                     u4100:
  5298  0F3B                     l2844:
  5299  0F3B  1438               	bsf	___flmul@prod,0
  5300  0F3C                     l2846:
  5301  0F3C  3001               	movlw	1
  5302  0F3D  00AC               	movwf	??___flmul
  5303  0F3E                     u4115:
  5304  0F3E  1003               	clrc
  5305  0F3F  0DB2               	rlf	___flmul@grs,f
  5306  0F40  0DB3               	rlf	___flmul@grs+1,f
  5307  0F41  0DB4               	rlf	___flmul@grs+2,f
  5308  0F42  0DB5               	rlf	___flmul@grs+3,f
  5309  0F43  0BAC               	decfsz	??___flmul,f
  5310  0F44  2F3E               	goto	u4115
  5311  0F45                     l2848:
  5312  0F45  30FF               	movlw	255
  5313  0F46  07BC               	addwf	___flmul@temp,f
  5314  0F47  1803               	skipnc
  5315  0F48  0ABD               	incf	___flmul@temp+1,f
  5316  0F49  30FF               	movlw	255
  5317  0F4A  07BD               	addwf	___flmul@temp+1,f
  5318  0F4B                     l2850:
  5319  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5320  0F4C  2F4E               	goto	u4121
  5321  0F4D  2F4F               	goto	u4120
  5322  0F4E                     u4121:
  5323  0F4E  2F2E               	goto	l2840
  5324  0F4F                     u4120:
  5325  0F4F                     l2852:
  5326  0F4F  01B6               	clrf	___flmul@aexp
  5327  0F50                     l2854:
  5328  0F50  1FB5               	btfss	___flmul@grs+3,7
  5329  0F51  2F53               	goto	u4131
  5330  0F52  2F54               	goto	u4130
  5331  0F53                     u4131:
  5332  0F53  2F70               	goto	l2862
  5333  0F54                     u4130:
  5334  0F54                     l2856:
  5335  0F54  30FF               	movlw	255
  5336  0F55  0532               	andwf	___flmul@grs,w
  5337  0F56  00AC               	movwf	??___flmul
  5338  0F57  30FF               	movlw	255
  5339  0F58  0533               	andwf	___flmul@grs+1,w
  5340  0F59  00AD               	movwf	??___flmul+1
  5341  0F5A  30FF               	movlw	255
  5342  0F5B  0534               	andwf	___flmul@grs+2,w
  5343  0F5C  00AE               	movwf	??___flmul+2
  5344  0F5D  307F               	movlw	127
  5345  0F5E  0535               	andwf	___flmul@grs+3,w
  5346  0F5F  00AF               	movwf	??___flmul+3
  5347  0F60  082F               	movf	??___flmul+3,w
  5348  0F61  042E               	iorwf	??___flmul+2,w
  5349  0F62  042D               	iorwf	??___flmul+1,w
  5350  0F63  042C               	iorwf	??___flmul,w
  5351  0F64  1903               	skipnz
  5352  0F65  2F67               	goto	u4141
  5353  0F66  2F68               	goto	u4140
  5354  0F67                     u4141:
  5355  0F67  2F6B               	goto	l866
  5356  0F68                     u4140:
  5357  0F68                     l2858:
  5358  0F68  01B6               	clrf	___flmul@aexp
  5359  0F69  0AB6               	incf	___flmul@aexp,f
  5360  0F6A  2F70               	goto	l2862
  5361  0F6B                     l866:
  5362  0F6B  1C38               	btfss	___flmul@prod,0
  5363  0F6C  2F6E               	goto	u4151
  5364  0F6D  2F6F               	goto	u4150
  5365  0F6E                     u4151:
  5366  0F6E  2F70               	goto	l2862
  5367  0F6F                     u4150:
  5368  0F6F  2F68               	goto	l2858
  5369  0F70                     l2862:
  5370  0F70  0836               	movf	___flmul@aexp,w
  5371  0F71  1903               	btfsc	3,2
  5372  0F72  2F74               	goto	u4161
  5373  0F73  2F75               	goto	u4160
  5374  0F74                     u4161:
  5375  0F74  2FA6               	goto	l2872
  5376  0F75                     u4160:
  5377  0F75                     l2864:
  5378  0F75  3001               	movlw	1
  5379  0F76  07B8               	addwf	___flmul@prod,f
  5380  0F77  3000               	movlw	0
  5381  0F78  1803               	skipnc
  5382  0F79  3001               	movlw	1
  5383  0F7A  07B9               	addwf	___flmul@prod+1,f
  5384  0F7B  3000               	movlw	0
  5385  0F7C  1803               	skipnc
  5386  0F7D  3001               	movlw	1
  5387  0F7E  07BA               	addwf	___flmul@prod+2,f
  5388  0F7F  3000               	movlw	0
  5389  0F80  1803               	skipnc
  5390  0F81  3001               	movlw	1
  5391  0F82  07BB               	addwf	___flmul@prod+3,f
  5392  0F83                     l2866:
  5393  0F83  1C3B               	btfss	___flmul@prod+3,0
  5394  0F84  2F86               	goto	u4171
  5395  0F85  2F87               	goto	u4170
  5396  0F86                     u4171:
  5397  0F86  2FA6               	goto	l2872
  5398  0F87                     u4170:
  5399  0F87                     l2868:
  5400  0F87  0838               	movf	___flmul@prod,w
  5401  0F88  00AC               	movwf	??___flmul
  5402  0F89  0839               	movf	___flmul@prod+1,w
  5403  0F8A  00AD               	movwf	??___flmul+1
  5404  0F8B  083A               	movf	___flmul@prod+2,w
  5405  0F8C  00AE               	movwf	??___flmul+2
  5406  0F8D  083B               	movf	___flmul@prod+3,w
  5407  0F8E  00AF               	movwf	??___flmul+3
  5408  0F8F  3001               	movlw	1
  5409  0F90  00B0               	movwf	??___flmul+4
  5410  0F91                     u4185:
  5411  0F91  0D2F               	rlf	??___flmul+3,w
  5412  0F92  0CAF               	rrf	??___flmul+3,f
  5413  0F93  0CAE               	rrf	??___flmul+2,f
  5414  0F94  0CAD               	rrf	??___flmul+1,f
  5415  0F95  0CAC               	rrf	??___flmul,f
  5416  0F96                     u4180:
  5417  0F96  0BB0               	decfsz	??___flmul+4,f
  5418  0F97  2F91               	goto	u4185
  5419  0F98  082F               	movf	??___flmul+3,w
  5420  0F99  00BB               	movwf	___flmul@prod+3
  5421  0F9A  082E               	movf	??___flmul+2,w
  5422  0F9B  00BA               	movwf	___flmul@prod+2
  5423  0F9C  082D               	movf	??___flmul+1,w
  5424  0F9D  00B9               	movwf	___flmul@prod+1
  5425  0F9E  082C               	movf	??___flmul,w
  5426  0F9F  00B8               	movwf	___flmul@prod
  5427  0FA0                     l2870:
  5428  0FA0  3001               	movlw	1
  5429  0FA1  07BC               	addwf	___flmul@temp,f
  5430  0FA2  1803               	skipnc
  5431  0FA3  0ABD               	incf	___flmul@temp+1,f
  5432  0FA4  3000               	movlw	0
  5433  0FA5  07BD               	addwf	___flmul@temp+1,f
  5434  0FA6                     l2872:
  5435  0FA6  083D               	movf	___flmul@temp+1,w
  5436  0FA7  3A80               	xorlw	128
  5437  0FA8  00FF               	movwf	btemp+1
  5438  0FA9  3080               	movlw	128
  5439  0FAA  027F               	subwf	btemp+1,w
  5440  0FAB  1D03               	skipz
  5441  0FAC  2FAF               	goto	u4195
  5442  0FAD  30FF               	movlw	255
  5443  0FAE  023C               	subwf	___flmul@temp,w
  5444  0FAF                     u4195:
  5445  0FAF  1C03               	skipc
  5446  0FB0  2FB2               	goto	u4191
  5447  0FB1  2FB3               	goto	u4190
  5448  0FB2                     u4191:
  5449  0FB2  2FBE               	goto	l2876
  5450  0FB3                     u4190:
  5451  0FB3                     l2874:
  5452  0FB3  307F               	movlw	127
  5453  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5454  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5455  0FB6  00BB               	movwf	___flmul@prod+3
  5456  0FB7  3080               	movlw	128
  5457  0FB8  00BA               	movwf	___flmul@prod+2
  5458  0FB9  3000               	movlw	0
  5459  0FBA  00B9               	movwf	___flmul@prod+1
  5460  0FBB  3000               	movlw	0
  5461  0FBC  00B8               	movwf	___flmul@prod
  5462  0FBD  2FF3               	goto	l872
  5463  0FBE                     l2876:
  5464  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0FC0  083D               	movf	___flmul@temp+1,w
  5467  0FC1  3A80               	xorlw	128
  5468  0FC2  00FF               	movwf	btemp+1
  5469  0FC3  3080               	movlw	128
  5470  0FC4  027F               	subwf	btemp+1,w
  5471  0FC5  1D03               	skipz
  5472  0FC6  2FC9               	goto	u4205
  5473  0FC7  3001               	movlw	1
  5474  0FC8  023C               	subwf	___flmul@temp,w
  5475  0FC9                     u4205:
  5476  0FC9  1803               	skipnc
  5477  0FCA  2FCC               	goto	u4201
  5478  0FCB  2FCD               	goto	u4200
  5479  0FCC                     u4201:
  5480  0FCC  2FD9               	goto	l2882
  5481  0FCD                     u4200:
  5482  0FCD                     l2878:
  5483  0FCD  3000               	movlw	0
  5484  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5485  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5486  0FD0  00BB               	movwf	___flmul@prod+3
  5487  0FD1  3000               	movlw	0
  5488  0FD2  00BA               	movwf	___flmul@prod+2
  5489  0FD3  3000               	movlw	0
  5490  0FD4  00B9               	movwf	___flmul@prod+1
  5491  0FD5  3000               	movlw	0
  5492  0FD6  00B8               	movwf	___flmul@prod
  5493  0FD7                     l2880:
  5494  0FD7  01B1               	clrf	___flmul@sign
  5495  0FD8  2FF3               	goto	l872
  5496  0FD9                     l2882:
  5497  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5498  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5499  0FDB  083C               	movf	___flmul@temp,w
  5500  0FDC  00AC               	movwf	??___flmul
  5501  0FDD  082C               	movf	??___flmul,w
  5502  0FDE  00B7               	movwf	___flmul@bexp
  5503  0FDF  30FF               	movlw	255
  5504  0FE0  05B8               	andwf	___flmul@prod,f
  5505  0FE1  30FF               	movlw	255
  5506  0FE2  05B9               	andwf	___flmul@prod+1,f
  5507  0FE3  307F               	movlw	127
  5508  0FE4  05BA               	andwf	___flmul@prod+2,f
  5509  0FE5  3000               	movlw	0
  5510  0FE6  05BB               	andwf	___flmul@prod+3,f
  5511  0FE7                     l2884:
  5512  0FE7  1C37               	btfss	___flmul@bexp,0
  5513  0FE8  2FEA               	goto	u4211
  5514  0FE9  2FEB               	goto	u4210
  5515  0FEA                     u4211:
  5516  0FEA  2FEC               	goto	l2888
  5517  0FEB                     u4210:
  5518  0FEB                     l2886:
  5519  0FEB  17BA               	bsf	___flmul@prod+2,7
  5520  0FEC                     l2888:
  5521  0FEC  0837               	movf	___flmul@bexp,w
  5522  0FED  00AC               	movwf	??___flmul
  5523  0FEE  1003               	clrc
  5524  0FEF  0C2C               	rrf	??___flmul,w
  5525  0FF0  00AD               	movwf	??___flmul+1
  5526  0FF1  082D               	movf	??___flmul+1,w
  5527  0FF2  00BB               	movwf	___flmul@prod+3
  5528  0FF3                     l872:
  5529  0FF3  0831               	movf	___flmul@sign,w
  5530  0FF4  00AC               	movwf	??___flmul
  5531  0FF5  082C               	movf	??___flmul,w
  5532  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5533  0FF7                     l2890:
  5534  0FF7  083B               	movf	___flmul@prod+3,w
  5535  0FF8  00A7               	movwf	?___flmul+3
  5536  0FF9  083A               	movf	___flmul@prod+2,w
  5537  0FFA  00A6               	movwf	?___flmul+2
  5538  0FFB  0839               	movf	___flmul@prod+1,w
  5539  0FFC  00A5               	movwf	?___flmul+1
  5540  0FFD  0838               	movf	___flmul@prod,w
  5541  0FFE  00A4               	movwf	?___flmul
  5542  0FFF                     l860:
  5543  0FFF  0008               	return
  5544  1000                     __end_of___flmul:
  5545                           
  5546                           	psect	text11
  5547  1A73                     __ptext11:	
  5548 ;; *************** function __Umul8_16 *****************
  5549 ;; Defined at:
  5550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  multiplier      1    wreg     unsigned char 
  5553 ;;  multiplicand    1    0[COMMON] unsigned char 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  multiplier      1    8[COMMON] unsigned char 
  5556 ;;  word_mpld       2    6[COMMON] unsigned int 
  5557 ;;  product         2    4[COMMON] unsigned int 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  2    0[COMMON] unsigned int 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         2       0       0       0       0
  5568 ;;      Locals:         5       0       0       0       0
  5569 ;;      Temps:          2       0       0       0       0
  5570 ;;      Totals:         9       0       0       0       0
  5571 ;;Total ram usage:        9 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		___flmul
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function __Umul8_16
  5582  1A73                     __Umul8_16:
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5586                           ;__Umul8_16@multiplier stored from wreg
  5587  1A73  00F8               	movwf	__Umul8_16@multiplier
  5588  1A74                     l2396:
  5589  1A74  01F4               	clrf	__Umul8_16@product
  5590  1A75  01F5               	clrf	__Umul8_16@product+1
  5591  1A76                     l2398:
  5592  1A76  0870               	movf	__Umul8_16@multiplicand,w
  5593  1A77  00F2               	movwf	??__Umul8_16
  5594  1A78  01F3               	clrf	??__Umul8_16+1
  5595  1A79  0872               	movf	??__Umul8_16,w
  5596  1A7A  00F6               	movwf	__Umul8_16@word_mpld
  5597  1A7B  0873               	movf	??__Umul8_16+1,w
  5598  1A7C  00F7               	movwf	__Umul8_16@word_mpld+1
  5599  1A7D                     l2400:
  5600  1A7D  1C78               	btfss	__Umul8_16@multiplier,0
  5601  1A7E  2A80               	goto	u2951
  5602  1A7F  2A81               	goto	u2950
  5603  1A80                     u2951:
  5604  1A80  2A87               	goto	l879
  5605  1A81                     u2950:
  5606  1A81                     l2402:
  5607  1A81  0876               	movf	__Umul8_16@word_mpld,w
  5608  1A82  07F4               	addwf	__Umul8_16@product,f
  5609  1A83  1803               	skipnc
  5610  1A84  0AF5               	incf	__Umul8_16@product+1,f
  5611  1A85  0877               	movf	__Umul8_16@word_mpld+1,w
  5612  1A86  07F5               	addwf	__Umul8_16@product+1,f
  5613  1A87                     l879:
  5614  1A87  3001               	movlw	1
  5615  1A88                     u2965:
  5616  1A88  1003               	clrc
  5617  1A89  0DF6               	rlf	__Umul8_16@word_mpld,f
  5618  1A8A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5619  1A8B  3EFF               	addlw	-1
  5620  1A8C  1D03               	skipz
  5621  1A8D  2A88               	goto	u2965
  5622  1A8E  1003               	clrc
  5623  1A8F  0CF8               	rrf	__Umul8_16@multiplier,f
  5624  1A90                     l2404:
  5625  1A90  0878               	movf	__Umul8_16@multiplier,w
  5626  1A91  1D03               	btfss	3,2
  5627  1A92  2A94               	goto	u2971
  5628  1A93  2A95               	goto	u2970
  5629  1A94                     u2971:
  5630  1A94  2A7D               	goto	l2400
  5631  1A95                     u2970:
  5632  1A95                     l2406:
  5633  1A95  0875               	movf	__Umul8_16@product+1,w
  5634  1A96  00F1               	movwf	?__Umul8_16+1
  5635  1A97  0874               	movf	__Umul8_16@product,w
  5636  1A98  00F0               	movwf	?__Umul8_16
  5637  1A99                     l881:
  5638  1A99  0008               	return
  5639  1A9A                     __end_of__Umul8_16:
  5640                           
  5641                           	psect	text12
  5642  1F43                     __ptext12:	
  5643 ;; *************** function __tdiv_to_l_ *****************
  5644 ;; Defined at:
  5645 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  f1              4    0[COMMON] float 
  5648 ;;  f2              4    4[COMMON] float 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  quot            4    0[BANK0 ] unsigned long 
  5651 ;;  exp1            1    5[BANK0 ] unsigned char 
  5652 ;;  cntr            1    4[BANK0 ] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  4    0[COMMON] unsigned long 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         8       0       0       0       0
  5663 ;;      Locals:         0       6       0       0       0
  5664 ;;      Temps:          4       0       0       0       0
  5665 ;;      Totals:        12       6       0       0       0
  5666 ;;Total ram usage:       18 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_sprintf
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function __tdiv_to_l_
  5677  1F43                     __tdiv_to_l_:
  5678  1F43                     l3014:	
  5679                           ;incstack = 0
  5680                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5681                           
  5682  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5683  1F44  00F8               	movwf	??__tdiv_to_l_
  5684  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5685  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5686  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5687  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5688  1F49  1003               	clrc
  5689  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5690  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5691  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5692  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5693  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5694  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5695  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5696  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5697  1F52  1D03               	btfss	3,2
  5698  1F53  2F55               	goto	u4511
  5699  1F54  2F56               	goto	u4510
  5700  1F55                     u4511:
  5701  1F55  2F5F               	goto	l3020
  5702  1F56                     u4510:
  5703  1F56                     l3016:
  5704  1F56  3000               	movlw	0
  5705  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5706  1F58  3000               	movlw	0
  5707  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5708  1F5A  3000               	movlw	0
  5709  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5710  1F5C  3000               	movlw	0
  5711  1F5D  00F0               	movwf	?__tdiv_to_l_
  5712  1F5E  2FFF               	goto	l654
  5713  1F5F                     l3020:
  5714  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5715  1F60  00F8               	movwf	??__tdiv_to_l_
  5716  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5717  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5718  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5719  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5720  1F65  1003               	clrc
  5721  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5722  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5723  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5724  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5725  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5726  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5727  1F6C  1D03               	btfss	3,2
  5728  1F6D  2F6F               	goto	u4521
  5729  1F6E  2F70               	goto	u4520
  5730  1F6F                     u4521:
  5731  1F6F  2F71               	goto	l655
  5732  1F70                     u4520:
  5733  1F70  2F56               	goto	l3016
  5734  1F71                     l655:
  5735  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5736  1F72                     l3026:
  5737  1F72  30FF               	movlw	255
  5738  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5739  1F74  30FF               	movlw	255
  5740  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5741  1F76  3000               	movlw	0
  5742  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5743  1F78                     l3028:
  5744  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5745  1F79  30FF               	movlw	255
  5746  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5747  1F7B  30FF               	movlw	255
  5748  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5749  1F7D  3000               	movlw	0
  5750  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5751  1F7F  3000               	movlw	0
  5752  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5753  1F81  3000               	movlw	0
  5754  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5755  1F83  3000               	movlw	0
  5756  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5757  1F85  3000               	movlw	0
  5758  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5759  1F87                     l3030:
  5760  1F87  307F               	movlw	127
  5761  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5762  1F89                     l3032:
  5763  1F89  3098               	movlw	152
  5764  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5765  1F8B  00F8               	movwf	??__tdiv_to_l_
  5766  1F8C  0878               	movf	??__tdiv_to_l_,w
  5767  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5768  1F8E  3018               	movlw	24
  5769  1F8F  00F8               	movwf	??__tdiv_to_l_
  5770  1F90  0878               	movf	??__tdiv_to_l_,w
  5771  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5772  1F92                     l3034:
  5773  1F92  3001               	movlw	1
  5774  1F93  00F8               	movwf	??__tdiv_to_l_
  5775  1F94                     u4535:
  5776  1F94  1003               	clrc
  5777  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5778  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5779  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5780  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5781  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5782  1F9A  2F94               	goto	u4535
  5783  1F9B                     l3036:
  5784  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5785  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5786  1F9D  1D03               	skipz
  5787  1F9E  2FA5               	goto	u4545
  5788  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5789  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5790  1FA1  1D03               	skipz
  5791  1FA2  2FA5               	goto	u4545
  5792  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5793  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5794  1FA5                     u4545:
  5795  1FA5  1C03               	skipc
  5796  1FA6  2FA8               	goto	u4541
  5797  1FA7  2FA9               	goto	u4540
  5798  1FA8                     u4541:
  5799  1FA8  2FB4               	goto	l3042
  5800  1FA9                     u4540:
  5801  1FA9                     l3038:
  5802  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5803  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5804  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5805  1FAC  1C03               	skipc
  5806  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5807  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5808  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5809  1FB0  1C03               	skipc
  5810  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5811  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5812  1FB3                     l3040:
  5813  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5814  1FB4                     l3042:
  5815  1FB4  3001               	movlw	1
  5816  1FB5                     u4555:
  5817  1FB5  1003               	clrc
  5818  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5819  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5820  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5821  1FB9  3EFF               	addlw	-1
  5822  1FBA  1D03               	skipz
  5823  1FBB  2FB5               	goto	u4555
  5824  1FBC                     l3044:
  5825  1FBC  3001               	movlw	1
  5826  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5827  1FBE  1D03               	btfss	3,2
  5828  1FBF  2FC1               	goto	u4561
  5829  1FC0  2FC2               	goto	u4560
  5830  1FC1                     u4561:
  5831  1FC1  2F92               	goto	l3034
  5832  1FC2                     u4560:
  5833  1FC2                     l658:
  5834  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5835  1FC3  2FC5               	goto	u4571
  5836  1FC4  2FC6               	goto	u4570
  5837  1FC5                     u4571:
  5838  1FC5  2FE0               	goto	l3054
  5839  1FC6                     u4570:
  5840  1FC6                     l3046:
  5841  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5842  1FC7  3A80               	xorlw	128
  5843  1FC8  3E97               	addlw	151
  5844  1FC9  1803               	skipnc
  5845  1FCA  2FCC               	goto	u4581
  5846  1FCB  2FCD               	goto	u4580
  5847  1FCC                     u4581:
  5848  1FCC  2FCE               	goto	l3052
  5849  1FCD                     u4580:
  5850  1FCD  2F56               	goto	l3016
  5851  1FCE                     l3052:
  5852  1FCE  3001               	movlw	1
  5853  1FCF                     u4595:
  5854  1FCF  1003               	clrc
  5855  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5856  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5857  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5858  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5859  1FD4  3EFF               	addlw	-1
  5860  1FD5  1D03               	skipz
  5861  1FD6  2FCF               	goto	u4595
  5862  1FD7  3001               	movlw	1
  5863  1FD8  00F8               	movwf	??__tdiv_to_l_
  5864  1FD9  0878               	movf	??__tdiv_to_l_,w
  5865  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5866  1FDB  1D03               	btfss	3,2
  5867  1FDC  2FDE               	goto	u4601
  5868  1FDD  2FDF               	goto	u4600
  5869  1FDE                     u4601:
  5870  1FDE  2FCE               	goto	l3052
  5871  1FDF                     u4600:
  5872  1FDF  2FF7               	goto	l3062
  5873  1FE0                     l3054:
  5874  1FE0  3018               	movlw	24
  5875  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5876  1FE2  1C03               	skipc
  5877  1FE3  2FE5               	goto	u4611
  5878  1FE4  2FE6               	goto	u4610
  5879  1FE5                     u4611:
  5880  1FE5  2FF2               	goto	l665
  5881  1FE6                     u4610:
  5882  1FE6  2F56               	goto	l3016
  5883  1FE7                     l3060:
  5884  1FE7  3001               	movlw	1
  5885  1FE8  00F8               	movwf	??__tdiv_to_l_
  5886  1FE9                     u4625:
  5887  1FE9  1003               	clrc
  5888  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5889  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5890  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5891  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5892  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5893  1FEF  2FE9               	goto	u4625
  5894  1FF0  3001               	movlw	1
  5895  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5896  1FF2                     l665:
  5897  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5898  1FF3  1D03               	btfss	3,2
  5899  1FF4  2FF6               	goto	u4631
  5900  1FF5  2FF7               	goto	u4630
  5901  1FF6                     u4631:
  5902  1FF6  2FE7               	goto	l3060
  5903  1FF7                     u4630:
  5904  1FF7                     l3062:
  5905  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5906  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5907  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5908  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5909  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5910  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5911  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5912  1FFE  00F0               	movwf	?__tdiv_to_l_
  5913  1FFF                     l654:
  5914  1FFF  0008               	return
  5915  2000                     __end_of__tdiv_to_l_:
  5916                           
  5917                           	psect	text13
  5918  0882                     __ptext13:	
  5919 ;; *************** function __div_to_l_ *****************
  5920 ;; Defined at:
  5921 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  f1              4    0[COMMON] unsigned long 
  5924 ;;  f2              4    4[COMMON] unsigned long 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  quot            4    0[BANK0 ] unsigned long 
  5927 ;;  exp1            1    5[BANK0 ] unsigned char 
  5928 ;;  cntr            1    4[BANK0 ] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  4    0[COMMON] unsigned long 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5938 ;;      Params:         8       0       0       0       0
  5939 ;;      Locals:         0       6       0       0       0
  5940 ;;      Temps:          1       0       0       0       0
  5941 ;;      Totals:         9       6       0       0       0
  5942 ;;Total ram usage:       15 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_sprintf
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function __div_to_l_
  5953  0882                     __div_to_l_:
  5954  0882                     l3066:	
  5955                           ;incstack = 0
  5956                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5957                           
  5958  0882  1003               	clrc
  5959  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5960  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5961  0885  00F8               	movwf	??__div_to_l_
  5962  0886  0878               	movf	??__div_to_l_,w
  5963  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5964  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5965  0889  00A5               	movwf	__div_to_l_@exp1
  5966  088A  0825               	movf	__div_to_l_@exp1,w
  5967  088B  1D03               	btfss	3,2
  5968  088C  288E               	goto	u4641
  5969  088D  288F               	goto	u4640
  5970  088E                     u4641:
  5971  088E  2898               	goto	l3072
  5972  088F                     u4640:
  5973  088F                     l3068:
  5974  088F  3000               	movlw	0
  5975  0890  00F3               	movwf	?__div_to_l_+3
  5976  0891  3000               	movlw	0
  5977  0892  00F2               	movwf	?__div_to_l_+2
  5978  0893  3000               	movlw	0
  5979  0894  00F1               	movwf	?__div_to_l_+1
  5980  0895  3000               	movlw	0
  5981  0896  00F0               	movwf	?__div_to_l_
  5982  0897  293F               	goto	l607
  5983  0898                     l3072:
  5984  0898  1003               	clrc
  5985  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5986  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5987  089B  00F8               	movwf	??__div_to_l_
  5988  089C  0878               	movf	??__div_to_l_,w
  5989  089D  00A4               	movwf	__div_to_l_@cntr
  5990  089E  0824               	movf	__div_to_l_@cntr,w
  5991  089F  1D03               	btfss	3,2
  5992  08A0  28A2               	goto	u4651
  5993  08A1  28A3               	goto	u4650
  5994  08A2                     u4651:
  5995  08A2  28A4               	goto	l608
  5996  08A3                     u4650:
  5997  08A3  288F               	goto	l3068
  5998  08A4                     l608:
  5999  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6000  08A5                     l3078:
  6001  08A5  30FF               	movlw	255
  6002  08A6  05F0               	andwf	__div_to_l_@f1,f
  6003  08A7  30FF               	movlw	255
  6004  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6005  08A9  30FF               	movlw	255
  6006  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6007  08AB  3000               	movlw	0
  6008  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6009  08AD                     l3080:
  6010  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6011  08AE  30FF               	movlw	255
  6012  08AF  05F4               	andwf	__div_to_l_@f2,f
  6013  08B0  30FF               	movlw	255
  6014  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6015  08B2  30FF               	movlw	255
  6016  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6017  08B4  3000               	movlw	0
  6018  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6019  08B6  3000               	movlw	0
  6020  08B7  00A3               	movwf	__div_to_l_@quot+3
  6021  08B8  3000               	movlw	0
  6022  08B9  00A2               	movwf	__div_to_l_@quot+2
  6023  08BA  3000               	movlw	0
  6024  08BB  00A1               	movwf	__div_to_l_@quot+1
  6025  08BC  3000               	movlw	0
  6026  08BD  00A0               	movwf	__div_to_l_@quot
  6027  08BE                     l3082:
  6028  08BE  307F               	movlw	127
  6029  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6030  08C0                     l3084:
  6031  08C0  30A0               	movlw	160
  6032  08C1  0724               	addwf	__div_to_l_@cntr,w
  6033  08C2  00F8               	movwf	??__div_to_l_
  6034  08C3  0878               	movf	??__div_to_l_,w
  6035  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6036  08C5  3020               	movlw	32
  6037  08C6  00F8               	movwf	??__div_to_l_
  6038  08C7  0878               	movf	??__div_to_l_,w
  6039  08C8  00A4               	movwf	__div_to_l_@cntr
  6040  08C9                     l3086:
  6041  08C9  3001               	movlw	1
  6042  08CA  00F8               	movwf	??__div_to_l_
  6043  08CB                     u4665:
  6044  08CB  1003               	clrc
  6045  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6046  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6047  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6048  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6049  08D0  0BF8               	decfsz	??__div_to_l_,f
  6050  08D1  28CB               	goto	u4665
  6051  08D2                     l3088:
  6052  08D2  0877               	movf	__div_to_l_@f2+3,w
  6053  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6054  08D4  1D03               	skipz
  6055  08D5  28E0               	goto	u4675
  6056  08D6  0876               	movf	__div_to_l_@f2+2,w
  6057  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6058  08D8  1D03               	skipz
  6059  08D9  28E0               	goto	u4675
  6060  08DA  0875               	movf	__div_to_l_@f2+1,w
  6061  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6062  08DC  1D03               	skipz
  6063  08DD  28E0               	goto	u4675
  6064  08DE  0874               	movf	__div_to_l_@f2,w
  6065  08DF  0270               	subwf	__div_to_l_@f1,w
  6066  08E0                     u4675:
  6067  08E0  1C03               	skipc
  6068  08E1  28E3               	goto	u4671
  6069  08E2  28E4               	goto	u4670
  6070  08E3                     u4671:
  6071  08E3  28F3               	goto	l3094
  6072  08E4                     u4670:
  6073  08E4                     l3090:
  6074  08E4  0874               	movf	__div_to_l_@f2,w
  6075  08E5  02F0               	subwf	__div_to_l_@f1,f
  6076  08E6  0875               	movf	__div_to_l_@f2+1,w
  6077  08E7  1C03               	skipc
  6078  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6079  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6080  08EA  0876               	movf	__div_to_l_@f2+2,w
  6081  08EB  1C03               	skipc
  6082  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6083  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6084  08EE  0877               	movf	__div_to_l_@f2+3,w
  6085  08EF  1C03               	skipc
  6086  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6087  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6088  08F2                     l3092:
  6089  08F2  1420               	bsf	__div_to_l_@quot,0
  6090  08F3                     l3094:
  6091  08F3  3001               	movlw	1
  6092  08F4  00F8               	movwf	??__div_to_l_
  6093  08F5                     u4685:
  6094  08F5  1003               	clrc
  6095  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6096  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6097  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6098  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6099  08FA  0BF8               	decfsz	??__div_to_l_,f
  6100  08FB  28F5               	goto	u4685
  6101  08FC                     l3096:
  6102  08FC  3001               	movlw	1
  6103  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6104  08FE  1D03               	btfss	3,2
  6105  08FF  2901               	goto	u4691
  6106  0900  2902               	goto	u4690
  6107  0901                     u4691:
  6108  0901  28C9               	goto	l3086
  6109  0902                     u4690:
  6110  0902                     l611:
  6111  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6112  0903  2905               	goto	u4701
  6113  0904  2906               	goto	u4700
  6114  0905                     u4701:
  6115  0905  2920               	goto	l3106
  6116  0906                     u4700:
  6117  0906                     l3098:
  6118  0906  0825               	movf	__div_to_l_@exp1,w
  6119  0907  3A80               	xorlw	128
  6120  0908  3E9F               	addlw	159
  6121  0909  1803               	skipnc
  6122  090A  290C               	goto	u4711
  6123  090B  290D               	goto	u4710
  6124  090C                     u4711:
  6125  090C  290E               	goto	l3104
  6126  090D                     u4710:
  6127  090D  288F               	goto	l3068
  6128  090E                     l3104:
  6129  090E  3001               	movlw	1
  6130  090F                     u4725:
  6131  090F  1003               	clrc
  6132  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  6133  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  6134  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  6135  0913  0CA0               	rrf	__div_to_l_@quot,f
  6136  0914  3EFF               	addlw	-1
  6137  0915  1D03               	skipz
  6138  0916  290F               	goto	u4725
  6139  0917  3001               	movlw	1
  6140  0918  00F8               	movwf	??__div_to_l_
  6141  0919  0878               	movf	??__div_to_l_,w
  6142  091A  07A5               	addwf	__div_to_l_@exp1,f
  6143  091B  1D03               	btfss	3,2
  6144  091C  291E               	goto	u4731
  6145  091D  291F               	goto	u4730
  6146  091E                     u4731:
  6147  091E  290E               	goto	l3104
  6148  091F                     u4730:
  6149  091F  2937               	goto	l3114
  6150  0920                     l3106:
  6151  0920  3020               	movlw	32
  6152  0921  0225               	subwf	__div_to_l_@exp1,w
  6153  0922  1C03               	skipc
  6154  0923  2925               	goto	u4741
  6155  0924  2926               	goto	u4740
  6156  0925                     u4741:
  6157  0925  2932               	goto	l618
  6158  0926                     u4740:
  6159  0926  288F               	goto	l3068
  6160  0927                     l3112:
  6161  0927  3001               	movlw	1
  6162  0928  00F8               	movwf	??__div_to_l_
  6163  0929                     u4755:
  6164  0929  1003               	clrc
  6165  092A  0DA0               	rlf	__div_to_l_@quot,f
  6166  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6167  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6168  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6169  092E  0BF8               	decfsz	??__div_to_l_,f
  6170  092F  2929               	goto	u4755
  6171  0930  3001               	movlw	1
  6172  0931  02A5               	subwf	__div_to_l_@exp1,f
  6173  0932                     l618:
  6174  0932  0825               	movf	__div_to_l_@exp1,w
  6175  0933  1D03               	btfss	3,2
  6176  0934  2936               	goto	u4761
  6177  0935  2937               	goto	u4760
  6178  0936                     u4761:
  6179  0936  2927               	goto	l3112
  6180  0937                     u4760:
  6181  0937                     l3114:
  6182  0937  0823               	movf	__div_to_l_@quot+3,w
  6183  0938  00F3               	movwf	?__div_to_l_+3
  6184  0939  0822               	movf	__div_to_l_@quot+2,w
  6185  093A  00F2               	movwf	?__div_to_l_+2
  6186  093B  0821               	movf	__div_to_l_@quot+1,w
  6187  093C  00F1               	movwf	?__div_to_l_+1
  6188  093D  0820               	movf	__div_to_l_@quot,w
  6189  093E  00F0               	movwf	?__div_to_l_
  6190  093F                     l607:
  6191  093F  0008               	return
  6192  0940                     __end_of__div_to_l_:
  6193                           
  6194                           	psect	text14
  6195  1A4E                     __ptext14:	
  6196 ;; *************** function ___wmul *****************
  6197 ;; Defined at:
  6198 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  multiplier      2    0[COMMON] unsigned int 
  6201 ;;  multiplicand    2    2[COMMON] unsigned int 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  product         2    4[COMMON] unsigned int 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  2    0[COMMON] unsigned int 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6213 ;;      Params:         4       0       0       0       0
  6214 ;;      Locals:         2       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0
  6216 ;;      Totals:         6       0       0       0       0
  6217 ;;Total ram usage:        6 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_sprintf
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function ___wmul
  6228  1A4E                     ___wmul:
  6229  1A4E                     l3118:	
  6230                           ;incstack = 0
  6231                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6232                           
  6233  1A4E  01F4               	clrf	___wmul@product
  6234  1A4F  01F5               	clrf	___wmul@product+1
  6235  1A50                     l3120:
  6236  1A50  1C70               	btfss	___wmul@multiplier,0
  6237  1A51  2A53               	goto	u4771
  6238  1A52  2A54               	goto	u4770
  6239  1A53                     u4771:
  6240  1A53  2A5A               	goto	l437
  6241  1A54                     u4770:
  6242  1A54                     l3122:
  6243  1A54  0872               	movf	___wmul@multiplicand,w
  6244  1A55  07F4               	addwf	___wmul@product,f
  6245  1A56  1803               	skipnc
  6246  1A57  0AF5               	incf	___wmul@product+1,f
  6247  1A58  0873               	movf	___wmul@multiplicand+1,w
  6248  1A59  07F5               	addwf	___wmul@product+1,f
  6249  1A5A                     l437:
  6250  1A5A  3001               	movlw	1
  6251  1A5B                     u4785:
  6252  1A5B  1003               	clrc
  6253  1A5C  0DF2               	rlf	___wmul@multiplicand,f
  6254  1A5D  0DF3               	rlf	___wmul@multiplicand+1,f
  6255  1A5E  3EFF               	addlw	-1
  6256  1A5F  1D03               	skipz
  6257  1A60  2A5B               	goto	u4785
  6258  1A61                     l3124:
  6259  1A61  3001               	movlw	1
  6260  1A62                     u4795:
  6261  1A62  1003               	clrc
  6262  1A63  0CF1               	rrf	___wmul@multiplier+1,f
  6263  1A64  0CF0               	rrf	___wmul@multiplier,f
  6264  1A65  3EFF               	addlw	-1
  6265  1A66  1D03               	skipz
  6266  1A67  2A62               	goto	u4795
  6267  1A68                     l3126:
  6268  1A68  0870               	movf	___wmul@multiplier,w
  6269  1A69  0471               	iorwf	___wmul@multiplier+1,w
  6270  1A6A  1D03               	btfss	3,2
  6271  1A6B  2A6D               	goto	u4801
  6272  1A6C  2A6E               	goto	u4800
  6273  1A6D                     u4801:
  6274  1A6D  2A50               	goto	l3120
  6275  1A6E                     u4800:
  6276  1A6E                     l3128:
  6277  1A6E  0875               	movf	___wmul@product+1,w
  6278  1A6F  00F1               	movwf	?___wmul+1
  6279  1A70  0874               	movf	___wmul@product,w
  6280  1A71  00F0               	movwf	?___wmul
  6281  1A72                     l439:
  6282  1A72  0008               	return
  6283  1A73                     __end_of___wmul:
  6284                           
  6285                           	psect	text15
  6286  00C6                     __ptext15:	
  6287 ;; *************** function ___llmod *****************
  6288 ;; Defined at:
  6289 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  divisor         4    0[BANK0 ] unsigned long 
  6292 ;;  dividend        4    4[BANK0 ] unsigned long 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  counter         1    9[BANK0 ] unsigned char 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  4    0[BANK0 ] unsigned long 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       8       0       0       0
  6305 ;;      Locals:         0       1       0       0       0
  6306 ;;      Temps:          0       1       0       0       0
  6307 ;;      Totals:         0      10       0       0       0
  6308 ;;Total ram usage:       10 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_sprintf
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function ___llmod
  6319  00C6                     ___llmod:
  6320  00C6                     l3232:	
  6321                           ;incstack = 0
  6322                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6323                           
  6324  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  6325  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  6326  00C8  0823               	movf	___llmod@divisor+3,w
  6327  00C9  0422               	iorwf	___llmod@divisor+2,w
  6328  00CA  0421               	iorwf	___llmod@divisor+1,w
  6329  00CB  0420               	iorwf	___llmod@divisor,w
  6330  00CC  1903               	skipnz
  6331  00CD  28CF               	goto	u5091
  6332  00CE  28D0               	goto	u5090
  6333  00CF                     u5091:
  6334  00CF  2913               	goto	l3248
  6335  00D0                     u5090:
  6336  00D0                     l3234:
  6337  00D0  01A9               	clrf	___llmod@counter
  6338  00D1  0AA9               	incf	___llmod@counter,f
  6339  00D2  28E0               	goto	l3238
  6340  00D3                     l3236:
  6341  00D3  3001               	movlw	1
  6342  00D4  00A8               	movwf	??___llmod
  6343  00D5                     u5105:
  6344  00D5  1003               	clrc
  6345  00D6  0DA0               	rlf	___llmod@divisor,f
  6346  00D7  0DA1               	rlf	___llmod@divisor+1,f
  6347  00D8  0DA2               	rlf	___llmod@divisor+2,f
  6348  00D9  0DA3               	rlf	___llmod@divisor+3,f
  6349  00DA  0BA8               	decfsz	??___llmod,f
  6350  00DB  28D5               	goto	u5105
  6351  00DC  3001               	movlw	1
  6352  00DD  00A8               	movwf	??___llmod
  6353  00DE  0828               	movf	??___llmod,w
  6354  00DF  07A9               	addwf	___llmod@counter,f
  6355  00E0                     l3238:
  6356  00E0  1FA3               	btfss	___llmod@divisor+3,7
  6357  00E1  28E3               	goto	u5111
  6358  00E2  28E4               	goto	u5110
  6359  00E3                     u5111:
  6360  00E3  28D3               	goto	l3236
  6361  00E4                     u5110:
  6362  00E4                     l3240:
  6363  00E4  0823               	movf	___llmod@divisor+3,w
  6364  00E5  0227               	subwf	___llmod@dividend+3,w
  6365  00E6  1D03               	skipz
  6366  00E7  28F2               	goto	u5125
  6367  00E8  0822               	movf	___llmod@divisor+2,w
  6368  00E9  0226               	subwf	___llmod@dividend+2,w
  6369  00EA  1D03               	skipz
  6370  00EB  28F2               	goto	u5125
  6371  00EC  0821               	movf	___llmod@divisor+1,w
  6372  00ED  0225               	subwf	___llmod@dividend+1,w
  6373  00EE  1D03               	skipz
  6374  00EF  28F2               	goto	u5125
  6375  00F0  0820               	movf	___llmod@divisor,w
  6376  00F1  0224               	subwf	___llmod@dividend,w
  6377  00F2                     u5125:
  6378  00F2  1C03               	skipc
  6379  00F3  28F5               	goto	u5121
  6380  00F4  28F6               	goto	u5120
  6381  00F5                     u5121:
  6382  00F5  2904               	goto	l3244
  6383  00F6                     u5120:
  6384  00F6                     l3242:
  6385  00F6  0820               	movf	___llmod@divisor,w
  6386  00F7  02A4               	subwf	___llmod@dividend,f
  6387  00F8  0821               	movf	___llmod@divisor+1,w
  6388  00F9  1C03               	skipc
  6389  00FA  0F21               	incfsz	___llmod@divisor+1,w
  6390  00FB  02A5               	subwf	___llmod@dividend+1,f
  6391  00FC  0822               	movf	___llmod@divisor+2,w
  6392  00FD  1C03               	skipc
  6393  00FE  0F22               	incfsz	___llmod@divisor+2,w
  6394  00FF  02A6               	subwf	___llmod@dividend+2,f
  6395  0100  0823               	movf	___llmod@divisor+3,w
  6396  0101  1C03               	skipc
  6397  0102  0F23               	incfsz	___llmod@divisor+3,w
  6398  0103  02A7               	subwf	___llmod@dividend+3,f
  6399  0104                     l3244:
  6400  0104  3001               	movlw	1
  6401  0105                     u5135:
  6402  0105  1003               	clrc
  6403  0106  0CA3               	rrf	___llmod@divisor+3,f
  6404  0107  0CA2               	rrf	___llmod@divisor+2,f
  6405  0108  0CA1               	rrf	___llmod@divisor+1,f
  6406  0109  0CA0               	rrf	___llmod@divisor,f
  6407  010A  3EFF               	addlw	-1
  6408  010B  1D03               	skipz
  6409  010C  2905               	goto	u5135
  6410  010D                     l3246:
  6411  010D  3001               	movlw	1
  6412  010E  02A9               	subwf	___llmod@counter,f
  6413  010F  1D03               	btfss	3,2
  6414  0110  2912               	goto	u5141
  6415  0111  2913               	goto	u5140
  6416  0112                     u5141:
  6417  0112  28E4               	goto	l3240
  6418  0113                     u5140:
  6419  0113                     l3248:
  6420  0113  0827               	movf	___llmod@dividend+3,w
  6421  0114  00A3               	movwf	?___llmod+3
  6422  0115  0826               	movf	___llmod@dividend+2,w
  6423  0116  00A2               	movwf	?___llmod+2
  6424  0117  0825               	movf	___llmod@dividend+1,w
  6425  0118  00A1               	movwf	?___llmod+1
  6426  0119  0824               	movf	___llmod@dividend,w
  6427  011A  00A0               	movwf	?___llmod
  6428  011B                     l693:
  6429  011B  0008               	return
  6430  011C                     __end_of___llmod:
  6431                           
  6432                           	psect	text16
  6433  1CEA                     __ptext16:	
  6434 ;; *************** function ___lldiv *****************
  6435 ;; Defined at:
  6436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  divisor         4    0[COMMON] unsigned long 
  6439 ;;  dividend        4    4[COMMON] unsigned long 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  quotient        4    9[COMMON] unsigned long 
  6442 ;;  counter         1   13[COMMON] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  4    0[COMMON] unsigned long 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6452 ;;      Params:         8       0       0       0       0
  6453 ;;      Locals:         5       0       0       0       0
  6454 ;;      Temps:          1       0       0       0       0
  6455 ;;      Totals:        14       0       0       0       0
  6456 ;;Total ram usage:       14 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_sprintf
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function ___lldiv
  6467  1CEA                     ___lldiv:
  6468  1CEA                     l3132:	
  6469                           ;incstack = 0
  6470                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6471                           
  6472  1CEA  3000               	movlw	0
  6473  1CEB  00FC               	movwf	___lldiv@quotient+3
  6474  1CEC  3000               	movlw	0
  6475  1CED  00FB               	movwf	___lldiv@quotient+2
  6476  1CEE  3000               	movlw	0
  6477  1CEF  00FA               	movwf	___lldiv@quotient+1
  6478  1CF0  3000               	movlw	0
  6479  1CF1  00F9               	movwf	___lldiv@quotient
  6480  1CF2  0873               	movf	___lldiv@divisor+3,w
  6481  1CF3  0472               	iorwf	___lldiv@divisor+2,w
  6482  1CF4  0471               	iorwf	___lldiv@divisor+1,w
  6483  1CF5  0470               	iorwf	___lldiv@divisor,w
  6484  1CF6  1903               	skipnz
  6485  1CF7  2CF9               	goto	u4811
  6486  1CF8  2CFA               	goto	u4810
  6487  1CF9                     u4811:
  6488  1CF9  2D47               	goto	l3152
  6489  1CFA                     u4810:
  6490  1CFA                     l3134:
  6491  1CFA  01FD               	clrf	___lldiv@counter
  6492  1CFB  0AFD               	incf	___lldiv@counter,f
  6493  1CFC  2D0A               	goto	l3138
  6494  1CFD                     l3136:
  6495  1CFD  3001               	movlw	1
  6496  1CFE  00F8               	movwf	??___lldiv
  6497  1CFF                     u4825:
  6498  1CFF  1003               	clrc
  6499  1D00  0DF0               	rlf	___lldiv@divisor,f
  6500  1D01  0DF1               	rlf	___lldiv@divisor+1,f
  6501  1D02  0DF2               	rlf	___lldiv@divisor+2,f
  6502  1D03  0DF3               	rlf	___lldiv@divisor+3,f
  6503  1D04  0BF8               	decfsz	??___lldiv,f
  6504  1D05  2CFF               	goto	u4825
  6505  1D06  3001               	movlw	1
  6506  1D07  00F8               	movwf	??___lldiv
  6507  1D08  0878               	movf	??___lldiv,w
  6508  1D09  07FD               	addwf	___lldiv@counter,f
  6509  1D0A                     l3138:
  6510  1D0A  1FF3               	btfss	___lldiv@divisor+3,7
  6511  1D0B  2D0D               	goto	u4831
  6512  1D0C  2D0E               	goto	u4830
  6513  1D0D                     u4831:
  6514  1D0D  2CFD               	goto	l3136
  6515  1D0E                     u4830:
  6516  1D0E                     l3140:
  6517  1D0E  3001               	movlw	1
  6518  1D0F  00F8               	movwf	??___lldiv
  6519  1D10                     u4845:
  6520  1D10  1003               	clrc
  6521  1D11  0DF9               	rlf	___lldiv@quotient,f
  6522  1D12  0DFA               	rlf	___lldiv@quotient+1,f
  6523  1D13  0DFB               	rlf	___lldiv@quotient+2,f
  6524  1D14  0DFC               	rlf	___lldiv@quotient+3,f
  6525  1D15  0BF8               	decfsz	??___lldiv,f
  6526  1D16  2D10               	goto	u4845
  6527  1D17                     l3142:
  6528  1D17  0873               	movf	___lldiv@divisor+3,w
  6529  1D18  0277               	subwf	___lldiv@dividend+3,w
  6530  1D19  1D03               	skipz
  6531  1D1A  2D25               	goto	u4855
  6532  1D1B  0872               	movf	___lldiv@divisor+2,w
  6533  1D1C  0276               	subwf	___lldiv@dividend+2,w
  6534  1D1D  1D03               	skipz
  6535  1D1E  2D25               	goto	u4855
  6536  1D1F  0871               	movf	___lldiv@divisor+1,w
  6537  1D20  0275               	subwf	___lldiv@dividend+1,w
  6538  1D21  1D03               	skipz
  6539  1D22  2D25               	goto	u4855
  6540  1D23  0870               	movf	___lldiv@divisor,w
  6541  1D24  0274               	subwf	___lldiv@dividend,w
  6542  1D25                     u4855:
  6543  1D25  1C03               	skipc
  6544  1D26  2D28               	goto	u4851
  6545  1D27  2D29               	goto	u4850
  6546  1D28                     u4851:
  6547  1D28  2D38               	goto	l3148
  6548  1D29                     u4850:
  6549  1D29                     l3144:
  6550  1D29  0870               	movf	___lldiv@divisor,w
  6551  1D2A  02F4               	subwf	___lldiv@dividend,f
  6552  1D2B  0871               	movf	___lldiv@divisor+1,w
  6553  1D2C  1C03               	skipc
  6554  1D2D  0F71               	incfsz	___lldiv@divisor+1,w
  6555  1D2E  02F5               	subwf	___lldiv@dividend+1,f
  6556  1D2F  0872               	movf	___lldiv@divisor+2,w
  6557  1D30  1C03               	skipc
  6558  1D31  0F72               	incfsz	___lldiv@divisor+2,w
  6559  1D32  02F6               	subwf	___lldiv@dividend+2,f
  6560  1D33  0873               	movf	___lldiv@divisor+3,w
  6561  1D34  1C03               	skipc
  6562  1D35  0F73               	incfsz	___lldiv@divisor+3,w
  6563  1D36  02F7               	subwf	___lldiv@dividend+3,f
  6564  1D37                     l3146:
  6565  1D37  1479               	bsf	___lldiv@quotient,0
  6566  1D38                     l3148:
  6567  1D38  3001               	movlw	1
  6568  1D39                     u4865:
  6569  1D39  1003               	clrc
  6570  1D3A  0CF3               	rrf	___lldiv@divisor+3,f
  6571  1D3B  0CF2               	rrf	___lldiv@divisor+2,f
  6572  1D3C  0CF1               	rrf	___lldiv@divisor+1,f
  6573  1D3D  0CF0               	rrf	___lldiv@divisor,f
  6574  1D3E  3EFF               	addlw	-1
  6575  1D3F  1D03               	skipz
  6576  1D40  2D39               	goto	u4865
  6577  1D41                     l3150:
  6578  1D41  3001               	movlw	1
  6579  1D42  02FD               	subwf	___lldiv@counter,f
  6580  1D43  1D03               	btfss	3,2
  6581  1D44  2D46               	goto	u4871
  6582  1D45  2D47               	goto	u4870
  6583  1D46                     u4871:
  6584  1D46  2D0E               	goto	l3140
  6585  1D47                     u4870:
  6586  1D47                     l3152:
  6587  1D47  087C               	movf	___lldiv@quotient+3,w
  6588  1D48  00F3               	movwf	?___lldiv+3
  6589  1D49  087B               	movf	___lldiv@quotient+2,w
  6590  1D4A  00F2               	movwf	?___lldiv+2
  6591  1D4B  087A               	movf	___lldiv@quotient+1,w
  6592  1D4C  00F1               	movwf	?___lldiv+1
  6593  1D4D  0879               	movf	___lldiv@quotient,w
  6594  1D4E  00F0               	movwf	?___lldiv
  6595  1D4F                     l473:
  6596  1D4F  0008               	return
  6597  1D50                     __end_of___lldiv:
  6598                           
  6599                           	psect	text17
  6600  0806                     __ptext17:	
  6601 ;; *************** function ___fltol *****************
  6602 ;; Defined at:
  6603 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  f1              4   49[BANK0 ] unsigned long 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  exp1            1   59[BANK0 ] unsigned char 
  6608 ;;  sign1           1   58[BANK0 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  4   49[BANK0 ] long 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6618 ;;      Params:         0       4       0       0       0
  6619 ;;      Locals:         0       2       0       0       0
  6620 ;;      Temps:          0       5       0       0       0
  6621 ;;      Totals:         0      11       0       0       0
  6622 ;;Total ram usage:       11 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_sprintf
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function ___fltol
  6633  0806                     ___fltol:
  6634  0806                     l3196:	
  6635                           ;incstack = 0
  6636                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6637                           
  6638  0806  1003               	clrc
  6639  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6640  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6641  0809  0D53               	rlf	___fltol@f1+2,w
  6642  080A  0D54               	rlf	___fltol@f1+3,w
  6643  080B  00D5               	movwf	??___fltol
  6644  080C  0855               	movf	??___fltol,w
  6645  080D  00DB               	movwf	___fltol@exp1
  6646  080E  085B               	movf	___fltol@exp1,w
  6647  080F  1D03               	btfss	3,2
  6648  0810  2812               	goto	u4991
  6649  0811  2813               	goto	u4990
  6650  0812                     u4991:
  6651  0812  281C               	goto	l3202
  6652  0813                     u4990:
  6653  0813                     l3198:
  6654  0813  3000               	movlw	0
  6655  0814  00D4               	movwf	?___fltol+3
  6656  0815  3000               	movlw	0
  6657  0816  00D3               	movwf	?___fltol+2
  6658  0817  3000               	movlw	0
  6659  0818  00D2               	movwf	?___fltol+1
  6660  0819  3000               	movlw	0
  6661  081A  00D1               	movwf	?___fltol
  6662  081B  2881               	goto	l640
  6663  081C                     l3202:
  6664  081C  0851               	movf	___fltol@f1,w
  6665  081D  00D5               	movwf	??___fltol
  6666  081E  0852               	movf	___fltol@f1+1,w
  6667  081F  00D6               	movwf	??___fltol+1
  6668  0820  0853               	movf	___fltol@f1+2,w
  6669  0821  00D7               	movwf	??___fltol+2
  6670  0822  0854               	movf	___fltol@f1+3,w
  6671  0823  00D8               	movwf	??___fltol+3
  6672  0824  301F               	movlw	31
  6673  0825                     u5005:
  6674  0825  1003               	clrc
  6675  0826  0CD8               	rrf	??___fltol+3,f
  6676  0827  0CD7               	rrf	??___fltol+2,f
  6677  0828  0CD6               	rrf	??___fltol+1,f
  6678  0829  0CD5               	rrf	??___fltol,f
  6679  082A                     u5000:
  6680  082A  3EFF               	addlw	-1
  6681  082B  1D03               	skipz
  6682  082C  2825               	goto	u5005
  6683  082D  0855               	movf	??___fltol,w
  6684  082E  00D9               	movwf	??___fltol+4
  6685  082F  0859               	movf	??___fltol+4,w
  6686  0830  00DA               	movwf	___fltol@sign1
  6687  0831                     l3204:
  6688  0831  17D3               	bsf	___fltol@f1+2,7
  6689  0832                     l3206:
  6690  0832  30FF               	movlw	255
  6691  0833  05D1               	andwf	___fltol@f1,f
  6692  0834  30FF               	movlw	255
  6693  0835  05D2               	andwf	___fltol@f1+1,f
  6694  0836  30FF               	movlw	255
  6695  0837  05D3               	andwf	___fltol@f1+2,f
  6696  0838  3000               	movlw	0
  6697  0839  05D4               	andwf	___fltol@f1+3,f
  6698  083A                     l3208:
  6699  083A  3096               	movlw	150
  6700  083B  02DB               	subwf	___fltol@exp1,f
  6701  083C                     l3210:
  6702  083C  1FDB               	btfss	___fltol@exp1,7
  6703  083D  283F               	goto	u5011
  6704  083E  2840               	goto	u5010
  6705  083F                     u5011:
  6706  083F  285A               	goto	l3220
  6707  0840                     u5010:
  6708  0840                     l3212:
  6709  0840  085B               	movf	___fltol@exp1,w
  6710  0841  3A80               	xorlw	128
  6711  0842  3E97               	addlw	151
  6712  0843  1803               	skipnc
  6713  0844  2846               	goto	u5021
  6714  0845  2847               	goto	u5020
  6715  0846                     u5021:
  6716  0846  2848               	goto	l3218
  6717  0847                     u5020:
  6718  0847  2813               	goto	l3198
  6719  0848                     l3218:
  6720  0848  3001               	movlw	1
  6721  0849                     u5035:
  6722  0849  1003               	clrc
  6723  084A  0CD4               	rrf	___fltol@f1+3,f
  6724  084B  0CD3               	rrf	___fltol@f1+2,f
  6725  084C  0CD2               	rrf	___fltol@f1+1,f
  6726  084D  0CD1               	rrf	___fltol@f1,f
  6727  084E  3EFF               	addlw	-1
  6728  084F  1D03               	skipz
  6729  0850  2849               	goto	u5035
  6730  0851  3001               	movlw	1
  6731  0852  00D5               	movwf	??___fltol
  6732  0853  0855               	movf	??___fltol,w
  6733  0854  07DB               	addwf	___fltol@exp1,f
  6734  0855  1D03               	btfss	3,2
  6735  0856  2858               	goto	u5041
  6736  0857  2859               	goto	u5040
  6737  0858                     u5041:
  6738  0858  2848               	goto	l3218
  6739  0859                     u5040:
  6740  0859  2871               	goto	l3228
  6741  085A                     l3220:
  6742  085A  3020               	movlw	32
  6743  085B  025B               	subwf	___fltol@exp1,w
  6744  085C  1C03               	skipc
  6745  085D  285F               	goto	u5051
  6746  085E  2860               	goto	u5050
  6747  085F                     u5051:
  6748  085F  286C               	goto	l647
  6749  0860                     u5050:
  6750  0860  2813               	goto	l3198
  6751  0861                     l3226:
  6752  0861  3001               	movlw	1
  6753  0862  00D5               	movwf	??___fltol
  6754  0863                     u5065:
  6755  0863  1003               	clrc
  6756  0864  0DD1               	rlf	___fltol@f1,f
  6757  0865  0DD2               	rlf	___fltol@f1+1,f
  6758  0866  0DD3               	rlf	___fltol@f1+2,f
  6759  0867  0DD4               	rlf	___fltol@f1+3,f
  6760  0868  0BD5               	decfsz	??___fltol,f
  6761  0869  2863               	goto	u5065
  6762  086A  3001               	movlw	1
  6763  086B  02DB               	subwf	___fltol@exp1,f
  6764  086C                     l647:
  6765  086C  085B               	movf	___fltol@exp1,w
  6766  086D  1D03               	btfss	3,2
  6767  086E  2870               	goto	u5071
  6768  086F  2871               	goto	u5070
  6769  0870                     u5071:
  6770  0870  2861               	goto	l3226
  6771  0871                     u5070:
  6772  0871                     l3228:
  6773  0871  085A               	movf	___fltol@sign1,w
  6774  0872  1903               	btfsc	3,2
  6775  0873  2875               	goto	u5081
  6776  0874  2876               	goto	u5080
  6777  0875                     u5081:
  6778  0875  2881               	goto	l650
  6779  0876                     u5080:
  6780  0876                     l3230:
  6781  0876  09D1               	comf	___fltol@f1,f
  6782  0877  09D2               	comf	___fltol@f1+1,f
  6783  0878  09D3               	comf	___fltol@f1+2,f
  6784  0879  09D4               	comf	___fltol@f1+3,f
  6785  087A  0AD1               	incf	___fltol@f1,f
  6786  087B  1903               	skipnz
  6787  087C  0AD2               	incf	___fltol@f1+1,f
  6788  087D  1903               	skipnz
  6789  087E  0AD3               	incf	___fltol@f1+2,f
  6790  087F  1903               	skipnz
  6791  0880  0AD4               	incf	___fltol@f1+3,f
  6792  0881                     l650:
  6793  0881                     l640:
  6794  0881  0008               	return
  6795  0882                     __end_of___fltol:
  6796                           
  6797                           	psect	text18
  6798  1A2A                     __ptext18:	
  6799 ;; *************** function ___flsub *****************
  6800 ;; Defined at:
  6801 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  a               4   70[BANK0 ] long 
  6804 ;;  b               4   74[BANK0 ] long 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  4   70[BANK0 ] long 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6816 ;;      Params:         0       8       0       0       0
  6817 ;;      Locals:         0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0
  6819 ;;      Totals:         0       8       0       0       0
  6820 ;;Total ram usage:        8 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    1
  6823 ;; This function calls:
  6824 ;;		___fladd
  6825 ;; This function is called by:
  6826 ;;		_sprintf
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function ___flsub
  6832  1A2A                     ___flsub:
  6833  1A2A                     l3252:	
  6834                           ;incstack = 0
  6835                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6836                           
  6837  1A2A  3080               	movlw	128
  6838  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
  6839  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
  6840  1A2D  06E9               	xorwf	___flsub@a+3,f
  6841  1A2E                     l3254:
  6842  1A2E  086D               	movf	___flsub@b+3,w
  6843  1A2F  00D5               	movwf	___fladd@b+3
  6844  1A30  086C               	movf	___flsub@b+2,w
  6845  1A31  00D4               	movwf	___fladd@b+2
  6846  1A32  086B               	movf	___flsub@b+1,w
  6847  1A33  00D3               	movwf	___fladd@b+1
  6848  1A34  086A               	movf	___flsub@b,w
  6849  1A35  00D2               	movwf	___fladd@b
  6850  1A36  0869               	movf	___flsub@a+3,w
  6851  1A37  00D9               	movwf	___fladd@a+3
  6852  1A38  0868               	movf	___flsub@a+2,w
  6853  1A39  00D8               	movwf	___fladd@a+2
  6854  1A3A  0867               	movf	___flsub@a+1,w
  6855  1A3B  00D7               	movwf	___fladd@a+1
  6856  1A3C  0866               	movf	___flsub@a,w
  6857  1A3D  00D6               	movwf	___fladd@a
  6858  1A3E  160A  118A  22B6  160A  158A  	fcall	___fladd
  6859  1A43  1283               	bcf	3,5	;RP0=0, select bank0
  6860  1A44  1303               	bcf	3,6	;RP1=0, select bank0
  6861  1A45  0855               	movf	?___fladd+3,w
  6862  1A46  00E9               	movwf	?___flsub+3
  6863  1A47  0854               	movf	?___fladd+2,w
  6864  1A48  00E8               	movwf	?___flsub+2
  6865  1A49  0853               	movf	?___fladd+1,w
  6866  1A4A  00E7               	movwf	?___flsub+1
  6867  1A4B  0852               	movf	?___fladd,w
  6868  1A4C  00E6               	movwf	?___flsub
  6869  1A4D                     l810:
  6870  1A4D  0008               	return
  6871  1A4E                     __end_of___flsub:
  6872                           
  6873                           	psect	text19
  6874  12B6                     __ptext19:	
  6875 ;; *************** function ___fladd *****************
  6876 ;; Defined at:
  6877 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  b               4   50[BANK0 ] long 
  6880 ;;  a               4   54[BANK0 ] long 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  grs             1   69[BANK0 ] unsigned char 
  6883 ;;  bexp            1   68[BANK0 ] unsigned char 
  6884 ;;  aexp            1   67[BANK0 ] unsigned char 
  6885 ;;  signs           1   66[BANK0 ] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  4   50[BANK0 ] unsigned char 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0, btemp+1
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6895 ;;      Params:         0       8       0       0       0
  6896 ;;      Locals:         0       4       0       0       0
  6897 ;;      Temps:          0       8       0       0       0
  6898 ;;      Totals:         0      20       0       0       0
  6899 ;;Total ram usage:       20 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_sprintf
  6905 ;;		___flsub
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function ___fladd
  6911  12B6                     ___fladd:
  6912  12B6                     l2560:	
  6913                           ;incstack = 0
  6914                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6915                           
  6916  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  6917  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  6918  12B8  0855               	movf	___fladd@b+3,w
  6919  12B9  3980               	andlw	128
  6920  12BA  00DA               	movwf	??___fladd
  6921  12BB  085A               	movf	??___fladd,w
  6922  12BC  00E2               	movwf	___fladd@signs
  6923  12BD                     l2562:
  6924  12BD  0855               	movf	___fladd@b+3,w
  6925  12BE  00DA               	movwf	??___fladd
  6926  12BF  075A               	addwf	??___fladd,w
  6927  12C0  00DB               	movwf	??___fladd+1
  6928  12C1  085B               	movf	??___fladd+1,w
  6929  12C2  00E4               	movwf	___fladd@bexp
  6930  12C3                     l2564:
  6931  12C3  1FD4               	btfss	___fladd@b+2,7
  6932  12C4  2AC6               	goto	u3391
  6933  12C5  2AC7               	goto	u3390
  6934  12C6                     u3391:
  6935  12C6  2AC8               	goto	l2568
  6936  12C7                     u3390:
  6937  12C7                     l2566:
  6938  12C7  1464               	bsf	___fladd@bexp,0
  6939  12C8                     l2568:
  6940  12C8  0864               	movf	___fladd@bexp,w
  6941  12C9  1903               	btfsc	3,2
  6942  12CA  2ACC               	goto	u3401
  6943  12CB  2ACD               	goto	u3400
  6944  12CC                     u3401:
  6945  12CC  2ADD               	goto	l2578
  6946  12CD                     u3400:
  6947  12CD                     l2570:
  6948  12CD  0A64               	incf	___fladd@bexp,w
  6949  12CE  1D03               	btfss	3,2
  6950  12CF  2AD1               	goto	u3411
  6951  12D0  2AD2               	goto	u3410
  6952  12D1                     u3411:
  6953  12D1  2ADA               	goto	l2574
  6954  12D2                     u3410:
  6955  12D2                     l2572:
  6956  12D2  3000               	movlw	0
  6957  12D3  00D5               	movwf	___fladd@b+3
  6958  12D4  3000               	movlw	0
  6959  12D5  00D4               	movwf	___fladd@b+2
  6960  12D6  3000               	movlw	0
  6961  12D7  00D3               	movwf	___fladd@b+1
  6962  12D8  3000               	movlw	0
  6963  12D9  00D2               	movwf	___fladd@b
  6964  12DA                     l2574:
  6965  12DA  17D4               	bsf	___fladd@b+2,7
  6966  12DB                     l2576:
  6967  12DB  01D5               	clrf	___fladd@b+3
  6968  12DC  2AE5               	goto	l2580
  6969  12DD                     l2578:
  6970  12DD  3000               	movlw	0
  6971  12DE  00D5               	movwf	___fladd@b+3
  6972  12DF  3000               	movlw	0
  6973  12E0  00D4               	movwf	___fladd@b+2
  6974  12E1  3000               	movlw	0
  6975  12E2  00D3               	movwf	___fladd@b+1
  6976  12E3  3000               	movlw	0
  6977  12E4  00D2               	movwf	___fladd@b
  6978  12E5                     l2580:
  6979  12E5  0859               	movf	___fladd@a+3,w
  6980  12E6  3980               	andlw	128
  6981  12E7  00DA               	movwf	??___fladd
  6982  12E8  085A               	movf	??___fladd,w
  6983  12E9  00E3               	movwf	___fladd@aexp
  6984  12EA                     l2582:
  6985  12EA  0863               	movf	___fladd@aexp,w
  6986  12EB  0662               	xorwf	___fladd@signs,w
  6987  12EC  1903               	skipnz
  6988  12ED  2AEF               	goto	u3421
  6989  12EE  2AF0               	goto	u3420
  6990  12EF                     u3421:
  6991  12EF  2AF1               	goto	l2586
  6992  12F0                     u3420:
  6993  12F0                     l2584:
  6994  12F0  1762               	bsf	___fladd@signs,6
  6995  12F1                     l2586:
  6996  12F1  0859               	movf	___fladd@a+3,w
  6997  12F2  00DA               	movwf	??___fladd
  6998  12F3  075A               	addwf	??___fladd,w
  6999  12F4  00DB               	movwf	??___fladd+1
  7000  12F5  085B               	movf	??___fladd+1,w
  7001  12F6  00E3               	movwf	___fladd@aexp
  7002  12F7                     l2588:
  7003  12F7  1FD8               	btfss	___fladd@a+2,7
  7004  12F8  2AFA               	goto	u3431
  7005  12F9  2AFB               	goto	u3430
  7006  12FA                     u3431:
  7007  12FA  2AFC               	goto	l2592
  7008  12FB                     u3430:
  7009  12FB                     l2590:
  7010  12FB  1463               	bsf	___fladd@aexp,0
  7011  12FC                     l2592:
  7012  12FC  0863               	movf	___fladd@aexp,w
  7013  12FD  1903               	btfsc	3,2
  7014  12FE  2B00               	goto	u3441
  7015  12FF  2B01               	goto	u3440
  7016  1300                     u3441:
  7017  1300  2B11               	goto	l2602
  7018  1301                     u3440:
  7019  1301                     l2594:
  7020  1301  0A63               	incf	___fladd@aexp,w
  7021  1302  1D03               	btfss	3,2
  7022  1303  2B05               	goto	u3451
  7023  1304  2B06               	goto	u3450
  7024  1305                     u3451:
  7025  1305  2B0E               	goto	l2598
  7026  1306                     u3450:
  7027  1306                     l2596:
  7028  1306  3000               	movlw	0
  7029  1307  00D9               	movwf	___fladd@a+3
  7030  1308  3000               	movlw	0
  7031  1309  00D8               	movwf	___fladd@a+2
  7032  130A  3000               	movlw	0
  7033  130B  00D7               	movwf	___fladd@a+1
  7034  130C  3000               	movlw	0
  7035  130D  00D6               	movwf	___fladd@a
  7036  130E                     l2598:
  7037  130E  17D8               	bsf	___fladd@a+2,7
  7038  130F                     l2600:
  7039  130F  01D9               	clrf	___fladd@a+3
  7040  1310  2B19               	goto	l764
  7041  1311                     l2602:
  7042  1311  3000               	movlw	0
  7043  1312  00D9               	movwf	___fladd@a+3
  7044  1313  3000               	movlw	0
  7045  1314  00D8               	movwf	___fladd@a+2
  7046  1315  3000               	movlw	0
  7047  1316  00D7               	movwf	___fladd@a+1
  7048  1317  3000               	movlw	0
  7049  1318  00D6               	movwf	___fladd@a
  7050  1319                     l764:
  7051  1319  0864               	movf	___fladd@bexp,w
  7052  131A  0263               	subwf	___fladd@aexp,w
  7053  131B  1803               	skipnc
  7054  131C  2B1E               	goto	u3461
  7055  131D  2B1F               	goto	u3460
  7056  131E                     u3461:
  7057  131E  2B63               	goto	l2638
  7058  131F                     u3460:
  7059  131F                     l2604:
  7060  131F  1F62               	btfss	___fladd@signs,6
  7061  1320  2B22               	goto	u3471
  7062  1321  2B23               	goto	u3470
  7063  1322                     u3471:
  7064  1322  2B27               	goto	l2608
  7065  1323                     u3470:
  7066  1323                     l2606:
  7067  1323  3080               	movlw	128
  7068  1324  00DA               	movwf	??___fladd
  7069  1325  085A               	movf	??___fladd,w
  7070  1326  06E2               	xorwf	___fladd@signs,f
  7071  1327                     l2608:
  7072  1327  0864               	movf	___fladd@bexp,w
  7073  1328  00DA               	movwf	??___fladd
  7074  1329  085A               	movf	??___fladd,w
  7075  132A  00E5               	movwf	___fladd@grs
  7076  132B                     l2610:
  7077  132B  0863               	movf	___fladd@aexp,w
  7078  132C  00DA               	movwf	??___fladd
  7079  132D  085A               	movf	??___fladd,w
  7080  132E  00E4               	movwf	___fladd@bexp
  7081  132F                     l2612:
  7082  132F  0865               	movf	___fladd@grs,w
  7083  1330  00DA               	movwf	??___fladd
  7084  1331  085A               	movf	??___fladd,w
  7085  1332  00E3               	movwf	___fladd@aexp
  7086  1333                     l2614:
  7087  1333  0852               	movf	___fladd@b,w
  7088  1334  00DA               	movwf	??___fladd
  7089  1335  085A               	movf	??___fladd,w
  7090  1336  00E5               	movwf	___fladd@grs
  7091  1337                     l2616:
  7092  1337  0856               	movf	___fladd@a,w
  7093  1338  00DA               	movwf	??___fladd
  7094  1339  085A               	movf	??___fladd,w
  7095  133A  00D2               	movwf	___fladd@b
  7096  133B                     l2618:
  7097  133B  0865               	movf	___fladd@grs,w
  7098  133C  00DA               	movwf	??___fladd
  7099  133D  085A               	movf	??___fladd,w
  7100  133E  00D6               	movwf	___fladd@a
  7101  133F                     l2620:
  7102  133F  0853               	movf	___fladd@b+1,w
  7103  1340  00DA               	movwf	??___fladd
  7104  1341  085A               	movf	??___fladd,w
  7105  1342  00E5               	movwf	___fladd@grs
  7106  1343                     l2622:
  7107  1343  0857               	movf	___fladd@a+1,w
  7108  1344  00DA               	movwf	??___fladd
  7109  1345  085A               	movf	??___fladd,w
  7110  1346  00D3               	movwf	___fladd@b+1
  7111  1347                     l2624:
  7112  1347  0865               	movf	___fladd@grs,w
  7113  1348  00DA               	movwf	??___fladd
  7114  1349  085A               	movf	??___fladd,w
  7115  134A  00D7               	movwf	___fladd@a+1
  7116  134B                     l2626:
  7117  134B  0854               	movf	___fladd@b+2,w
  7118  134C  00DA               	movwf	??___fladd
  7119  134D  085A               	movf	??___fladd,w
  7120  134E  00E5               	movwf	___fladd@grs
  7121  134F                     l2628:
  7122  134F  0858               	movf	___fladd@a+2,w
  7123  1350  00DA               	movwf	??___fladd
  7124  1351  085A               	movf	??___fladd,w
  7125  1352  00D4               	movwf	___fladd@b+2
  7126  1353                     l2630:
  7127  1353  0865               	movf	___fladd@grs,w
  7128  1354  00DA               	movwf	??___fladd
  7129  1355  085A               	movf	??___fladd,w
  7130  1356  00D8               	movwf	___fladd@a+2
  7131  1357                     l2632:
  7132  1357  0855               	movf	___fladd@b+3,w
  7133  1358  00DA               	movwf	??___fladd
  7134  1359  085A               	movf	??___fladd,w
  7135  135A  00E5               	movwf	___fladd@grs
  7136  135B                     l2634:
  7137  135B  0859               	movf	___fladd@a+3,w
  7138  135C  00DA               	movwf	??___fladd
  7139  135D  085A               	movf	??___fladd,w
  7140  135E  00D5               	movwf	___fladd@b+3
  7141  135F                     l2636:
  7142  135F  0865               	movf	___fladd@grs,w
  7143  1360  00DA               	movwf	??___fladd
  7144  1361  085A               	movf	??___fladd,w
  7145  1362  00D9               	movwf	___fladd@a+3
  7146  1363                     l2638:
  7147  1363  01E5               	clrf	___fladd@grs
  7148  1364                     l2640:
  7149  1364  0863               	movf	___fladd@aexp,w
  7150  1365  00DA               	movwf	??___fladd
  7151  1366  01DB               	clrf	??___fladd+1
  7152  1367  085B               	movf	??___fladd+1,w
  7153  1368  00DD               	movwf	??___fladd+3
  7154  1369  0864               	movf	___fladd@bexp,w
  7155  136A  025A               	subwf	??___fladd,w
  7156  136B  00DC               	movwf	??___fladd+2
  7157  136C  1C03               	skipc
  7158  136D  03DD               	decf	??___fladd+3,f
  7159  136E  085D               	movf	??___fladd+3,w
  7160  136F  3A80               	xorlw	128
  7161  1370  00FF               	movwf	btemp+1
  7162  1371  3080               	movlw	128
  7163  1372  027F               	subwf	btemp+1,w
  7164  1373  1D03               	skipz
  7165  1374  2B77               	goto	u3485
  7166  1375  301A               	movlw	26
  7167  1376  025C               	subwf	??___fladd+2,w
  7168  1377                     u3485:
  7169  1377  1C03               	skipc
  7170  1378  2B7A               	goto	u3481
  7171  1379  2B7B               	goto	u3480
  7172  137A                     u3481:
  7173  137A  2BB8               	goto	l2656
  7174  137B                     u3480:
  7175  137B                     l2642:
  7176  137B  1283               	bcf	3,5	;RP0=0, select bank0
  7177  137C  1303               	bcf	3,6	;RP1=0, select bank0
  7178  137D  0855               	movf	___fladd@b+3,w
  7179  137E  0454               	iorwf	___fladd@b+2,w
  7180  137F  0453               	iorwf	___fladd@b+1,w
  7181  1380  0452               	iorwf	___fladd@b,w
  7182  1381  1D03               	skipz
  7183  1382  2B84               	goto	u3491
  7184  1383  2B86               	goto	u3490
  7185  1384                     u3491:
  7186  1384  3001               	movlw	1
  7187  1385  2B87               	goto	u3500
  7188  1386                     u3490:
  7189  1386  3000               	movlw	0
  7190  1387                     u3500:
  7191  1387  00DA               	movwf	??___fladd
  7192  1388  085A               	movf	??___fladd,w
  7193  1389  00E5               	movwf	___fladd@grs
  7194  138A  3000               	movlw	0
  7195  138B  00D5               	movwf	___fladd@b+3
  7196  138C  3000               	movlw	0
  7197  138D  00D4               	movwf	___fladd@b+2
  7198  138E  3000               	movlw	0
  7199  138F  00D3               	movwf	___fladd@b+1
  7200  1390  3000               	movlw	0
  7201  1391  00D2               	movwf	___fladd@b
  7202  1392  0863               	movf	___fladd@aexp,w
  7203  1393  00DA               	movwf	??___fladd
  7204  1394  085A               	movf	??___fladd,w
  7205  1395  00E4               	movwf	___fladd@bexp
  7206  1396  2BC0               	goto	l768
  7207  1397                     l770:
  7208  1397  1C65               	btfss	___fladd@grs,0
  7209  1398  2B9A               	goto	u3511
  7210  1399  2B9B               	goto	u3510
  7211  139A                     u3511:
  7212  139A  2BA4               	goto	l2646
  7213  139B                     u3510:
  7214  139B                     l2644:
  7215  139B  0865               	movf	___fladd@grs,w
  7216  139C  00DA               	movwf	??___fladd
  7217  139D  1003               	clrc
  7218  139E  0C5A               	rrf	??___fladd,w
  7219  139F  3801               	iorlw	1
  7220  13A0  00DB               	movwf	??___fladd+1
  7221  13A1  085B               	movf	??___fladd+1,w
  7222  13A2  00E5               	movwf	___fladd@grs
  7223  13A3  2BA6               	goto	l2648
  7224  13A4                     l2646:
  7225  13A4  1003               	clrc
  7226  13A5  0CE5               	rrf	___fladd@grs,f
  7227  13A6                     l2648:
  7228  13A6  1C52               	btfss	___fladd@b,0
  7229  13A7  2BA9               	goto	u3521
  7230  13A8  2BAA               	goto	u3520
  7231  13A9                     u3521:
  7232  13A9  2BAB               	goto	l2652
  7233  13AA                     u3520:
  7234  13AA                     l2650:
  7235  13AA  17E5               	bsf	___fladd@grs,7
  7236  13AB                     l2652:
  7237  13AB  3001               	movlw	1
  7238  13AC  00DA               	movwf	??___fladd
  7239  13AD                     u3535:
  7240  13AD  0D55               	rlf	___fladd@b+3,w
  7241  13AE  0CD5               	rrf	___fladd@b+3,f
  7242  13AF  0CD4               	rrf	___fladd@b+2,f
  7243  13B0  0CD3               	rrf	___fladd@b+1,f
  7244  13B1  0CD2               	rrf	___fladd@b,f
  7245  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  7246  13B3  2BAD               	goto	u3535
  7247  13B4                     l2654:
  7248  13B4  3001               	movlw	1
  7249  13B5  00DA               	movwf	??___fladd
  7250  13B6  085A               	movf	??___fladd,w
  7251  13B7  07E4               	addwf	___fladd@bexp,f
  7252  13B8                     l2656:
  7253  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  7254  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  7255  13BA  0863               	movf	___fladd@aexp,w
  7256  13BB  0264               	subwf	___fladd@bexp,w
  7257  13BC  1C03               	skipc
  7258  13BD  2BBF               	goto	u3541
  7259  13BE  2BC0               	goto	u3540
  7260  13BF                     u3541:
  7261  13BF  2B97               	goto	l770
  7262  13C0                     u3540:
  7263  13C0                     l768:
  7264  13C0  1B62               	btfsc	___fladd@signs,6
  7265  13C1  2BC3               	goto	u3551
  7266  13C2  2BC4               	goto	u3550
  7267  13C3                     u3551:
  7268  13C3  2C0F               	goto	l2682
  7269  13C4                     u3550:
  7270  13C4                     l2658:
  7271  13C4  0864               	movf	___fladd@bexp,w
  7272  13C5  1D03               	btfss	3,2
  7273  13C6  2BC8               	goto	u3561
  7274  13C7  2BC9               	goto	u3560
  7275  13C8                     u3561:
  7276  13C8  2BD2               	goto	l2664
  7277  13C9                     u3560:
  7278  13C9                     l2660:
  7279  13C9  3000               	movlw	0
  7280  13CA  00D5               	movwf	?___fladd+3
  7281  13CB  3000               	movlw	0
  7282  13CC  00D4               	movwf	?___fladd+2
  7283  13CD  3000               	movlw	0
  7284  13CE  00D3               	movwf	?___fladd+1
  7285  13CF  3000               	movlw	0
  7286  13D0  00D2               	movwf	?___fladd
  7287  13D1  2D3D               	goto	l777
  7288  13D2                     l2664:
  7289  13D2  0856               	movf	___fladd@a,w
  7290  13D3  07D2               	addwf	___fladd@b,f
  7291  13D4  0857               	movf	___fladd@a+1,w
  7292  13D5  1103               	clrz
  7293  13D6  1803               	skipnc
  7294  13D7  3E01               	addlw	1
  7295  13D8  1903               	skipnz
  7296  13D9  2BDB               	goto	u3571
  7297  13DA  07D3               	addwf	___fladd@b+1,f
  7298  13DB                     u3571:
  7299  13DB  0858               	movf	___fladd@a+2,w
  7300  13DC  1103               	clrz
  7301  13DD  1803               	skipnc
  7302  13DE  3E01               	addlw	1
  7303  13DF  1903               	skipnz
  7304  13E0  2BE2               	goto	u3572
  7305  13E1  07D4               	addwf	___fladd@b+2,f
  7306  13E2                     u3572:
  7307  13E2  0859               	movf	___fladd@a+3,w
  7308  13E3  1103               	clrz
  7309  13E4  1803               	skipnc
  7310  13E5  3E01               	addlw	1
  7311  13E6  1903               	skipnz
  7312  13E7  2BE9               	goto	u3573
  7313  13E8  07D5               	addwf	___fladd@b+3,f
  7314  13E9                     u3573:
  7315  13E9                     l2666:
  7316  13E9  1C55               	btfss	___fladd@b+3,0
  7317  13EA  2BEC               	goto	u3581
  7318  13EB  2BED               	goto	u3580
  7319  13EC                     u3581:
  7320  13EC  2CC3               	goto	l2716
  7321  13ED                     u3580:
  7322  13ED                     l2668:
  7323  13ED  1C65               	btfss	___fladd@grs,0
  7324  13EE  2BF0               	goto	u3591
  7325  13EF  2BF1               	goto	u3590
  7326  13F0                     u3591:
  7327  13F0  2BFA               	goto	l2672
  7328  13F1                     u3590:
  7329  13F1                     l2670:
  7330  13F1  0865               	movf	___fladd@grs,w
  7331  13F2  00DA               	movwf	??___fladd
  7332  13F3  1003               	clrc
  7333  13F4  0C5A               	rrf	??___fladd,w
  7334  13F5  3801               	iorlw	1
  7335  13F6  00DB               	movwf	??___fladd+1
  7336  13F7  085B               	movf	??___fladd+1,w
  7337  13F8  00E5               	movwf	___fladd@grs
  7338  13F9  2BFC               	goto	l2674
  7339  13FA                     l2672:
  7340  13FA  1003               	clrc
  7341  13FB  0CE5               	rrf	___fladd@grs,f
  7342  13FC                     l2674:
  7343  13FC  1C52               	btfss	___fladd@b,0
  7344  13FD  2BFF               	goto	u3601
  7345  13FE  2C00               	goto	u3600
  7346  13FF                     u3601:
  7347  13FF  2C01               	goto	l2678
  7348  1400                     u3600:
  7349  1400                     l2676:
  7350  1400  17E5               	bsf	___fladd@grs,7
  7351  1401                     l2678:
  7352  1401  3001               	movlw	1
  7353  1402  00DA               	movwf	??___fladd
  7354  1403                     u3615:
  7355  1403  0D55               	rlf	___fladd@b+3,w
  7356  1404  0CD5               	rrf	___fladd@b+3,f
  7357  1405  0CD4               	rrf	___fladd@b+2,f
  7358  1406  0CD3               	rrf	___fladd@b+1,f
  7359  1407  0CD2               	rrf	___fladd@b,f
  7360  1408  0BDA               	decfsz	??___fladd& (0+127),f
  7361  1409  2C03               	goto	u3615
  7362  140A                     l2680:
  7363  140A  3001               	movlw	1
  7364  140B  00DA               	movwf	??___fladd
  7365  140C  085A               	movf	??___fladd,w
  7366  140D  07E4               	addwf	___fladd@bexp,f
  7367  140E  2CC3               	goto	l2716
  7368  140F                     l2682:
  7369  140F  0855               	movf	___fladd@b+3,w
  7370  1410  3A80               	xorlw	128
  7371  1411  00FF               	movwf	btemp+1
  7372  1412  0859               	movf	___fladd@a+3,w
  7373  1413  3A80               	xorlw	128
  7374  1414  027F               	subwf	btemp+1,w
  7375  1415  1D03               	skipz
  7376  1416  2C21               	goto	u3623
  7377  1417  0858               	movf	___fladd@a+2,w
  7378  1418  0254               	subwf	___fladd@b+2,w
  7379  1419  1D03               	skipz
  7380  141A  2C21               	goto	u3623
  7381  141B  0857               	movf	___fladd@a+1,w
  7382  141C  0253               	subwf	___fladd@b+1,w
  7383  141D  1D03               	skipz
  7384  141E  2C21               	goto	u3623
  7385  141F  0856               	movf	___fladd@a,w
  7386  1420  0252               	subwf	___fladd@b,w
  7387  1421                     u3623:
  7388  1421  1803               	skipnc
  7389  1422  2C24               	goto	u3621
  7390  1423  2C25               	goto	u3620
  7391  1424                     u3621:
  7392  1424  2C7D               	goto	l2692
  7393  1425                     u3620:
  7394  1425                     l2684:
  7395  1425  30FF               	movlw	255
  7396  1426  00DA               	movwf	??___fladd
  7397  1427  30FF               	movlw	255
  7398  1428  00DB               	movwf	??___fladd+1
  7399  1429  30FF               	movlw	255
  7400  142A  00DC               	movwf	??___fladd+2
  7401  142B  30FF               	movlw	255
  7402  142C  00DD               	movwf	??___fladd+3
  7403  142D  0856               	movf	___fladd@a,w
  7404  142E  00DE               	movwf	??___fladd+4
  7405  142F  0857               	movf	___fladd@a+1,w
  7406  1430  00DF               	movwf	??___fladd+5
  7407  1431  0858               	movf	___fladd@a+2,w
  7408  1432  00E0               	movwf	??___fladd+6
  7409  1433  0859               	movf	___fladd@a+3,w
  7410  1434  00E1               	movwf	??___fladd+7
  7411  1435  0852               	movf	___fladd@b,w
  7412  1436  02DE               	subwf	??___fladd+4,f
  7413  1437  0853               	movf	___fladd@b+1,w
  7414  1438  1C03               	skipc
  7415  1439  0F53               	incfsz	___fladd@b+1,w
  7416  143A  2C3C               	goto	u3631
  7417  143B  2C3D               	goto	u3632
  7418  143C                     u3631:
  7419  143C  02DF               	subwf	??___fladd+5,f
  7420  143D                     u3632:
  7421  143D  0854               	movf	___fladd@b+2,w
  7422  143E  1C03               	skipc
  7423  143F  0F54               	incfsz	___fladd@b+2,w
  7424  1440  2C42               	goto	u3633
  7425  1441  2C43               	goto	u3634
  7426  1442                     u3633:
  7427  1442  02E0               	subwf	??___fladd+6,f
  7428  1443                     u3634:
  7429  1443  0855               	movf	___fladd@b+3,w
  7430  1444  1C03               	skipc
  7431  1445  0F55               	incfsz	___fladd@b+3,w
  7432  1446  2C48               	goto	u3635
  7433  1447  2C49               	goto	u3636
  7434  1448                     u3635:
  7435  1448  02E1               	subwf	??___fladd+7,f
  7436  1449                     u3636:
  7437  1449  085E               	movf	??___fladd+4,w
  7438  144A  07DA               	addwf	??___fladd,f
  7439  144B  085F               	movf	??___fladd+5,w
  7440  144C  1803               	skipnc
  7441  144D  0F5F               	incfsz	??___fladd+5,w
  7442  144E  2C50               	goto	u3640
  7443  144F  2C51               	goto	u3641
  7444  1450                     u3640:
  7445  1450  07DB               	addwf	??___fladd+1,f
  7446  1451                     u3641:
  7447  1451  0860               	movf	??___fladd+6,w
  7448  1452  1803               	skipnc
  7449  1453  0F60               	incfsz	??___fladd+6,w
  7450  1454  2C56               	goto	u3642
  7451  1455  2C57               	goto	u3643
  7452  1456                     u3642:
  7453  1456  07DC               	addwf	??___fladd+2,f
  7454  1457                     u3643:
  7455  1457  0861               	movf	??___fladd+7,w
  7456  1458  1803               	skipnc
  7457  1459  0A61               	incf	??___fladd+7,w
  7458  145A  07DD               	addwf	??___fladd+3,f
  7459  145B  085D               	movf	??___fladd+3,w
  7460  145C  00D5               	movwf	___fladd@b+3
  7461  145D  085C               	movf	??___fladd+2,w
  7462  145E  00D4               	movwf	___fladd@b+2
  7463  145F  085B               	movf	??___fladd+1,w
  7464  1460  00D3               	movwf	___fladd@b+1
  7465  1461  085A               	movf	??___fladd,w
  7466  1462  00D2               	movwf	___fladd@b
  7467  1463                     l2686:
  7468  1463  3080               	movlw	128
  7469  1464  00DA               	movwf	??___fladd
  7470  1465  085A               	movf	??___fladd,w
  7471  1466  06E2               	xorwf	___fladd@signs,f
  7472  1467  09E5               	comf	___fladd@grs,f
  7473  1468  0AE5               	incf	___fladd@grs,f
  7474  1469                     l2688:
  7475  1469  0865               	movf	___fladd@grs,w
  7476  146A  1D03               	btfss	3,2
  7477  146B  2C6D               	goto	u3651
  7478  146C  2C6E               	goto	u3650
  7479  146D                     u3651:
  7480  146D  2C8B               	goto	l785
  7481  146E                     u3650:
  7482  146E                     l2690:
  7483  146E  3001               	movlw	1
  7484  146F  07D2               	addwf	___fladd@b,f
  7485  1470  3000               	movlw	0
  7486  1471  1803               	skipnc
  7487  1472  3001               	movlw	1
  7488  1473  07D3               	addwf	___fladd@b+1,f
  7489  1474  3000               	movlw	0
  7490  1475  1803               	skipnc
  7491  1476  3001               	movlw	1
  7492  1477  07D4               	addwf	___fladd@b+2,f
  7493  1478  3000               	movlw	0
  7494  1479  1803               	skipnc
  7495  147A  3001               	movlw	1
  7496  147B  07D5               	addwf	___fladd@b+3,f
  7497  147C  2C8B               	goto	l785
  7498  147D                     l2692:
  7499  147D  0856               	movf	___fladd@a,w
  7500  147E  02D2               	subwf	___fladd@b,f
  7501  147F  0857               	movf	___fladd@a+1,w
  7502  1480  1C03               	skipc
  7503  1481  0F57               	incfsz	___fladd@a+1,w
  7504  1482  02D3               	subwf	___fladd@b+1,f
  7505  1483  0858               	movf	___fladd@a+2,w
  7506  1484  1C03               	skipc
  7507  1485  0F58               	incfsz	___fladd@a+2,w
  7508  1486  02D4               	subwf	___fladd@b+2,f
  7509  1487  0859               	movf	___fladd@a+3,w
  7510  1488  1C03               	skipc
  7511  1489  0F59               	incfsz	___fladd@a+3,w
  7512  148A  02D5               	subwf	___fladd@b+3,f
  7513  148B                     l785:
  7514  148B  0855               	movf	___fladd@b+3,w
  7515  148C  0454               	iorwf	___fladd@b+2,w
  7516  148D  0453               	iorwf	___fladd@b+1,w
  7517  148E  0452               	iorwf	___fladd@b,w
  7518  148F  1D03               	skipz
  7519  1490  2C92               	goto	u3661
  7520  1491  2C93               	goto	u3660
  7521  1492                     u3661:
  7522  1492  2CBF               	goto	l2714
  7523  1493                     u3660:
  7524  1493                     l2694:
  7525  1493  0865               	movf	___fladd@grs,w
  7526  1494  1D03               	btfss	3,2
  7527  1495  2C97               	goto	u3671
  7528  1496  2C98               	goto	u3670
  7529  1497                     u3671:
  7530  1497  2CBF               	goto	l2714
  7531  1498                     u3670:
  7532  1498                     l2696:
  7533  1498  3000               	movlw	0
  7534  1499  00D5               	movwf	?___fladd+3
  7535  149A  3000               	movlw	0
  7536  149B  00D4               	movwf	?___fladd+2
  7537  149C  3000               	movlw	0
  7538  149D  00D3               	movwf	?___fladd+1
  7539  149E  3000               	movlw	0
  7540  149F  00D2               	movwf	?___fladd
  7541  14A0  2D3D               	goto	l777
  7542  14A1                     l2700:
  7543  14A1  3001               	movlw	1
  7544  14A2  00DA               	movwf	??___fladd
  7545  14A3                     u3685:
  7546  14A3  1003               	clrc
  7547  14A4  0DD2               	rlf	___fladd@b,f
  7548  14A5  0DD3               	rlf	___fladd@b+1,f
  7549  14A6  0DD4               	rlf	___fladd@b+2,f
  7550  14A7  0DD5               	rlf	___fladd@b+3,f
  7551  14A8  0BDA               	decfsz	??___fladd,f
  7552  14A9  2CA3               	goto	u3685
  7553  14AA                     l2702:
  7554  14AA  1FE5               	btfss	___fladd@grs,7
  7555  14AB  2CAD               	goto	u3691
  7556  14AC  2CAE               	goto	u3690
  7557  14AD                     u3691:
  7558  14AD  2CAF               	goto	l789
  7559  14AE                     u3690:
  7560  14AE                     l2704:
  7561  14AE  1452               	bsf	___fladd@b,0
  7562  14AF                     l789:
  7563  14AF  1C65               	btfss	___fladd@grs,0
  7564  14B0  2CB2               	goto	u3701
  7565  14B1  2CB3               	goto	u3700
  7566  14B2                     u3701:
  7567  14B2  2CB6               	goto	l2708
  7568  14B3                     u3700:
  7569  14B3                     l2706:
  7570  14B3  1403               	setc
  7571  14B4  0DE5               	rlf	___fladd@grs,f
  7572  14B5  2CB8               	goto	l2710
  7573  14B6                     l2708:
  7574  14B6  1003               	clrc
  7575  14B7  0DE5               	rlf	___fladd@grs,f
  7576  14B8                     l2710:
  7577  14B8  0864               	movf	___fladd@bexp,w
  7578  14B9  1903               	btfsc	3,2
  7579  14BA  2CBC               	goto	u3711
  7580  14BB  2CBD               	goto	u3710
  7581  14BC                     u3711:
  7582  14BC  2CBF               	goto	l2714
  7583  14BD                     u3710:
  7584  14BD                     l2712:
  7585  14BD  3001               	movlw	1
  7586  14BE  02E4               	subwf	___fladd@bexp,f
  7587  14BF                     l2714:
  7588  14BF  1FD4               	btfss	___fladd@b+2,7
  7589  14C0  2CC2               	goto	u3721
  7590  14C1  2CC3               	goto	u3720
  7591  14C2                     u3721:
  7592  14C2  2CA1               	goto	l2700
  7593  14C3                     u3720:
  7594  14C3                     l2716:
  7595  14C3  01E3               	clrf	___fladd@aexp
  7596  14C4                     l2718:
  7597  14C4  1FE5               	btfss	___fladd@grs,7
  7598  14C5  2CC7               	goto	u3731
  7599  14C6  2CC8               	goto	u3730
  7600  14C7                     u3731:
  7601  14C7  2CD6               	goto	l2726
  7602  14C8                     u3730:
  7603  14C8                     l2720:
  7604  14C8  0865               	movf	___fladd@grs,w
  7605  14C9  397F               	andlw	127
  7606  14CA  1903               	btfsc	3,2
  7607  14CB  2CCD               	goto	u3741
  7608  14CC  2CCE               	goto	u3740
  7609  14CD                     u3741:
  7610  14CD  2CD1               	goto	l795
  7611  14CE                     u3740:
  7612  14CE                     l2722:
  7613  14CE  01E3               	clrf	___fladd@aexp
  7614  14CF  0AE3               	incf	___fladd@aexp,f
  7615  14D0  2CD6               	goto	l2726
  7616  14D1                     l795:
  7617  14D1  1C52               	btfss	___fladd@b,0
  7618  14D2  2CD4               	goto	u3751
  7619  14D3  2CD5               	goto	u3750
  7620  14D4                     u3751:
  7621  14D4  2CD6               	goto	l2726
  7622  14D5                     u3750:
  7623  14D5  2CCE               	goto	l2722
  7624  14D6                     l2726:
  7625  14D6  0863               	movf	___fladd@aexp,w
  7626  14D7  1903               	btfsc	3,2
  7627  14D8  2CDA               	goto	u3761
  7628  14D9  2CDB               	goto	u3760
  7629  14DA                     u3761:
  7630  14DA  2D0F               	goto	l798
  7631  14DB                     u3760:
  7632  14DB                     l2728:
  7633  14DB  3001               	movlw	1
  7634  14DC  07D2               	addwf	___fladd@b,f
  7635  14DD  3000               	movlw	0
  7636  14DE  1803               	skipnc
  7637  14DF  3001               	movlw	1
  7638  14E0  07D3               	addwf	___fladd@b+1,f
  7639  14E1  3000               	movlw	0
  7640  14E2  1803               	skipnc
  7641  14E3  3001               	movlw	1
  7642  14E4  07D4               	addwf	___fladd@b+2,f
  7643  14E5  3000               	movlw	0
  7644  14E6  1803               	skipnc
  7645  14E7  3001               	movlw	1
  7646  14E8  07D5               	addwf	___fladd@b+3,f
  7647  14E9                     l2730:
  7648  14E9  1C55               	btfss	___fladd@b+3,0
  7649  14EA  2CEC               	goto	u3771
  7650  14EB  2CED               	goto	u3770
  7651  14EC                     u3771:
  7652  14EC  2D0F               	goto	l798
  7653  14ED                     u3770:
  7654  14ED                     l2732:
  7655  14ED  0852               	movf	___fladd@b,w
  7656  14EE  00DA               	movwf	??___fladd
  7657  14EF  0853               	movf	___fladd@b+1,w
  7658  14F0  00DB               	movwf	??___fladd+1
  7659  14F1  0854               	movf	___fladd@b+2,w
  7660  14F2  00DC               	movwf	??___fladd+2
  7661  14F3  0855               	movf	___fladd@b+3,w
  7662  14F4  00DD               	movwf	??___fladd+3
  7663  14F5  3001               	movlw	1
  7664  14F6  00DE               	movwf	??___fladd+4
  7665  14F7                     u3785:
  7666  14F7  0D5D               	rlf	??___fladd+3,w
  7667  14F8  0CDD               	rrf	??___fladd+3,f
  7668  14F9  0CDC               	rrf	??___fladd+2,f
  7669  14FA  0CDB               	rrf	??___fladd+1,f
  7670  14FB  0CDA               	rrf	??___fladd,f
  7671  14FC                     u3780:
  7672  14FC  0BDE               	decfsz	??___fladd+4,f
  7673  14FD  2CF7               	goto	u3785
  7674  14FE  085D               	movf	??___fladd+3,w
  7675  14FF  00D5               	movwf	___fladd@b+3
  7676  1500  085C               	movf	??___fladd+2,w
  7677  1501  00D4               	movwf	___fladd@b+2
  7678  1502  085B               	movf	??___fladd+1,w
  7679  1503  00D3               	movwf	___fladd@b+1
  7680  1504  085A               	movf	??___fladd,w
  7681  1505  00D2               	movwf	___fladd@b
  7682  1506  0A64               	incf	___fladd@bexp,w
  7683  1507  1903               	btfsc	3,2
  7684  1508  2D0A               	goto	u3791
  7685  1509  2D0B               	goto	u3790
  7686  150A                     u3791:
  7687  150A  2D0F               	goto	l798
  7688  150B                     u3790:
  7689  150B                     l2734:
  7690  150B  3001               	movlw	1
  7691  150C  00DA               	movwf	??___fladd
  7692  150D  085A               	movf	??___fladd,w
  7693  150E  07E4               	addwf	___fladd@bexp,f
  7694  150F                     l798:
  7695  150F  0A64               	incf	___fladd@bexp,w
  7696  1510  1903               	btfsc	3,2
  7697  1511  2D13               	goto	u3801
  7698  1512  2D14               	goto	u3800
  7699  1513                     u3801:
  7700  1513  2D19               	goto	l2738
  7701  1514                     u3800:
  7702  1514                     l2736:
  7703  1514  0864               	movf	___fladd@bexp,w
  7704  1515  1D03               	btfss	3,2
  7705  1516  2D18               	goto	u3811
  7706  1517  2D19               	goto	u3810
  7707  1518                     u3811:
  7708  1518  2D27               	goto	l2744
  7709  1519                     u3810:
  7710  1519                     l2738:
  7711  1519  3000               	movlw	0
  7712  151A  00D5               	movwf	___fladd@b+3
  7713  151B  3000               	movlw	0
  7714  151C  00D4               	movwf	___fladd@b+2
  7715  151D  3000               	movlw	0
  7716  151E  00D3               	movwf	___fladd@b+1
  7717  151F  3000               	movlw	0
  7718  1520  00D2               	movwf	___fladd@b
  7719  1521                     l2740:
  7720  1521  0864               	movf	___fladd@bexp,w
  7721  1522  1D03               	btfss	3,2
  7722  1523  2D25               	goto	u3821
  7723  1524  2D26               	goto	u3820
  7724  1525                     u3821:
  7725  1525  2D27               	goto	l2744
  7726  1526                     u3820:
  7727  1526                     l2742:
  7728  1526  01E2               	clrf	___fladd@signs
  7729  1527                     l2744:
  7730  1527  1C64               	btfss	___fladd@bexp,0
  7731  1528  2D2A               	goto	u3831
  7732  1529  2D2B               	goto	u3830
  7733  152A                     u3831:
  7734  152A  2D2D               	goto	l2748
  7735  152B                     u3830:
  7736  152B                     l2746:
  7737  152B  17D4               	bsf	___fladd@b+2,7
  7738  152C  2D31               	goto	l806
  7739  152D                     l2748:
  7740  152D  307F               	movlw	127
  7741  152E  00DA               	movwf	??___fladd
  7742  152F  085A               	movf	??___fladd,w
  7743  1530  05D4               	andwf	___fladd@b+2,f
  7744  1531                     l806:
  7745  1531  0864               	movf	___fladd@bexp,w
  7746  1532  00DA               	movwf	??___fladd
  7747  1533  1003               	clrc
  7748  1534  0C5A               	rrf	??___fladd,w
  7749  1535  00DB               	movwf	??___fladd+1
  7750  1536  085B               	movf	??___fladd+1,w
  7751  1537  00D5               	movwf	___fladd@b+3
  7752  1538                     l2750:
  7753  1538  1FE2               	btfss	___fladd@signs,7
  7754  1539  2D3B               	goto	u3841
  7755  153A  2D3C               	goto	u3840
  7756  153B                     u3841:
  7757  153B  2D3D               	goto	l807
  7758  153C                     u3840:
  7759  153C                     l2752:
  7760  153C  17D5               	bsf	___fladd@b+3,7
  7761  153D                     l807:
  7762  153D                     l777:
  7763  153D  0008               	return
  7764  153E                     __end_of___fladd:
  7765                           
  7766                           	psect	text20
  7767  1958                     __ptext20:	
  7768 ;; *************** function ___flneg *****************
  7769 ;; Defined at:
  7770 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  f1              4    0[COMMON] unsigned char 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  4    0[COMMON] unsigned char 
  7777 ;; Registers used:
  7778 ;;		wreg
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7784 ;;      Params:         4       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0
  7787 ;;      Totals:         4       0       0       0       0
  7788 ;;Total ram usage:        4 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_sprintf
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           
  7798                           ;psect for function ___flneg
  7799  1958                     ___flneg:
  7800  1958                     l3188:	
  7801                           ;incstack = 0
  7802                           ; Regs used in ___flneg: [wreg]
  7803                           
  7804  1958  0873               	movf	___flneg@f1+3,w
  7805  1959  0472               	iorwf	___flneg@f1+2,w
  7806  195A  0471               	iorwf	___flneg@f1+1,w
  7807  195B  0470               	iorwf	___flneg@f1,w
  7808  195C  1903               	skipnz
  7809  195D  295F               	goto	u4981
  7810  195E  2960               	goto	u4980
  7811  195F                     u4981:
  7812  195F  2962               	goto	l3192
  7813  1960                     u4980:
  7814  1960                     l3190:
  7815  1960  3080               	movlw	128
  7816  1961  06F3               	xorwf	___flneg@f1+3,f
  7817  1962                     l3192:
  7818  1962                     l636:
  7819  1962  0008               	return
  7820  1963                     __end_of___flneg:
  7821                           
  7822                           	psect	text21
  7823  1009                     __ptext21:	
  7824 ;; *************** function ___flge *****************
  7825 ;; Defined at:
  7826 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  ff1             4    0[COMMON] unsigned char 
  7829 ;;  ff2             4    4[COMMON] unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;		None               void
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         8       0       0       0       0
  7842 ;;      Locals:         0       0       0       0       0
  7843 ;;      Temps:          4       0       0       0       0
  7844 ;;      Totals:        12       0       0       0       0
  7845 ;;Total ram usage:       12 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_sprintf
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function ___flge
  7856  1009                     ___flge:
  7857  1009                     l3168:	
  7858                           ;incstack = 0
  7859                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7860                           
  7861  1009  3000               	movlw	0
  7862  100A  0570               	andwf	___flge@ff1,w
  7863  100B  00F8               	movwf	??___flge
  7864  100C  3000               	movlw	0
  7865  100D  0571               	andwf	___flge@ff1+1,w
  7866  100E  00F9               	movwf	??___flge+1
  7867  100F  3080               	movlw	128
  7868  1010  0572               	andwf	___flge@ff1+2,w
  7869  1011  00FA               	movwf	??___flge+2
  7870  1012  307F               	movlw	127
  7871  1013  0573               	andwf	___flge@ff1+3,w
  7872  1014  00FB               	movwf	??___flge+3
  7873  1015  087B               	movf	??___flge+3,w
  7874  1016  047A               	iorwf	??___flge+2,w
  7875  1017  0479               	iorwf	??___flge+1,w
  7876  1018  0478               	iorwf	??___flge,w
  7877  1019  1D03               	skipz
  7878  101A  281C               	goto	u4911
  7879  101B  281D               	goto	u4910
  7880  101C                     u4911:
  7881  101C  2825               	goto	l628
  7882  101D                     u4910:
  7883  101D                     l3170:
  7884  101D  3000               	movlw	0
  7885  101E  00F3               	movwf	___flge@ff1+3
  7886  101F  3000               	movlw	0
  7887  1020  00F2               	movwf	___flge@ff1+2
  7888  1021  3000               	movlw	0
  7889  1022  00F1               	movwf	___flge@ff1+1
  7890  1023  3000               	movlw	0
  7891  1024  00F0               	movwf	___flge@ff1
  7892  1025                     l628:
  7893  1025  3000               	movlw	0
  7894  1026  0574               	andwf	___flge@ff2,w
  7895  1027  00F8               	movwf	??___flge
  7896  1028  3000               	movlw	0
  7897  1029  0575               	andwf	___flge@ff2+1,w
  7898  102A  00F9               	movwf	??___flge+1
  7899  102B  3080               	movlw	128
  7900  102C  0576               	andwf	___flge@ff2+2,w
  7901  102D  00FA               	movwf	??___flge+2
  7902  102E  307F               	movlw	127
  7903  102F  0577               	andwf	___flge@ff2+3,w
  7904  1030  00FB               	movwf	??___flge+3
  7905  1031  087B               	movf	??___flge+3,w
  7906  1032  047A               	iorwf	??___flge+2,w
  7907  1033  0479               	iorwf	??___flge+1,w
  7908  1034  0478               	iorwf	??___flge,w
  7909  1035  1D03               	skipz
  7910  1036  2838               	goto	u4921
  7911  1037  2839               	goto	u4920
  7912  1038                     u4921:
  7913  1038  2841               	goto	l3174
  7914  1039                     u4920:
  7915  1039                     l3172:
  7916  1039  3000               	movlw	0
  7917  103A  00F7               	movwf	___flge@ff2+3
  7918  103B  3000               	movlw	0
  7919  103C  00F6               	movwf	___flge@ff2+2
  7920  103D  3000               	movlw	0
  7921  103E  00F5               	movwf	___flge@ff2+1
  7922  103F  3000               	movlw	0
  7923  1040  00F4               	movwf	___flge@ff2
  7924  1041                     l3174:
  7925  1041  1FF3               	btfss	___flge@ff1+3,7
  7926  1042  2844               	goto	u4931
  7927  1043  2845               	goto	u4930
  7928  1044                     u4931:
  7929  1044  2869               	goto	l3178
  7930  1045                     u4930:
  7931  1045                     l3176:
  7932  1045  3000               	movlw	0
  7933  1046  00F8               	movwf	??___flge
  7934  1047  3000               	movlw	0
  7935  1048  00F9               	movwf	??___flge+1
  7936  1049  3000               	movlw	0
  7937  104A  00FA               	movwf	??___flge+2
  7938  104B  3080               	movlw	128
  7939  104C  00FB               	movwf	??___flge+3
  7940  104D  0870               	movf	___flge@ff1,w
  7941  104E  02F8               	subwf	??___flge,f
  7942  104F  0871               	movf	___flge@ff1+1,w
  7943  1050  1C03               	skipc
  7944  1051  0F71               	incfsz	___flge@ff1+1,w
  7945  1052  2854               	goto	u4941
  7946  1053  2855               	goto	u4942
  7947  1054                     u4941:
  7948  1054  02F9               	subwf	??___flge+1,f
  7949  1055                     u4942:
  7950  1055  0872               	movf	___flge@ff1+2,w
  7951  1056  1C03               	skipc
  7952  1057  0F72               	incfsz	___flge@ff1+2,w
  7953  1058  285A               	goto	u4943
  7954  1059  285B               	goto	u4944
  7955  105A                     u4943:
  7956  105A  02FA               	subwf	??___flge+2,f
  7957  105B                     u4944:
  7958  105B  0873               	movf	___flge@ff1+3,w
  7959  105C  1C03               	skipc
  7960  105D  0F73               	incfsz	___flge@ff1+3,w
  7961  105E  2860               	goto	u4945
  7962  105F  2861               	goto	u4946
  7963  1060                     u4945:
  7964  1060  02FB               	subwf	??___flge+3,f
  7965  1061                     u4946:
  7966  1061  087B               	movf	??___flge+3,w
  7967  1062  00F3               	movwf	___flge@ff1+3
  7968  1063  087A               	movf	??___flge+2,w
  7969  1064  00F2               	movwf	___flge@ff1+2
  7970  1065  0879               	movf	??___flge+1,w
  7971  1066  00F1               	movwf	___flge@ff1+1
  7972  1067  0878               	movf	??___flge,w
  7973  1068  00F0               	movwf	___flge@ff1
  7974  1069                     l3178:
  7975  1069  1FF7               	btfss	___flge@ff2+3,7
  7976  106A  286C               	goto	u4951
  7977  106B  286D               	goto	u4950
  7978  106C                     u4951:
  7979  106C  2891               	goto	l631
  7980  106D                     u4950:
  7981  106D                     l3180:
  7982  106D  3000               	movlw	0
  7983  106E  00F8               	movwf	??___flge
  7984  106F  3000               	movlw	0
  7985  1070  00F9               	movwf	??___flge+1
  7986  1071  3000               	movlw	0
  7987  1072  00FA               	movwf	??___flge+2
  7988  1073  3080               	movlw	128
  7989  1074  00FB               	movwf	??___flge+3
  7990  1075  0874               	movf	___flge@ff2,w
  7991  1076  02F8               	subwf	??___flge,f
  7992  1077  0875               	movf	___flge@ff2+1,w
  7993  1078  1C03               	skipc
  7994  1079  0F75               	incfsz	___flge@ff2+1,w
  7995  107A  287C               	goto	u4961
  7996  107B  287D               	goto	u4962
  7997  107C                     u4961:
  7998  107C  02F9               	subwf	??___flge+1,f
  7999  107D                     u4962:
  8000  107D  0876               	movf	___flge@ff2+2,w
  8001  107E  1C03               	skipc
  8002  107F  0F76               	incfsz	___flge@ff2+2,w
  8003  1080  2882               	goto	u4963
  8004  1081  2883               	goto	u4964
  8005  1082                     u4963:
  8006  1082  02FA               	subwf	??___flge+2,f
  8007  1083                     u4964:
  8008  1083  0877               	movf	___flge@ff2+3,w
  8009  1084  1C03               	skipc
  8010  1085  0F77               	incfsz	___flge@ff2+3,w
  8011  1086  2888               	goto	u4965
  8012  1087  2889               	goto	u4966
  8013  1088                     u4965:
  8014  1088  02FB               	subwf	??___flge+3,f
  8015  1089                     u4966:
  8016  1089  087B               	movf	??___flge+3,w
  8017  108A  00F7               	movwf	___flge@ff2+3
  8018  108B  087A               	movf	??___flge+2,w
  8019  108C  00F6               	movwf	___flge@ff2+2
  8020  108D  0879               	movf	??___flge+1,w
  8021  108E  00F5               	movwf	___flge@ff2+1
  8022  108F  0878               	movf	??___flge,w
  8023  1090  00F4               	movwf	___flge@ff2
  8024  1091                     l631:
  8025  1091  3080               	movlw	128
  8026  1092  06F3               	xorwf	___flge@ff1+3,f
  8027  1093  3080               	movlw	128
  8028  1094  06F7               	xorwf	___flge@ff2+3,f
  8029  1095  0877               	movf	___flge@ff2+3,w
  8030  1096  0273               	subwf	___flge@ff1+3,w
  8031  1097  1D03               	skipz
  8032  1098  28A3               	goto	u4975
  8033  1099  0876               	movf	___flge@ff2+2,w
  8034  109A  0272               	subwf	___flge@ff1+2,w
  8035  109B  1D03               	skipz
  8036  109C  28A3               	goto	u4975
  8037  109D  0875               	movf	___flge@ff2+1,w
  8038  109E  0271               	subwf	___flge@ff1+1,w
  8039  109F  1D03               	skipz
  8040  10A0  28A3               	goto	u4975
  8041  10A1  0874               	movf	___flge@ff2,w
  8042  10A2  0270               	subwf	___flge@ff1,w
  8043  10A3                     u4975:
  8044  10A3  1803               	skipnc
  8045  10A4  28A6               	goto	u4971
  8046  10A5  28A7               	goto	u4970
  8047  10A6                     u4971:
  8048  10A6  28A9               	goto	l3184
  8049  10A7                     u4970:
  8050  10A7                     l3182:
  8051  10A7  1003               	clrc
  8052  10A8  28AA               	goto	l632
  8053  10A9                     l3184:
  8054  10A9  1403               	setc
  8055  10AA                     l632:
  8056  10AA  0008               	return
  8057  10AB                     __end_of___flge:
  8058                           
  8059                           	psect	text22
  8060  1C43                     __ptext22:	
  8061 ;; *************** function ___fleq *****************
  8062 ;; Defined at:
  8063 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  ff1             4    0[COMMON] unsigned char 
  8066 ;;  ff2             4    4[COMMON] unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;		None               void
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8078 ;;      Params:         8       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0
  8080 ;;      Temps:          4       0       0       0       0
  8081 ;;      Totals:        12       0       0       0       0
  8082 ;;Total ram usage:       12 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_sprintf
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           
  8092                           ;psect for function ___fleq
  8093  1C43                     ___fleq:
  8094  1C43                     l3156:	
  8095                           ;incstack = 0
  8096                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8097                           
  8098  1C43  3000               	movlw	0
  8099  1C44  0570               	andwf	___fleq@ff1,w
  8100  1C45  00F8               	movwf	??___fleq
  8101  1C46  3000               	movlw	0
  8102  1C47  0571               	andwf	___fleq@ff1+1,w
  8103  1C48  00F9               	movwf	??___fleq+1
  8104  1C49  3080               	movlw	128
  8105  1C4A  0572               	andwf	___fleq@ff1+2,w
  8106  1C4B  00FA               	movwf	??___fleq+2
  8107  1C4C  307F               	movlw	127
  8108  1C4D  0573               	andwf	___fleq@ff1+3,w
  8109  1C4E  00FB               	movwf	??___fleq+3
  8110  1C4F  087B               	movf	??___fleq+3,w
  8111  1C50  047A               	iorwf	??___fleq+2,w
  8112  1C51  0479               	iorwf	??___fleq+1,w
  8113  1C52  0478               	iorwf	??___fleq,w
  8114  1C53  1D03               	skipz
  8115  1C54  2C56               	goto	u4881
  8116  1C55  2C57               	goto	u4880
  8117  1C56                     u4881:
  8118  1C56  2C5F               	goto	l623
  8119  1C57                     u4880:
  8120  1C57                     l3158:
  8121  1C57  3000               	movlw	0
  8122  1C58  00F3               	movwf	___fleq@ff1+3
  8123  1C59  3000               	movlw	0
  8124  1C5A  00F2               	movwf	___fleq@ff1+2
  8125  1C5B  3000               	movlw	0
  8126  1C5C  00F1               	movwf	___fleq@ff1+1
  8127  1C5D  3000               	movlw	0
  8128  1C5E  00F0               	movwf	___fleq@ff1
  8129  1C5F                     l623:
  8130  1C5F  3000               	movlw	0
  8131  1C60  0574               	andwf	___fleq@ff2,w
  8132  1C61  00F8               	movwf	??___fleq
  8133  1C62  3000               	movlw	0
  8134  1C63  0575               	andwf	___fleq@ff2+1,w
  8135  1C64  00F9               	movwf	??___fleq+1
  8136  1C65  3080               	movlw	128
  8137  1C66  0576               	andwf	___fleq@ff2+2,w
  8138  1C67  00FA               	movwf	??___fleq+2
  8139  1C68  307F               	movlw	127
  8140  1C69  0577               	andwf	___fleq@ff2+3,w
  8141  1C6A  00FB               	movwf	??___fleq+3
  8142  1C6B  087B               	movf	??___fleq+3,w
  8143  1C6C  047A               	iorwf	??___fleq+2,w
  8144  1C6D  0479               	iorwf	??___fleq+1,w
  8145  1C6E  0478               	iorwf	??___fleq,w
  8146  1C6F  1D03               	skipz
  8147  1C70  2C72               	goto	u4891
  8148  1C71  2C73               	goto	u4890
  8149  1C72                     u4891:
  8150  1C72  2C7B               	goto	l624
  8151  1C73                     u4890:
  8152  1C73                     l3160:
  8153  1C73  3000               	movlw	0
  8154  1C74  00F7               	movwf	___fleq@ff2+3
  8155  1C75  3000               	movlw	0
  8156  1C76  00F6               	movwf	___fleq@ff2+2
  8157  1C77  3000               	movlw	0
  8158  1C78  00F5               	movwf	___fleq@ff2+1
  8159  1C79  3000               	movlw	0
  8160  1C7A  00F4               	movwf	___fleq@ff2
  8161  1C7B                     l624:
  8162  1C7B  0877               	movf	___fleq@ff2+3,w
  8163  1C7C  0673               	xorwf	___fleq@ff1+3,w
  8164  1C7D  1D03               	skipz
  8165  1C7E  2C89               	goto	u4905
  8166  1C7F  0876               	movf	___fleq@ff2+2,w
  8167  1C80  0672               	xorwf	___fleq@ff1+2,w
  8168  1C81  1D03               	skipz
  8169  1C82  2C89               	goto	u4905
  8170  1C83  0875               	movf	___fleq@ff2+1,w
  8171  1C84  0671               	xorwf	___fleq@ff1+1,w
  8172  1C85  1D03               	skipz
  8173  1C86  2C89               	goto	u4905
  8174  1C87  0874               	movf	___fleq@ff2,w
  8175  1C88  0670               	xorwf	___fleq@ff1,w
  8176  1C89                     u4905:
  8177  1C89  1903               	skipnz
  8178  1C8A  2C8C               	goto	u4901
  8179  1C8B  2C8D               	goto	u4900
  8180  1C8C                     u4901:
  8181  1C8C  2C8F               	goto	l3164
  8182  1C8D                     u4900:
  8183  1C8D                     l3162:
  8184  1C8D  1003               	clrc
  8185  1C8E  2C90               	goto	l625
  8186  1C8F                     l3164:
  8187  1C8F  1403               	setc
  8188  1C90                     l625:
  8189  1C90  0008               	return
  8190  1C91                     __end_of___fleq:
  8191                           
  8192                           	psect	text23
  8193  19E3                     __ptext23:	
  8194 ;; *************** function _setup *****************
  8195 ;; Defined at:
  8196 ;;		line 133 in file "Mast.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, pclath, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8210 ;;      Params:         0       0       0       0       0
  8211 ;;      Locals:         0       0       0       0       0
  8212 ;;      Temps:          0       0       0       0       0
  8213 ;;      Totals:         0       0       0       0       0
  8214 ;;Total ram usage:        0 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    1
  8217 ;; This function calls:
  8218 ;;		_spiInit
  8219 ;; This function is called by:
  8220 ;;		_main
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           
  8225                           ;psect for function _setup
  8226  19E3                     _setup:
  8227  19E3                     l3302:	
  8228                           ;incstack = 0
  8229                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  8230                           
  8231                           
  8232                           ;Mast.c: 134:     ANSEL = 0;
  8233  19E3  1683               	bsf	3,5	;RP0=1, select bank3
  8234  19E4  1703               	bsf	3,6	;RP1=1, select bank3
  8235  19E5  0188               	clrf	8	;volatile
  8236                           
  8237                           ;Mast.c: 135:     ANSELH = 0;
  8238  19E6  0189               	clrf	9	;volatile
  8239                           
  8240                           ;Mast.c: 136:     TRISB = 0;
  8241  19E7  1683               	bsf	3,5	;RP0=1, select bank1
  8242  19E8  1303               	bcf	3,6	;RP1=0, select bank1
  8243  19E9  0186               	clrf	6	;volatile
  8244                           
  8245                           ;Mast.c: 137:     TRISE = 0;
  8246  19EA  0189               	clrf	9	;volatile
  8247                           
  8248                           ;Mast.c: 138:     TRISD = 0;
  8249  19EB  0188               	clrf	8	;volatile
  8250                           
  8251                           ;Mast.c: 140:     PORTE = 0;
  8252  19EC  1283               	bcf	3,5	;RP0=0, select bank0
  8253  19ED  1303               	bcf	3,6	;RP1=0, select bank0
  8254  19EE  0189               	clrf	9	;volatile
  8255                           
  8256                           ;Mast.c: 141:     PORTD = 0;
  8257  19EF  0188               	clrf	8	;volatile
  8258                           
  8259                           ;Mast.c: 142:     PORTB = 0;
  8260  19F0  0186               	clrf	6	;volatile
  8261  19F1                     l3304:
  8262                           
  8263                           ;Mast.c: 144:     TRISC0 = 0;
  8264  19F1  1683               	bsf	3,5	;RP0=1, select bank1
  8265  19F2  1303               	bcf	3,6	;RP1=0, select bank1
  8266  19F3  1007               	bcf	7,0	;volatile
  8267  19F4                     l3306:
  8268                           
  8269                           ;Mast.c: 145:     TRISC1 = 0;
  8270  19F4  1087               	bcf	7,1	;volatile
  8271  19F5                     l3308:
  8272                           
  8273                           ;Mast.c: 146:     TRISC2 = 0;
  8274  19F5  1107               	bcf	7,2	;volatile
  8275  19F6                     l3310:
  8276                           
  8277                           ;Mast.c: 147:     PORTCbits.RC0 = 1;
  8278  19F6  1283               	bcf	3,5	;RP0=0, select bank0
  8279  19F7  1303               	bcf	3,6	;RP1=0, select bank0
  8280  19F8  1407               	bsf	7,0	;volatile
  8281  19F9                     l3312:
  8282                           
  8283                           ;Mast.c: 148:     PORTCbits.RC1 = 1;
  8284  19F9  1487               	bsf	7,1	;volatile
  8285  19FA                     l3314:
  8286                           
  8287                           ;Mast.c: 149:     PORTCbits.RC2 = 1;
  8288  19FA  1507               	bsf	7,2	;volatile
  8289  19FB                     l3316:
  8290                           
  8291                           ;Mast.c: 150:     PORTCbits.RC7 = 1;
  8292  19FB  1787               	bsf	7,7	;volatile
  8293  19FC                     l3318:
  8294                           
  8295                           ;Mast.c: 152:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W,
  8296  19FC  01F0               	clrf	spiInit@sDataSample
  8297  19FD  01F1               	clrf	spiInit@sClockIdle
  8298  19FE  01F2               	clrf	spiInit@sTransmitEdge
  8299  19FF  3020               	movlw	32
  8300  1A00  160A  158A  218E  160A  158A  	fcall	_spiInit
  8301  1A05                     l126:
  8302  1A05  0008               	return
  8303  1A06                     __end_of_setup:
  8304                           
  8305                           	psect	text24
  8306  198E                     __ptext24:	
  8307 ;; *************** function _spiInit *****************
  8308 ;; Defined at:
  8309 ;;		line 12 in file "SPI.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  sType           1    wreg     enum E1264
  8312 ;;  sDataSample     1    0[COMMON] enum E1272
  8313 ;;  sClockIdle      1    1[COMMON] enum E1276
  8314 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  sType           1    3[COMMON] enum E1264
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      void 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8326 ;;      Params:         3       0       0       0       0
  8327 ;;      Locals:         1       0       0       0       0
  8328 ;;      Temps:          0       0       0       0       0
  8329 ;;      Totals:         4       0       0       0       0
  8330 ;;Total ram usage:        4 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_setup
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           
  8340                           ;psect for function _spiInit
  8341  198E                     _spiInit:
  8342                           
  8343                           ;incstack = 0
  8344                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  8345                           ;spiInit@sType stored from wreg
  8346  198E  00F3               	movwf	spiInit@sType
  8347  198F                     l2894:
  8348                           
  8349                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle;SPI
      +                          .c: 13: sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 
      +                          = 0;
  8350  198F  1683               	bsf	3,5	;RP0=1, select bank1
  8351  1990  1303               	bcf	3,6	;RP1=0, select bank1
  8352  1991  1287               	bcf	7,5	;volatile
  8353                           
  8354                           ;SPI.c: 16:     if(sType & 0b00000100)
  8355  1992  1D73               	btfss	spiInit@sType,2
  8356  1993  2995               	goto	u4221
  8357  1994  2996               	goto	u4220
  8358  1995                     u4221:
  8359  1995  299A               	goto	l2900
  8360  1996                     u4220:
  8361  1996                     l2896:
  8362                           
  8363                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  8364  1996  0872               	movf	spiInit@sTransmitEdge,w
  8365  1997  0094               	movwf	20	;volatile
  8366  1998                     l2898:
  8367                           
  8368                           ;SPI.c: 19:         TRISC3 = 1;
  8369  1998  1587               	bsf	7,3	;volatile
  8370                           
  8371                           ;SPI.c: 20:     }
  8372  1999  299E               	goto	l16
  8373  199A                     l2900:
  8374                           
  8375                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  8376  199A  0870               	movf	spiInit@sDataSample,w
  8377  199B  0472               	iorwf	spiInit@sTransmitEdge,w
  8378  199C  0094               	movwf	20	;volatile
  8379  199D                     l2902:
  8380                           
  8381                           ;SPI.c: 24:         TRISC3 = 0;
  8382  199D  1187               	bcf	7,3	;volatile
  8383  199E                     l16:	
  8384                           ;SPI.c: 25:     }
  8385                           
  8386                           
  8387                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  8388  199E  0873               	movf	spiInit@sType,w
  8389  199F  0471               	iorwf	spiInit@sClockIdle,w
  8390  19A0  1283               	bcf	3,5	;RP0=0, select bank0
  8391  19A1  1303               	bcf	3,6	;RP1=0, select bank0
  8392  19A2  0094               	movwf	20	;volatile
  8393  19A3                     l17:
  8394  19A3  0008               	return
  8395  19A4                     __end_of_spiInit:
  8396                           
  8397                           	psect	text25
  8398  1AC5                     __ptext25:	
  8399 ;; *************** function _contador *****************
  8400 ;; Defined at:
  8401 ;;		line 105 in file "Mast.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      void 
  8408 ;; Registers used:
  8409 ;;		wreg, status,2, status,0, pclath, cstack
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8415 ;;      Params:         0       0       0       0       0
  8416 ;;      Locals:         0       0       0       0       0
  8417 ;;      Temps:          2       0       0       0       0
  8418 ;;      Totals:         2       0       0       0       0
  8419 ;;Total ram usage:        2 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:    2
  8422 ;; This function calls:
  8423 ;;		_spiRead
  8424 ;;		_spiWrite
  8425 ;; This function is called by:
  8426 ;;		_main
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _contador
  8432  1AC5                     _contador:
  8433  1AC5                     l3354:	
  8434                           ;incstack = 0
  8435                           ; Regs used in _contador: [wreg+status,2+status,0+pclath+cstack]
  8436                           
  8437                           
  8438                           ;Mast.c: 106:     PORTCbits.RC1 = 0;
  8439  1AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8440  1AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8441  1AC7  1087               	bcf	7,1	;volatile
  8442  1AC8                     l3356:
  8443                           
  8444                           ;Mast.c: 107:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8445  1AC8  3003               	movlw	3
  8446  1AC9  00F2               	movwf	??_contador+1
  8447  1ACA  3097               	movlw	151
  8448  1ACB  00F1               	movwf	??_contador
  8449  1ACC                     u5927:
  8450  1ACC  0BF1               	decfsz	??_contador,f
  8451  1ACD  2ACC               	goto	u5927
  8452  1ACE  0BF2               	decfsz	??_contador+1,f
  8453  1ACF  2ACC               	goto	u5927
  8454  1AD0  2AD1               	nop2
  8455  1AD1                     l3358:
  8456                           
  8457                           ;Mast.c: 109:     spiWrite(1);
  8458  1AD1  3001               	movlw	1
  8459  1AD2  120A  158A  2000  160A  158A  	fcall	_spiWrite
  8460  1AD7                     l3360:
  8461                           
  8462                           ;Mast.c: 110:     cont = spiRead();
  8463  1AD7  160A  118A  2000  160A  158A  	fcall	_spiRead
  8464  1ADC  00F1               	movwf	??_contador
  8465  1ADD  0871               	movf	??_contador,w
  8466  1ADE  1283               	bcf	3,5	;RP0=0, select bank0
  8467  1ADF  1303               	bcf	3,6	;RP1=0, select bank0
  8468  1AE0  00EF               	movwf	_cont
  8469                           
  8470                           ;Mast.c: 112:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8471  1AE1  3003               	movlw	3
  8472  1AE2  00F2               	movwf	??_contador+1
  8473  1AE3  3097               	movlw	151
  8474  1AE4  00F1               	movwf	??_contador
  8475  1AE5                     u5937:
  8476  1AE5  0BF1               	decfsz	??_contador,f
  8477  1AE6  2AE5               	goto	u5937
  8478  1AE7  0BF2               	decfsz	??_contador+1,f
  8479  1AE8  2AE5               	goto	u5937
  8480  1AE9  2AEA               	nop2
  8481  1AEA                     l3362:
  8482                           
  8483                           ;Mast.c: 113:     PORTCbits.RC1 = 1;
  8484  1AEA  1283               	bcf	3,5	;RP0=0, select bank0
  8485  1AEB  1303               	bcf	3,6	;RP1=0, select bank0
  8486  1AEC  1487               	bsf	7,1	;volatile
  8487                           
  8488                           ;Mast.c: 114:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8489  1AED  3003               	movlw	3
  8490  1AEE  00F2               	movwf	??_contador+1
  8491  1AEF  3097               	movlw	151
  8492  1AF0  00F1               	movwf	??_contador
  8493  1AF1                     u5947:
  8494  1AF1  0BF1               	decfsz	??_contador,f
  8495  1AF2  2AF1               	goto	u5947
  8496  1AF3  0BF2               	decfsz	??_contador+1,f
  8497  1AF4  2AF1               	goto	u5947
  8498  1AF5  2AF6               	nop2
  8499  1AF6                     l120:
  8500  1AF6  0008               	return
  8501  1AF7                     __end_of_contador:
  8502                           
  8503                           	psect	text26
  8504  194E                     __ptext26:	
  8505 ;; *************** function _config_txsta *****************
  8506 ;; Defined at:
  8507 ;;		line 17 in file "USART.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		None
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8521 ;;      Params:         0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_main
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function _config_txsta
  8536  194E                     _config_txsta:
  8537  194E                     l3322:	
  8538                           ;incstack = 0
  8539                           ; Regs used in _config_txsta: []
  8540                           
  8541                           
  8542                           ;USART.c: 18:     TXSTAbits.CSRC = 0;
  8543  194E  1683               	bsf	3,5	;RP0=1, select bank1
  8544  194F  1303               	bcf	3,6	;RP1=0, select bank1
  8545  1950  1398               	bcf	24,7	;volatile
  8546                           
  8547                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  8548  1951  1318               	bcf	24,6	;volatile
  8549                           
  8550                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  8551  1952  1698               	bsf	24,5	;volatile
  8552                           
  8553                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  8554  1953  1218               	bcf	24,4	;volatile
  8555                           
  8556                           ;USART.c: 22:     TXSTAbits.BRGH = 0;
  8557  1954  1118               	bcf	24,2	;volatile
  8558                           
  8559                           ;USART.c: 23:     TXSTAbits.TRMT = 0;
  8560  1955  1098               	bcf	24,1	;volatile
  8561                           
  8562                           ;USART.c: 24:     TXSTAbits.TX9D = 0;
  8563  1956  1018               	bcf	24,0	;volatile
  8564  1957                     l211:
  8565  1957  0008               	return
  8566  1958                     __end_of_config_txsta:
  8567                           
  8568                           	psect	text27
  8569  193E                     __ptext27:	
  8570 ;; *************** function _config_rcsta *****************
  8571 ;; Defined at:
  8572 ;;		line 27 in file "USART.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		status,2
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8586 ;;      Params:         0       0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0
  8589 ;;      Totals:         0       0       0       0       0
  8590 ;;Total ram usage:        0 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_main
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599                           
  8600                           ;psect for function _config_rcsta
  8601  193E                     _config_rcsta:
  8602  193E                     l3324:	
  8603                           ;incstack = 0
  8604                           ; Regs used in _config_rcsta: [status,2]
  8605                           
  8606                           
  8607                           ;USART.c: 28:     RCSTAbits.SPEN = 1;
  8608  193E  1283               	bcf	3,5	;RP0=0, select bank0
  8609  193F  1303               	bcf	3,6	;RP1=0, select bank0
  8610  1940  1798               	bsf	24,7	;volatile
  8611                           
  8612                           ;USART.c: 29:     RCSTAbits.RX9 = 0;
  8613  1941  1318               	bcf	24,6	;volatile
  8614                           
  8615                           ;USART.c: 30:     RCSTAbits.SREN = 0;
  8616  1942  1298               	bcf	24,5	;volatile
  8617                           
  8618                           ;USART.c: 31:     RCSTAbits.CREN = 1;
  8619  1943  1618               	bsf	24,4	;volatile
  8620  1944                     l3326:
  8621                           
  8622                           ;USART.c: 32:     RCREG = 0;
  8623  1944  019A               	clrf	26	;volatile
  8624  1945                     l214:
  8625  1945  0008               	return
  8626  1946                     __end_of_config_rcsta:
  8627                           
  8628                           	psect	text28
  8629  1932                     __ptext28:	
  8630 ;; *************** function __baudios *****************
  8631 ;; Defined at:
  8632 ;;		line 13 in file "USART.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;		None
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;		None
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8646 ;;      Params:         0       0       0       0       0
  8647 ;;      Locals:         0       0       0       0       0
  8648 ;;      Temps:          0       0       0       0       0
  8649 ;;      Totals:         0       0       0       0       0
  8650 ;;Total ram usage:        0 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		_main
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function __baudios
  8661  1932                     __baudios:
  8662  1932                     l3320:	
  8663                           ;incstack = 0
  8664                           ; Regs used in __baudios: [wreg]
  8665                           
  8666                           
  8667                           ;USART.c: 14:     SPBRG = 12;
  8668  1932  300C               	movlw	12
  8669  1933  1683               	bsf	3,5	;RP0=1, select bank1
  8670  1934  1303               	bcf	3,6	;RP1=0, select bank1
  8671  1935  0099               	movwf	25	;volatile
  8672  1936                     l208:
  8673  1936  0008               	return
  8674  1937                     __end_of__baudios:
  8675                           
  8676                           	psect	text29
  8677  1A9A                     __ptext29:	
  8678 ;; *************** function _Write_USART_String *****************
  8679 ;; Defined at:
  8680 ;;		line 39 in file "USART.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  a               2    1[COMMON] PTR unsigned char 
  8683 ;;		 -> STR_3(15), data(20), 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  i               1    4[COMMON] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8695 ;;      Params:         2       0       0       0       0
  8696 ;;      Locals:         1       0       0       0       0
  8697 ;;      Temps:          1       0       0       0       0
  8698 ;;      Totals:         4       0       0       0       0
  8699 ;;Total ram usage:        4 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    1
  8702 ;; This function calls:
  8703 ;;		_Write_USART
  8704 ;; This function is called by:
  8705 ;;		_main
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           
  8710                           ;psect for function _Write_USART_String
  8711  1A9A                     _Write_USART_String:
  8712  1A9A                     l3700:	
  8713                           ;incstack = 0
  8714                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8715                           
  8716                           
  8717                           ;USART.c: 40:     uint8_t i;;USART.c: 41:     for(i=0;a[i]!='\0';i++){
  8718  1A9A  01F4               	clrf	Write_USART_String@i
  8719  1A9B  2AB1               	goto	l3706
  8720  1A9C                     l3702:
  8721                           
  8722                           ;USART.c: 42:         Write_USART(a[i]);
  8723  1A9C  0874               	movf	Write_USART_String@i,w
  8724  1A9D  0771               	addwf	Write_USART_String@a,w
  8725  1A9E  0084               	movwf	4
  8726  1A9F  0872               	movf	Write_USART_String@a+1,w
  8727  1AA0  1803               	skipnc
  8728  1AA1  0A72               	incf	Write_USART_String@a+1,w
  8729  1AA2  00FF               	movwf	btemp+1
  8730  1AA3  120A  118A  2003  160A  158A  	fcall	stringtab
  8731  1AA8  160A  158A  2163  160A  158A  	fcall	_Write_USART
  8732  1AAD                     l3704:
  8733                           
  8734                           ;USART.c: 43:     }
  8735  1AAD  3001               	movlw	1
  8736  1AAE  00F3               	movwf	??_Write_USART_String
  8737  1AAF  0873               	movf	??_Write_USART_String,w
  8738  1AB0  07F4               	addwf	Write_USART_String@i,f
  8739  1AB1                     l3706:
  8740  1AB1  0874               	movf	Write_USART_String@i,w
  8741  1AB2  0771               	addwf	Write_USART_String@a,w
  8742  1AB3  0084               	movwf	4
  8743  1AB4  0872               	movf	Write_USART_String@a+1,w
  8744  1AB5  1803               	skipnc
  8745  1AB6  0A72               	incf	Write_USART_String@a+1,w
  8746  1AB7  1283               	bcf	3,5	;RP0=0, select bank0
  8747  1AB8  1303               	bcf	3,6	;RP1=0, select bank0
  8748  1AB9  00FF               	movwf	btemp+1
  8749  1ABA  120A  118A  2003  160A  158A  	fcall	stringtab
  8750  1ABF  3A00               	xorlw	0
  8751  1AC0  1D03               	skipz
  8752  1AC1  2AC3               	goto	u5871
  8753  1AC2  2AC4               	goto	u5870
  8754  1AC3                     u5871:
  8755  1AC3  2A9C               	goto	l3702
  8756  1AC4                     u5870:
  8757  1AC4                     l226:
  8758  1AC4  0008               	return
  8759  1AC5                     __end_of_Write_USART_String:
  8760                           
  8761                           	psect	text30
  8762  1963                     __ptext30:	
  8763 ;; *************** function _Write_USART *****************
  8764 ;; Defined at:
  8765 ;;		line 35 in file "USART.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  a               1    wreg     unsigned char 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  a               1    0[COMMON] unsigned char 
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8779 ;;      Params:         0       0       0       0       0
  8780 ;;      Locals:         1       0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0
  8782 ;;      Totals:         1       0       0       0       0
  8783 ;;Total ram usage:        1 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_main
  8789 ;;		_Write_USART_String
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           
  8794                           ;psect for function _Write_USART
  8795  1963                     _Write_USART:
  8796                           
  8797                           ;incstack = 0
  8798                           ; Regs used in _Write_USART: [wreg]
  8799                           ;Write_USART@a stored from wreg
  8800  1963  00F0               	movwf	Write_USART@a
  8801  1964                     l2912:
  8802  1964                     l217:	
  8803                           ;USART.c: 36:     while(!TRMT);
  8804                           
  8805  1964  1683               	bsf	3,5	;RP0=1, select bank1
  8806  1965  1303               	bcf	3,6	;RP1=0, select bank1
  8807  1966  1C98               	btfss	24,1	;volatile
  8808  1967  2969               	goto	u4231
  8809  1968  296A               	goto	u4230
  8810  1969                     u4231:
  8811  1969  2964               	goto	l217
  8812  196A                     u4230:
  8813  196A                     l2914:
  8814                           
  8815                           ;USART.c: 37:     TXREG=a;
  8816  196A  0870               	movf	Write_USART@a,w
  8817  196B  1283               	bcf	3,5	;RP0=0, select bank0
  8818  196C  1303               	bcf	3,6	;RP1=0, select bank0
  8819  196D  0099               	movwf	25	;volatile
  8820  196E                     l220:
  8821  196E  0008               	return
  8822  196F                     __end_of_Write_USART:
  8823                           
  8824                           	psect	text31
  8825  1B6F                     __ptext31:	
  8826 ;; *************** function _Lcd_Write_String *****************
  8827 ;; Defined at:
  8828 ;;		line 88 in file "LCD.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  a               2    3[COMMON] PTR unsigned char 
  8831 ;;		 -> data(20), STR_1(15), 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  i               2    8[COMMON] int 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8843 ;;      Params:         2       0       0       0       0
  8844 ;;      Locals:         2       0       0       0       0
  8845 ;;      Temps:          3       0       0       0       0
  8846 ;;      Totals:         7       0       0       0       0
  8847 ;;Total ram usage:        7 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    2
  8850 ;; This function calls:
  8851 ;;		_LCD_CMD
  8852 ;; This function is called by:
  8853 ;;		_main
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function _Lcd_Write_String
  8859  1B6F                     _Lcd_Write_String:
  8860  1B6F                     l3386:	
  8861                           ;incstack = 0
  8862                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8863                           
  8864                           
  8865                           ;LCD.c: 91:  int i;;LCD.c: 92:  for(i=0;a[i]!='\0';i++)
  8866  1B6F  01F8               	clrf	Lcd_Write_String@i
  8867  1B70  01F9               	clrf	Lcd_Write_String@i+1
  8868  1B71  2B94               	goto	l3392
  8869  1B72                     l3388:
  8870                           
  8871                           ;LCD.c: 93:     LCD_CMD(a[i]);
  8872  1B72  0878               	movf	Lcd_Write_String@i,w
  8873  1B73  0773               	addwf	Lcd_Write_String@a,w
  8874  1B74  00F6               	movwf	??_Lcd_Write_String+1
  8875  1B75  0874               	movf	Lcd_Write_String@a+1,w
  8876  1B76  00F5               	movwf	??_Lcd_Write_String
  8877  1B77  1803               	skipnc
  8878  1B78  0AF5               	incf	??_Lcd_Write_String,f
  8879  1B79  1FF8               	btfss	Lcd_Write_String@i,7
  8880  1B7A  2B7C               	goto	u5310
  8881  1B7B  03F5               	decf	??_Lcd_Write_String,f
  8882  1B7C                     u5310:
  8883  1B7C  0875               	movf	??_Lcd_Write_String,w
  8884  1B7D  00F7               	movwf	??_Lcd_Write_String+2
  8885  1B7E  0877               	movf	??_Lcd_Write_String+2,w
  8886  1B7F  1283               	bcf	3,5	;RP0=0, select bank0
  8887  1B80  1303               	bcf	3,6	;RP1=0, select bank0
  8888  1B81  00FF               	movwf	btemp+1
  8889  1B82  0876               	movf	??_Lcd_Write_String+1,w
  8890  1B83  0084               	movwf	4
  8891  1B84  120A  118A  2003  160A  158A  	fcall	stringtab
  8892  1B89  160A  158A  21A4  160A  158A  	fcall	_LCD_CMD
  8893  1B8E                     l3390:
  8894  1B8E  3001               	movlw	1
  8895  1B8F  07F8               	addwf	Lcd_Write_String@i,f
  8896  1B90  1803               	skipnc
  8897  1B91  0AF9               	incf	Lcd_Write_String@i+1,f
  8898  1B92  3000               	movlw	0
  8899  1B93  07F9               	addwf	Lcd_Write_String@i+1,f
  8900  1B94                     l3392:
  8901  1B94  0878               	movf	Lcd_Write_String@i,w
  8902  1B95  0773               	addwf	Lcd_Write_String@a,w
  8903  1B96  00F6               	movwf	??_Lcd_Write_String+1
  8904  1B97  0874               	movf	Lcd_Write_String@a+1,w
  8905  1B98  00F5               	movwf	??_Lcd_Write_String
  8906  1B99  1803               	skipnc
  8907  1B9A  0AF5               	incf	??_Lcd_Write_String,f
  8908  1B9B  1FF8               	btfss	Lcd_Write_String@i,7
  8909  1B9C  2B9E               	goto	u5320
  8910  1B9D  03F5               	decf	??_Lcd_Write_String,f
  8911  1B9E                     u5320:
  8912  1B9E  0875               	movf	??_Lcd_Write_String,w
  8913  1B9F  00F7               	movwf	??_Lcd_Write_String+2
  8914  1BA0  0877               	movf	??_Lcd_Write_String+2,w
  8915  1BA1  1283               	bcf	3,5	;RP0=0, select bank0
  8916  1BA2  1303               	bcf	3,6	;RP1=0, select bank0
  8917  1BA3  00FF               	movwf	btemp+1
  8918  1BA4  0876               	movf	??_Lcd_Write_String+1,w
  8919  1BA5  0084               	movwf	4
  8920  1BA6  120A  118A  2003  160A  158A  	fcall	stringtab
  8921  1BAB  3A00               	xorlw	0
  8922  1BAC  1D03               	skipz
  8923  1BAD  2BAF               	goto	u5331
  8924  1BAE  2BB0               	goto	u5330
  8925  1BAF                     u5331:
  8926  1BAF  2B72               	goto	l3388
  8927  1BB0                     u5330:
  8928  1BB0                     l191:
  8929  1BB0  0008               	return
  8930  1BB1                     __end_of_Lcd_Write_String:
  8931                           
  8932                           	psect	text32
  8933  19A4                     __ptext32:	
  8934 ;; *************** function _LCD_CMD *****************
  8935 ;; Defined at:
  8936 ;;		line 28 in file "LCD.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  a               1    wreg     unsigned char 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;  a               1    2[COMMON] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0, pclath, cstack
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8950 ;;      Params:         0       0       0       0       0
  8951 ;;      Locals:         1       0       0       0       0
  8952 ;;      Temps:          1       0       0       0       0
  8953 ;;      Totals:         2       0       0       0       0
  8954 ;;Total ram usage:        2 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:    1
  8957 ;; This function calls:
  8958 ;;		_Puerto
  8959 ;; This function is called by:
  8960 ;;		_Lcd_Write_String
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _LCD_CMD
  8966  19A4                     _LCD_CMD:
  8967                           
  8968                           ;incstack = 0
  8969                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  8970                           ;LCD_CMD@a stored from wreg
  8971  19A4  00F2               	movwf	LCD_CMD@a
  8972  19A5                     l2916:
  8973                           
  8974                           ;LCD.c: 29:     RE0 = 1;
  8975  19A5  1283               	bcf	3,5	;RP0=0, select bank0
  8976  19A6  1303               	bcf	3,6	;RP1=0, select bank0
  8977  19A7  1409               	bsf	9,0	;volatile
  8978  19A8                     l2918:
  8979                           
  8980                           ;LCD.c: 30:     Puerto(a);
  8981  19A8  0872               	movf	LCD_CMD@a,w
  8982  19A9  160A  158A  2331  160A  158A  	fcall	_Puerto
  8983  19AE                     l2920:
  8984                           
  8985                           ;LCD.c: 31:     RE1 = 1;
  8986  19AE  1283               	bcf	3,5	;RP0=0, select bank0
  8987  19AF  1303               	bcf	3,6	;RP1=0, select bank0
  8988  19B0  1489               	bsf	9,1	;volatile
  8989  19B1                     l2922:
  8990                           
  8991                           ;LCD.c: 32:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8992  19B1  3003               	movlw	3
  8993  19B2  00F1               	movwf	??_LCD_CMD
  8994  19B3                     u5957:
  8995  19B3  0BF1               	decfsz	??_LCD_CMD,f
  8996  19B4  29B3               	goto	u5957
  8997  19B5                     l2924:
  8998                           
  8999                           ;LCD.c: 33:     RE1 = 0;
  9000  19B5  1283               	bcf	3,5	;RP0=0, select bank0
  9001  19B6  1303               	bcf	3,6	;RP1=0, select bank0
  9002  19B7  1089               	bcf	9,1	;volatile
  9003  19B8                     l2926:
  9004                           
  9005                           ;LCD.c: 34:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9006  19B8  3003               	movlw	3
  9007  19B9  00F1               	movwf	??_LCD_CMD
  9008  19BA                     u5967:
  9009  19BA  0BF1               	decfsz	??_LCD_CMD,f
  9010  19BB  29BA               	goto	u5967
  9011  19BC                     l2928:
  9012                           
  9013                           ;LCD.c: 35:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  9014  19BC  3021               	movlw	33
  9015  19BD  00F1               	movwf	??_LCD_CMD
  9016  19BE                     u5977:
  9017  19BE  0BF1               	decfsz	??_LCD_CMD,f
  9018  19BF  29BE               	goto	u5977
  9019  19C0                     l170:
  9020  19C0  0008               	return
  9021  19C1                     __end_of_LCD_CMD:
  9022                           
  9023                           	psect	text33
  9024  1A06                     __ptext33:	
  9025 ;; *************** function _Lcd_Set_Cursor *****************
  9026 ;; Defined at:
  9027 ;;		line 74 in file "LCD.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  x               1    wreg     unsigned char 
  9030 ;;  y               1    4[COMMON] unsigned char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  x               1    6[COMMON] unsigned char 
  9033 ;;  a               1    7[COMMON] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0, pclath, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9043 ;;      Params:         1       0       0       0       0
  9044 ;;      Locals:         2       0       0       0       0
  9045 ;;      Temps:          1       0       0       0       0
  9046 ;;      Totals:         4       0       0       0       0
  9047 ;;Total ram usage:        4 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    2
  9050 ;; This function calls:
  9051 ;;		_datosLCD
  9052 ;; This function is called by:
  9053 ;;		_main
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function _Lcd_Set_Cursor
  9059  1A06                     _Lcd_Set_Cursor:
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9063                           ;Lcd_Set_Cursor@x stored from wreg
  9064  1A06  00F6               	movwf	Lcd_Set_Cursor@x
  9065  1A07                     l3374:
  9066                           
  9067                           ;LCD.c: 75:  uint8_t a;;LCD.c: 76:  if(x == 1){
  9068  1A07  0376               	decf	Lcd_Set_Cursor@x,w
  9069  1A08  1D03               	btfss	3,2
  9070  1A09  2A0B               	goto	u5291
  9071  1A0A  2A0C               	goto	u5290
  9072  1A0B                     u5291:
  9073  1A0B  2A18               	goto	l3380
  9074  1A0C                     u5290:
  9075  1A0C                     l3376:
  9076                           
  9077                           ;LCD.c: 77:    a = 0x80 + y;
  9078  1A0C  0874               	movf	Lcd_Set_Cursor@y,w
  9079  1A0D  3E80               	addlw	128
  9080  1A0E  00F5               	movwf	??_Lcd_Set_Cursor
  9081  1A0F  0875               	movf	??_Lcd_Set_Cursor,w
  9082  1A10  00F7               	movwf	Lcd_Set_Cursor@a
  9083  1A11                     l3378:
  9084                           
  9085                           ;LCD.c: 79:   datosLCD(a);
  9086  1A11  0877               	movf	Lcd_Set_Cursor@a,w
  9087  1A12  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9088                           
  9089                           ;LCD.c: 80:     }
  9090  1A17  2A29               	goto	l185
  9091  1A18                     l3380:
  9092  1A18  3002               	movlw	2
  9093  1A19  0676               	xorwf	Lcd_Set_Cursor@x,w
  9094  1A1A  1D03               	btfss	3,2
  9095  1A1B  2A1D               	goto	u5301
  9096  1A1C  2A1E               	goto	u5300
  9097  1A1D                     u5301:
  9098  1A1D  2A29               	goto	l185
  9099  1A1E                     u5300:
  9100  1A1E                     l3382:
  9101                           
  9102                           ;LCD.c: 82:    a = 0xC0 + y;
  9103  1A1E  0874               	movf	Lcd_Set_Cursor@y,w
  9104  1A1F  3EC0               	addlw	192
  9105  1A20  00F5               	movwf	??_Lcd_Set_Cursor
  9106  1A21  0875               	movf	??_Lcd_Set_Cursor,w
  9107  1A22  00F7               	movwf	Lcd_Set_Cursor@a
  9108  1A23                     l3384:
  9109                           
  9110                           ;LCD.c: 84:   datosLCD(a);
  9111  1A23  0877               	movf	Lcd_Set_Cursor@a,w
  9112  1A24  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9113  1A29                     l185:
  9114  1A29  0008               	return
  9115  1A2A                     __end_of_Lcd_Set_Cursor:
  9116                           
  9117                           	psect	text34
  9118  1E1F                     __ptext34:	
  9119 ;; *************** function _Lcd_Init *****************
  9120 ;; Defined at:
  9121 ;;		line 54 in file "LCD.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;		None
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;		None
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      void 
  9128 ;; Registers used:
  9129 ;;		wreg, status,2, status,0, pclath, cstack
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9135 ;;      Params:         0       0       0       0       0
  9136 ;;      Locals:         0       0       0       0       0
  9137 ;;      Temps:          2       0       0       0       0
  9138 ;;      Totals:         2       0       0       0       0
  9139 ;;Total ram usage:        2 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    2
  9142 ;; This function calls:
  9143 ;;		_datosLCD
  9144 ;; This function is called by:
  9145 ;;		_main
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           
  9150                           ;psect for function _Lcd_Init
  9151  1E1F                     _Lcd_Init:
  9152  1E1F                     l3328:	
  9153                           ;incstack = 0
  9154                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9155                           
  9156                           
  9157                           ;LCD.c: 55:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9158  1E1F  3034               	movlw	52
  9159  1E20  00F5               	movwf	??_Lcd_Init+1
  9160  1E21  30F1               	movlw	241
  9161  1E22  00F4               	movwf	??_Lcd_Init
  9162  1E23                     u5987:
  9163  1E23  0BF4               	decfsz	??_Lcd_Init,f
  9164  1E24  2E23               	goto	u5987
  9165  1E25  0BF5               	decfsz	??_Lcd_Init+1,f
  9166  1E26  2E23               	goto	u5987
  9167  1E27  2E28               	nop2
  9168  1E28                     l3330:
  9169                           
  9170                           ;LCD.c: 56:     datosLCD (0x30);
  9171  1E28  3030               	movlw	48
  9172  1E29  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9173  1E2E                     l3332:
  9174                           
  9175                           ;LCD.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9176  1E2E  300D               	movlw	13
  9177  1E2F  00F5               	movwf	??_Lcd_Init+1
  9178  1E30  30FB               	movlw	251
  9179  1E31  00F4               	movwf	??_Lcd_Init
  9180  1E32                     u5997:
  9181  1E32  0BF4               	decfsz	??_Lcd_Init,f
  9182  1E33  2E32               	goto	u5997
  9183  1E34  0BF5               	decfsz	??_Lcd_Init+1,f
  9184  1E35  2E32               	goto	u5997
  9185  1E36  2E37               	nop2
  9186                           
  9187                           ;LCD.c: 58:     datosLCD (0x30);
  9188  1E37  3030               	movlw	48
  9189  1E38  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9190  1E3D                     l3334:
  9191                           
  9192                           ;LCD.c: 59:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9193  1E3D  3042               	movlw	66
  9194  1E3E  00F4               	movwf	??_Lcd_Init
  9195  1E3F                     u6007:
  9196  1E3F  0BF4               	decfsz	??_Lcd_Init,f
  9197  1E40  2E3F               	goto	u6007
  9198  1E41  0000               	nop
  9199  1E42                     l3336:
  9200                           
  9201                           ;LCD.c: 60:     datosLCD (0x30);
  9202  1E42  3030               	movlw	48
  9203  1E43  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9204                           
  9205                           ;LCD.c: 61:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9206  1E48  3042               	movlw	66
  9207  1E49  00F4               	movwf	??_Lcd_Init
  9208  1E4A                     u6017:
  9209  1E4A  0BF4               	decfsz	??_Lcd_Init,f
  9210  1E4B  2E4A               	goto	u6017
  9211  1E4C  0000               	nop
  9212  1E4D                     l3338:
  9213                           
  9214                           ;LCD.c: 62:     datosLCD (0x38);
  9215  1E4D  3038               	movlw	56
  9216  1E4E  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9217  1E53                     l3340:
  9218                           
  9219                           ;LCD.c: 63:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9220  1E53  3027               	movlw	39
  9221  1E54  00F4               	movwf	??_Lcd_Init
  9222  1E55                     u6027:
  9223  1E55  0BF4               	decfsz	??_Lcd_Init,f
  9224  1E56  2E55               	goto	u6027
  9225  1E57  2E58               	nop2
  9226                           
  9227                           ;LCD.c: 64:     datosLCD (0x08);
  9228  1E58  3008               	movlw	8
  9229  1E59  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9230  1E5E                     l3342:
  9231                           
  9232                           ;LCD.c: 65:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9233  1E5E  3027               	movlw	39
  9234  1E5F  00F4               	movwf	??_Lcd_Init
  9235  1E60                     u6037:
  9236  1E60  0BF4               	decfsz	??_Lcd_Init,f
  9237  1E61  2E60               	goto	u6037
  9238  1E62  2E63               	nop2
  9239  1E63                     l3344:
  9240                           
  9241                           ;LCD.c: 66:     datosLCD (0x01);
  9242  1E63  3001               	movlw	1
  9243  1E64  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9244                           
  9245                           ;LCD.c: 67:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9246  1E69  300D               	movlw	13
  9247  1E6A  00F5               	movwf	??_Lcd_Init+1
  9248  1E6B  30FB               	movlw	251
  9249  1E6C  00F4               	movwf	??_Lcd_Init
  9250  1E6D                     u6047:
  9251  1E6D  0BF4               	decfsz	??_Lcd_Init,f
  9252  1E6E  2E6D               	goto	u6047
  9253  1E6F  0BF5               	decfsz	??_Lcd_Init+1,f
  9254  1E70  2E6D               	goto	u6047
  9255  1E71  2E72               	nop2
  9256  1E72                     l3346:
  9257                           
  9258                           ;LCD.c: 68:     datosLCD (0x06);
  9259  1E72  3006               	movlw	6
  9260  1E73  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9261  1E78                     l3348:
  9262                           
  9263                           ;LCD.c: 69:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9264  1E78  3027               	movlw	39
  9265  1E79  00F4               	movwf	??_Lcd_Init
  9266  1E7A                     u6057:
  9267  1E7A  0BF4               	decfsz	??_Lcd_Init,f
  9268  1E7B  2E7A               	goto	u6057
  9269  1E7C  2E7D               	nop2
  9270                           
  9271                           ;LCD.c: 70:     datosLCD (0x0C);
  9272  1E7D  300C               	movlw	12
  9273  1E7E  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9274  1E83                     l3350:
  9275                           
  9276                           ;LCD.c: 71:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9277  1E83  3027               	movlw	39
  9278  1E84  00F4               	movwf	??_Lcd_Init
  9279  1E85                     u6067:
  9280  1E85  0BF4               	decfsz	??_Lcd_Init,f
  9281  1E86  2E85               	goto	u6067
  9282  1E87  2E88               	nop2
  9283  1E88                     l179:
  9284  1E88  0008               	return
  9285  1E89                     __end_of_Lcd_Init:
  9286                           
  9287                           	psect	text35
  9288  196F                     __ptext35:	
  9289 ;; *************** function _LCD_Limpia *****************
  9290 ;; Defined at:
  9291 ;;		line 48 in file "LCD.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0, pclath, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9305 ;;      Params:         0       0       0       0       0
  9306 ;;      Locals:         0       0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0
  9308 ;;      Totals:         0       0       0       0       0
  9309 ;;Total ram usage:        0 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    2
  9312 ;; This function calls:
  9313 ;;		_datosLCD
  9314 ;; This function is called by:
  9315 ;;		_main
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           
  9320                           ;psect for function _LCD_Limpia
  9321  196F                     _LCD_Limpia:
  9322  196F                     l3352:	
  9323                           ;incstack = 0
  9324                           ; Regs used in _LCD_Limpia: [wreg+status,2+status,0+pclath+cstack]
  9325                           
  9326                           
  9327                           ;LCD.c: 49:     datosLCD(0);
  9328  196F  3000               	movlw	0
  9329  1970  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9330                           
  9331                           ;LCD.c: 50:     datosLCD(1);
  9332  1975  3001               	movlw	1
  9333  1976  160A  158A  21C1  160A  158A  	fcall	_datosLCD
  9334  197B                     l176:
  9335  197B  0008               	return
  9336  197C                     __end_of_LCD_Limpia:
  9337                           
  9338                           	psect	text36
  9339  19C1                     __ptext36:	
  9340 ;; *************** function _datosLCD *****************
  9341 ;; Defined at:
  9342 ;;		line 38 in file "LCD.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  x               1    wreg     unsigned char 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;  x               1    3[COMMON] unsigned char 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0, pclath, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9356 ;;      Params:         0       0       0       0       0
  9357 ;;      Locals:         1       0       0       0       0
  9358 ;;      Temps:          2       0       0       0       0
  9359 ;;      Totals:         3       0       0       0       0
  9360 ;;Total ram usage:        3 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    1
  9363 ;; This function calls:
  9364 ;;		_Puerto
  9365 ;; This function is called by:
  9366 ;;		_LCD_Limpia
  9367 ;;		_Lcd_Init
  9368 ;;		_Lcd_Set_Cursor
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _datosLCD
  9374  19C1                     _datosLCD:
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _datosLCD: [wreg+status,2+status,0+pclath+cstack]
  9378                           ;datosLCD@x stored from wreg
  9379  19C1  00F3               	movwf	datosLCD@x
  9380  19C2                     l2930:
  9381                           
  9382                           ;LCD.c: 39:     RE0 = 0;
  9383  19C2  1283               	bcf	3,5	;RP0=0, select bank0
  9384  19C3  1303               	bcf	3,6	;RP1=0, select bank0
  9385  19C4  1009               	bcf	9,0	;volatile
  9386  19C5                     l2932:
  9387                           
  9388                           ;LCD.c: 40:     Puerto(x);
  9389  19C5  0873               	movf	datosLCD@x,w
  9390  19C6  160A  158A  2331  160A  158A  	fcall	_Puerto
  9391  19CB                     l2934:
  9392                           
  9393                           ;LCD.c: 41:     RE1 = 1;
  9394  19CB  1283               	bcf	3,5	;RP0=0, select bank0
  9395  19CC  1303               	bcf	3,6	;RP1=0, select bank0
  9396  19CD  1489               	bsf	9,1	;volatile
  9397  19CE                     l2936:
  9398                           
  9399                           ;LCD.c: 42:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9400  19CE  3003               	movlw	3
  9401  19CF  00F1               	movwf	??_datosLCD
  9402  19D0                     u6077:
  9403  19D0  0BF1               	decfsz	??_datosLCD,f
  9404  19D1  29D0               	goto	u6077
  9405  19D2                     l2938:
  9406                           
  9407                           ;LCD.c: 43:     RE1 = 0;
  9408  19D2  1283               	bcf	3,5	;RP0=0, select bank0
  9409  19D3  1303               	bcf	3,6	;RP1=0, select bank0
  9410  19D4  1089               	bcf	9,1	;volatile
  9411  19D5                     l2940:
  9412                           
  9413                           ;LCD.c: 44:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9414  19D5  3003               	movlw	3
  9415  19D6  00F1               	movwf	??_datosLCD
  9416  19D7                     u6087:
  9417  19D7  0BF1               	decfsz	??_datosLCD,f
  9418  19D8  29D7               	goto	u6087
  9419  19D9                     l2942:
  9420                           
  9421                           ;LCD.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9422  19D9  3006               	movlw	6
  9423  19DA  00F2               	movwf	??_datosLCD+1
  9424  19DB  3030               	movlw	48
  9425  19DC  00F1               	movwf	??_datosLCD
  9426  19DD                     u6097:
  9427  19DD  0BF1               	decfsz	??_datosLCD,f
  9428  19DE  29DD               	goto	u6097
  9429  19DF  0BF2               	decfsz	??_datosLCD+1,f
  9430  19E0  29DD               	goto	u6097
  9431  19E1  0000               	nop
  9432  19E2                     l173:
  9433  19E2  0008               	return
  9434  19E3                     __end_of_datosLCD:
  9435                           
  9436                           	psect	text37
  9437  1B31                     __ptext37:	
  9438 ;; *************** function _Puerto *****************
  9439 ;; Defined at:
  9440 ;;		line 16 in file "LCD.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  x               1    wreg     unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  x               1    0[COMMON] unsigned char 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9454 ;;      Params:         0       0       0       0       0
  9455 ;;      Locals:         1       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0
  9457 ;;      Totals:         1       0       0       0       0
  9458 ;;Total ram usage:        1 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; This function calls:
  9461 ;;		Nothing
  9462 ;; This function is called by:
  9463 ;;		_LCD_CMD
  9464 ;;		_datosLCD
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           
  9469                           ;psect for function _Puerto
  9470  1B31                     _Puerto:
  9471                           
  9472                           ;incstack = 0
  9473                           ; Regs used in _Puerto: [wreg]
  9474                           ;Puerto@x stored from wreg
  9475  1B31  00F0               	movwf	Puerto@x
  9476  1B32                     l2412:
  9477                           
  9478                           ;LCD.c: 17:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  9479  1B32  1C70               	btfss	Puerto@x,0
  9480  1B33  2B35               	goto	u2991
  9481  1B34  2B36               	goto	u2990
  9482  1B35                     u2991:
  9483  1B35  2B3A               	goto	l151
  9484  1B36                     u2990:
  9485  1B36                     l2414:
  9486  1B36  1283               	bcf	3,5	;RP0=0, select bank0
  9487  1B37  1303               	bcf	3,6	;RP1=0, select bank0
  9488  1B38  1408               	bsf	8,0	;volatile
  9489  1B39  2B3D               	goto	l152
  9490  1B3A                     l151:
  9491  1B3A  1283               	bcf	3,5	;RP0=0, select bank0
  9492  1B3B  1303               	bcf	3,6	;RP1=0, select bank0
  9493  1B3C  1008               	bcf	8,0	;volatile
  9494  1B3D                     l152:
  9495                           
  9496                           ;LCD.c: 18:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  9497  1B3D  1CF0               	btfss	Puerto@x,1
  9498  1B3E  2B40               	goto	u3001
  9499  1B3F  2B41               	goto	u3000
  9500  1B40                     u3001:
  9501  1B40  2B43               	goto	l153
  9502  1B41                     u3000:
  9503  1B41                     l2416:
  9504  1B41  1488               	bsf	8,1	;volatile
  9505  1B42  2B44               	goto	l154
  9506  1B43                     l153:
  9507  1B43  1088               	bcf	8,1	;volatile
  9508  1B44                     l154:
  9509                           
  9510                           ;LCD.c: 19:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  9511  1B44  1D70               	btfss	Puerto@x,2
  9512  1B45  2B47               	goto	u3011
  9513  1B46  2B48               	goto	u3010
  9514  1B47                     u3011:
  9515  1B47  2B4A               	goto	l155
  9516  1B48                     u3010:
  9517  1B48                     l2418:
  9518  1B48  1508               	bsf	8,2	;volatile
  9519  1B49  2B4B               	goto	l156
  9520  1B4A                     l155:
  9521  1B4A  1108               	bcf	8,2	;volatile
  9522  1B4B                     l156:
  9523                           
  9524                           ;LCD.c: 20:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  9525  1B4B  1DF0               	btfss	Puerto@x,3
  9526  1B4C  2B4E               	goto	u3021
  9527  1B4D  2B4F               	goto	u3020
  9528  1B4E                     u3021:
  9529  1B4E  2B51               	goto	l157
  9530  1B4F                     u3020:
  9531  1B4F                     l2420:
  9532  1B4F  1588               	bsf	8,3	;volatile
  9533  1B50  2B52               	goto	l158
  9534  1B51                     l157:
  9535  1B51  1188               	bcf	8,3	;volatile
  9536  1B52                     l158:
  9537                           
  9538                           ;LCD.c: 21:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  9539  1B52  1E70               	btfss	Puerto@x,4
  9540  1B53  2B55               	goto	u3031
  9541  1B54  2B56               	goto	u3030
  9542  1B55                     u3031:
  9543  1B55  2B58               	goto	l159
  9544  1B56                     u3030:
  9545  1B56                     l2422:
  9546  1B56  1608               	bsf	8,4	;volatile
  9547  1B57  2B59               	goto	l160
  9548  1B58                     l159:
  9549  1B58  1208               	bcf	8,4	;volatile
  9550  1B59                     l160:
  9551                           
  9552                           ;LCD.c: 22:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  9553  1B59  1EF0               	btfss	Puerto@x,5
  9554  1B5A  2B5C               	goto	u3041
  9555  1B5B  2B5D               	goto	u3040
  9556  1B5C                     u3041:
  9557  1B5C  2B5F               	goto	l161
  9558  1B5D                     u3040:
  9559  1B5D                     l2424:
  9560  1B5D  1688               	bsf	8,5	;volatile
  9561  1B5E  2B60               	goto	l162
  9562  1B5F                     l161:
  9563  1B5F  1288               	bcf	8,5	;volatile
  9564  1B60                     l162:
  9565                           
  9566                           ;LCD.c: 23:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  9567  1B60  1F70               	btfss	Puerto@x,6
  9568  1B61  2B63               	goto	u3051
  9569  1B62  2B64               	goto	u3050
  9570  1B63                     u3051:
  9571  1B63  2B66               	goto	l163
  9572  1B64                     u3050:
  9573  1B64                     l2426:
  9574  1B64  1708               	bsf	8,6	;volatile
  9575  1B65  2B67               	goto	l164
  9576  1B66                     l163:
  9577  1B66  1308               	bcf	8,6	;volatile
  9578  1B67                     l164:
  9579                           
  9580                           ;LCD.c: 24:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  9581  1B67  1FF0               	btfss	Puerto@x,7
  9582  1B68  2B6A               	goto	u3061
  9583  1B69  2B6B               	goto	u3060
  9584  1B6A                     u3061:
  9585  1B6A  2B6D               	goto	l165
  9586  1B6B                     u3060:
  9587  1B6B                     l2428:
  9588  1B6B  1788               	bsf	8,7	;volatile
  9589  1B6C  2B6E               	goto	l167
  9590  1B6D                     l165:
  9591  1B6D  1388               	bcf	8,7	;volatile
  9592  1B6E                     l167:
  9593  1B6E  0008               	return
  9594  1B6F                     __end_of_Puerto:
  9595                           
  9596                           	psect	text38
  9597  1BF5                     __ptext38:	
  9598 ;; *************** function _ADC_lectura *****************
  9599 ;; Defined at:
  9600 ;;		line 93 in file "Mast.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;		None
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;		None
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0, pclath, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9614 ;;      Params:         0       0       0       0       0
  9615 ;;      Locals:         0       0       0       0       0
  9616 ;;      Temps:          0       4       0       0       0
  9617 ;;      Totals:         0       4       0       0       0
  9618 ;;Total ram usage:        4 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    2
  9621 ;; This function calls:
  9622 ;;		___xxtofl
  9623 ;;		_spiRead
  9624 ;;		_spiWrite
  9625 ;; This function is called by:
  9626 ;;		_main
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _ADC_lectura
  9632  1BF5                     _ADC_lectura:
  9633  1BF5                     l3364:	
  9634                           ;incstack = 0
  9635                           ; Regs used in _ADC_lectura: [wreg+status,2+status,0+pclath+cstack]
  9636                           
  9637                           
  9638                           ;Mast.c: 94:     PORTCbits.RC0 = 0;
  9639  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
  9640  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
  9641  1BF7  1007               	bcf	7,0	;volatile
  9642  1BF8                     l3366:
  9643                           
  9644                           ;Mast.c: 95:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9645  1BF8  3003               	movlw	3
  9646  1BF9  1283               	bcf	3,5	;RP0=0, select bank0
  9647  1BFA  1303               	bcf	3,6	;RP1=0, select bank0
  9648  1BFB  00A1               	movwf	??_ADC_lectura+1
  9649  1BFC  3097               	movlw	151
  9650  1BFD  00A0               	movwf	??_ADC_lectura
  9651  1BFE                     u6107:
  9652  1BFE  0BA0               	decfsz	??_ADC_lectura,f
  9653  1BFF  2BFE               	goto	u6107
  9654  1C00  0BA1               	decfsz	??_ADC_lectura+1,f
  9655  1C01  2BFE               	goto	u6107
  9656  1C02                     l3368:
  9657                           
  9658                           ;Mast.c: 97:     spiWrite(1);
  9659  1C02  3001               	movlw	1
  9660  1C03  120A  158A  2000  160A  158A  	fcall	_spiWrite
  9661  1C08                     l3370:
  9662                           
  9663                           ;Mast.c: 98:     v1 = spiRead();
  9664  1C08  160A  118A  2000  160A  158A  	fcall	_spiRead
  9665  1C0D  1283               	bcf	3,5	;RP0=0, select bank0
  9666  1C0E  1303               	bcf	3,6	;RP1=0, select bank0
  9667  1C0F  00A0               	movwf	??_ADC_lectura
  9668  1C10  01A1               	clrf	??_ADC_lectura+1
  9669  1C11  01A2               	clrf	??_ADC_lectura+2
  9670  1C12  01A3               	clrf	??_ADC_lectura+3
  9671  1C13  0823               	movf	??_ADC_lectura+3,w
  9672  1C14  00F3               	movwf	___xxtofl@val+3
  9673  1C15  0822               	movf	??_ADC_lectura+2,w
  9674  1C16  00F2               	movwf	___xxtofl@val+2
  9675  1C17  0821               	movf	??_ADC_lectura+1,w
  9676  1C18  00F1               	movwf	___xxtofl@val+1
  9677  1C19  0820               	movf	??_ADC_lectura,w
  9678  1C1A  00F0               	movwf	___xxtofl@val
  9679  1C1B  3000               	movlw	0
  9680  1C1C  160A  158A  2689  160A  158A  	fcall	___xxtofl
  9681  1C21  0873               	movf	?___xxtofl+3,w
  9682  1C22  1683               	bsf	3,5	;RP0=1, select bank1
  9683  1C23  1303               	bcf	3,6	;RP1=0, select bank1
  9684  1C24  00D5               	movwf	(_v1+3)^(0+128)
  9685  1C25  0872               	movf	?___xxtofl+2,w
  9686  1C26  00D4               	movwf	(_v1+2)^(0+128)
  9687  1C27  0871               	movf	?___xxtofl+1,w
  9688  1C28  00D3               	movwf	(_v1+1)^(0+128)
  9689  1C29  0870               	movf	?___xxtofl,w
  9690  1C2A  00D2               	movwf	_v1^(0+128)
  9691                           
  9692                           ;Mast.c: 100:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9693  1C2B  3003               	movlw	3
  9694  1C2C  1283               	bcf	3,5	;RP0=0, select bank0
  9695  1C2D  1303               	bcf	3,6	;RP1=0, select bank0
  9696  1C2E  00A1               	movwf	??_ADC_lectura+1
  9697  1C2F  3097               	movlw	151
  9698  1C30  00A0               	movwf	??_ADC_lectura
  9699  1C31                     u6117:
  9700  1C31  0BA0               	decfsz	??_ADC_lectura,f
  9701  1C32  2C31               	goto	u6117
  9702  1C33  0BA1               	decfsz	??_ADC_lectura+1,f
  9703  1C34  2C31               	goto	u6117
  9704  1C35                     l3372:
  9705                           
  9706                           ;Mast.c: 101:     PORTCbits.RC0 = 1;
  9707  1C35  1283               	bcf	3,5	;RP0=0, select bank0
  9708  1C36  1303               	bcf	3,6	;RP1=0, select bank0
  9709  1C37  1407               	bsf	7,0	;volatile
  9710                           
  9711                           ;Mast.c: 102:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9712  1C38  3003               	movlw	3
  9713  1C39  1283               	bcf	3,5	;RP0=0, select bank0
  9714  1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  9715  1C3B  00A1               	movwf	??_ADC_lectura+1
  9716  1C3C  3097               	movlw	151
  9717  1C3D  00A0               	movwf	??_ADC_lectura
  9718  1C3E                     u6127:
  9719  1C3E  0BA0               	decfsz	??_ADC_lectura,f
  9720  1C3F  2C3E               	goto	u6127
  9721  1C40  0BA1               	decfsz	??_ADC_lectura+1,f
  9722  1C41  2C3E               	goto	u6127
  9723  1C42                     l117:
  9724  1C42  0008               	return
  9725  1C43                     __end_of_ADC_lectura:
  9726                           
  9727                           	psect	text39
  9728  0800                     __ptext39:	
  9729 ;; *************** function _spiWrite *****************
  9730 ;; Defined at:
  9731 ;;		line 35 in file "SPI.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  dat             1    wreg     unsigned char 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  dat             1    0[COMMON] unsigned char 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9745 ;;      Params:         0       0       0       0       0
  9746 ;;      Locals:         1       0       0       0       0
  9747 ;;      Temps:          0       0       0       0       0
  9748 ;;      Totals:         1       0       0       0       0
  9749 ;;Total ram usage:        1 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; This function calls:
  9752 ;;		Nothing
  9753 ;; This function is called by:
  9754 ;;		_ADC_lectura
  9755 ;;		_contador
  9756 ;;		_temperatura
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           
  9761                           ;psect for function _spiWrite
  9762  0800                     _spiWrite:
  9763                           
  9764                           ;incstack = 0
  9765                           ; Regs used in _spiWrite: [wreg]
  9766                           ;spiWrite@dat stored from wreg
  9767  0800  00F0               	movwf	spiWrite@dat
  9768  0801                     l2904:
  9769                           
  9770                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  9771  0801  0870               	movf	spiWrite@dat,w
  9772  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9773  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9774  0804  0093               	movwf	19	;volatile
  9775  0805                     l26:
  9776  0805  0008               	return
  9777  0806                     __end_of_spiWrite:
  9778                           
  9779                           	psect	text40
  9780  1000                     __ptext40:	
  9781 ;; *************** function _spiRead *****************
  9782 ;; Defined at:
  9783 ;;		line 48 in file "SPI.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      unsigned char 
  9790 ;; Registers used:
  9791 ;;		wreg, status,2, status,0, pclath, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9797 ;;      Params:         0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0
  9800 ;;      Totals:         0       0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:    1
  9804 ;; This function calls:
  9805 ;;		_spiReceiveWait
  9806 ;; This function is called by:
  9807 ;;		_ADC_lectura
  9808 ;;		_contador
  9809 ;;		_temperatura
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _spiRead
  9815  1000                     _spiRead:
  9816  1000                     l2906:	
  9817                           ;incstack = 0
  9818                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9819                           
  9820                           
  9821                           ;SPI.c: 50:     spiReceiveWait();
  9822  1000  160A  158A  2137  160A  118A  	fcall	_spiReceiveWait
  9823  1005                     l2908:
  9824                           
  9825                           ;SPI.c: 51:     return(SSPBUF);
  9826  1005  1283               	bcf	3,5	;RP0=0, select bank0
  9827  1006  1303               	bcf	3,6	;RP1=0, select bank0
  9828  1007  0813               	movf	19,w	;volatile
  9829  1008                     l34:
  9830  1008  0008               	return
  9831  1009                     __end_of_spiRead:
  9832                           
  9833                           	psect	text41
  9834  1937                     __ptext41:	
  9835 ;; *************** function _spiReceiveWait *****************
  9836 ;; Defined at:
  9837 ;;		line 30 in file "SPI.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		None
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9851 ;;      Params:         0       0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0
  9854 ;;      Totals:         0       0       0       0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_spiRead
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           
  9865                           ;psect for function _spiReceiveWait
  9866  1937                     _spiReceiveWait:
  9867  1937                     l2410:	
  9868                           ;incstack = 0
  9869                           ; Regs used in _spiReceiveWait: []
  9870                           
  9871  1937                     l20:	
  9872                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  9873                           
  9874  1937  1683               	bsf	3,5	;RP0=1, select bank1
  9875  1938  1303               	bcf	3,6	;RP1=0, select bank1
  9876  1939  1C14               	btfss	20,0	;volatile
  9877  193A  293C               	goto	u2981
  9878  193B  293D               	goto	u2980
  9879  193C                     u2981:
  9880  193C  2937               	goto	l20
  9881  193D                     u2980:
  9882  193D                     l23:
  9883  193D  0008               	return
  9884  193E                     __end_of_spiReceiveWait:
  9885                           
  9886                           	psect	text42
  9887  1E89                     __ptext42:	
  9888 ;; *************** function ___xxtofl *****************
  9889 ;; Defined at:
  9890 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  sign            1    wreg     unsigned char 
  9893 ;;  val             4    0[COMMON] long 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  sign            1    8[COMMON] unsigned char 
  9896 ;;  arg             4   10[COMMON] unsigned long 
  9897 ;;  exp             1    9[COMMON] unsigned char 
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  4    0[COMMON] unsigned char 
  9900 ;; Registers used:
  9901 ;;		wreg, status,2, status,0
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9907 ;;      Params:         4       0       0       0       0
  9908 ;;      Locals:         6       0       0       0       0
  9909 ;;      Temps:          4       0       0       0       0
  9910 ;;      Totals:        14       0       0       0       0
  9911 ;;Total ram usage:       14 bytes
  9912 ;; Hardware stack levels used:    1
  9913 ;; This function calls:
  9914 ;;		Nothing
  9915 ;; This function is called by:
  9916 ;;		_ADC_lectura
  9917 ;;		_temperatura
  9918 ;;		_sprintf
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function ___xxtofl
  9924  1E89                     ___xxtofl:
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9928                           ;___xxtofl@sign stored from wreg
  9929  1E89  00F8               	movwf	___xxtofl@sign
  9930  1E8A                     l3258:
  9931  1E8A  0878               	movf	___xxtofl@sign,w
  9932  1E8B  1903               	btfsc	3,2
  9933  1E8C  2E8E               	goto	u5151
  9934  1E8D  2E8F               	goto	u5150
  9935  1E8E                     u5151:
  9936  1E8E  2EA3               	goto	l3264
  9937  1E8F                     u5150:
  9938  1E8F                     l3260:
  9939  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  9940  1E90  2E92               	goto	u5161
  9941  1E91  2E93               	goto	u5160
  9942  1E92                     u5161:
  9943  1E92  2EA3               	goto	l3264
  9944  1E93                     u5160:
  9945  1E93                     l3262:
  9946  1E93  0970               	comf	___xxtofl@val,w
  9947  1E94  00FA               	movwf	___xxtofl@arg
  9948  1E95  0971               	comf	___xxtofl@val+1,w
  9949  1E96  00FB               	movwf	___xxtofl@arg+1
  9950  1E97  0972               	comf	___xxtofl@val+2,w
  9951  1E98  00FC               	movwf	___xxtofl@arg+2
  9952  1E99  0973               	comf	___xxtofl@val+3,w
  9953  1E9A  00FD               	movwf	___xxtofl@arg+3
  9954  1E9B  0AFA               	incf	___xxtofl@arg,f
  9955  1E9C  1903               	skipnz
  9956  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  9957  1E9E  1903               	skipnz
  9958  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  9959  1EA0  1903               	skipnz
  9960  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  9961  1EA2  2EAB               	goto	l904
  9962  1EA3                     l3264:
  9963  1EA3  0873               	movf	___xxtofl@val+3,w
  9964  1EA4  00FD               	movwf	___xxtofl@arg+3
  9965  1EA5  0872               	movf	___xxtofl@val+2,w
  9966  1EA6  00FC               	movwf	___xxtofl@arg+2
  9967  1EA7  0871               	movf	___xxtofl@val+1,w
  9968  1EA8  00FB               	movwf	___xxtofl@arg+1
  9969  1EA9  0870               	movf	___xxtofl@val,w
  9970  1EAA  00FA               	movwf	___xxtofl@arg
  9971  1EAB                     l904:
  9972  1EAB  0873               	movf	___xxtofl@val+3,w
  9973  1EAC  0472               	iorwf	___xxtofl@val+2,w
  9974  1EAD  0471               	iorwf	___xxtofl@val+1,w
  9975  1EAE  0470               	iorwf	___xxtofl@val,w
  9976  1EAF  1D03               	skipz
  9977  1EB0  2EB2               	goto	u5171
  9978  1EB1  2EB3               	goto	u5170
  9979  1EB2                     u5171:
  9980  1EB2  2EBC               	goto	l3270
  9981  1EB3                     u5170:
  9982  1EB3                     l3266:
  9983  1EB3  3000               	movlw	0
  9984  1EB4  00F3               	movwf	?___xxtofl+3
  9985  1EB5  3000               	movlw	0
  9986  1EB6  00F2               	movwf	?___xxtofl+2
  9987  1EB7  3000               	movlw	0
  9988  1EB8  00F1               	movwf	?___xxtofl+1
  9989  1EB9  3000               	movlw	0
  9990  1EBA  00F0               	movwf	?___xxtofl
  9991  1EBB  2F42               	goto	l906
  9992  1EBC                     l3270:
  9993  1EBC  3096               	movlw	150
  9994  1EBD  00F4               	movwf	??___xxtofl
  9995  1EBE  0874               	movf	??___xxtofl,w
  9996  1EBF  00F9               	movwf	___xxtofl@exp
  9997  1EC0  2ECE               	goto	l3274
  9998  1EC1                     l3272:
  9999  1EC1  3001               	movlw	1
 10000  1EC2  00F4               	movwf	??___xxtofl
 10001  1EC3  0874               	movf	??___xxtofl,w
 10002  1EC4  07F9               	addwf	___xxtofl@exp,f
 10003  1EC5  3001               	movlw	1
 10004  1EC6                     u5185:
 10005  1EC6  1003               	clrc
 10006  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
 10007  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
 10008  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
 10009  1ECA  0CFA               	rrf	___xxtofl@arg,f
 10010  1ECB  3EFF               	addlw	-1
 10011  1ECC  1D03               	skipz
 10012  1ECD  2EC6               	goto	u5185
 10013  1ECE                     l3274:
 10014  1ECE  30FE               	movlw	254
 10015  1ECF  057D               	andwf	___xxtofl@arg+3,w
 10016  1ED0  1D03               	btfss	3,2
 10017  1ED1  2ED3               	goto	u5191
 10018  1ED2  2ED4               	goto	u5190
 10019  1ED3                     u5191:
 10020  1ED3  2EC1               	goto	l3272
 10021  1ED4                     u5190:
 10022  1ED4  2EF0               	goto	l910
 10023  1ED5                     l3276:
 10024  1ED5  3001               	movlw	1
 10025  1ED6  00F4               	movwf	??___xxtofl
 10026  1ED7  0874               	movf	??___xxtofl,w
 10027  1ED8  07F9               	addwf	___xxtofl@exp,f
 10028  1ED9                     l3278:
 10029  1ED9  3001               	movlw	1
 10030  1EDA  07FA               	addwf	___xxtofl@arg,f
 10031  1EDB  3000               	movlw	0
 10032  1EDC  1803               	skipnc
 10033  1EDD  3001               	movlw	1
 10034  1EDE  07FB               	addwf	___xxtofl@arg+1,f
 10035  1EDF  3000               	movlw	0
 10036  1EE0  1803               	skipnc
 10037  1EE1  3001               	movlw	1
 10038  1EE2  07FC               	addwf	___xxtofl@arg+2,f
 10039  1EE3  3000               	movlw	0
 10040  1EE4  1803               	skipnc
 10041  1EE5  3001               	movlw	1
 10042  1EE6  07FD               	addwf	___xxtofl@arg+3,f
 10043  1EE7                     l3280:
 10044  1EE7  3001               	movlw	1
 10045  1EE8                     u5205:
 10046  1EE8  1003               	clrc
 10047  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
 10048  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
 10049  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
 10050  1EEC  0CFA               	rrf	___xxtofl@arg,f
 10051  1EED  3EFF               	addlw	-1
 10052  1EEE  1D03               	skipz
 10053  1EEF  2EE8               	goto	u5205
 10054  1EF0                     l910:
 10055  1EF0  30FF               	movlw	255
 10056  1EF1  057D               	andwf	___xxtofl@arg+3,w
 10057  1EF2  1D03               	btfss	3,2
 10058  1EF3  2EF5               	goto	u5211
 10059  1EF4  2EF6               	goto	u5210
 10060  1EF5                     u5211:
 10061  1EF5  2ED5               	goto	l3276
 10062  1EF6                     u5210:
 10063  1EF6  2F02               	goto	l3284
 10064  1EF7                     l3282:
 10065  1EF7  3001               	movlw	1
 10066  1EF8  02F9               	subwf	___xxtofl@exp,f
 10067  1EF9  3001               	movlw	1
 10068  1EFA  00F4               	movwf	??___xxtofl
 10069  1EFB                     u5225:
 10070  1EFB  1003               	clrc
 10071  1EFC  0DFA               	rlf	___xxtofl@arg,f
 10072  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
 10073  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
 10074  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
 10075  1F00  0BF4               	decfsz	??___xxtofl,f
 10076  1F01  2EFB               	goto	u5225
 10077  1F02                     l3284:
 10078  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
 10079  1F03  2F05               	goto	u5231
 10080  1F04  2F06               	goto	u5230
 10081  1F05                     u5231:
 10082  1F05  2F0C               	goto	l917
 10083  1F06                     u5230:
 10084  1F06                     l3286:
 10085  1F06  3002               	movlw	2
 10086  1F07  0279               	subwf	___xxtofl@exp,w
 10087  1F08  1803               	skipnc
 10088  1F09  2F0B               	goto	u5241
 10089  1F0A  2F0C               	goto	u5240
 10090  1F0B                     u5241:
 10091  1F0B  2EF7               	goto	l3282
 10092  1F0C                     u5240:
 10093  1F0C                     l917:
 10094  1F0C  1879               	btfsc	___xxtofl@exp,0
 10095  1F0D  2F0F               	goto	u5251
 10096  1F0E  2F10               	goto	u5250
 10097  1F0F                     u5251:
 10098  1F0F  2F18               	goto	l918
 10099  1F10                     u5250:
 10100  1F10                     l3288:
 10101  1F10  30FF               	movlw	255
 10102  1F11  05FA               	andwf	___xxtofl@arg,f
 10103  1F12  30FF               	movlw	255
 10104  1F13  05FB               	andwf	___xxtofl@arg+1,f
 10105  1F14  307F               	movlw	127
 10106  1F15  05FC               	andwf	___xxtofl@arg+2,f
 10107  1F16  30FF               	movlw	255
 10108  1F17  05FD               	andwf	___xxtofl@arg+3,f
 10109  1F18                     l918:
 10110  1F18  1003               	clrc
 10111  1F19  0CF9               	rrf	___xxtofl@exp,f
 10112  1F1A                     l3290:
 10113  1F1A  0879               	movf	___xxtofl@exp,w
 10114  1F1B  00F4               	movwf	??___xxtofl
 10115  1F1C  01F5               	clrf	??___xxtofl+1
 10116  1F1D  01F6               	clrf	??___xxtofl+2
 10117  1F1E  01F7               	clrf	??___xxtofl+3
 10118  1F1F  3018               	movlw	24
 10119  1F20                     u5265:
 10120  1F20  1003               	clrc
 10121  1F21  0DF4               	rlf	??___xxtofl,f
 10122  1F22  0DF5               	rlf	??___xxtofl+1,f
 10123  1F23  0DF6               	rlf	??___xxtofl+2,f
 10124  1F24  0DF7               	rlf	??___xxtofl+3,f
 10125  1F25                     u5260:
 10126  1F25  3EFF               	addlw	-1
 10127  1F26  1D03               	skipz
 10128  1F27  2F20               	goto	u5265
 10129  1F28  0874               	movf	??___xxtofl,w
 10130  1F29  04FA               	iorwf	___xxtofl@arg,f
 10131  1F2A  0875               	movf	??___xxtofl+1,w
 10132  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
 10133  1F2C  0876               	movf	??___xxtofl+2,w
 10134  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
 10135  1F2E  0877               	movf	??___xxtofl+3,w
 10136  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
 10137  1F30                     l3292:
 10138  1F30  0878               	movf	___xxtofl@sign,w
 10139  1F31  1903               	btfsc	3,2
 10140  1F32  2F34               	goto	u5271
 10141  1F33  2F35               	goto	u5270
 10142  1F34                     u5271:
 10143  1F34  2F3A               	goto	l3298
 10144  1F35                     u5270:
 10145  1F35                     l3294:
 10146  1F35  1FF3               	btfss	___xxtofl@val+3,7
 10147  1F36  2F38               	goto	u5281
 10148  1F37  2F39               	goto	u5280
 10149  1F38                     u5281:
 10150  1F38  2F3A               	goto	l3298
 10151  1F39                     u5280:
 10152  1F39                     l3296:
 10153  1F39  17FD               	bsf	___xxtofl@arg+3,7
 10154  1F3A                     l3298:
 10155  1F3A  087D               	movf	___xxtofl@arg+3,w
 10156  1F3B  00F3               	movwf	?___xxtofl+3
 10157  1F3C  087C               	movf	___xxtofl@arg+2,w
 10158  1F3D  00F2               	movwf	?___xxtofl+2
 10159  1F3E  087B               	movf	___xxtofl@arg+1,w
 10160  1F3F  00F1               	movwf	?___xxtofl+1
 10161  1F40  087A               	movf	___xxtofl@arg,w
 10162  1F41  00F0               	movwf	?___xxtofl
 10163  1F42                     l906:
 10164  1F42  0008               	return
 10165  1F43                     __end_of___xxtofl:
 10166  007E                     btemp	set	126	;btemp
 10167  007E                     wtemp0	set	126
 10168                           
 10169                           	psect	config
 10170                           
 10171                           ;Config register CONFIG1 @ 0x2007
 10172                           ;	Oscillator Selection bits
 10173                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10174                           ;	Watchdog Timer Enable bit
 10175                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10176                           ;	Power-up Timer Enable bit
 10177                           ;	PWRTE = OFF, PWRT disabled
 10178                           ;	RE3/MCLR pin function select bit
 10179                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10180                           ;	Code Protection bit
 10181                           ;	CP = OFF, Program memory code protection is disabled
 10182                           ;	Data Code Protection bit
 10183                           ;	CPD = OFF, Data memory code protection is disabled
 10184                           ;	Brown Out Reset Selection bits
 10185                           ;	BOREN = OFF, BOR disabled
 10186                           ;	Internal External Switchover bit
 10187                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10188                           ;	Fail-Safe Clock Monitor Enabled bit
 10189                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10190                           ;	Low Voltage Programming Enable bit
 10191                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10192                           ;	In-Circuit Debugger Mode bit
 10193                           ;	DEBUG = 0x1, unprogrammed default
 10194  2007                     	org	8199
 10195  2007  20D1               	dw	8401
 10196                           
 10197                           ;Config register CONFIG2 @ 0x2008
 10198                           ;	Brown-out Reset Selection bit
 10199                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10200                           ;	Flash Program Memory Self Write Enable bits
 10201                           ;	WRT = OFF, Write protection off
 10202  2008                     	org	8200
 10203  2008  3FFF               	dw	16383
 10204                           
 10205                           	psect	text2_split_1
 10206  01E9                     u5470:
 10207  01E9                     l3502:
 10208  01E9  1683               	bsf	3,5	;RP0=1, select bank1
 10209  01EA  1303               	bcf	3,6	;RP1=0, select bank1
 10210  01EB  0846               	movf	(sprintf@fval+3)^(0+128),w
 10211  01EC  00F3               	movwf	___fleq@ff1+3
 10212  01ED  0845               	movf	(sprintf@fval+2)^(0+128),w
 10213  01EE  00F2               	movwf	___fleq@ff1+2
 10214  01EF  0844               	movf	(sprintf@fval+1)^(0+128),w
 10215  01F0  00F1               	movwf	___fleq@ff1+1
 10216  01F1  0843               	movf	sprintf@fval^(0+128),w
 10217  01F2  00F0               	movwf	___fleq@ff1
 10218  01F3  3000               	movlw	0
 10219  01F4  00F7               	movwf	___fleq@ff2+3
 10220  01F5  3000               	movlw	0
 10221  01F6  00F6               	movwf	___fleq@ff2+2
 10222  01F7  3000               	movlw	0
 10223  01F8  00F5               	movwf	___fleq@ff2+1
 10224  01F9  3000               	movlw	0
 10225  01FA  00F4               	movwf	___fleq@ff2
 10226  01FB  160A  158A  2443  120A  118A  	fcall	___fleq
 10227  0200  1803               	btfsc	3,0
 10228  0201  2A03               	goto	u5481
 10229  0202  2A04               	goto	u5480
 10230  0203                     u5481:
 10231  0203  2AAC               	goto	l3522
 10232  0204                     u5480:
 10233  0204                     l3504:
 10234  0204  1683               	bsf	3,5	;RP0=1, select bank1
 10235  0205  1303               	bcf	3,6	;RP1=0, select bank1
 10236  0206  0846               	movf	(sprintf@fval+3)^(0+128),w
 10237  0207  1283               	bcf	3,5	;RP0=0, select bank0
 10238  0208  1303               	bcf	3,6	;RP1=0, select bank0
 10239  0209  00D4               	movwf	___fltol@f1+3
 10240  020A  1683               	bsf	3,5	;RP0=1, select bank1
 10241  020B  1303               	bcf	3,6	;RP1=0, select bank1
 10242  020C  0845               	movf	(sprintf@fval+2)^(0+128),w
 10243  020D  1283               	bcf	3,5	;RP0=0, select bank0
 10244  020E  1303               	bcf	3,6	;RP1=0, select bank0
 10245  020F  00D3               	movwf	___fltol@f1+2
 10246  0210  1683               	bsf	3,5	;RP0=1, select bank1
 10247  0211  1303               	bcf	3,6	;RP1=0, select bank1
 10248  0212  0844               	movf	(sprintf@fval+1)^(0+128),w
 10249  0213  1283               	bcf	3,5	;RP0=0, select bank0
 10250  0214  1303               	bcf	3,6	;RP1=0, select bank0
 10251  0215  00D2               	movwf	___fltol@f1+1
 10252  0216  1683               	bsf	3,5	;RP0=1, select bank1
 10253  0217  1303               	bcf	3,6	;RP1=0, select bank1
 10254  0218  0843               	movf	sprintf@fval^(0+128),w
 10255  0219  1283               	bcf	3,5	;RP0=0, select bank0
 10256  021A  1303               	bcf	3,6	;RP1=0, select bank0
 10257  021B  00D1               	movwf	___fltol@f1
 10258  021C  120A  158A  2006  120A  118A  	fcall	___fltol
 10259  0221  1283               	bcf	3,5	;RP0=0, select bank0
 10260  0222  1303               	bcf	3,6	;RP1=0, select bank0
 10261  0223  0854               	movf	?___fltol+3,w
 10262  0224  0453               	iorwf	?___fltol+2,w
 10263  0225  0452               	iorwf	?___fltol+1,w
 10264  0226  0451               	iorwf	?___fltol,w
 10265  0227  1D03               	skipz
 10266  0228  2A2A               	goto	u5491
 10267  0229  2A2B               	goto	u5490
 10268  022A                     u5491:
 10269  022A  2AAC               	goto	l3522
 10270  022B                     u5490:
 10271  022B                     l3506:
 10272  022B  1683               	bsf	3,5	;RP0=1, select bank1
 10273  022C  1303               	bcf	3,6	;RP1=0, select bank1
 10274  022D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10275  022E  3A80               	xorlw	128
 10276  022F  00FF               	movwf	btemp+1
 10277  0230  3080               	movlw	128
 10278  0231  027F               	subwf	btemp+1,w
 10279  0232  1D03               	skipz
 10280  0233  2A36               	goto	u5505
 10281  0234  3002               	movlw	2
 10282  0235  0241               	subwf	sprintf@eexp^(0+128),w
 10283  0236                     u5505:
 10284  0236  1C03               	skipc
 10285  0237  2A39               	goto	u5501
 10286  0238  2A3A               	goto	u5500
 10287  0239                     u5501:
 10288  0239  2AAC               	goto	l3522
 10289  023A                     u5500:
 10290  023A                     l3508:
 10291                           
 10292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10293  023A  1683               	bsf	3,5	;RP0=1, select bank1
 10294  023B  1303               	bcf	3,6	;RP1=0, select bank1
 10295  023C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10296  023D  00F3               	movwf	___flge@ff1+3
 10297  023E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10298  023F  00F2               	movwf	___flge@ff1+2
 10299  0240  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10300  0241  00F1               	movwf	___flge@ff1+1
 10301  0242  0839               	movf	sprintf@tmpval^(0+128),w
 10302  0243  00F0               	movwf	___flge@ff1
 10303  0244  3040               	movlw	64
 10304  0245  00F7               	movwf	___flge@ff2+3
 10305  0246  3089               	movlw	137
 10306  0247  00F6               	movwf	___flge@ff2+2
 10307  0248  3070               	movlw	112
 10308  0249  00F5               	movwf	___flge@ff2+1
 10309  024A  305F               	movlw	95
 10310  024B  00F4               	movwf	___flge@ff2
 10311  024C  160A  118A  2009  120A  118A  	fcall	___flge
 10312  0251  1803               	btfsc	3,0
 10313  0252  2A54               	goto	u5511
 10314  0253  2A55               	goto	u5510
 10315  0254                     u5511:
 10316  0254  2A5E               	goto	l3512
 10317  0255                     u5510:
 10318  0255                     l3510:
 10319                           
 10320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10321  0255  30F7               	movlw	247
 10322  0256  1683               	bsf	3,5	;RP0=1, select bank1
 10323  0257  1303               	bcf	3,6	;RP1=0, select bank1
 10324  0258  07C1               	addwf	sprintf@eexp^(0+128),f
 10325  0259  1803               	skipnc
 10326  025A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10327  025B  30FF               	movlw	255
 10328  025C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10329                           
 10330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10331  025D  2A66               	goto	l3514
 10332  025E                     l3512:
 10333                           
 10334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10335  025E  30F8               	movlw	248
 10336  025F  1683               	bsf	3,5	;RP0=1, select bank1
 10337  0260  1303               	bcf	3,6	;RP1=0, select bank1
 10338  0261  07C1               	addwf	sprintf@eexp^(0+128),f
 10339  0262  1803               	skipnc
 10340  0263  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10341  0264  30FF               	movlw	255
 10342  0265  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10343  0266                     l3514:
 10344                           
 10345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10346  0266  0841               	movf	sprintf@eexp^(0+128),w
 10347  0267  120A  158A  2140  120A  118A  	fcall	_scale
 10348  026C  1283               	bcf	3,5	;RP0=0, select bank0
 10349  026D  1303               	bcf	3,6	;RP1=0, select bank0
 10350  026E  0841               	movf	?_scale+3,w
 10351  026F  1683               	bsf	3,5	;RP0=1, select bank1
 10352  0270  1303               	bcf	3,6	;RP1=0, select bank1
 10353  0271  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10354  0272  1283               	bcf	3,5	;RP0=0, select bank0
 10355  0273  1303               	bcf	3,6	;RP1=0, select bank0
 10356  0274  0840               	movf	?_scale+2,w
 10357  0275  1683               	bsf	3,5	;RP0=1, select bank1
 10358  0276  1303               	bcf	3,6	;RP1=0, select bank1
 10359  0277  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10360  0278  1283               	bcf	3,5	;RP0=0, select bank0
 10361  0279  1303               	bcf	3,6	;RP1=0, select bank0
 10362  027A  083F               	movf	?_scale+1,w
 10363  027B  1683               	bsf	3,5	;RP0=1, select bank1
 10364  027C  1303               	bcf	3,6	;RP1=0, select bank1
 10365  027D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10366  027E  1283               	bcf	3,5	;RP0=0, select bank0
 10367  027F  1303               	bcf	3,6	;RP1=0, select bank0
 10368  0280  083E               	movf	?_scale,w
 10369  0281  1683               	bsf	3,5	;RP0=1, select bank1
 10370  0282  1303               	bcf	3,6	;RP1=0, select bank1
 10371  0283  00B9               	movwf	sprintf@tmpval^(0+128)
 10372  0284                     l3516:
 10373  0284  0846               	movf	(sprintf@fval+3)^(0+128),w
 10374  0285  00F3               	movwf	__div_to_l_@f1+3
 10375  0286  0845               	movf	(sprintf@fval+2)^(0+128),w
 10376  0287  00F2               	movwf	__div_to_l_@f1+2
 10377  0288  0844               	movf	(sprintf@fval+1)^(0+128),w
 10378  0289  00F1               	movwf	__div_to_l_@f1+1
 10379  028A  0843               	movf	sprintf@fval^(0+128),w
 10380  028B  00F0               	movwf	__div_to_l_@f1
 10381  028C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10382  028D  00F7               	movwf	__div_to_l_@f2+3
 10383  028E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10384  028F  00F6               	movwf	__div_to_l_@f2+2
 10385  0290  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10386  0291  00F5               	movwf	__div_to_l_@f2+1
 10387  0292  0839               	movf	sprintf@tmpval^(0+128),w
 10388  0293  00F4               	movwf	__div_to_l_@f2
 10389  0294  120A  158A  2082  120A  118A  	fcall	__div_to_l_
 10390  0299  0873               	movf	?__div_to_l_+3,w
 10391  029A  1683               	bsf	3,5	;RP0=1, select bank1
 10392  029B  1303               	bcf	3,6	;RP1=0, select bank1
 10393  029C  00C0               	movwf	(sprintf@val+3)^(0+128)
 10394  029D  0872               	movf	?__div_to_l_+2,w
 10395  029E  00BF               	movwf	(sprintf@val+2)^(0+128)
 10396  029F  0871               	movf	?__div_to_l_+1,w
 10397  02A0  00BE               	movwf	(sprintf@val+1)^(0+128)
 10398  02A1  0870               	movf	?__div_to_l_,w
 10399  02A2  00BD               	movwf	sprintf@val^(0+128)
 10400  02A3                     l3520:
 10401                           
 10402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10403  02A3  3000               	movlw	0
 10404  02A4  00C6               	movwf	(sprintf@fval+3)^(0+128)
 10405  02A5  3000               	movlw	0
 10406  02A6  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10407  02A7  3000               	movlw	0
 10408  02A8  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10409  02A9  3000               	movlw	0
 10410  02AA  00C3               	movwf	sprintf@fval^(0+128)
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10413  02AB  2B30               	goto	l3528
 10414  02AC                     l3522:
 10415                           
 10416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10417  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10418  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10419  02AE  0846               	movf	(sprintf@fval+3)^(0+128),w
 10420  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10421  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10422  02B1  00D4               	movwf	___fltol@f1+3
 10423  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10424  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10425  02B4  0845               	movf	(sprintf@fval+2)^(0+128),w
 10426  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10427  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10428  02B7  00D3               	movwf	___fltol@f1+2
 10429  02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10430  02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10431  02BA  0844               	movf	(sprintf@fval+1)^(0+128),w
 10432  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10433  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10434  02BD  00D2               	movwf	___fltol@f1+1
 10435  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10436  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10437  02C0  0843               	movf	sprintf@fval^(0+128),w
 10438  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10439  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10440  02C3  00D1               	movwf	___fltol@f1
 10441  02C4  120A  158A  2006  120A  118A  	fcall	___fltol
 10442  02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10443  02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10444  02CB  0854               	movf	?___fltol+3,w
 10445  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10446  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10447  02CE  00C0               	movwf	(sprintf@val+3)^(0+128)
 10448  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10449  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10450  02D1  0853               	movf	?___fltol+2,w
 10451  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10452  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10453  02D4  00BF               	movwf	(sprintf@val+2)^(0+128)
 10454  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 10455  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 10456  02D7  0852               	movf	?___fltol+1,w
 10457  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 10458  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 10459  02DA  00BE               	movwf	(sprintf@val+1)^(0+128)
 10460  02DB  1283               	bcf	3,5	;RP0=0, select bank0
 10461  02DC  1303               	bcf	3,6	;RP1=0, select bank0
 10462  02DD  0851               	movf	?___fltol,w
 10463  02DE  1683               	bsf	3,5	;RP0=1, select bank1
 10464  02DF  1303               	bcf	3,6	;RP1=0, select bank1
 10465  02E0  00BD               	movwf	sprintf@val^(0+128)
 10466  02E1                     l3524:
 10467                           
 10468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10469  02E1  0840               	movf	(sprintf@val+3)^(0+128),w
 10470  02E2  00F3               	movwf	___xxtofl@val+3
 10471  02E3  083F               	movf	(sprintf@val+2)^(0+128),w
 10472  02E4  00F2               	movwf	___xxtofl@val+2
 10473  02E5  083E               	movf	(sprintf@val+1)^(0+128),w
 10474  02E6  00F1               	movwf	___xxtofl@val+1
 10475  02E7  083D               	movf	sprintf@val^(0+128),w
 10476  02E8  00F0               	movwf	___xxtofl@val
 10477  02E9  3000               	movlw	0
 10478  02EA  160A  158A  2689  120A  118A  	fcall	___xxtofl
 10479  02EF  0873               	movf	?___xxtofl+3,w
 10480  02F0  1283               	bcf	3,5	;RP0=0, select bank0
 10481  02F1  1303               	bcf	3,6	;RP1=0, select bank0
 10482  02F2  00E9               	movwf	___flsub@a+3
 10483  02F3  0872               	movf	?___xxtofl+2,w
 10484  02F4  00E8               	movwf	___flsub@a+2
 10485  02F5  0871               	movf	?___xxtofl+1,w
 10486  02F6  00E7               	movwf	___flsub@a+1
 10487  02F7  0870               	movf	?___xxtofl,w
 10488  02F8  00E6               	movwf	___flsub@a
 10489  02F9  1683               	bsf	3,5	;RP0=1, select bank1
 10490  02FA  1303               	bcf	3,6	;RP1=0, select bank1
 10491  02FB  0846               	movf	(sprintf@fval+3)^(0+128),w
 10492  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10493  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10494  02FE  00ED               	movwf	___flsub@b+3
 10495  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10496  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10497  0301  0845               	movf	(sprintf@fval+2)^(0+128),w
 10498  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10499  0303  1303               	bcf	3,6	;RP1=0, select bank0
 10500  0304  00EC               	movwf	___flsub@b+2
 10501  0305  1683               	bsf	3,5	;RP0=1, select bank1
 10502  0306  1303               	bcf	3,6	;RP1=0, select bank1
 10503  0307  0844               	movf	(sprintf@fval+1)^(0+128),w
 10504  0308  1283               	bcf	3,5	;RP0=0, select bank0
 10505  0309  1303               	bcf	3,6	;RP1=0, select bank0
 10506  030A  00EB               	movwf	___flsub@b+1
 10507  030B  1683               	bsf	3,5	;RP0=1, select bank1
 10508  030C  1303               	bcf	3,6	;RP1=0, select bank1
 10509  030D  0843               	movf	sprintf@fval^(0+128),w
 10510  030E  1283               	bcf	3,5	;RP0=0, select bank0
 10511  030F  1303               	bcf	3,6	;RP1=0, select bank0
 10512  0310  00EA               	movwf	___flsub@b
 10513  0311  160A  158A  222A  120A  118A  	fcall	___flsub
 10514  0316  1283               	bcf	3,5	;RP0=0, select bank0
 10515  0317  1303               	bcf	3,6	;RP1=0, select bank0
 10516  0318  0869               	movf	?___flsub+3,w
 10517  0319  1683               	bsf	3,5	;RP0=1, select bank1
 10518  031A  1303               	bcf	3,6	;RP1=0, select bank1
 10519  031B  00C6               	movwf	(sprintf@fval+3)^(0+128)
 10520  031C  1283               	bcf	3,5	;RP0=0, select bank0
 10521  031D  1303               	bcf	3,6	;RP1=0, select bank0
 10522  031E  0868               	movf	?___flsub+2,w
 10523  031F  1683               	bsf	3,5	;RP0=1, select bank1
 10524  0320  1303               	bcf	3,6	;RP1=0, select bank1
 10525  0321  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10526  0322  1283               	bcf	3,5	;RP0=0, select bank0
 10527  0323  1303               	bcf	3,6	;RP1=0, select bank0
 10528  0324  0867               	movf	?___flsub+1,w
 10529  0325  1683               	bsf	3,5	;RP0=1, select bank1
 10530  0326  1303               	bcf	3,6	;RP1=0, select bank1
 10531  0327  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10532  0328  1283               	bcf	3,5	;RP0=0, select bank0
 10533  0329  1303               	bcf	3,6	;RP1=0, select bank0
 10534  032A  0866               	movf	?___flsub,w
 10535  032B  1683               	bsf	3,5	;RP0=1, select bank1
 10536  032C  1303               	bcf	3,6	;RP1=0, select bank1
 10537  032D  00C3               	movwf	sprintf@fval^(0+128)
 10538  032E                     l3526:
 10539                           
 10540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10541  032E  01C1               	clrf	sprintf@eexp^(0+128)
 10542  032F  01C2               	clrf	(sprintf@eexp+1)^(0+128)
 10543  0330                     l3528:
 10544                           
 10545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10546  0330  01CA               	clrf	sprintf@c^(0+128)
 10547  0331  0ACA               	incf	sprintf@c^(0+128),f
 10548  0332                     l3534:
 10549                           
 10550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10551  0332  084A               	movf	sprintf@c^(0+128),w
 10552  0333  00AB               	movwf	??_sprintf^(0+128)
 10553  0334  3001               	movlw	1
 10554  0335                     u5525:
 10555  0335  1003               	clrc
 10556  0336  0DAB               	rlf	??_sprintf^(0+128),f
 10557  0337  3EFF               	addlw	-1
 10558  0338  1D03               	skipz
 10559  0339  2B35               	goto	u5525
 10560  033A  1003               	clrc
 10561  033B  0D2B               	rlf	??_sprintf^(0+128),w
 10562  033C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10563  033D  0084               	movwf	4
 10564  033E  120A  118A  200D  120A  118A  	fcall	stringdir
 10565  0343  00AC               	movwf	(??_sprintf+1)^(0+128)
 10566  0344  120A  118A  200D  120A  118A  	fcall	stringdir
 10567  0349  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 10568  034A  120A  118A  200D  120A  118A  	fcall	stringdir
 10569  034F  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 10570  0350  120A  118A  200D  120A  118A  	fcall	stringdir
 10571  0355  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 10572  0356  082F               	movf	(??_sprintf+4)^(0+128),w
 10573  0357  0240               	subwf	(sprintf@val+3)^(0+128),w
 10574  0358  1D03               	skipz
 10575  0359  2B64               	goto	u5535
 10576  035A  082E               	movf	(??_sprintf+3)^(0+128),w
 10577  035B  023F               	subwf	(sprintf@val+2)^(0+128),w
 10578  035C  1D03               	skipz
 10579  035D  2B64               	goto	u5535
 10580  035E  082D               	movf	(??_sprintf+2)^(0+128),w
 10581  035F  023E               	subwf	(sprintf@val+1)^(0+128),w
 10582  0360  1D03               	skipz
 10583  0361  2B64               	goto	u5535
 10584  0362  082C               	movf	(??_sprintf+1)^(0+128),w
 10585  0363  023D               	subwf	sprintf@val^(0+128),w
 10586  0364                     u5535:
 10587  0364  1803               	skipnc
 10588  0365  2B67               	goto	u5531
 10589  0366  2B68               	goto	u5530
 10590  0367                     u5531:
 10591  0367  2B69               	goto	l3538
 10592  0368                     u5530:
 10593  0368  2B73               	goto	l3540
 10594  0369                     l3538:
 10595  0369  3001               	movlw	1
 10596  036A  00AB               	movwf	??_sprintf^(0+128)
 10597  036B  082B               	movf	??_sprintf^(0+128),w
 10598  036C  07CA               	addwf	sprintf@c^(0+128),f
 10599  036D  300A               	movlw	10
 10600  036E  064A               	xorwf	sprintf@c^(0+128),w
 10601  036F  1D03               	btfss	3,2
 10602  0370  2B72               	goto	u5541
 10603  0371  2B73               	goto	u5540
 10604  0372                     u5541:
 10605  0372  2B32               	goto	l3534
 10606  0373                     u5540:
 10607  0373                     l3540:
 10608                           
 10609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10610  0373  084A               	movf	sprintf@c^(0+128),w
 10611  0374  0748               	addwf	sprintf@prec^(0+128),w
 10612  0375  00AB               	movwf	??_sprintf^(0+128)
 10613  0376  0849               	movf	(sprintf@prec+1)^(0+128),w
 10614  0377  1803               	skipnc
 10615  0378  0A49               	incf	(sprintf@prec+1)^(0+128),w
 10616  0379  00AC               	movwf	(??_sprintf^(0+128)+1)
 10617  037A  0841               	movf	sprintf@eexp^(0+128),w
 10618  037B  072B               	addwf	??_sprintf^(0+128),w
 10619  037C  00AD               	movwf	(??_sprintf+2)^(0+128)
 10620  037D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10621  037E  1803               	skipnc
 10622  037F  0A42               	incf	(sprintf@eexp+1)^(0+128),w
 10623  0380  072C               	addwf	(??_sprintf+1)^(0+128),w
 10624  0381  00AE               	movwf	(??_sprintf+3)^(0+128)
 10625  0382  082D               	movf	(??_sprintf+2)^(0+128),w
 10626  0383  02B7               	subwf	sprintf@width^(0+128),f
 10627  0384  082E               	movf	(??_sprintf+3)^(0+128),w
 10628  0385  1C03               	skipc
 10629  0386  03B8               	decf	(sprintf@width+1)^(0+128),f
 10630  0387  02B8               	subwf	(sprintf@width+1)^(0+128),f
 10631                           
 10632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10633  0388  0848               	movf	sprintf@prec^(0+128),w
 10634  0389  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 10635  038A  1903               	btfsc	3,2
 10636  038B  2B8D               	goto	u5551
 10637  038C  2B8E               	goto	u5550
 10638  038D                     u5551:
 10639  038D  2B94               	goto	l3544
 10640  038E                     u5550:
 10641  038E                     l3542:
 10642                           
 10643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10644  038E  30FF               	movlw	255
 10645  038F  07B7               	addwf	sprintf@width^(0+128),f
 10646  0390  1803               	skipnc
 10647  0391  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10648  0392  30FF               	movlw	255
 10649  0393  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10650  0394                     l3544:
 10651                           
 10652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10653  0394  3003               	movlw	3
 10654  0395  0535               	andwf	sprintf@flag^(0+128),w
 10655  0396  00AB               	movwf	??_sprintf^(0+128)
 10656  0397  3000               	movlw	0
 10657  0398  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10658  0399  00AC               	movwf	(??_sprintf+1)^(0+128)
 10659  039A  082B               	movf	??_sprintf^(0+128),w
 10660  039B  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10661  039C  1903               	btfsc	3,2
 10662  039D  2B9F               	goto	u5561
 10663  039E  2BA0               	goto	u5560
 10664  039F                     u5561:
 10665  039F  2BB5               	goto	l3554
 10666  03A0                     u5560:
 10667  03A0                     l3546:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10670  03A0  30FF               	movlw	255
 10671  03A1  07B7               	addwf	sprintf@width^(0+128),f
 10672  03A2  1803               	skipnc
 10673  03A3  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10674  03A4  30FF               	movlw	255
 10675  03A5  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10676  03A6  2BB5               	goto	l3554
 10677  03A7                     l3548:
 10678                           
 10679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10680  03A7  3020               	movlw	32
 10681  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 10682  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 10683  03AA  00AB               	movwf	??_sprintf^(0+128)
 10684  03AB  0847               	movf	sprintf@sp^(0+128),w
 10685  03AC  0084               	movwf	4
 10686  03AD  082B               	movf	??_sprintf^(0+128),w
 10687  03AE  1383               	bcf	3,7	;select IRP bank0
 10688  03AF  0080               	movwf	0
 10689  03B0                     l3550:
 10690  03B0  3001               	movlw	1
 10691  03B1  00AB               	movwf	??_sprintf^(0+128)
 10692  03B2  082B               	movf	??_sprintf^(0+128),w
 10693  03B3  07C7               	addwf	sprintf@sp^(0+128),f
 10694  03B4  2BA0               	goto	l3546
 10695  03B5                     l3554:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10698  03B5  0838               	movf	(sprintf@width+1)^(0+128),w
 10699  03B6  3A80               	xorlw	128
 10700  03B7  00FF               	movwf	btemp+1
 10701  03B8  3080               	movlw	128
 10702  03B9  027F               	subwf	btemp+1,w
 10703  03BA  1D03               	skipz
 10704  03BB  2BBE               	goto	u5575
 10705  03BC  3001               	movlw	1
 10706  03BD  0237               	subwf	sprintf@width^(0+128),w
 10707  03BE                     u5575:
 10708  03BE  1803               	skipnc
 10709  03BF  2BC1               	goto	u5571
 10710  03C0  2BC2               	goto	u5570
 10711  03C1                     u5571:
 10712  03C1  2BA7               	goto	l3548
 10713  03C2                     u5570:
 10714  03C2                     l3556:
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10717  03C2  3003               	movlw	3
 10718  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10719  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10720  03C5  0535               	andwf	sprintf@flag^(0+128),w
 10721  03C6  00AB               	movwf	??_sprintf^(0+128)
 10722  03C7  3000               	movlw	0
 10723  03C8  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10724  03C9  00AC               	movwf	(??_sprintf+1)^(0+128)
 10725  03CA  082B               	movf	??_sprintf^(0+128),w
 10726  03CB  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10727  03CC  1903               	btfsc	3,2
 10728  03CD  2BCF               	goto	u5581
 10729  03CE  2BD0               	goto	u5580
 10730  03CF                     u5581:
 10731  03CF  2C62               	goto	l396
 10732  03D0                     u5580:
 10733  03D0                     l3558:
 10734                           
 10735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10736  03D0  302D               	movlw	45
 10737  03D1  00AB               	movwf	??_sprintf^(0+128)
 10738  03D2  0847               	movf	sprintf@sp^(0+128),w
 10739  03D3  0084               	movwf	4
 10740  03D4  082B               	movf	??_sprintf^(0+128),w
 10741  03D5  1383               	bcf	3,7	;select IRP bank0
 10742  03D6  0080               	movwf	0
 10743  03D7                     l3560:
 10744  03D7  3001               	movlw	1
 10745  03D8  00AB               	movwf	??_sprintf^(0+128)
 10746  03D9  082B               	movf	??_sprintf^(0+128),w
 10747  03DA  07C7               	addwf	sprintf@sp^(0+128),f
 10748  03DB  2C62               	goto	l396
 10749  03DC                     l3562:
 10750                           
 10751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10752  03DC  084A               	movf	sprintf@c^(0+128),w
 10753  03DD  00AB               	movwf	??_sprintf^(0+128)
 10754  03DE  3001               	movlw	1
 10755  03DF                     u5595:
 10756  03DF  1003               	clrc
 10757  03E0  0DAB               	rlf	??_sprintf^(0+128),f
 10758  03E1  3EFF               	addlw	-1
 10759  03E2  1D03               	skipz
 10760  03E3  2BDF               	goto	u5595
 10761  03E4  1003               	clrc
 10762  03E5  0D2B               	rlf	??_sprintf^(0+128),w
 10763  03E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10764  03E7  0084               	movwf	4
 10765  03E8  120A  118A  200D  120A  118A  	fcall	stringdir
 10766  03ED  00F0               	movwf	___lldiv@divisor
 10767  03EE  120A  118A  200D  120A  118A  	fcall	stringdir
 10768  03F3  00F1               	movwf	___lldiv@divisor+1
 10769  03F4  120A  118A  200D  120A  118A  	fcall	stringdir
 10770  03F9  00F2               	movwf	___lldiv@divisor+2
 10771  03FA  120A  118A  200D  120A  118A  	fcall	stringdir
 10772  03FF  00F3               	movwf	___lldiv@divisor+3
 10773  0400  0840               	movf	(sprintf@val+3)^(0+128),w
 10774  0401  00F7               	movwf	___lldiv@dividend+3
 10775  0402  083F               	movf	(sprintf@val+2)^(0+128),w
 10776  0403  00F6               	movwf	___lldiv@dividend+2
 10777  0404  083E               	movf	(sprintf@val+1)^(0+128),w
 10778  0405  00F5               	movwf	___lldiv@dividend+1
 10779  0406  083D               	movf	sprintf@val^(0+128),w
 10780  0407  00F4               	movwf	___lldiv@dividend
 10781  0408  160A  158A  24EA  120A  118A  	fcall	___lldiv
 10782  040D  0873               	movf	?___lldiv+3,w
 10783  040E  1683               	bsf	3,5	;RP0=1, select bank1
 10784  040F  1303               	bcf	3,6	;RP1=0, select bank1
 10785  0410  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10786  0411  0872               	movf	?___lldiv+2,w
 10787  0412  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10788  0413  0871               	movf	?___lldiv+1,w
 10789  0414  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10790  0415  0870               	movf	?___lldiv,w
 10791  0416  00B9               	movwf	sprintf@tmpval^(0+128)
 10792  0417                     l3564:
 10793                           
 10794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10795  0417  3000               	movlw	0
 10796  0418  1283               	bcf	3,5	;RP0=0, select bank0
 10797  0419  1303               	bcf	3,6	;RP1=0, select bank0
 10798  041A  00A3               	movwf	___llmod@divisor+3
 10799  041B  3000               	movlw	0
 10800  041C  00A2               	movwf	___llmod@divisor+2
 10801  041D  3000               	movlw	0
 10802  041E  00A1               	movwf	___llmod@divisor+1
 10803  041F  300A               	movlw	10
 10804  0420  00A0               	movwf	___llmod@divisor
 10805  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10806  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10807  0423  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10808  0424  1283               	bcf	3,5	;RP0=0, select bank0
 10809  0425  1303               	bcf	3,6	;RP1=0, select bank0
 10810  0426  00A7               	movwf	___llmod@dividend+3
 10811  0427  1683               	bsf	3,5	;RP0=1, select bank1
 10812  0428  1303               	bcf	3,6	;RP1=0, select bank1
 10813  0429  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10814  042A  1283               	bcf	3,5	;RP0=0, select bank0
 10815  042B  1303               	bcf	3,6	;RP1=0, select bank0
 10816  042C  00A6               	movwf	___llmod@dividend+2
 10817  042D  1683               	bsf	3,5	;RP0=1, select bank1
 10818  042E  1303               	bcf	3,6	;RP1=0, select bank1
 10819  042F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10820  0430  1283               	bcf	3,5	;RP0=0, select bank0
 10821  0431  1303               	bcf	3,6	;RP1=0, select bank0
 10822  0432  00A5               	movwf	___llmod@dividend+1
 10823  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10824  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10825  0435  0839               	movf	sprintf@tmpval^(0+128),w
 10826  0436  1283               	bcf	3,5	;RP0=0, select bank0
 10827  0437  1303               	bcf	3,6	;RP1=0, select bank0
 10828  0438  00A4               	movwf	___llmod@dividend
 10829  0439  120A  118A  20C6  120A  118A  	fcall	___llmod
 10830  043E  1283               	bcf	3,5	;RP0=0, select bank0
 10831  043F  1303               	bcf	3,6	;RP1=0, select bank0
 10832  0440  0823               	movf	?___llmod+3,w
 10833  0441  1683               	bsf	3,5	;RP0=1, select bank1
 10834  0442  1303               	bcf	3,6	;RP1=0, select bank1
 10835  0443  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10836  0444  1283               	bcf	3,5	;RP0=0, select bank0
 10837  0445  1303               	bcf	3,6	;RP1=0, select bank0
 10838  0446  0822               	movf	?___llmod+2,w
 10839  0447  1683               	bsf	3,5	;RP0=1, select bank1
 10840  0448  1303               	bcf	3,6	;RP1=0, select bank1
 10841  0449  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10842  044A  1283               	bcf	3,5	;RP0=0, select bank0
 10843  044B  1303               	bcf	3,6	;RP1=0, select bank0
 10844  044C  0821               	movf	?___llmod+1,w
 10845  044D  1683               	bsf	3,5	;RP0=1, select bank1
 10846  044E  1303               	bcf	3,6	;RP1=0, select bank1
 10847  044F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10848  0450  1283               	bcf	3,5	;RP0=0, select bank0
 10849  0451  1303               	bcf	3,6	;RP1=0, select bank0
 10850  0452  0820               	movf	?___llmod,w
 10851  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10852  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10853  0455  00B9               	movwf	sprintf@tmpval^(0+128)
 10854  0456                     l3566:
 10855                           
 10856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10857  0456  0839               	movf	sprintf@tmpval^(0+128),w
 10858  0457  3E30               	addlw	48
 10859  0458  00AB               	movwf	??_sprintf^(0+128)
 10860  0459  0847               	movf	sprintf@sp^(0+128),w
 10861  045A  0084               	movwf	4
 10862  045B  082B               	movf	??_sprintf^(0+128),w
 10863  045C  1383               	bcf	3,7	;select IRP bank0
 10864  045D  0080               	movwf	0
 10865  045E  3001               	movlw	1
 10866  045F  00AB               	movwf	??_sprintf^(0+128)
 10867  0460  082B               	movf	??_sprintf^(0+128),w
 10868  0461  07C7               	addwf	sprintf@sp^(0+128),f
 10869  0462                     l396:	
 10870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10871                           
 10872                           
 10873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10874  0462  3001               	movlw	1
 10875  0463  02CA               	subwf	sprintf@c^(0+128),f
 10876  0464  0A4A               	incf	sprintf@c^(0+128),w
 10877  0465  1D03               	btfss	3,2
 10878  0466  2C68               	goto	u5601
 10879  0467  2C69               	goto	u5600
 10880  0468                     u5601:
 10881  0468  2BDC               	goto	l3562
 10882  0469                     u5600:
 10883  0469  2C7D               	goto	l3574
 10884  046A                     l3568:
 10885                           
 10886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10887  046A  3030               	movlw	48
 10888  046B  1683               	bsf	3,5	;RP0=1, select bank1
 10889  046C  1303               	bcf	3,6	;RP1=0, select bank1
 10890  046D  00AB               	movwf	??_sprintf^(0+128)
 10891  046E  0847               	movf	sprintf@sp^(0+128),w
 10892  046F  0084               	movwf	4
 10893  0470  082B               	movf	??_sprintf^(0+128),w
 10894  0471  1383               	bcf	3,7	;select IRP bank0
 10895  0472  0080               	movwf	0
 10896  0473                     l3570:
 10897  0473  3001               	movlw	1
 10898  0474  00AB               	movwf	??_sprintf^(0+128)
 10899  0475  082B               	movf	??_sprintf^(0+128),w
 10900  0476  07C7               	addwf	sprintf@sp^(0+128),f
 10901  0477                     l3572:
 10902                           
 10903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10904  0477  30FF               	movlw	255
 10905  0478  07C1               	addwf	sprintf@eexp^(0+128),f
 10906  0479  1803               	skipnc
 10907  047A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10908  047B  30FF               	movlw	255
 10909  047C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10910  047D                     l3574:
 10911                           
 10912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10913  047D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10914  047E  3A80               	xorlw	128
 10915  047F  00FF               	movwf	btemp+1
 10916  0480  3080               	movlw	128
 10917  0481  027F               	subwf	btemp+1,w
 10918  0482  1D03               	skipz
 10919  0483  2C86               	goto	u5615
 10920  0484  3001               	movlw	1
 10921  0485  0241               	subwf	sprintf@eexp^(0+128),w
 10922  0486                     u5615:
 10923  0486  1803               	skipnc
 10924  0487  2C89               	goto	u5611
 10925  0488  2C8A               	goto	u5610
 10926  0489                     u5611:
 10927  0489  2C6A               	goto	l3568
 10928  048A                     u5610:
 10929  048A                     l3576:
 10930                           
 10931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10932  048A  1683               	bsf	3,5	;RP0=1, select bank1
 10933  048B  1303               	bcf	3,6	;RP1=0, select bank1
 10934  048C  0849               	movf	(sprintf@prec+1)^(0+128),w
 10935  048D  3A80               	xorlw	128
 10936  048E  00FF               	movwf	btemp+1
 10937  048F  3080               	movlw	128
 10938  0490  027F               	subwf	btemp+1,w
 10939  0491  1D03               	skipz
 10940  0492  2C95               	goto	u5625
 10941  0493  3009               	movlw	9
 10942  0494  0248               	subwf	sprintf@prec^(0+128),w
 10943  0495                     u5625:
 10944  0495  1C03               	skipc
 10945  0496  2C98               	goto	u5621
 10946  0497  2C99               	goto	u5620
 10947  0498                     u5621:
 10948  0498  2CA0               	goto	l3580
 10949  0499                     u5620:
 10950  0499                     l3578:
 10951                           
 10952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10953  0499  3008               	movlw	8
 10954  049A  1683               	bsf	3,5	;RP0=1, select bank1
 10955  049B  1303               	bcf	3,6	;RP1=0, select bank1
 10956  049C  00AB               	movwf	??_sprintf^(0+128)
 10957  049D  082B               	movf	??_sprintf^(0+128),w
 10958  049E  00CA               	movwf	sprintf@c^(0+128)
 10959  049F  2CA6               	goto	l403
 10960  04A0                     l3580:
 10961                           
 10962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10963  04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10964  04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10965  04A2  0848               	movf	sprintf@prec^(0+128),w
 10966  04A3  00AB               	movwf	??_sprintf^(0+128)
 10967  04A4  082B               	movf	??_sprintf^(0+128),w
 10968  04A5  00CA               	movwf	sprintf@c^(0+128)
 10969  04A6                     l403:
 10970                           
 10971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10972  04A6  084A               	movf	sprintf@c^(0+128),w
 10973  04A7  00AB               	movwf	??_sprintf^(0+128)
 10974  04A8  01AC               	clrf	(??_sprintf^(0+128)+1)
 10975  04A9  082B               	movf	??_sprintf^(0+128),w
 10976  04AA  02C8               	subwf	sprintf@prec^(0+128),f
 10977  04AB  082C               	movf	(??_sprintf+1)^(0+128),w
 10978  04AC  1C03               	skipc
 10979  04AD  03C9               	decf	(sprintf@prec+1)^(0+128),f
 10980  04AE  02C9               	subwf	(sprintf@prec+1)^(0+128),f
 10981  04AF                     l3582:
 10982                           
 10983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10984  04AF  084A               	movf	sprintf@c^(0+128),w
 10985  04B0  1903               	btfsc	3,2
 10986  04B1  2CB3               	goto	u5631
 10987  04B2  2CB4               	goto	u5630
 10988  04B3                     u5631:
 10989  04B3  2CBF               	goto	l3588
 10990  04B4                     u5630:
 10991  04B4                     l3584:
 10992                           
 10993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10994  04B4  302E               	movlw	46
 10995  04B5  00AB               	movwf	??_sprintf^(0+128)
 10996  04B6  0847               	movf	sprintf@sp^(0+128),w
 10997  04B7  0084               	movwf	4
 10998  04B8  082B               	movf	??_sprintf^(0+128),w
 10999  04B9  1383               	bcf	3,7	;select IRP bank0
 11000  04BA  0080               	movwf	0
 11001  04BB                     l3586:
 11002  04BB  3001               	movlw	1
 11003  04BC  00AB               	movwf	??_sprintf^(0+128)
 11004  04BD  082B               	movf	??_sprintf^(0+128),w
 11005  04BE  07C7               	addwf	sprintf@sp^(0+128),f
 11006  04BF                     l3588:
 11007                           
 11008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11009  04BF  084A               	movf	sprintf@c^(0+128),w
 11010  04C0  120A  158A  2140  120A  118A  	fcall	_scale
 11011  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 11012  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 11013  04C7  0841               	movf	?_scale+3,w
 11014  04C8  1683               	bsf	3,5	;RP0=1, select bank1
 11015  04C9  1303               	bcf	3,6	;RP1=0, select bank1
 11016  04CA  00B3               	movwf	(_sprintf$1140+3)^(0+128)
 11017  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 11018  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 11019  04CD  0840               	movf	?_scale+2,w
 11020  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 11021  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 11022  04D0  00B2               	movwf	(_sprintf$1140+2)^(0+128)
 11023  04D1  1283               	bcf	3,5	;RP0=0, select bank0
 11024  04D2  1303               	bcf	3,6	;RP1=0, select bank0
 11025  04D3  083F               	movf	?_scale+1,w
 11026  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 11027  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 11028  04D6  00B1               	movwf	(_sprintf$1140+1)^(0+128)
 11029  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 11030  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 11031  04D9  083E               	movf	?_scale,w
 11032  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 11033  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 11034  04DC  00B0               	movwf	_sprintf$1140^(0+128)
 11035  04DD                     l3590:
 11036                           
 11037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11038  04DD  0833               	movf	(_sprintf$1140+3)^(0+128),w
 11039  04DE  1283               	bcf	3,5	;RP0=0, select bank0
 11040  04DF  1303               	bcf	3,6	;RP1=0, select bank0
 11041  04E0  00AB               	movwf	___flmul@a+3
 11042  04E1  1683               	bsf	3,5	;RP0=1, select bank1
 11043  04E2  1303               	bcf	3,6	;RP1=0, select bank1
 11044  04E3  0832               	movf	(_sprintf$1140+2)^(0+128),w
 11045  04E4  1283               	bcf	3,5	;RP0=0, select bank0
 11046  04E5  1303               	bcf	3,6	;RP1=0, select bank0
 11047  04E6  00AA               	movwf	___flmul@a+2
 11048  04E7  1683               	bsf	3,5	;RP0=1, select bank1
 11049  04E8  1303               	bcf	3,6	;RP1=0, select bank1
 11050  04E9  0831               	movf	(_sprintf$1140+1)^(0+128),w
 11051  04EA  1283               	bcf	3,5	;RP0=0, select bank0
 11052  04EB  1303               	bcf	3,6	;RP1=0, select bank0
 11053  04EC  00A9               	movwf	___flmul@a+1
 11054  04ED  1683               	bsf	3,5	;RP0=1, select bank1
 11055  04EE  1303               	bcf	3,6	;RP1=0, select bank1
 11056  04EF  0830               	movf	_sprintf$1140^(0+128),w
 11057  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 11058  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 11059  04F2  00A8               	movwf	___flmul@a
 11060  04F3  1683               	bsf	3,5	;RP0=1, select bank1
 11061  04F4  1303               	bcf	3,6	;RP1=0, select bank1
 11062  04F5  0846               	movf	(sprintf@fval+3)^(0+128),w
 11063  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 11064  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 11065  04F8  00A7               	movwf	___flmul@b+3
 11066  04F9  1683               	bsf	3,5	;RP0=1, select bank1
 11067  04FA  1303               	bcf	3,6	;RP1=0, select bank1
 11068  04FB  0845               	movf	(sprintf@fval+2)^(0+128),w
 11069  04FC  1283               	bcf	3,5	;RP0=0, select bank0
 11070  04FD  1303               	bcf	3,6	;RP1=0, select bank0
 11071  04FE  00A6               	movwf	___flmul@b+2
 11072  04FF  1683               	bsf	3,5	;RP0=1, select bank1
 11073  0500  1303               	bcf	3,6	;RP1=0, select bank1
 11074  0501  0844               	movf	(sprintf@fval+1)^(0+128),w
 11075  0502  1283               	bcf	3,5	;RP0=0, select bank0
 11076  0503  1303               	bcf	3,6	;RP1=0, select bank0
 11077  0504  00A5               	movwf	___flmul@b+1
 11078  0505  1683               	bsf	3,5	;RP0=1, select bank1
 11079  0506  1303               	bcf	3,6	;RP1=0, select bank1
 11080  0507  0843               	movf	sprintf@fval^(0+128),w
 11081  0508  1283               	bcf	3,5	;RP0=0, select bank0
 11082  0509  1303               	bcf	3,6	;RP1=0, select bank0
 11083  050A  00A4               	movwf	___flmul@b
 11084  050B  120A  158A  249F  120A  118A  	fcall	___flmul
 11085  0510  1283               	bcf	3,5	;RP0=0, select bank0
 11086  0511  1303               	bcf	3,6	;RP1=0, select bank0
 11087  0512  0827               	movf	?___flmul+3,w
 11088  0513  00D4               	movwf	___fltol@f1+3
 11089  0514  0826               	movf	?___flmul+2,w
 11090  0515  00D3               	movwf	___fltol@f1+2
 11091  0516  0825               	movf	?___flmul+1,w
 11092  0517  00D2               	movwf	___fltol@f1+1
 11093  0518  0824               	movf	?___flmul,w
 11094  0519  00D1               	movwf	___fltol@f1
 11095  051A  120A  158A  2006  120A  118A  	fcall	___fltol
 11096  051F  1283               	bcf	3,5	;RP0=0, select bank0
 11097  0520  1303               	bcf	3,6	;RP1=0, select bank0
 11098  0521  0854               	movf	?___fltol+3,w
 11099  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11100  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11101  0524  00C0               	movwf	(sprintf@val+3)^(0+128)
 11102  0525  1283               	bcf	3,5	;RP0=0, select bank0
 11103  0526  1303               	bcf	3,6	;RP1=0, select bank0
 11104  0527  0853               	movf	?___fltol+2,w
 11105  0528  1683               	bsf	3,5	;RP0=1, select bank1
 11106  0529  1303               	bcf	3,6	;RP1=0, select bank1
 11107  052A  00BF               	movwf	(sprintf@val+2)^(0+128)
 11108  052B  1283               	bcf	3,5	;RP0=0, select bank0
 11109  052C  1303               	bcf	3,6	;RP1=0, select bank0
 11110  052D  0852               	movf	?___fltol+1,w
 11111  052E  1683               	bsf	3,5	;RP0=1, select bank1
 11112  052F  1303               	bcf	3,6	;RP1=0, select bank1
 11113  0530  00BE               	movwf	(sprintf@val+1)^(0+128)
 11114  0531  1283               	bcf	3,5	;RP0=0, select bank0
 11115  0532  1303               	bcf	3,6	;RP1=0, select bank0
 11116  0533  0851               	movf	?___fltol,w
 11117  0534  1683               	bsf	3,5	;RP0=1, select bank1
 11118  0535  1303               	bcf	3,6	;RP1=0, select bank1
 11119  0536  00BD               	movwf	sprintf@val^(0+128)
 11120                           
 11121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11122  0537  2E19               	goto	l3600
 11123  0538                     l3592:
 11124                           
 11125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11126  0538  084A               	movf	sprintf@c^(0+128),w
 11127  0539  00AB               	movwf	??_sprintf^(0+128)
 11128  053A  3001               	movlw	1
 11129  053B                     u5645:
 11130  053B  1003               	clrc
 11131  053C  0DAB               	rlf	??_sprintf^(0+128),f
 11132  053D  3EFF               	addlw	-1
 11133  053E  1D03               	skipz
 11134  053F  2D3B               	goto	u5645
 11135  0540  1003               	clrc
 11136  0541  0D2B               	rlf	??_sprintf^(0+128),w
 11137  0542  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11138  0543  0084               	movwf	4
 11139  0544  120A  118A  200D  120A  118A  	fcall	stringdir
 11140  0549  00F0               	movwf	___lldiv@divisor
 11141  054A  120A  118A  200D  120A  118A  	fcall	stringdir
 11142  054F  00F1               	movwf	___lldiv@divisor+1
 11143  0550  120A  118A  200D  120A  118A  	fcall	stringdir
 11144  0555  00F2               	movwf	___lldiv@divisor+2
 11145  0556  120A  118A  200D  120A  118A  	fcall	stringdir
 11146  055B  00F3               	movwf	___lldiv@divisor+3
 11147  055C  0840               	movf	(sprintf@val+3)^(0+128),w
 11148  055D  00F7               	movwf	___lldiv@dividend+3
 11149  055E  083F               	movf	(sprintf@val+2)^(0+128),w
 11150  055F  00F6               	movwf	___lldiv@dividend+2
 11151  0560  083E               	movf	(sprintf@val+1)^(0+128),w
 11152  0561  00F5               	movwf	___lldiv@dividend+1
 11153  0562  083D               	movf	sprintf@val^(0+128),w
 11154  0563  00F4               	movwf	___lldiv@dividend
 11155  0564  160A  158A  24EA  120A  118A  	fcall	___lldiv
 11156  0569  0873               	movf	?___lldiv+3,w
 11157  056A  1683               	bsf	3,5	;RP0=1, select bank1
 11158  056B  1303               	bcf	3,6	;RP1=0, select bank1
 11159  056C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 11160  056D  0872               	movf	?___lldiv+2,w
 11161  056E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 11162  056F  0871               	movf	?___lldiv+1,w
 11163  0570  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 11164  0571  0870               	movf	?___lldiv,w
 11165  0572  00B9               	movwf	sprintf@tmpval^(0+128)
 11166  0573                     l3594:
 11167                           
 11168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11169  0573  3000               	movlw	0
 11170  0574  1283               	bcf	3,5	;RP0=0, select bank0
 11171  0575  1303               	bcf	3,6	;RP1=0, select bank0
 11172  0576  00A3               	movwf	___llmod@divisor+3
 11173  0577  3000               	movlw	0
 11174  0578  00A2               	movwf	___llmod@divisor+2
 11175  0579  3000               	movlw	0
 11176  057A  00A1               	movwf	___llmod@divisor+1
 11177  057B  300A               	movlw	10
 11178  057C  00A0               	movwf	___llmod@divisor
 11179  057D  1683               	bsf	3,5	;RP0=1, select bank1
 11180  057E  1303               	bcf	3,6	;RP1=0, select bank1
 11181  057F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 11182  0580  1283               	bcf	3,5	;RP0=0, select bank0
 11183  0581  1303               	bcf	3,6	;RP1=0, select bank0
 11184  0582  00A7               	movwf	___llmod@dividend+3
 11185  0583  1683               	bsf	3,5	;RP0=1, select bank1
 11186  0584  1303               	bcf	3,6	;RP1=0, select bank1
 11187  0585  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 11188  0586  1283               	bcf	3,5	;RP0=0, select bank0
 11189  0587  1303               	bcf	3,6	;RP1=0, select bank0
 11190  0588  00A6               	movwf	___llmod@dividend+2
 11191  0589  1683               	bsf	3,5	;RP0=1, select bank1
 11192  058A  1303               	bcf	3,6	;RP1=0, select bank1
 11193  058B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 11194  058C  1283               	bcf	3,5	;RP0=0, select bank0
 11195  058D  1303               	bcf	3,6	;RP1=0, select bank0
 11196  058E  00A5               	movwf	___llmod@dividend+1
 11197  058F  1683               	bsf	3,5	;RP0=1, select bank1
 11198  0590  1303               	bcf	3,6	;RP1=0, select bank1
 11199  0591  0839               	movf	sprintf@tmpval^(0+128),w
 11200  0592  1283               	bcf	3,5	;RP0=0, select bank0
 11201  0593  1303               	bcf	3,6	;RP1=0, select bank0
 11202  0594  00A4               	movwf	___llmod@dividend
 11203  0595  120A  118A  20C6  120A  118A  	fcall	___llmod
 11204  059A  1283               	bcf	3,5	;RP0=0, select bank0
 11205  059B  1303               	bcf	3,6	;RP1=0, select bank0
 11206  059C  0823               	movf	?___llmod+3,w
 11207  059D  1683               	bsf	3,5	;RP0=1, select bank1
 11208  059E  1303               	bcf	3,6	;RP1=0, select bank1
 11209  059F  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 11210  05A0  1283               	bcf	3,5	;RP0=0, select bank0
 11211  05A1  1303               	bcf	3,6	;RP1=0, select bank0
 11212  05A2  0822               	movf	?___llmod+2,w
 11213  05A3  1683               	bsf	3,5	;RP0=1, select bank1
 11214  05A4  1303               	bcf	3,6	;RP1=0, select bank1
 11215  05A5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 11216  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 11217  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 11218  05A8  0821               	movf	?___llmod+1,w
 11219  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 11220  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 11221  05AB  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 11222  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 11223  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 11224  05AE  0820               	movf	?___llmod,w
 11225  05AF  1683               	bsf	3,5	;RP0=1, select bank1
 11226  05B0  1303               	bcf	3,6	;RP1=0, select bank1
 11227  05B1  00B9               	movwf	sprintf@tmpval^(0+128)
 11228  05B2                     l3596:
 11229                           
 11230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11231  05B2  0839               	movf	sprintf@tmpval^(0+128),w
 11232  05B3  3E30               	addlw	48
 11233  05B4  00AB               	movwf	??_sprintf^(0+128)
 11234  05B5  0847               	movf	sprintf@sp^(0+128),w
 11235  05B6  0084               	movwf	4
 11236  05B7  082B               	movf	??_sprintf^(0+128),w
 11237  05B8  1383               	bcf	3,7	;select IRP bank0
 11238  05B9  0080               	movwf	0
 11239  05BA  3001               	movlw	1
 11240  05BB  00AB               	movwf	??_sprintf^(0+128)
 11241  05BC  082B               	movf	??_sprintf^(0+128),w
 11242  05BD  07C7               	addwf	sprintf@sp^(0+128),f
 11243  05BE                     l3598:
 11244                           
 11245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11246  05BE  084A               	movf	sprintf@c^(0+128),w
 11247  05BF  00AB               	movwf	??_sprintf^(0+128)
 11248  05C0  3001               	movlw	1
 11249  05C1                     u5655:
 11250  05C1  1003               	clrc
 11251  05C2  0DAB               	rlf	??_sprintf^(0+128),f
 11252  05C3  3EFF               	addlw	-1
 11253  05C4  1D03               	skipz
 11254  05C5  2DC1               	goto	u5655
 11255  05C6  1003               	clrc
 11256  05C7  0D2B               	rlf	??_sprintf^(0+128),w
 11257  05C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11258  05C9  0084               	movwf	4
 11259  05CA  120A  118A  200D  120A  118A  	fcall	stringdir
 11260  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 11261  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 11262  05D1  00A0               	movwf	___llmod@divisor
 11263  05D2  120A  118A  200D  120A  118A  	fcall	stringdir
 11264  05D7  00A1               	movwf	___llmod@divisor+1
 11265  05D8  120A  118A  200D  120A  118A  	fcall	stringdir
 11266  05DD  00A2               	movwf	___llmod@divisor+2
 11267  05DE  120A  118A  200D  120A  118A  	fcall	stringdir
 11268  05E3  00A3               	movwf	___llmod@divisor+3
 11269  05E4  1683               	bsf	3,5	;RP0=1, select bank1
 11270  05E5  1303               	bcf	3,6	;RP1=0, select bank1
 11271  05E6  0840               	movf	(sprintf@val+3)^(0+128),w
 11272  05E7  1283               	bcf	3,5	;RP0=0, select bank0
 11273  05E8  1303               	bcf	3,6	;RP1=0, select bank0
 11274  05E9  00A7               	movwf	___llmod@dividend+3
 11275  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 11276  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 11277  05EC  083F               	movf	(sprintf@val+2)^(0+128),w
 11278  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 11279  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 11280  05EF  00A6               	movwf	___llmod@dividend+2
 11281  05F0  1683               	bsf	3,5	;RP0=1, select bank1
 11282  05F1  1303               	bcf	3,6	;RP1=0, select bank1
 11283  05F2  083E               	movf	(sprintf@val+1)^(0+128),w
 11284  05F3  1283               	bcf	3,5	;RP0=0, select bank0
 11285  05F4  1303               	bcf	3,6	;RP1=0, select bank0
 11286  05F5  00A5               	movwf	___llmod@dividend+1
 11287  05F6  1683               	bsf	3,5	;RP0=1, select bank1
 11288  05F7  1303               	bcf	3,6	;RP1=0, select bank1
 11289  05F8  083D               	movf	sprintf@val^(0+128),w
 11290  05F9  1283               	bcf	3,5	;RP0=0, select bank0
 11291  05FA  1303               	bcf	3,6	;RP1=0, select bank0
 11292  05FB  00A4               	movwf	___llmod@dividend
 11293  05FC  120A  118A  20C6  120A  118A  	fcall	___llmod
 11294  0601  1283               	bcf	3,5	;RP0=0, select bank0
 11295  0602  1303               	bcf	3,6	;RP1=0, select bank0
 11296  0603  0823               	movf	?___llmod+3,w
 11297  0604  1683               	bsf	3,5	;RP0=1, select bank1
 11298  0605  1303               	bcf	3,6	;RP1=0, select bank1
 11299  0606  00C0               	movwf	(sprintf@val+3)^(0+128)
 11300  0607  1283               	bcf	3,5	;RP0=0, select bank0
 11301  0608  1303               	bcf	3,6	;RP1=0, select bank0
 11302  0609  0822               	movf	?___llmod+2,w
 11303  060A  1683               	bsf	3,5	;RP0=1, select bank1
 11304  060B  1303               	bcf	3,6	;RP1=0, select bank1
 11305  060C  00BF               	movwf	(sprintf@val+2)^(0+128)
 11306  060D  1283               	bcf	3,5	;RP0=0, select bank0
 11307  060E  1303               	bcf	3,6	;RP1=0, select bank0
 11308  060F  0821               	movf	?___llmod+1,w
 11309  0610  1683               	bsf	3,5	;RP0=1, select bank1
 11310  0611  1303               	bcf	3,6	;RP1=0, select bank1
 11311  0612  00BE               	movwf	(sprintf@val+1)^(0+128)
 11312  0613  1283               	bcf	3,5	;RP0=0, select bank0
 11313  0614  1303               	bcf	3,6	;RP1=0, select bank0
 11314  0615  0820               	movf	?___llmod,w
 11315  0616  1683               	bsf	3,5	;RP0=1, select bank1
 11316  0617  1303               	bcf	3,6	;RP1=0, select bank1
 11317  0618  00BD               	movwf	sprintf@val^(0+128)
 11318  0619                     l3600:
 11319                           
 11320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11321  0619  3001               	movlw	1
 11322  061A  02CA               	subwf	sprintf@c^(0+128),f
 11323  061B  0A4A               	incf	sprintf@c^(0+128),w
 11324  061C  1D03               	btfss	3,2
 11325  061D  2E1F               	goto	u5661
 11326  061E  2E20               	goto	u5660
 11327  061F                     u5661:
 11328  061F  2D38               	goto	l3592
 11329  0620                     u5660:
 11330  0620  2E32               	goto	l3608
 11331  0621                     l3602:
 11332                           
 11333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11334  0621  3030               	movlw	48
 11335  0622  00AB               	movwf	??_sprintf^(0+128)
 11336  0623  0847               	movf	sprintf@sp^(0+128),w
 11337  0624  0084               	movwf	4
 11338  0625  082B               	movf	??_sprintf^(0+128),w
 11339  0626  1383               	bcf	3,7	;select IRP bank0
 11340  0627  0080               	movwf	0
 11341  0628                     l3604:
 11342  0628  3001               	movlw	1
 11343  0629  00AB               	movwf	??_sprintf^(0+128)
 11344  062A  082B               	movf	??_sprintf^(0+128),w
 11345  062B  07C7               	addwf	sprintf@sp^(0+128),f
 11346  062C                     l3606:
 11347                           
 11348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11349  062C  30FF               	movlw	255
 11350  062D  07C8               	addwf	sprintf@prec^(0+128),f
 11351  062E  1803               	skipnc
 11352  062F  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11353  0630  30FF               	movlw	255
 11354  0631  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11355  0632                     l3608:
 11356                           
 11357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11358  0632  0848               	movf	sprintf@prec^(0+128),w
 11359  0633  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 11360  0634  1D03               	btfss	3,2
 11361  0635  2E37               	goto	u5671
 11362  0636  2E38               	goto	u5670
 11363  0637                     u5671:
 11364  0637  2E21               	goto	l3602
 11365  0638                     u5670:
 11366  0638  2FD6               	goto	l3688
 11367  0639                     l3610:
 11368                           
 11369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11370  0639  0834               	movf	sprintf@ap^(0+128),w
 11371  063A  0084               	movwf	4
 11372  063B  1383               	bcf	3,7	;select IRP bank0
 11373  063C  0800               	movf	0,w
 11374  063D  00AB               	movwf	??_sprintf^(0+128)
 11375  063E  0A84               	incf	4,f
 11376  063F  0800               	movf	0,w
 11377  0640  00AC               	movwf	(??_sprintf^(0+128)+1)
 11378  0641  082B               	movf	??_sprintf^(0+128),w
 11379  0642  00BD               	movwf	sprintf@val^(0+128)
 11380  0643  082C               	movf	(??_sprintf+1)^(0+128),w
 11381  0644  00BE               	movwf	(sprintf@val+1)^(0+128)
 11382  0645  3000               	movlw	0
 11383  0646  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
 11384  0647  30FF               	movlw	255
 11385  0648  00BF               	movwf	(sprintf@val+2)^(0+128)
 11386  0649  00C0               	movwf	(sprintf@val+3)^(0+128)
 11387  064A                     l3612:
 11388  064A  3002               	movlw	2
 11389  064B  00AB               	movwf	??_sprintf^(0+128)
 11390  064C  082B               	movf	??_sprintf^(0+128),w
 11391  064D  07B4               	addwf	sprintf@ap^(0+128),f
 11392  064E                     l3614:
 11393                           
 11394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11395  064E  1FC0               	btfss	(sprintf@val+3)^(0+128),7
 11396  064F  2E51               	goto	u5681
 11397  0650  2E52               	goto	u5680
 11398  0651                     u5681:
 11399  0651  2E61               	goto	l3620
 11400  0652                     u5680:
 11401  0652                     l3616:
 11402                           
 11403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11404  0652  3003               	movlw	3
 11405  0653  04B5               	iorwf	sprintf@flag^(0+128),f
 11406  0654  3000               	movlw	0
 11407  0655  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
 11408  0656                     l3618:
 11409                           
 11410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11411  0656  09BD               	comf	sprintf@val^(0+128),f
 11412  0657  09BE               	comf	(sprintf@val+1)^(0+128),f
 11413  0658  09BF               	comf	(sprintf@val+2)^(0+128),f
 11414  0659  09C0               	comf	(sprintf@val+3)^(0+128),f
 11415  065A  0ABD               	incf	sprintf@val^(0+128),f
 11416  065B  1903               	skipnz
 11417  065C  0ABE               	incf	(sprintf@val+1)^(0+128),f
 11418  065D  1903               	skipnz
 11419  065E  0ABF               	incf	(sprintf@val+2)^(0+128),f
 11420  065F  1903               	skipnz
 11421  0660  0AC0               	incf	(sprintf@val+3)^(0+128),f
 11422  0661                     l3620:
 11423                           
 11424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11425  0661  0848               	movf	sprintf@prec^(0+128),w
 11426  0662  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 11427  0663  1D03               	btfss	3,2
 11428  0664  2E66               	goto	u5691
 11429  0665  2E67               	goto	u5690
 11430  0666                     u5691:
 11431  0666  2E75               	goto	l3626
 11432  0667                     u5690:
 11433  0667                     l3622:
 11434  0667  0840               	movf	(sprintf@val+3)^(0+128),w
 11435  0668  043F               	iorwf	(sprintf@val+2)^(0+128),w
 11436  0669  043E               	iorwf	(sprintf@val+1)^(0+128),w
 11437  066A  043D               	iorwf	sprintf@val^(0+128),w
 11438  066B  1D03               	skipz
 11439  066C  2E6E               	goto	u5701
 11440  066D  2E6F               	goto	u5700
 11441  066E                     u5701:
 11442  066E  2E75               	goto	l3626
 11443  066F                     u5700:
 11444  066F                     l3624:
 11445                           
 11446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11447  066F  3001               	movlw	1
 11448  0670  07C8               	addwf	sprintf@prec^(0+128),f
 11449  0671  1803               	skipnc
 11450  0672  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11451  0673  3000               	movlw	0
 11452  0674  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11453  0675                     l3626:
 11454                           
 11455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11456  0675  01CA               	clrf	sprintf@c^(0+128)
 11457  0676  0ACA               	incf	sprintf@c^(0+128),f
 11458  0677                     l3632:
 11459                           
 11460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11461  0677  084A               	movf	sprintf@c^(0+128),w
 11462  0678  00AB               	movwf	??_sprintf^(0+128)
 11463  0679  3001               	movlw	1
 11464  067A                     u5715:
 11465  067A  1003               	clrc
 11466  067B  0DAB               	rlf	??_sprintf^(0+128),f
 11467  067C  3EFF               	addlw	-1
 11468  067D  1D03               	skipz
 11469  067E  2E7A               	goto	u5715
 11470  067F  1003               	clrc
 11471  0680  0D2B               	rlf	??_sprintf^(0+128),w
 11472  0681  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11473  0682  0084               	movwf	4
 11474  0683  120A  118A  200D  120A  118A  	fcall	stringdir
 11475  0688  00AC               	movwf	(??_sprintf+1)^(0+128)
 11476  0689  120A  118A  200D  120A  118A  	fcall	stringdir
 11477  068E  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 11478  068F  120A  118A  200D  120A  118A  	fcall	stringdir
 11479  0694  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 11480  0695  120A  118A  200D  120A  118A  	fcall	stringdir
 11481  069A  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 11482  069B  082F               	movf	(??_sprintf+4)^(0+128),w
 11483  069C  0240               	subwf	(sprintf@val+3)^(0+128),w
 11484  069D  1D03               	skipz
 11485  069E  2EA9               	goto	u5725
 11486  069F  082E               	movf	(??_sprintf+3)^(0+128),w
 11487  06A0  023F               	subwf	(sprintf@val+2)^(0+128),w
 11488  06A1  1D03               	skipz
 11489  06A2  2EA9               	goto	u5725
 11490  06A3  082D               	movf	(??_sprintf+2)^(0+128),w
 11491  06A4  023E               	subwf	(sprintf@val+1)^(0+128),w
 11492  06A5  1D03               	skipz
 11493  06A6  2EA9               	goto	u5725
 11494  06A7  082C               	movf	(??_sprintf+1)^(0+128),w
 11495  06A8  023D               	subwf	sprintf@val^(0+128),w
 11496  06A9                     u5725:
 11497  06A9  1803               	skipnc
 11498  06AA  2EAC               	goto	u5721
 11499  06AB  2EAD               	goto	u5720
 11500  06AC                     u5721:
 11501  06AC  2EAE               	goto	l3636
 11502  06AD                     u5720:
 11503  06AD  2EB8               	goto	l3638
 11504  06AE                     l3636:
 11505  06AE  3001               	movlw	1
 11506  06AF  00AB               	movwf	??_sprintf^(0+128)
 11507  06B0  082B               	movf	??_sprintf^(0+128),w
 11508  06B1  07CA               	addwf	sprintf@c^(0+128),f
 11509  06B2  300A               	movlw	10
 11510  06B3  064A               	xorwf	sprintf@c^(0+128),w
 11511  06B4  1D03               	btfss	3,2
 11512  06B5  2EB7               	goto	u5731
 11513  06B6  2EB8               	goto	u5730
 11514  06B7                     u5731:
 11515  06B7  2E77               	goto	l3632
 11516  06B8                     u5730:
 11517  06B8                     l3638:
 11518                           
 11519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11520  06B8  0849               	movf	(sprintf@prec+1)^(0+128),w
 11521  06B9  3A80               	xorlw	128
 11522  06BA  3C80               	sublw	128
 11523  06BB  1D03               	skipz
 11524  06BC  2EBF               	goto	u5745
 11525  06BD  0848               	movf	sprintf@prec^(0+128),w
 11526  06BE  024A               	subwf	sprintf@c^(0+128),w
 11527  06BF                     u5745:
 11528  06BF  1803               	skipnc
 11529  06C0  2EC2               	goto	u5741
 11530  06C1  2EC3               	goto	u5740
 11531  06C2                     u5741:
 11532  06C2  2ECA               	goto	l3642
 11533  06C3                     u5740:
 11534  06C3                     l3640:
 11535                           
 11536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11537  06C3  1683               	bsf	3,5	;RP0=1, select bank1
 11538  06C4  1303               	bcf	3,6	;RP1=0, select bank1
 11539  06C5  0848               	movf	sprintf@prec^(0+128),w
 11540  06C6  00AB               	movwf	??_sprintf^(0+128)
 11541  06C7  082B               	movf	??_sprintf^(0+128),w
 11542  06C8  00CA               	movwf	sprintf@c^(0+128)
 11543  06C9  2EE2               	goto	l3646
 11544  06CA                     l3642:
 11545  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 11546  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 11547  06CC  0849               	movf	(sprintf@prec+1)^(0+128),w
 11548  06CD  3A80               	xorlw	128
 11549  06CE  00AB               	movwf	??_sprintf^(0+128)
 11550  06CF  3080               	movlw	128
 11551  06D0  022B               	subwf	??_sprintf^(0+128),w
 11552  06D1  1D03               	skipz
 11553  06D2  2ED5               	goto	u5755
 11554  06D3  084A               	movf	sprintf@c^(0+128),w
 11555  06D4  0248               	subwf	sprintf@prec^(0+128),w
 11556  06D5                     u5755:
 11557  06D5  1803               	skipnc
 11558  06D6  2ED8               	goto	u5751
 11559  06D7  2ED9               	goto	u5750
 11560  06D8                     u5751:
 11561  06D8  2EE2               	goto	l3646
 11562  06D9                     u5750:
 11563  06D9                     l3644:
 11564                           
 11565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11566  06D9  1683               	bsf	3,5	;RP0=1, select bank1
 11567  06DA  1303               	bcf	3,6	;RP1=0, select bank1
 11568  06DB  084A               	movf	sprintf@c^(0+128),w
 11569  06DC  00AB               	movwf	??_sprintf^(0+128)
 11570  06DD  01AC               	clrf	(??_sprintf^(0+128)+1)
 11571  06DE  082B               	movf	??_sprintf^(0+128),w
 11572  06DF  00C8               	movwf	sprintf@prec^(0+128)
 11573  06E0  082C               	movf	(??_sprintf+1)^(0+128),w
 11574  06E1  00C9               	movwf	(sprintf@prec+1)^(0+128)
 11575  06E2                     l3646:
 11576                           
 11577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11578  06E2  1683               	bsf	3,5	;RP0=1, select bank1
 11579  06E3  1303               	bcf	3,6	;RP1=0, select bank1
 11580  06E4  0837               	movf	sprintf@width^(0+128),w
 11581  06E5  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11582  06E6  1903               	btfsc	3,2
 11583  06E7  2EE9               	goto	u5761
 11584  06E8  2EEA               	goto	u5760
 11585  06E9                     u5761:
 11586  06E9  2EFC               	goto	l3652
 11587  06EA                     u5760:
 11588  06EA                     l3648:
 11589  06EA  3003               	movlw	3
 11590  06EB  0535               	andwf	sprintf@flag^(0+128),w
 11591  06EC  00AB               	movwf	??_sprintf^(0+128)
 11592  06ED  3000               	movlw	0
 11593  06EE  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11594  06EF  00AC               	movwf	(??_sprintf+1)^(0+128)
 11595  06F0  082B               	movf	??_sprintf^(0+128),w
 11596  06F1  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11597  06F2  1903               	btfsc	3,2
 11598  06F3  2EF5               	goto	u5771
 11599  06F4  2EF6               	goto	u5770
 11600  06F5                     u5771:
 11601  06F5  2EFC               	goto	l3652
 11602  06F6                     u5770:
 11603  06F6                     l3650:
 11604                           
 11605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11606  06F6  30FF               	movlw	255
 11607  06F7  07B7               	addwf	sprintf@width^(0+128),f
 11608  06F8  1803               	skipnc
 11609  06F9  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11610  06FA  30FF               	movlw	255
 11611  06FB  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11612  06FC                     l3652:
 11613                           
 11614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11615  06FC  1F36               	btfss	(sprintf@flag+1)^(0+128),6
 11616  06FD  2EFF               	goto	u5781
 11617  06FE  2F00               	goto	u5780
 11618  06FF                     u5781:
 11619  06FF  2F1B               	goto	l3660
 11620  0700                     u5780:
 11621  0700                     l3654:
 11622                           
 11623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11624  0700  0849               	movf	(sprintf@prec+1)^(0+128),w
 11625  0701  3A80               	xorlw	128
 11626  0702  00AB               	movwf	??_sprintf^(0+128)
 11627  0703  0838               	movf	(sprintf@width+1)^(0+128),w
 11628  0704  3A80               	xorlw	128
 11629  0705  022B               	subwf	??_sprintf^(0+128),w
 11630  0706  1D03               	skipz
 11631  0707  2F0A               	goto	u5795
 11632  0708  0837               	movf	sprintf@width^(0+128),w
 11633  0709  0248               	subwf	sprintf@prec^(0+128),w
 11634  070A                     u5795:
 11635  070A  1803               	skipnc
 11636  070B  2F0D               	goto	u5791
 11637  070C  2F0E               	goto	u5790
 11638  070D                     u5791:
 11639  070D  2F17               	goto	l3658
 11640  070E                     u5790:
 11641  070E                     l3656:
 11642                           
 11643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11644  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11645  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11646  0710  0848               	movf	sprintf@prec^(0+128),w
 11647  0711  02B7               	subwf	sprintf@width^(0+128),f
 11648  0712  0849               	movf	(sprintf@prec+1)^(0+128),w
 11649  0713  1C03               	skipc
 11650  0714  03B8               	decf	(sprintf@width+1)^(0+128),f
 11651  0715  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11652  0716  2F1B               	goto	l3660
 11653  0717                     l3658:
 11654                           
 11655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11656  0717  1683               	bsf	3,5	;RP0=1, select bank1
 11657  0718  1303               	bcf	3,6	;RP1=0, select bank1
 11658  0719  01B7               	clrf	sprintf@width^(0+128)
 11659  071A  01B8               	clrf	(sprintf@width+1)^(0+128)
 11660  071B                     l3660:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11663  071B  0838               	movf	(sprintf@width+1)^(0+128),w
 11664  071C  3A80               	xorlw	128
 11665  071D  3C80               	sublw	128
 11666  071E  1D03               	skipz
 11667  071F  2F22               	goto	u5805
 11668  0720  0837               	movf	sprintf@width^(0+128),w
 11669  0721  024A               	subwf	sprintf@c^(0+128),w
 11670  0722                     u5805:
 11671  0722  1803               	skipnc
 11672  0723  2F25               	goto	u5801
 11673  0724  2F26               	goto	u5800
 11674  0725                     u5801:
 11675  0725  2F32               	goto	l3664
 11676  0726                     u5800:
 11677  0726                     l3662:
 11678                           
 11679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11680  0726  1683               	bsf	3,5	;RP0=1, select bank1
 11681  0727  1303               	bcf	3,6	;RP1=0, select bank1
 11682  0728  084A               	movf	sprintf@c^(0+128),w
 11683  0729  00AB               	movwf	??_sprintf^(0+128)
 11684  072A  01AC               	clrf	(??_sprintf^(0+128)+1)
 11685  072B  082B               	movf	??_sprintf^(0+128),w
 11686  072C  02B7               	subwf	sprintf@width^(0+128),f
 11687  072D  082C               	movf	(??_sprintf+1)^(0+128),w
 11688  072E  1C03               	skipc
 11689  072F  03B8               	decf	(sprintf@width+1)^(0+128),f
 11690  0730  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11691  0731  2F36               	goto	l3666
 11692  0732                     l3664:
 11693                           
 11694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11695  0732  1683               	bsf	3,5	;RP0=1, select bank1
 11696  0733  1303               	bcf	3,6	;RP1=0, select bank1
 11697  0734  01B7               	clrf	sprintf@width^(0+128)
 11698  0735  01B8               	clrf	(sprintf@width+1)^(0+128)
 11699  0736                     l3666:
 11700                           
 11701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11702  0736  0837               	movf	sprintf@width^(0+128),w
 11703  0737  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11704  0738  1903               	btfsc	3,2
 11705  0739  2F3B               	goto	u5811
 11706  073A  2F3C               	goto	u5810
 11707  073B                     u5811:
 11708  073B  2F53               	goto	l3674
 11709  073C                     u5810:
 11710  073C                     l3668:
 11711                           
 11712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11713  073C  3020               	movlw	32
 11714  073D  00AB               	movwf	??_sprintf^(0+128)
 11715  073E  0847               	movf	sprintf@sp^(0+128),w
 11716  073F  0084               	movwf	4
 11717  0740  082B               	movf	??_sprintf^(0+128),w
 11718  0741  1383               	bcf	3,7	;select IRP bank0
 11719  0742  0080               	movwf	0
 11720  0743                     l3670:
 11721  0743  3001               	movlw	1
 11722  0744  00AB               	movwf	??_sprintf^(0+128)
 11723  0745  082B               	movf	??_sprintf^(0+128),w
 11724  0746  07C7               	addwf	sprintf@sp^(0+128),f
 11725  0747                     l3672:
 11726  0747  30FF               	movlw	255
 11727  0748  07B7               	addwf	sprintf@width^(0+128),f
 11728  0749  1803               	skipnc
 11729  074A  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11730  074B  30FF               	movlw	255
 11731  074C  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11732  074D  0837               	movf	sprintf@width^(0+128),w
 11733  074E  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11734  074F  1D03               	btfss	3,2
 11735  0750  2F52               	goto	u5821
 11736  0751  2F53               	goto	u5820
 11737  0752                     u5821:
 11738  0752  2F3C               	goto	l3668
 11739  0753                     u5820:
 11740  0753                     l3674:
 11741                           
 11742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11743  0753  3003               	movlw	3
 11744  0754  0535               	andwf	sprintf@flag^(0+128),w
 11745  0755  00AB               	movwf	??_sprintf^(0+128)
 11746  0756  3000               	movlw	0
 11747  0757  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11748  0758  00AC               	movwf	(??_sprintf+1)^(0+128)
 11749  0759  082B               	movf	??_sprintf^(0+128),w
 11750  075A  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11751  075B  1903               	btfsc	3,2
 11752  075C  2F5E               	goto	u5831
 11753  075D  2F5F               	goto	u5830
 11754  075E                     u5831:
 11755  075E  2FC8               	goto	l3686
 11756  075F                     u5830:
 11757  075F                     l3676:
 11758                           
 11759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11760  075F  302D               	movlw	45
 11761  0760  00AB               	movwf	??_sprintf^(0+128)
 11762  0761  0847               	movf	sprintf@sp^(0+128),w
 11763  0762  0084               	movwf	4
 11764  0763  082B               	movf	??_sprintf^(0+128),w
 11765  0764  1383               	bcf	3,7	;select IRP bank0
 11766  0765  0080               	movwf	0
 11767  0766                     l3678:
 11768  0766  3001               	movlw	1
 11769  0767  00AB               	movwf	??_sprintf^(0+128)
 11770  0768  082B               	movf	??_sprintf^(0+128),w
 11771  0769  07C7               	addwf	sprintf@sp^(0+128),f
 11772  076A  2FC8               	goto	l3686
 11773  076B                     l3680:
 11774                           
 11775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11776  076B  3000               	movlw	0
 11777  076C  1283               	bcf	3,5	;RP0=0, select bank0
 11778  076D  1303               	bcf	3,6	;RP1=0, select bank0
 11779  076E  00A3               	movwf	___llmod@divisor+3
 11780  076F  3000               	movlw	0
 11781  0770  00A2               	movwf	___llmod@divisor+2
 11782  0771  3000               	movlw	0
 11783  0772  00A1               	movwf	___llmod@divisor+1
 11784  0773  300A               	movlw	10
 11785  0774  00A0               	movwf	___llmod@divisor
 11786  0775  1683               	bsf	3,5	;RP0=1, select bank1
 11787  0776  1303               	bcf	3,6	;RP1=0, select bank1
 11788  0777  0848               	movf	sprintf@prec^(0+128),w
 11789  0778  00AB               	movwf	??_sprintf^(0+128)
 11790  0779  3001               	movlw	1
 11791  077A                     u5845:
 11792  077A  1003               	clrc
 11793  077B  0DAB               	rlf	??_sprintf^(0+128),f
 11794  077C  3EFF               	addlw	-1
 11795  077D  1D03               	skipz
 11796  077E  2F7A               	goto	u5845
 11797  077F  1003               	clrc
 11798  0780  0D2B               	rlf	??_sprintf^(0+128),w
 11799  0781  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11800  0782  0084               	movwf	4
 11801  0783  120A  118A  200D  120A  118A  	fcall	stringdir
 11802  0788  00F0               	movwf	___lldiv@divisor
 11803  0789  120A  118A  200D  120A  118A  	fcall	stringdir
 11804  078E  00F1               	movwf	___lldiv@divisor+1
 11805  078F  120A  118A  200D  120A  118A  	fcall	stringdir
 11806  0794  00F2               	movwf	___lldiv@divisor+2
 11807  0795  120A  118A  200D  120A  118A  	fcall	stringdir
 11808  079A  00F3               	movwf	___lldiv@divisor+3
 11809  079B  0840               	movf	(sprintf@val+3)^(0+128),w
 11810  079C  00F7               	movwf	___lldiv@dividend+3
 11811  079D  083F               	movf	(sprintf@val+2)^(0+128),w
 11812  079E  00F6               	movwf	___lldiv@dividend+2
 11813  079F  083E               	movf	(sprintf@val+1)^(0+128),w
 11814  07A0  00F5               	movwf	___lldiv@dividend+1
 11815  07A1  083D               	movf	sprintf@val^(0+128),w
 11816  07A2  00F4               	movwf	___lldiv@dividend
 11817  07A3  160A  158A  24EA  120A  118A  	fcall	___lldiv
 11818  07A8  0873               	movf	?___lldiv+3,w
 11819  07A9  1283               	bcf	3,5	;RP0=0, select bank0
 11820  07AA  1303               	bcf	3,6	;RP1=0, select bank0
 11821  07AB  00A7               	movwf	___llmod@dividend+3
 11822  07AC  0872               	movf	?___lldiv+2,w
 11823  07AD  00A6               	movwf	___llmod@dividend+2
 11824  07AE  0871               	movf	?___lldiv+1,w
 11825  07AF  00A5               	movwf	___llmod@dividend+1
 11826  07B0  0870               	movf	?___lldiv,w
 11827  07B1  00A4               	movwf	___llmod@dividend
 11828  07B2  120A  118A  20C6  120A  118A  	fcall	___llmod
 11829  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 11830  07B8  1303               	bcf	3,6	;RP1=0, select bank0
 11831  07B9  0820               	movf	?___llmod,w
 11832  07BA  3E30               	addlw	48
 11833  07BB  1683               	bsf	3,5	;RP0=1, select bank1
 11834  07BC  1303               	bcf	3,6	;RP1=0, select bank1
 11835  07BD  00AC               	movwf	(??_sprintf+1)^(0+128)
 11836  07BE  082C               	movf	(??_sprintf+1)^(0+128),w
 11837  07BF  00CA               	movwf	sprintf@c^(0+128)
 11838  07C0                     l3682:
 11839                           
 11840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11841  07C0  084A               	movf	sprintf@c^(0+128),w
 11842  07C1  00AB               	movwf	??_sprintf^(0+128)
 11843  07C2  0847               	movf	sprintf@sp^(0+128),w
 11844  07C3  0084               	movwf	4
 11845  07C4  082B               	movf	??_sprintf^(0+128),w
 11846  07C5  1383               	bcf	3,7	;select IRP bank0
 11847  07C6  0080               	movwf	0
 11848  07C7  2F66               	goto	l3678
 11849  07C8                     l3686:
 11850                           
 11851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11852  07C8  30FF               	movlw	255
 11853  07C9  07C8               	addwf	sprintf@prec^(0+128),f
 11854  07CA  1803               	skipnc
 11855  07CB  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11856  07CC  30FF               	movlw	255
 11857  07CD  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11858  07CE  0A48               	incf	sprintf@prec^(0+128),w
 11859  07CF  1D03               	skipz
 11860  07D0  2FD5               	goto	u5851
 11861  07D1  0A49               	incf	(sprintf@prec+1)^(0+128),w
 11862  07D2  1D03               	btfss	3,2
 11863  07D3  2FD5               	goto	u5851
 11864  07D4  2FD6               	goto	u5850
 11865  07D5                     u5851:
 11866  07D5  2F6B               	goto	l3680
 11867  07D6                     u5850:
 11868  07D6                     l3688:
 11869                           
 11870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11871  07D6  3001               	movlw	1
 11872  07D7  07A0               	addwf	sprintf@f^(0+128),f
 11873  07D8  30FF               	movlw	-1
 11874  07D9  0720               	addwf	sprintf@f^(0+128),w
 11875  07DA  0084               	movwf	4
 11876  07DB  120A  118A  200D  120A  118A  	fcall	stringdir
 11877  07E0  00AB               	movwf	??_sprintf^(0+128)
 11878  07E1  082B               	movf	??_sprintf^(0+128),w
 11879  07E2  00CA               	movwf	sprintf@c^(0+128)
 11880  07E3  084A               	movf	sprintf@c^(0+128),w
 11881  07E4  1D03               	btfss	3,2
 11882  07E5  2FE7               	goto	u5861
 11883  07E6  2FEA               	goto	u5860
 11884  07E7                     u5861:
 11885  07E7  160A  118A  2D48   	goto	l3408
 11886  07EA                     u5860:
 11887  07EA                     l3690:
 11888                           
 11889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11890  07EA  0847               	movf	sprintf@sp^(0+128),w
 11891  07EB  0084               	movwf	4
 11892  07EC  1383               	bcf	3,7	;select IRP bank0
 11893  07ED  0180               	clrf	0
 11894  07EE                     l433:
 11895  07EE  0008               	return
 11896  07EF                     __end_of_sprintf:

Data Sizes:
    Strings     34
    Constant    144
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     46      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[15]), data(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _temperatura->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _setup->_spiInit
    _contador->_spiWrite
    _Write_USART_String->_Write_USART
    _Lcd_Write_String->_LCD_CMD
    _LCD_CMD->_Puerto
    _Lcd_Set_Cursor->_datosLCD
    _Lcd_Init->_datosLCD
    _LCD_Limpia->_datosLCD
    _datosLCD->_Puerto
    _ADC_lectura->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34956
                                             43 BANK1      3     3      0
                        _ADC_lectura
                         _LCD_Limpia
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _Write_USART
                 _Write_USART_String
                           __baudios
                       _config_rcsta
                       _config_txsta
                           _contador
                              _setup
                            _sprintf
                        _temperatura
 ---------------------------------------------------------------------------------
 (1) _temperatura                                          8     4      4     572
                                              0 BANK0      8     4      4
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   31824
                                              0 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _contador                                             2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     198
                                              1 COMMON     2     2      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Limpia                                           0     0      0     198
                           _datosLCD
 ---------------------------------------------------------------------------------
 (2) _datosLCD                                             3     3      0     198
                                              1 COMMON     3     3      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (3) _Puerto                                               1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_lectura                                          4     4      0     572
                                              0 BANK0      4     4      0
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_lectura
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LCD_Limpia
     _datosLCD
       _Puerto
   _Lcd_Init
     _datosLCD
       _Puerto
   _Lcd_Set_Cursor
     _datosLCD
       _Puerto
   _Lcd_Write_String
     _LCD_CMD
       _Puerto
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _config_rcsta
   _config_txsta
   _contador
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _spiInit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _temperatura
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 13:03:01 2021

                          pc 0002                  ?_LCD_Limpia 0070                  _SSPSTATbits 0094  
                         l20 1937                           l23 193D                           l16 199E  
                         l17 19A3                           l34 1008                           l26 0805  
               ___awdiv@sign 0021                           _v1 00D2                           fsr 0004  
        ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076         __size_of_Write_USART 000C  
                        l111 013A                          l120 1AF6                          l211 1957  
                        l123 1DB5                          l220 196E                          l117 1C42  
                        l214 1945                          l126 1A05                          l151 1B3A  
                        l160 1B59                          l152 1B3D                          l208 1936  
                        l161 1B5F                          l153 1B43                          l217 1964  
                        l162 1B60                          l154 1B44                          l170 19C0  
                        l226 1AC4                          l163 1B66                          l155 1B4A  
                        l403 04A6                          l164 1B67                          l156 1B4B  
                        l165 1B6D                          l157 1B51                          l173 19E2  
                        l341 0C9E                          l158 1B52                          l334 12B5  
                        l167 1B6E                          l159 1B58                          l191 1BB0  
                        l176 197B                          l185 1A29                          l433 07EE  
                        l179 1E88                          l611 0902                          l603 1CE9  
                        l363 1605                          l437 1A5A                          l623 1C5F  
                        l631 1091                          l439 1A72                          l607 093F  
                        l624 1C7B                          l632 10AA                          l640 0881  
                        l608 08A4                          l625 1C90                          l473 1D4F  
                        l810 1A4D                          l650 0881                          l618 0932  
                        l628 1025                          l636 1962                          l396 0462  
                        l910 1EF0                          l806 1531                          l654 1FFF  
                        l590 1E1E                          l807 153D                          l647 086C  
                        l655 1F71                          l743 1BF4                          l904 1EAB  
                        l665 1FF2                          l753 1B30                          l906 1F42  
                        l770 1397                          l658 1FC2                          l764 1319  
                        l860 0FFF                          l924 198D                          l917 1F0C  
                        l693 011B                          l918 1F18                          l768 13C0  
                        l872 0FF3                          l785 148B                          l777 153D  
                        l881 1A99                          l866 0F6B                          l795 14D1  
                        l789 14AF                          l798 150F                          l879 1A87  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          fsr0 0004                          indf 0000  
               ___awmod@sign 0076                 ___flmul@aexp 0036                 ___flmul@bexp 0037  
               ___flmul@sign 0031                 ___flmul@temp 003C                 ___flmul@prod 0038  
__size_of_Write_USART_String 002B              __end_of_LCD_CMD 19C1                 ___fltol@exp1 005B  
                       l3010 198C                         l3002 197D                         l3020 1F5F  
                       l3004 197E                         l3030 1F87                         l3014 1F43  
                       l3006 1984                         l3120 1A50                         l3112 0927  
                       l3104 090E                         l3040 1FB3                         l3032 1F89  
                       l3016 1F56                         l2400 1A7D                         l3008 198A  
                       l2410 1937                         l3210 083C                         l3202 081C  
                       l3122 1A54                         l3114 0937                         l3106 0920  
                       l3042 1FB4                         l3034 1F92                         l3026 1F72  
                       l2402 1A81                         l2420 1B4F                         l2412 1B32  
                       l3212 0840                         l3220 085A                         l3204 0831  
                       l3140 1D0E                         l3132 1CEA                         l3124 1A61  
                       l3060 1FE7                         l3052 1FCE                         l3044 1FBC  
                       l3036 1F9B                         l3028 1F78                         l2404 1A90  
                       l2500 1CCE                         l2422 1B56                         l2414 1B36  
                       l3310 19F6                         l3302 19E3                         l3230 0876  
                       l3206 0832                         l3150 1D41                         l3142 1D17  
                       l3134 1CFA                         l3126 1A68                         l3118 1A4E  
                       l3062 1FF7                         l3046 1FC6                         l3054 1FE0  
                       l3038 1FA9                         l2406 1A95                         l2430 1DB6  
                       l2502 1CD5                         l2424 1B5D                         l2416 1B41  
                       l3320 1932                         l3312 19F9                         l3304 19F1  
                       l3160 1C73                         l2600 130F                         l3208 083A  
                       l3144 1D29                         l3136 1CFD                         l3152 1D47  
                       l3240 00E4                         l3232 00C6                         l3128 1A6E  
                       l3080 08AD                         l3072 0898                         l2520 1BC3  
                       l2512 1BB1                         l2440 1DC8                         l2432 1DB9  
                       l2504 1CDB                         l3400 1D63                         l2426 1B64  
                       l2418 1B48                         l3330 1E28                         l3322 194E  
                       l3314 19FA                         l3306 19F4                         l3162 1C8D  
                       l3170 101D                         l2610 132B                         l2602 1311  
                       l3226 0861                         l3218 0848                         l3146 1D37  
                       l3138 1D0A                         l3242 00F6                         l3234 00D0  
                       l3090 08E4                         l3082 08BE                         l3066 0882  
                       l2530 1BE3                         l2522 1BC7                         l2514 1BB3  
                       l2450 1DDC                         l2442 1DCD                         l2434 1DBD  
                       l2506 1CE0                         l3410 154E                         l3402 1D90  
                       l3260 1E8F                         l2428 1B6B                         l3340 1E53  
                       l3332 1E2E                         l3324 193E                         l3316 19FB  
                       l3308 19F5                         l3164 1C8F                         l3156 1C43  
                       l3180 106D                         l3172 1039                         l2700 14A1  
                       l2620 133F                         l2612 132F                         l2604 131F  
                       l3252 1A2A                         l3228 0871                         l3148 1D38  
                       l3244 0104                         l3236 00D3                         l3092 08F2  
                       l3084 08C0                         l3068 088F                         l2532 1BEA  
                       l2524 1BCB                         l2516 1BB9                         l2540 1AFD  
                       l2460 1E02                         l2452 1DE3                         l2444 1DD1  
                       l2436 1DC2                         l2508 1CE5                         l3500 17EA  
                       l3420 1572                         l3412 1555                         l3270 1EBC  
                       l3262 1E93                         l3350 1E83                         l3342 1E5E  
                       l3334 1E3D                         l3326 1944                         l3318 19FC  
                       l3158 1C57                         l3182 10A7                         l3174 1041  
                       l3190 1960                         l2710 14B8                         l2702 14AA  
                       l2630 1353                         l2622 1343                         l2614 1333  
                       l2606 1323                         l3254 1A2E                         l3246 010D  
                       l3238 00E0                         l3094 08F3                         l3086 08C9  
                       l3078 08A5                         l2526 1BDC                         l2518 1BBC  
                       l2534 1BF0                         l2550 1B19                         l2542 1B00  
                       l2470 1E1A                         l2462 1E03                         l2454 1DE7  
                       l2446 1DD3                         l2438 1DC4                         l3510 0255  
                       l3502 01E9                         l3430 15BC                         l3422 1587  
                       l3414 155A                         l3406 1541                         _ADC1 006E  
                       l3280 1EE7                         l3272 1EC1                         l3264 1EA3  
                       l3352 196F                         l3344 1E63                         l3336 1E42  
                       l3328 1E1F                         l3360 1AD7                         l3184 10A9  
                       l3176 1045                         l3168 1009                         l3192 1962  
                       l2720 14C8                         l2712 14BD                         l2704 14AE  
                       l2640 1364                         l2632 1357                         l2624 1347  
                       l2616 1337                         l2608 1327                         l2560 12B6  
                       l3248 0113                         l3096 08FC                         l3088 08D2  
                       l2800 0D1C                         l2528 1BE2                         l2552 1B1F  
                       l2544 1B07                         l2464 1E0A                         l2456 1DEB  
                       l2448 1DD9                         l2480 1C9B                         l3600 0619  
                       l3520 02A3                         l3512 025E                         l3504 0204  
                       l3440 15EC                         l3432 15BD                         l3424 159A  
                       l3416 155E                         l3408 1548                         _ADC2 00D6  
                       l3290 1F1A                         l3282 1EF7                         l3274 1ECE  
                       l3266 1EB3                         l3258 1E8A                         l3370 1C08  
                       l3346 1E72                         l3338 1E4D                         l3362 1AEA  
                       l3354 1AC5                         l3178 1069                         l2730 14E9  
                       l2722 14CE                         l2706 14B3                         l2714 14BF  
                       l2650 13AA                         l2642 137B                         l2634 135B  
                       l2626 134B                         l2618 133B                         l2570 12CD  
                       l2562 12BD                         l3098 0906                         l2810 0DAA  
                       l2802 0D29                         l2554 1B26                         l2546 1B0B  
                       l2538 1AF7                         l2458 1DFC                         l2466 1E10  
                       l2490 1CAF                         l2482 1C9D                         l2474 1C91  
                       l3602 0621                         l3514 0266                         l3506 022B  
                       l3522 02AC                         l3610 0639                         l3450 1607  
                       l3442 15F0                         l3434 15C1                         l3426 159E  
                       l3418 156E                         l3292 1F30                         l3284 1F02  
                       l3276 1ED5                         l3372 1C35                         l3364 1BF5  
                       l3348 1E78                         l3380 1A18                         l3700 1A9A  
                       l3356 1AC8                         l2900 199A                         l3188 1958  
                       l2740 1521                         l2732 14ED                         l2708 14B6  
                       l2716 14C3                         l2660 13C9                         l2652 13AB  
                       l2644 139B                         l2636 135F                         l2628 134F  
                       l2580 12E5                         l2572 12D2                         l2564 12C3  
                       l3196 0806                         l2396 1A74                         l2820 0E0C  
                       l2812 0DC6                         l2804 0D46                         l2548 1B0F  
                       l2556 1B2C                         l2468 1E15                         l2492 1CB6  
                       l2484 1CA1                         l2476 1C92                         l3620 0661  
                       l3612 064A                         l3604 0628                         l3540 0373  
                       l3524 02E1                         l3516 0284                         l3508 023A  
                       l3460 164D                         l3452 1629                         l3436 15C4  
                       l3444 1601                         l3428 15AE                         l3294 1F35  
                       l3286 1F06                         l3278 1ED9                         l3366 1BF8  
                       l3382 1A1E                         l3374 1A07                         l3390 1B8E  
                       l3702 1A9C                         l3358 1AD1                         l2902 199D  
                       l2750 1538                         l2742 1526                         l2734 150B  
                       l2726 14D6                         l2718 14C4                         l2670 13F1  
                       l2654 13B4                         l2646 13A4                         l2638 1363  
                       l2590 12FB                         l2582 12EA                         l2574 12DA  
                       l2566 12C7                         l3198 0813                         l2398 1A76  
                       l2830 0E9C                         l2822 0E29                         l2814 0DCF  
                       l2806 0D62                         l2494 1CBA                         l2486 1CA6  
                       l2478 1C96                         l3622 0667                         l3614 064E  
                       l3606 062C                         l3550 03B0                         l3542 038E  
                       l3534 0332                         l3526 032E                         l3470 168B  
                       l3462 1651                         l3454 1637                         l3446 1603  
                       l3438 15D9                         l3710 0126                         l3296 1F39  
                       l3288 1F10                         l2904 0801                         l3368 1C02  
                       l3384 1A23                         l3376 1A0C                         l2920 19AE  
                       l3392 1B94                         l2912 1964                         l3704 1AAD  
                       l2752 153C                         l2744 1527                         l2736 1514  
                       l2728 14DB                         l2680 140A                         l2672 13FA  
                       l2664 13D2                         l2648 13A6                         l2656 13B8  
                       l2592 12FC                         l2584 12F0                         l2576 12DB  
                       l2568 12C8                         l2840 0F2E                         l2832 0EC9  
                       l2824 0E42                         l2816 0DDF                         l2808 0D8E  
                       l2760 0CB0                         l2496 1CBE                         l2488 1CAC  
                       l3640 06C3                         l3632 0677                         l3624 066F  
                       l3616 0652                         l3608 0632                         l3560 03D7  
                       l3544 0394                         l3528 0330                         l3480 16DB  
                       l3472 16A4                         l3464 166A                         l3456 163B  
                       l3720 01A4                         l3712 012B                         l3298 1F3A  
                       l2906 1000                         l2930 19C2                         l3378 1A11  
                       l2922 19B1                         l3386 1B6F                         l2914 196A  
                       l3706 1AB1                         l2746 152B                         l2738 1519  
                       l2690 146E                         l2674 13FC                         l2666 13E9  
                       l2658 13C4                         l2682 140F                         l2594 1301  
                       l2586 12F1                         l2578 12DD                         l2842 0F37  
                       l2850 0F4B                         l2834 0EEF                         l2826 0E5F  
                       l2818 0DFC                         l2770 0CC5                         l2762 0CB1  
                       l2754 0C9F                         l2498 1CC8                         l3650 06F6  
                       l3642 06CA                         l3626 0675                         l3618 0656  
                       l3570 0473                         l3562 03DC                         l3546 03A0  
                       l3554 03B5                         l3538 0369                         l3490 1768  
                       l3482 16DF                         l3474 16AF                         l3466 1683  
                       l3458 163F                         l3394 1D50                         l3730 01D7  
                       l3722 01AD                         l3714 0151                         l2908 1005  
                       l2940 19D5                         l2932 19C5                         l2924 19B5  
                       l2916 19A5                         l3388 1B72                         l2748 152D  
                       l2684 1425                         l2692 147D                         l2676 1400  
                       l2668 13ED                         l2596 1306                         l2588 12F7  
                       l2852 0F4F                         l2844 0F3B                         l2836 0F17  
                       l2828 0E8C                         l2780 0CDD                         l2772 0CCD  
                       l2764 0CB6                         l2756 0CA6                         l3660 071B  
                       l3652 06FC                         l3644 06D9                         l3636 06AE  
                       l3580 04A0                         l3572 0477                         l3564 0417  
                       l3556 03C2                         l3548 03A7                         l3492 1771  
                       l3484 16E5                         l3476 16B5                         l3468 1687  
                       l3396 1D53                         l3724 01B6                         l3716 015A  
                       l3708 011C                         l2942 19D9                         l2934 19CB  
                       l2926 19B8                         l2918 19A8                         l2694 1493  
                       l2686 1463                         l2678 1401                         l2598 130E  
                       l2870 0FA0                         l2862 0F70                         l2854 0F50  
                       l2846 0F3C                         l2838 0F20                         l2790 0CF9  
                       l2782 0CE2                         l2774 0CD2                         l2766 0CBB  
                       l2758 0CAC                         l3670 0743                         l3662 0726  
                       l3654 0700                         l3646 06E2                         l3638 06B8  
                       l3590 04DD                         l3582 04AF                         l3574 047D  
                       l3566 0456                         l3558 03D0                         l3494 178C  
                       l3486 1704                         l3478 16C8                         l3398 1D5D  
                       l3726 01BC                         l3718 019C                         l2936 19CE  
                       l2928 19BC                         l2696 1498                         l2688 1469  
                       l2880 0FD7                         l2864 0F75                         l2872 0FA6  
                       l2856 0F54                         l2848 0F45                         l2792 0CFE  
                       l2784 0CE7                         l2776 0CD8                         l2768 0CC3  
                       l2952 11C1                         l2944 10AE                         l3680 076B  
                       l3672 0747                         l3664 0732                         l3656 070E  
                       l3648 06EA                         l3592 0538                         l3584 04B4  
                       l3576 048A                         l3568 046A                         l3488 174F  
                       l3496 1794                         l3728 01C2                         l2938 19D2  
                       l2890 0FF7                         l2882 0FD9                         l2874 0FB3  
                       l2866 0F83                         l2858 0F68                         l2794 0D03  
                       l2786 0CEF                         l2778 0CDC                         l2954 11C7  
                       l2946 10B4                         l2962 0943                         l3682 07C0  
                       l3674 0753                         l3666 0736                         l3658 0717  
                       l3594 0573                         l3586 04BB                         l3578 0499  
                       l3498 17A3                         l3690 07EA                         l3762 161B  
                       l2884 0FE7                         l2876 0FBE                         l2868 0F87  
                       l2788 0CF1                         l2980 0AC7                         l2964 0947  
                       l3676 075F                         l3668 073C                         l3596 05B2  
                       l3588 04BF                         l2894 198F                         l2886 0FEB  
                       l2878 0FCD                         l2798 0D0C                         l2958 1272  
                       l2974 0A38                         l2966 0949                         l3678 0766  
                       l3686 07C8                         l3598 05BE                         l2896 1996  
                       l2888 0FEC                         l2992 0BE3                         l2976 0A3F  
                       l2968 0950                         l2984 0AF4                         l3688 07D6  
                       l2898 1998                         l2994 0BEA                         l2986 0AFB  
                       l2998 0C72                         STR_1 00B6                         STR_2 00A3  
                       STR_3 00B6                         u3000 1B41                         u3001 1B40  
                       u3010 1B48                         u3011 1B47                         u3020 1B4F  
                       u3021 1B4E                         u3030 1B56                         u3110 1DEB  
                       u3031 1B55                         u3111 1DEA                         u3040 1B5D  
                       u3041 1B5C                         u3105 1DDD                         u3050 1B64  
                       u3130 1DFC                         u3210 1CBE                         u3051 1B63  
                       u4011 0E51                         u3131 1DFB                         u3211 1CBD  
                       u3060 1B6B                         u4100 0F3B                         u4012 0E58  
                       u3300 1BDC                         u3220 1CC8                         u3061 1B6A  
                       u4101 0F3A                         u4021 0E7E                         u4013 0E5F  
                       u4005 0E2B                         u3301 1BDB                         u3125 1DEC  
                       u3221 1CC7                         u3205 1CB0                         u4022 0E85  
                       u3150 1E10                         u3070 1DBD                         u4031 0EAB  
                       u4023 0E8C                         u3151 1E0F                         u3135 1DF8  
                       u3071 1DBC                         u3400 12CD                         u5000 082A  
                       u4200 0FCD                         u4120 0F4F                         u4040 0ED5  
                       u4032 0EB2                         u3320 1BF0                         u3160 1E15  
                       u3080 1DC8                         u3240 1CDB                         u3401 12CC  
                       u4201 0FCC                         u4121 0F4E                         u4033 0EB9  
                       u3321 1BEF                         u3305 1BD8                         u3161 1E14  
                       u3145 1E04                         u3081 1DC7                         u3241 1CDA  
                       u3225 1CC4                         u3410 12D2                         u5010 0840  
                       u4210 0FEB                         u4130 0F54                         u3330 1AFD  
                       u3090 1DD9                         u3250 1CE0                         u3170 1C96  
                       u3411 12D1                         u5011 083F                         u4211 0FEA  
                       u4131 0F53                         u4115 0F3E                         u4051 0EE1  
                       u3315 1BE4                         u3331 1AFC                         u3091 1DD8  
                       u3251 1CDF                         u3235 1CCF                         u3171 1C95  
                       u4220 1996                         u3500 1387                         u3420 12F0  
                       u5020 0847                         u4140 0F68                         u4060 0EFD  
                       u4052 0EE8                         u3260 1BB9                         u3180 1CA1  
                       u4221 1995                         u3421 12EF                         u5021 0846  
                       u5005 0825                         u4205 0FC9                         u4141 0F67  
                       u4053 0EEF                         u4045 0ED0                         u3261 1BB8  
                       u3181 1CA0                         u4230 196A                         u3510 139B  
                       u3430 12FB                         u5110 00E4                         u4150 0F6F  
                       u3350 1B0F                         u3190 1CAC                         u4231 1969  
                       u3511 139A                         u3431 12FA                         u5111 00E3  
                       u4151 0F6E                         u4071 0F09                         u3351 1B0E  
                       u3191 1CAB                         u3600 1400                         u3520 13AA  
                       u3440 1301                         u5040 0859                         u5120 00F6  
                       u4160 0F75                         u4072 0F10                         u3280 1BCB  
                       u3360 1B19                         u4240 10B4                         u4320 0947  
                       u3601 13FF                         u3521 13A9                         u3441 1300  
                       u5041 0858                         u5121 00F5                         u5105 00D5  
                       u4161 0F74                         u4073 0F17                         u4065 0EF8  
                       u3281 1BCA                         u3361 1B18                         u3345 1B01  
                       u4305 1231                         u4241 10B3                         u4321 0946  
                       u5210 1EF6                         u3450 1306                         u5050 0860  
                       u4170 0F87                         u4410 0AFB                         u4330 0950  
                       u5211 1EF5                         u3451 1305                         u5051 085F  
                       u5035 0849                         u4171 0F86                         u3275 1BBD  
                       u4315 127D                         u4411 0AFA                         u4331 094F  
                       u5300 1A1E                         u3700 14B3                         u3620 1425  
                       u3540 13C0                         u3460 131F                         u5140 0113  
                       u4180 0F96                         u3380 1B2C                         u4500 198A  
                       u5205 1EE8                         u5301 1A1D                         u3701 14B2  
                       u3621 1424                         u3541 13BF                         u3461 131E  
                       u5141 0112                         u5125 00F2                         u4085 0F19  
                       u3381 1B2B                         u3365 1B15                         u4501 1989  
                       u4405 0ACA                         u5230 1F06                         u5150 1E8F  
                       u5310 1B7C                         u3710 14BD                         u3550 13C4  
                       u3470 1323                         u3390 12C7                         u5070 0871  
                       u4510 1F56                         u4190 0FB3                         u5231 1F05  
                       u5151 1E8E                         u6007 1E3F                         u3711 14BC  
                       u3631 143C                         u3623 1421                         u3615 1403  
                       u3551 13C3                         u3535 13AD                         u3471 1322  
                       u3391 12C6                         u5071 0870                         u5135 0105  
                       u4511 1F55                         u4191 0FB2                         u4095 0F30  
                       u3295 1BCC                         u3375 1B20                         u4255 10D1  
                       u5240 1F0C                         u5160 1E93                         u5320 1B9E  
                       u3800 1514                         u3720 14C3                         u3640 1450  
                       u3632 143D                         u3560 13C9                         u3480 137B  
                       u5080 0876                         u4600 1FDF                         u4520 1F70  
                       u4280 11C7                         u5400 163B                         u5241 1F0B  
                       u5225 1EFB                         u5161 1E92                         u6017 1E4A  
                       u3801 1513                         u3721 14C2                         u3641 1451  
                       u3633 1442                         u3561 13C8                         u3481 137A  
                       u5081 0875                         u5065 0863                         u4601 1FDE  
                       u4521 1F6F                         u4185 0F91                         u4281 11C6  
                       u4265 112B                         u4425 0B1B                         u4345 0970  
                       u5401 163A                         u5250 1F10                         u5170 1EB3  
                       u5330 1BB0                         u3810 1519                         u3730 14C8  
                       u3650 146E                         u3642 1456                         u3634 1443  
                       u3490 1386                         u5090 00D0                         u4610 1FE6  
                       u4450 0BEA                         u4370 0A3F                         u5410 166A  
                       u5251 1F0F                         u5171 1EB2                         u6107 1BFE  
                       u6027 1E55                         u5331 1BAF                         u3811 1518  
                       u3731 14C7                         u3651 146D                         u3643 1457  
                       u3635 1448                         u3571 13DB                         u3491 1384  
                       u5091 00CF                         u4611 1FE5                         u4195 0FAF  
                       u4275 1180                         u4451 0BE9                         u4435 0B57  
                       u4371 0A3E                         u4355 09AC                         u5411 1669  
                       u5260 1F25                         u3820 1526                         u3740 14CE  
                       u3660 1493                         u3636 1449                         u3580 13ED  
                       u3572 13E2                         u4700 0906                         u4540 1FA9  
                       u3900 0CE7                         u5500 023A                         u5420 16A4  
                       u5340 154E                         u6117 1C31                         u6037 1E60  
                       u3821 1525                         u3741 14CD                         u3661 1492  
                       u3581 13EC                         u3573 13E9                         u3485 1377  
                       u4701 0905                         u4541 1FA8                         u3901 0CE6  
                       u4445 0BA2                         u4365 09F7                         u5501 0239  
                       u5421 16A3                         u5341 154D                         u5270 1F35  
                       u5190 1ED4                         u3830 152B                         u3750 14D5  
                       u3670 1498                         u3590 13F1                         u4710 090D  
                       u4630 1FF7                         u2950 1A81                         u3910 0CFE  
                       u5510 0255                         u5430 16DF                         u5350 156E  
                       u5271 1F34                         u5191 1ED3                         u6127 1C3E  
                       u6047 1E6D                         u3831 152A                         u3751 14D4  
                       u3671 1497                         u3591 13F0                         u4711 090C  
                       u4631 1FF6                         u4535 1F94                         u2951 1A80  
                       u3911 0CFD                         u4295 11E4                         u5511 0254  
                       u5431 16DE                         u5351 156D                         u5280 1F39  
                       u3840 153C                         u3760 14DB                         u4800 1A6E  
                       u4640 088F                         u4560 1FC2                         u3920 0D03  
                       u5600 0469                         u5440 1768                         u5360 15AE  
                       u5281 1F38                         u5265 1F20                         u5185 1EC6  
                       u6057 1E7A                         u3841 153B                         u3761 14DA  
                       u4801 1A6D                         u4641 088E                         u4625 1FE9  
                       u4561 1FC1                         u4545 1FA5                         u3921 0D02  
                       u4465 0BFD                         u4385 0A52                         u5601 0468  
                       u5505 0236                         u5441 1767                         u5361 15AD  
                       u5290 1A0C                         u3770 14ED                         u3690 14AE  
                       u4810 1CFA                         u4730 091F                         u4650 08A3  
                       u4570 1FC6                         u2970 1A95                         u3850 0CB0  
                       u4490 1984                         u5610 048A                         u5530 0368  
                       u5450 178C                         u5370 15BC                         u6067 1E85  
                       u5291 1A0B                         u3771 14EC                         u3691 14AD  
                       u4811 1CF9                         u4731 091E                         u4651 08A2  
                       u4571 1FC5                         u4555 1FB5                         u2971 1A94  
                       u3931 0D54                         u3851 0CAF                         u4491 1983  
                       u4475 0C39                         u4395 0A8E                         u5611 0489  
                       u5531 0367                         u5451 178B                         u5371 15BB  
                       u2980 193D                         u4900 1C8D                         u3780 14FC  
                       u4740 0926                         u4580 1FCD                         u3932 0D5B  
                       u3860 0CB6                         u5700 066F                         u5620 0499  
                       u5540 0373                         u5460 17A3                         u5380 1600  
                       _RCIF 0065                         u2981 193C                         u6077 19D0  
                       u4901 1C8C                         u3685 14A3                         u4741 0925  
                       u4725 090F                         u4581 1FCC                         u2965 1A88  
                       u3941 0D70                         u3933 0D62                         u3861 0CB5  
                       u4485 0C75                         u5701 066E                         u5621 0498  
                       u5541 0372                         u5525 0335                         u5461 17A2  
                       u5381 15FF                         u2990 1B36                         u4910 101D  
                       u3790 150B                         u4830 1D0E                         u4670 08E4  
                       u3942 0D77                         u3870 0CBB                         u5630 04B4  
                       u5550 038E                         u5470 01E9                         u5390 1637  
                       u2991 1B35                         u6087 19D7                         u4911 101C  
                       u3791 150A                         u4831 1D0D                         u4671 08E3  
                       u3951 0D9C                         u3943 0D7E                         u3871 0CBA  
                       u5631 04B3                         u5615 0486                         u5551 038D  
                       u5535 0364                         u5471 17FA                         u5391 1634  
                       u4920 1039                         u4760 0937                         u3952 0DA3  
                       u3880 0CDC                         u5800 0726                         u5720 06AD  
                       u5560 03A0                         u5480 0204                         u6097 19DD  
                       u4905 1C89                         u4921 1038                         u3785 14F7  
                       u4825 1CFF                         u4761 0936                         u4665 08CB  
                       u3961 0DB8                         u3953 0DAA                         u3881 0CDB  
                       u5801 0725                         u5721 06AC                         u5625 0495  
                       u5561 039F                         u5481 0203                         u5465 179F  
                       u4930 1045                         u4850 1D29                         u4770 1A54  
                       u4690 0902                         u3962 0DBF                         u3890 0CE2  
                       u5810 073C                         u5730 06B8                         u5570 03C2  
                       u5490 022B                         u4931 1044                         u4851 1D28  
                       u4771 1A53                         u4755 0929                         u4691 0901  
                       u4675 08E0                         u4595 1FCF                         u3963 0DC6  
                       u3891 0CE1                         u5811 073B                         u5731 06B7  
                       u5715 067A                         u5571 03C1                         u5491 022A  
                       u5475 17F5                         u5820 0753                         u5740 06C3  
                       u5660 0620                         u5580 03D0                         u4941 1054  
                       u4845 1D10                         u4685 08F5                         u3981 0DEE  
                       u5821 0752                         u5805 0722                         u5741 06C2  
                       u5725 06A9                         u5661 061F                         u5645 053B  
                       u5581 03CF                         u4950 106D                         u4942 1055  
                       u4870 1D47                         u3982 0DF5                         u5830 075F  
                       u5750 06D9                         u5670 0638                         u4951 106C  
                       u4943 105A                         u4871 1D46                         u4855 1D25  
                       u3991 0E1B                         u3983 0DFC                         u3975 0DC8  
                       u5831 075E                         u5751 06D8                         u5671 0637  
                       u5655 05C1                         u5575 03BE                         u4880 1C57  
                       u4944 105B                         u3992 0E22                         u5760 06EA  
                       u5680 0652                         u4881 1C56                         u4961 107C  
                       u4945 1060                         u4865 1D39                         u4785 1A5B  
                       u3993 0E29                         u5761 06E9                         u5745 06BF  
                       u5681 0651                         u4890 1C73                         u4970 10A7  
                       u4962 107D                         u4946 1061                         u5850 07D6  
                       u5770 06F6                         u5690 0667                         u4891 1C72  
                       u4971 10A6                         u4963 1082                         u4795 1A62  
                       u5851 07D5                         u5771 06F5                         u5755 06D5  
                       u5691 0666                         u5595 03DF                         u5907 1D8C  
                       u4964 1083                         u4980 1960                         u5860 07EA  
                       u5780 0700                         u4965 1088                         u4981 195F  
                       u5861 07E7                         u5845 077A                         u5781 06FF  
                       u5917 1D99                         u5870 1AC4                         u4966 1089  
                       u4990 0813                         u5790 070E                         u5871 1AC3  
                       u5927 1ACC                         u4975 10A3                         u4991 0812  
                       u5791 070D                         u5937 1AE5                         u5947 1AF1  
                       u5795 070A                         u5957 19B3                         u5967 19BA  
                       u5887 01DF                         u5977 19BE                         u5897 1D59  
                       u5987 1E23                         u5997 1E32                         _TRMT 04C1  
                       _data 00D7            ?_Lcd_Write_String 0073                         _cont 006F  
                       _main 011C                         _temp 00CE                         btemp 007E  
                       start 0000               ??_config_rcsta 0070           ??_Lcd_Write_String 0075  
             ??_config_txsta 0070                 _sprintf$1140 00B0         __size_of_ADC_lectura 004E  
              ___fltol@sign1 005A              __end_of___fladd 153E                        ?_main 0070  
            __end_of___awdiv 1E1F              __end_of___flneg 1963              __end_of___awmod 1CEA  
            __end_of___flmul 1000              __end_of___flsub 1A4E              __end_of___fltol 0882  
                      _ANSEL 0188              __end_of___lldiv 1D50              ___awdiv@divisor 0077  
            __end_of___llmod 011C              __end_of___lwdiv 1BF5              __end_of___lwmod 1B31  
            ___awdiv@counter 0020                        _RCREG 001A                        _SPBRG 0099  
                      _PORTB 0006                        _PORTD 0008                        _PORTE 0009  
    __size_of_Lcd_Set_Cursor 0024                        _TRISB 0086                        _TRISD 0088  
                      _TRISE 0089                        _TXREG 0019              __end_of_dpowers 00A3  
                      _scale 0940              __end_of_isdigit 198E                        _setup 19E3  
                      pclath 000A          __size_of_LCD_Limpia 000D              __end_of_spiInit 19A4  
            __end_of_spiRead 1009                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07EF             __end_of_Lcd_Init 1E89              __initialization 07EF  
               __end_of_main 01E9                       ??_main 00CB                    ??_LCD_CMD 0071  
       __size_of__tdiv_to_l_ 00BD             ___llmod@dividend 0024                       ?_scale 003E  
           ___awdiv@dividend 0079                       ?_setup 0070                       _ANSELH 0189  
           __end_of__baudios 1937                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC5 043D  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of___xxtofl 1F43  
           __end_of_datosLCD 19E3             __end_of__powers_ 0047                       _Puerto 1B31  
                     ___flge 1009                       ___fleq 1C43             __end_of_contador 1AF7  
                  ??___fladd 005A                       ___wmul 1A4E                    ??___awdiv 007B  
                  ??___flneg 0074                    ??___awmod 0074                    ??___flmul 002C  
                  ??___flsub 007E                    ??___fltol 0055                    ??___lldiv 0078  
                  ??___llmod 0028                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _fround 10AB             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075                 ?_temperatura 0020                    ??_isdigit 0070  
         __size_of__Umul8_16 0027         __end_of_config_rcsta 1946             __end_of_spiWrite 0806  
       __end_of_config_txsta 1958                    ??_spiInit 0073                    ??_spiRead 0070  
                  ??_sprintf 00AB              Lcd_Set_Cursor@a 0077              Lcd_Set_Cursor@x 0076  
            Lcd_Set_Cursor@y 0074                   ___flge@ff1 0070                   ___flge@ff2 0074  
               ___xxtofl@arg 007A                 ___xxtofl@exp 0079                 ___xxtofl@val 0070  
                 ___fleq@ff1 0070                   ___fleq@ff2 0074      __end_of__initialization 07FC  
                 ___flneg@f1 0070                   ___fltol@f1 0051               __pcstackCOMMON 0070  
               ??_LCD_Limpia 0074                __end_of_scale 0C9F                __end_of_setup 1A06  
             _Lcd_Set_Cursor 1A06                   __div_to_l_ 0882                    ?_Lcd_Init 0070  
            __div_to_l_@exp1 0025              __div_to_l_@cntr 0024                      ??_scale 0042  
            __div_to_l_@quot 0020                 sprintf@width 00B7                      ??_setup 0074  
               Write_USART@a 0070                   __pbssBANK0 006E                   __pbssBANK1 00CE  
         __end_of_LCD_Limpia 197C                __div_to_l_@f1 0070                __div_to_l_@f2 0074  
          __end_of__Umul8_16 1A9A                   __pmaintext 011C                      ?_Puerto 0070  
                    ?___flge 0070                      ?___fleq 0070                      ?___wmul 0070  
              ??_Write_USART 0070      __size_of_spiReceiveWait 0007                      ?_fround 003E  
  __size_of_Lcd_Write_String 0042       __end_of_Lcd_Set_Cursor 1A2A                    ?__baudios 0070  
                    _LCD_CMD 19A4   __end_of_Write_USART_String 1AC5                    ?___xxtofl 0070  
                  ?_datosLCD 0070                   ??_Lcd_Init 0074                      _SSPSTAT 0094  
                 __stringtab 0003                    ?_contador 0070            __end_of__npowers_ 007B  
                 _scale$1139 004C                ??_ADC_lectura 0020              __size_of_Puerto 003E  
                  ?_spiWrite 0070                      Puerto@x 0070              __size_of___flge 00A2  
            __size_of___fleq 004E                      ___fladd 12B6                      ___awdiv 1DB6  
                    ___flneg 1958                      ___awmod 1C91                      ___flmul 0C9F  
                    ___flsub 1A2A                      ___fltol 0806                      ___lldiv 1CEA  
            __size_of___wmul 0025                      ___llmod 00C6                      ___lwdiv 1BB1  
                    ___lwmod 1AF7        __size_of_config_rcsta 0008                   ??__baudios 0070  
            __size_of_fround 020B              ?_Lcd_Set_Cursor 0074                      __ptext1 1D50  
                    __ptext2 153E        __size_of_config_txsta 000A                      __ptext3 0940  
                    __ptext4 1C91                      __ptext5 1DB6                      __ptext6 197C  
                    __ptext7 10AB                      __ptext8 1AF7                      __ptext9 1BB1  
                ?__div_to_l_ 0070                      _dpowers 007B          __end_of_Write_USART 196F  
                    _isdigit 197C                   ??___xxtofl 0074             ___awmod@dividend 0072  
       __size_of_temperatura 0066                   ??_datosLCD 0071                      _spiInit 198E  
                    _spiRead 1000                      _sprintf 153E                      clrloop0 1947  
       end_of_initialization 07FC                   ??_contador 0071              ___lldiv@divisor 0070  
            ___lldiv@counter 007D                 _config_rcsta 193E                 _config_txsta 194E  
                  _RCSTAbits 0018                   ??_spiWrite 0070                      psplit$0 C0036  
             __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074                ??__tdiv_to_l_ 0078  
        __end_of_ADC_lectura 1C43                    _PORTCbits 0007                  ___fladd@grs 0065  
              ___xxtofl@sign 0078                  spiWrite@dat 0070            Lcd_Write_String@a 0073  
          Lcd_Write_String@i 0078                  ___flmul@grs 0032                    _TXSTAbits 0098  
        __size_of__div_to_l_ 00BE               __end_of_Puerto 1B6F               _spiReceiveWait 1937  
             __end_of___flge 10AB               __end_of___fleq 1C91                  _Write_USART 1963  
             __end_of___wmul 1A73             _Lcd_Write_String 1B6F            pnum$text2_split_1 0036  
             __end_of_fround 12B6          start_initialization 07EF          __end_of__tdiv_to_l_ 2000  
          __size_of_Lcd_Init 006A              ___llmod@divisor 0020              ___llmod@counter 0029  
                _ADC_lectura 1BF5       __end_of_spiReceiveWait 193E                     ??_Puerto 0070  
                   ??___flge 0078                     ??___fleq 0078                     ??___wmul 0074  
                  __Umul8_16 1A73                     ??_fround 0042                sprintf@tmpval 00B9  
                  ___fladd@a 0056                    ___fladd@b 0052                     LCD_CMD@a 0072  
                   ?_LCD_CMD 0070                   fround@prec 0051            __size_of__baudios 0005  
                  ___flmul@a 0028                    ___flmul@b 0024                    ___flsub@a 0066  
                  ___flsub@b 006A                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0            __size_of___xxtofl 00BA            __size_of_datosLCD 0022  
                sprintf@flag 00B5                  sprintf@eexp 00C1                  sprintf@fval 00C3  
         _Write_USART_String 1A9A                  sprintf@prec 00C8            __size_of_contador 0032  
           ___lwdiv@dividend 0078              ?_spiReceiveWait 0070             ??_Lcd_Set_Cursor 0075  
        ?_Write_USART_String 0071                     ?___fladd 0052                     ?___awdiv 0077  
                   ?___flneg 0070                     ?___awmod 0070                     ?___flmul 0024  
                   ?___flsub 0066                     ?___fltol 0051                     ?___lldiv 0070  
                   ?___llmod 0020                    __npowers_ 0047                   ?__Umul8_16 0070  
                   ?___lwdiv 0076                     ?___lwmod 0070            __size_of_spiWrite 0006  
                  __pstrings 0003                  __tdiv_to_l_ 1F43                 ??__div_to_l_ 0078  
                   ?_isdigit 0070                     ?_spiInit 0070                     ?_spiRead 0070  
       ??_Write_USART_String 0073             ___lwdiv@quotient 007B                     ?_sprintf 00A0  
             __size_of_scale 035F               __size_of_setup 0023         spiInit@sTransmitEdge 0072  
                  datosLCD@x 0073               ___wmul@product 0074                    clear_ram0 1946  
         spiInit@sDataSample 0070           __end_of__div_to_l_ 0940                  __stringbase 0012  
              ??_temperatura 0024            ___wmul@multiplier 0070             __size_of_LCD_CMD 001D  
                   _Lcd_Init 1E1F     __end_of_Lcd_Write_String 1BB1                  ??__Umul8_16 0072  
               ?_Write_USART 0070             __size_of___fladd 0288             __size_of___awdiv 0069  
           __size_of___flneg 000B             __size_of___awmod 0059             __size_of___flmul 0361  
           __size_of___flsub 0024             __size_of___fltol 007C             __size_of___lldiv 0066  
           __size_of___llmod 0056             __size_of___lwdiv 0044             __size_of___lwmod 003A  
                   __baudios 1932                  _fround$1137 004D                  _fround$1138 0049  
         __end_of__stringtab 0013                  _isdigit$951 0070                   sprintf@val 00BD  
                   ___xxtofl 1E89             __size_of_isdigit 0012                     _datosLCD 19C1  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 0C9F  
                   __ptext11 1A73                     __ptext20 1958                     __ptext12 1F43  
                   __ptext21 1009                     __ptext13 0882                     __ptext30 1963  
                   __ptext22 1C43                     __ptext14 1A4E                     __ptext31 1B6F  
                   __ptext23 19E3                     __ptext15 00C6                     __ptext40 1000  
                   __ptext32 19A4                     __ptext24 198E                     __ptext16 1CEA  
                   __ptext41 1937                     __ptext33 1A06                     __ptext25 1AC5  
                   __ptext17 0806                     __ptext42 1E89                     __ptext34 1E1F  
                   __ptext26 194E                     __ptext18 1A2A                     __ptext35 196F  
                   __ptext27 193E                     __ptext19 12B6                     __ptext36 19C1  
                   __ptext28 1932                     __ptext37 1B31                     __ptext29 1A9A  
                   __ptext38 1BF5                     __ptext39 0800          __end_of_temperatura 1DB6  
           __size_of_spiInit 0016             __size_of_spiRead 0009                     __powers_ 0013  
                   _contador 1AC5             __size_of_sprintf F2B1                __size_of_main 00CD  
                  pnum$text2 000C                 ?_ADC_lectura 0070                     _spiWrite 0800  
               spiInit@sType 0073                   _LCD_Limpia 196F            spiInit@sClockIdle 0071  
        Write_USART_String@a 0071          Write_USART_String@i 0074                     isdigit@c 0071  
                   scale@scl 0050                    sprintf@ap 00B4             __tdiv_to_l_@exp1 0025  
           __tdiv_to_l_@cntr 0024                    sprintf@sp 00C7             __tdiv_to_l_@quot 0020  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074             ??_spiReceiveWait 0070  
                  stringcode 000D                 ?__tdiv_to_l_ 0070       __Umul8_16@multiplicand 0070  
                _temperatura 1D50                     sprintf@c 00CA                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                   stringdir 000D                     stringtab 0003                ___fladd@signs 0062  
               ___fladd@aexp 0063                 ___fladd@bexp 0064         __Umul8_16@multiplier 0078  
              ?_config_rcsta 0070            __Umul8_16@product 0074                ?_config_txsta 0070  
