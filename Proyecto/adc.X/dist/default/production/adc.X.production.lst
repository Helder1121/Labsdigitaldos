

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 17:07:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  000C                     _PIR1bits	set	12
   366  000B                     _INTCONbits	set	11
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  0019                     _TXREG	set	25
   370  001E                     _ADRESH	set	30
   371  001F                     _ADCON0bits	set	31
   372  0063                     _SSPIF	set	99
   373  0085                     _TRISAbits	set	133
   374  008C                     _PIE1bits	set	140
   375  0086                     _TRISB	set	134
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  0098                     _TXSTAbits	set	152
   379  009F                     _ADCON1	set	159
   380  043B                     _TRISC3	set	1083
   381  043D                     _TRISC5	set	1085
   382  0189                     _ANSELH	set	393
   383  0188                     _ANSEL	set	392
   384                           
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387                           ; #config settings
   388                           
   389  000F                     __initialization:
   390                           
   391                           ; Clear objects allocated to COMMON
   392  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   393  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   394  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   395  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   396  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   397                           
   398                           ; Clear objects allocated to BANK0
   399  0014  1283               	bcf	3,5	;RP0=0, select bank0
   400  0015  1303               	bcf	3,6	;RP1=0, select bank0
   401  0016  01A0               	clrf	__pbssBANK0& (0+127)
   402  0017  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   403  0018  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   404  0019  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   405  001A                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  001A                     __end_of__initialization:
   409  001A  0183               	clrf	3
   410  001B  120A  118A  2906   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0076                     __pbssCOMMON:
   414  0076                     _volt:
   415  0076                     	ds	4
   416  007A                     _ADC:
   417  007A                     	ds	1
   418                           
   419                           	psect	bssBANK0
   420  0020                     __pbssBANK0:
   421  0020                     _volt2:
   422  0020                     	ds	4
   423                           
   424                           	psect	cstackCOMMON
   425  0070                     __pcstackCOMMON:
   426  0070                     ?_setup:
   427  0070                     ?_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_spiWrite:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_isr:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     ??_isr:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	2
   449  0073                     ?_spiInit:
   450  0073                     ?_Canal_ADC:	
   451                           ; 1 bytes @ 0x3
   452                           
   453  0073                     spiInit@sDataSample:	
   454                           ; 2 bytes @ 0x3
   455                           
   456  0073                     Canal_ADC@x:	
   457                           ; 1 bytes @ 0x3
   458                           
   459                           
   460                           ; 2 bytes @ 0x3
   461  0073                     	ds	1
   462  0074                     spiInit@sClockIdle:
   463                           
   464                           ; 1 bytes @ 0x4
   465  0074                     	ds	1
   466  0075                     ??_Canal_ADC:
   467  0075                     spiInit@sTransmitEdge:	
   468                           ; 1 bytes @ 0x5
   469                           
   470                           
   471                           ; 1 bytes @ 0x5
   472  0075                     	ds	1
   473  0076                     ??_setup:
   474  0076                     ??_spiInit:	
   475                           ; 1 bytes @ 0x6
   476                           
   477                           
   478                           	psect	cstackBANK0
   479  0024                     __pcstackBANK0:	
   480                           ; 1 bytes @ 0x6
   481                           
   482  0024                     spiInit@sType:
   483                           
   484                           ; 1 bytes @ 0x0
   485  0024                     	ds	1
   486  0025                     ??_main:
   487                           
   488                           ; 1 bytes @ 0x1
   489  0025                     	ds	1
   490                           
   491                           	psect	maintext
   492  0106                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 57 in file "SPadc.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       1       0       0       0
   515 ;;      Totals:         0       1       0       0       0
   516 ;;Total ram usage:        1 bytes
   517 ;; Hardware stack levels required when called:    4
   518 ;; This function calls:
   519 ;;		_Canal_ADC
   520 ;;		_setup
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  0106                     _main:
   529  0106                     l1346:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;SPadc.c: 58:     setup();
   535  0106  120A  118A  20EC  120A  118A  	fcall	_setup
   536  010B                     l1348:
   537                           
   538                           ;SPadc.c: 63:         ADC = Canal_ADC(8);
   539  010B  3008               	movlw	8
   540  010C  00F3               	movwf	Canal_ADC@x
   541  010D  3000               	movlw	0
   542  010E  00F4               	movwf	Canal_ADC@x+1
   543  010F  120A  118A  201E  120A  118A  	fcall	_Canal_ADC
   544  0114  0873               	movf	?_Canal_ADC,w
   545  0115  1283               	bcf	3,5	;RP0=0, select bank0
   546  0116  1303               	bcf	3,6	;RP1=0, select bank0
   547  0117  00A5               	movwf	??_main
   548  0118  0825               	movf	??_main,w
   549  0119  00FA               	movwf	_ADC
   550  011A  290B               	goto	l1348
   551  011B  120A  118A  280C   	ljmp	start
   552  011E                     __end_of_main:
   553                           
   554                           	psect	text1
   555  00EC                     __ptext1:	
   556 ;; *************** function _setup *****************
   557 ;; Defined at:
   558 ;;		line 69 in file "SPadc.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    3
   579 ;; This function calls:
   580 ;;		_spiInit
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _setup
   588  00EC                     _setup:
   589  00EC                     l1332:	
   590                           ;incstack = 0
   591                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   592                           
   593                           
   594                           ;SPadc.c: 70:     ANSEL = 0;
   595  00EC  1683               	bsf	3,5	;RP0=1, select bank3
   596  00ED  1703               	bsf	3,6	;RP1=1, select bank3
   597  00EE  0188               	clrf	8	;volatile
   598                           
   599                           ;SPadc.c: 71:     ANSELH = 0;
   600  00EF  0189               	clrf	9	;volatile
   601                           
   602                           ;SPadc.c: 72:     TRISB = 0;
   603  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   604  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   605  00F2  0186               	clrf	6	;volatile
   606  00F3                     l1334:
   607                           
   608                           ;SPadc.c: 74:     INTCONbits.GIE = 1;
   609  00F3  178B               	bsf	11,7	;volatile
   610  00F4                     l1336:
   611                           
   612                           ;SPadc.c: 75:     INTCONbits.PEIE = 1;
   613  00F4  170B               	bsf	11,6	;volatile
   614  00F5                     l1338:
   615                           
   616                           ;SPadc.c: 76:     PIR1bits.SSPIF = 0;
   617  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   618  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   619  00F7  118C               	bcf	12,3	;volatile
   620  00F8                     l1340:
   621                           
   622                           ;SPadc.c: 77:     PIE1bits.SSPIE = 1;
   623  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   624  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   625  00FA  158C               	bsf	12,3	;volatile
   626  00FB                     l1342:
   627                           
   628                           ;SPadc.c: 78:     TRISAbits.TRISA5 = 1;
   629  00FB  1685               	bsf	5,5	;volatile
   630  00FC                     l1344:
   631                           
   632                           ;SPadc.c: 80:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
   633  00FC  01F3               	clrf	spiInit@sDataSample
   634  00FD  01F4               	clrf	spiInit@sClockIdle
   635  00FE  01F5               	clrf	spiInit@sTransmitEdge
   636  00FF  3024               	movlw	36
   637  0100  120A  118A  20CE  120A  118A  	fcall	_spiInit
   638  0105                     l142:
   639  0105  0008               	return
   640  0106                     __end_of_setup:
   641                           
   642                           	psect	text2
   643  00CE                     __ptext2:	
   644 ;; *************** function _spiInit *****************
   645 ;; Defined at:
   646 ;;		line 12 in file "SPI.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  sType           1    wreg     enum E1264
   649 ;;  sDataSample     1    3[COMMON] enum E1272
   650 ;;  sClockIdle      1    4[COMMON] enum E1276
   651 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  sType           1    0[BANK0 ] enum E1264
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         3       0       0       0       0
   664 ;;      Locals:         0       1       0       0       0
   665 ;;      Temps:          0       0       0       0       0
   666 ;;      Totals:         3       1       0       0       0
   667 ;;Total ram usage:        4 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    2
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_setup
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _spiInit
   679  00CE                     _spiInit:
   680                           
   681                           ;incstack = 0
   682                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   683                           ;spiInit@sType stored from wreg
   684  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   685  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   686  00D0  00A4               	movwf	spiInit@sType
   687  00D1                     l1322:
   688                           
   689                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle;SPI
      +                          .c: 13: sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 
      +                          = 0;
   690  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   691  00D2  1303               	bcf	3,6	;RP1=0, select bank1
   692  00D3  1287               	bcf	7,5	;volatile
   693                           
   694                           ;SPI.c: 16:     if(sType & 0b00000100)
   695  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   696  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   697  00D6  1D24               	btfss	spiInit@sType,2
   698  00D7  28D9               	goto	u1021
   699  00D8  28DA               	goto	u1020
   700  00D9                     u1021:
   701  00D9  28E0               	goto	l1328
   702  00DA                     u1020:
   703  00DA                     l1324:
   704                           
   705                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   706  00DA  0875               	movf	spiInit@sTransmitEdge,w
   707  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   708  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   709  00DD  0094               	movwf	20	;volatile
   710  00DE                     l1326:
   711                           
   712                           ;SPI.c: 19:         TRISC3 = 1;
   713  00DE  1587               	bsf	7,3	;volatile
   714                           
   715                           ;SPI.c: 20:     }
   716  00DF  28E6               	goto	l81
   717  00E0                     l1328:
   718                           
   719                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   720  00E0  0873               	movf	spiInit@sDataSample,w
   721  00E1  0475               	iorwf	spiInit@sTransmitEdge,w
   722  00E2  1683               	bsf	3,5	;RP0=1, select bank1
   723  00E3  1303               	bcf	3,6	;RP1=0, select bank1
   724  00E4  0094               	movwf	20	;volatile
   725  00E5                     l1330:
   726                           
   727                           ;SPI.c: 24:         TRISC3 = 0;
   728  00E5  1187               	bcf	7,3	;volatile
   729  00E6                     l81:	
   730                           ;SPI.c: 25:     }
   731                           
   732                           
   733                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   734  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   735  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   736  00E8  0824               	movf	spiInit@sType,w
   737  00E9  0474               	iorwf	spiInit@sClockIdle,w
   738  00EA  0094               	movwf	20	;volatile
   739  00EB                     l82:
   740  00EB  0008               	return
   741  00EC                     __end_of_spiInit:
   742                           
   743                           	psect	text3
   744  001E                     __ptext3:	
   745 ;; *************** function _Canal_ADC *****************
   746 ;; Defined at:
   747 ;;		line 19 in file "ADC.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  x               2    3[COMMON] unsigned short 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  2    3[COMMON] unsigned int 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         2       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         2       0       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;;		_ADC_1
   773 ;;		_ADC_2
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _Canal_ADC
   779  001E                     _Canal_ADC:
   780  001E                     l862:	
   781                           ;incstack = 0
   782                           ; Regs used in _Canal_ADC: [wreg-fsr0h+status,2+status,0]
   783                           
   784                           
   785                           ;ADC.c: 20:     switch(x){
   786  001E  2896               	goto	l866
   787  001F                     l23:	
   788                           ;ADC.c: 22:         case 0:
   789                           
   790                           
   791                           ;ADC.c: 23:             ADCON0bits.CHS3 = 0;
   792  001F  1283               	bcf	3,5	;RP0=0, select bank0
   793  0020  1303               	bcf	3,6	;RP1=0, select bank0
   794  0021  129F               	bcf	31,5	;volatile
   795                           
   796                           ;ADC.c: 24:             ADCON0bits.CHS2 = 0;
   797  0022  121F               	bcf	31,4	;volatile
   798                           
   799                           ;ADC.c: 25:             ADCON0bits.CHS1 = 0;
   800  0023  119F               	bcf	31,3	;volatile
   801                           
   802                           ;ADC.c: 26:             ADCON0bits.CHS0 = 0;
   803  0024  111F               	bcf	31,2	;volatile
   804                           
   805                           ;ADC.c: 27:             break;
   806  0025  28CD               	goto	l41
   807  0026                     l25:	
   808                           ;ADC.c: 28:         case 1:
   809                           
   810                           
   811                           ;ADC.c: 29:             ADCON0bits.CHS3 = 0;
   812  0026  1283               	bcf	3,5	;RP0=0, select bank0
   813  0027  1303               	bcf	3,6	;RP1=0, select bank0
   814  0028  129F               	bcf	31,5	;volatile
   815                           
   816                           ;ADC.c: 30:             ADCON0bits.CHS2 = 0;
   817  0029  121F               	bcf	31,4	;volatile
   818                           
   819                           ;ADC.c: 31:             ADCON0bits.CHS1 = 0;
   820  002A  119F               	bcf	31,3	;volatile
   821                           
   822                           ;ADC.c: 32:             ADCON0bits.CHS0 = 1;
   823  002B  151F               	bsf	31,2	;volatile
   824                           
   825                           ;ADC.c: 33:             break;
   826  002C  28CD               	goto	l41
   827  002D                     l26:	
   828                           ;ADC.c: 34:         case 2:
   829                           
   830                           
   831                           ;ADC.c: 35:             ADCON0bits.CHS3 = 0;
   832  002D  1283               	bcf	3,5	;RP0=0, select bank0
   833  002E  1303               	bcf	3,6	;RP1=0, select bank0
   834  002F  129F               	bcf	31,5	;volatile
   835                           
   836                           ;ADC.c: 36:             ADCON0bits.CHS2 = 0;
   837  0030  121F               	bcf	31,4	;volatile
   838                           
   839                           ;ADC.c: 37:             ADCON0bits.CHS1 = 1;
   840  0031  159F               	bsf	31,3	;volatile
   841                           
   842                           ;ADC.c: 38:             ADCON0bits.CHS0 = 0;
   843  0032  111F               	bcf	31,2	;volatile
   844                           
   845                           ;ADC.c: 39:             break;
   846  0033  28CD               	goto	l41
   847  0034                     l27:	
   848                           ;ADC.c: 40:         case 3:
   849                           
   850                           
   851                           ;ADC.c: 41:             ADCON0bits.CHS3 = 0;
   852  0034  1283               	bcf	3,5	;RP0=0, select bank0
   853  0035  1303               	bcf	3,6	;RP1=0, select bank0
   854  0036  129F               	bcf	31,5	;volatile
   855                           
   856                           ;ADC.c: 42:             ADCON0bits.CHS2 = 0;
   857  0037  121F               	bcf	31,4	;volatile
   858                           
   859                           ;ADC.c: 43:             ADCON0bits.CHS1 = 1;
   860  0038  159F               	bsf	31,3	;volatile
   861                           
   862                           ;ADC.c: 44:             ADCON0bits.CHS0 = 1;
   863  0039  151F               	bsf	31,2	;volatile
   864                           
   865                           ;ADC.c: 45:             break;
   866  003A  28CD               	goto	l41
   867  003B                     l28:	
   868                           ;ADC.c: 46:         case 4:
   869                           
   870                           
   871                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
   872  003B  1283               	bcf	3,5	;RP0=0, select bank0
   873  003C  1303               	bcf	3,6	;RP1=0, select bank0
   874  003D  129F               	bcf	31,5	;volatile
   875                           
   876                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
   877  003E  161F               	bsf	31,4	;volatile
   878                           
   879                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
   880  003F  119F               	bcf	31,3	;volatile
   881                           
   882                           ;ADC.c: 50:             ADCON0bits.CHS0 = 0;
   883  0040  111F               	bcf	31,2	;volatile
   884                           
   885                           ;ADC.c: 51:             break;
   886  0041  28CD               	goto	l41
   887  0042                     l29:	
   888                           ;ADC.c: 52:         case 5:
   889                           
   890                           
   891                           ;ADC.c: 53:             ADCON0bits.CHS3 = 0;
   892  0042  1283               	bcf	3,5	;RP0=0, select bank0
   893  0043  1303               	bcf	3,6	;RP1=0, select bank0
   894  0044  129F               	bcf	31,5	;volatile
   895                           
   896                           ;ADC.c: 54:             ADCON0bits.CHS2 = 1;
   897  0045  161F               	bsf	31,4	;volatile
   898                           
   899                           ;ADC.c: 55:             ADCON0bits.CHS1 = 0;
   900  0046  119F               	bcf	31,3	;volatile
   901                           
   902                           ;ADC.c: 56:             ADCON0bits.CHS0 = 1;
   903  0047  151F               	bsf	31,2	;volatile
   904                           
   905                           ;ADC.c: 57:             break;
   906  0048  28CD               	goto	l41
   907  0049                     l30:	
   908                           ;ADC.c: 58:         case 6:
   909                           
   910                           
   911                           ;ADC.c: 59:             ADCON0bits.CHS3 = 0;
   912  0049  1283               	bcf	3,5	;RP0=0, select bank0
   913  004A  1303               	bcf	3,6	;RP1=0, select bank0
   914  004B  129F               	bcf	31,5	;volatile
   915                           
   916                           ;ADC.c: 60:             ADCON0bits.CHS2 = 1;
   917  004C  161F               	bsf	31,4	;volatile
   918                           
   919                           ;ADC.c: 61:             ADCON0bits.CHS1 = 1;
   920  004D  159F               	bsf	31,3	;volatile
   921                           
   922                           ;ADC.c: 62:             ADCON0bits.CHS0 = 0;
   923  004E  111F               	bcf	31,2	;volatile
   924                           
   925                           ;ADC.c: 63:             break;
   926  004F  28CD               	goto	l41
   927  0050                     l31:	
   928                           ;ADC.c: 64:         case 7:
   929                           
   930                           
   931                           ;ADC.c: 65:             ADCON0bits.CHS3 = 0;
   932  0050  1283               	bcf	3,5	;RP0=0, select bank0
   933  0051  1303               	bcf	3,6	;RP1=0, select bank0
   934  0052  129F               	bcf	31,5	;volatile
   935                           
   936                           ;ADC.c: 66:             ADCON0bits.CHS2 = 1;
   937  0053  161F               	bsf	31,4	;volatile
   938                           
   939                           ;ADC.c: 67:             ADCON0bits.CHS1 = 1;
   940  0054  159F               	bsf	31,3	;volatile
   941                           
   942                           ;ADC.c: 68:             ADCON0bits.CHS0 = 1;
   943  0055  151F               	bsf	31,2	;volatile
   944                           
   945                           ;ADC.c: 69:             break;
   946  0056  28CD               	goto	l41
   947  0057                     l32:	
   948                           ;ADC.c: 70:         case 8:
   949                           
   950                           
   951                           ;ADC.c: 71:             ADCON0bits.CHS3 = 1;
   952  0057  1283               	bcf	3,5	;RP0=0, select bank0
   953  0058  1303               	bcf	3,6	;RP1=0, select bank0
   954  0059  169F               	bsf	31,5	;volatile
   955                           
   956                           ;ADC.c: 72:             ADCON0bits.CHS2 = 0;
   957  005A  121F               	bcf	31,4	;volatile
   958                           
   959                           ;ADC.c: 73:             ADCON0bits.CHS1 = 0;
   960  005B  119F               	bcf	31,3	;volatile
   961                           
   962                           ;ADC.c: 74:             ADCON0bits.CHS0 = 0;
   963  005C  111F               	bcf	31,2	;volatile
   964                           
   965                           ;ADC.c: 75:             break;
   966  005D  28CD               	goto	l41
   967  005E                     l33:	
   968                           ;ADC.c: 76:         case 9:
   969                           
   970                           
   971                           ;ADC.c: 77:             ADCON0bits.CHS3 = 1;
   972  005E  1283               	bcf	3,5	;RP0=0, select bank0
   973  005F  1303               	bcf	3,6	;RP1=0, select bank0
   974  0060  169F               	bsf	31,5	;volatile
   975                           
   976                           ;ADC.c: 78:             ADCON0bits.CHS2 = 0;
   977  0061  121F               	bcf	31,4	;volatile
   978                           
   979                           ;ADC.c: 79:             ADCON0bits.CHS1 = 0;
   980  0062  119F               	bcf	31,3	;volatile
   981                           
   982                           ;ADC.c: 80:             ADCON0bits.CHS0 = 1;
   983  0063  151F               	bsf	31,2	;volatile
   984                           
   985                           ;ADC.c: 81:             break;
   986  0064  28CD               	goto	l41
   987  0065                     l34:	
   988                           ;ADC.c: 82:         case 10:
   989                           
   990                           
   991                           ;ADC.c: 83:             ADCON0bits.CHS3 = 1;
   992  0065  1283               	bcf	3,5	;RP0=0, select bank0
   993  0066  1303               	bcf	3,6	;RP1=0, select bank0
   994  0067  169F               	bsf	31,5	;volatile
   995                           
   996                           ;ADC.c: 84:             ADCON0bits.CHS2 = 0;
   997  0068  121F               	bcf	31,4	;volatile
   998                           
   999                           ;ADC.c: 85:             ADCON0bits.CHS1 = 1;
  1000  0069  159F               	bsf	31,3	;volatile
  1001                           
  1002                           ;ADC.c: 86:             ADCON0bits.CHS0 = 0;
  1003  006A  111F               	bcf	31,2	;volatile
  1004                           
  1005                           ;ADC.c: 87:             break;
  1006  006B  28CD               	goto	l41
  1007  006C                     l35:	
  1008                           ;ADC.c: 88:         case 11:
  1009                           
  1010                           
  1011                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1012  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1013  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1014  006E  169F               	bsf	31,5	;volatile
  1015                           
  1016                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1017  006F  121F               	bcf	31,4	;volatile
  1018                           
  1019                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1020  0070  159F               	bsf	31,3	;volatile
  1021                           
  1022                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1023  0071  151F               	bsf	31,2	;volatile
  1024                           
  1025                           ;ADC.c: 93:             break;
  1026  0072  28CD               	goto	l41
  1027  0073                     l36:	
  1028                           ;ADC.c: 94:         case 12:
  1029                           
  1030                           
  1031                           ;ADC.c: 95:             ADCON0bits.CHS3 = 1;
  1032  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0075  169F               	bsf	31,5	;volatile
  1035                           
  1036                           ;ADC.c: 96:             ADCON0bits.CHS2 = 1;
  1037  0076  161F               	bsf	31,4	;volatile
  1038                           
  1039                           ;ADC.c: 97:             ADCON0bits.CHS1 = 0;
  1040  0077  119F               	bcf	31,3	;volatile
  1041                           
  1042                           ;ADC.c: 98:             ADCON0bits.CHS0 = 0;
  1043  0078  111F               	bcf	31,2	;volatile
  1044                           
  1045                           ;ADC.c: 99:             break;
  1046  0079  28CD               	goto	l41
  1047  007A                     l37:	
  1048                           ;ADC.c: 100:         case 13:
  1049                           
  1050                           
  1051                           ;ADC.c: 101:             ADCON0bits.CHS3 = 1;
  1052  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1053  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1054  007C  169F               	bsf	31,5	;volatile
  1055                           
  1056                           ;ADC.c: 102:             ADCON0bits.CHS2 = 1;
  1057  007D  161F               	bsf	31,4	;volatile
  1058                           
  1059                           ;ADC.c: 103:             ADCON0bits.CHS1 = 0;
  1060  007E  119F               	bcf	31,3	;volatile
  1061                           
  1062                           ;ADC.c: 104:             ADCON0bits.CHS0 = 1;
  1063  007F  151F               	bsf	31,2	;volatile
  1064                           
  1065                           ;ADC.c: 105:             break;
  1066  0080  28CD               	goto	l41
  1067  0081                     l38:	
  1068                           ;ADC.c: 106:         case 14:
  1069                           
  1070                           
  1071                           ;ADC.c: 107:             ADCON0bits.CHS3 = 1;
  1072  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0083  169F               	bsf	31,5	;volatile
  1075                           
  1076                           ;ADC.c: 108:             ADCON0bits.CHS2 = 1;
  1077  0084  161F               	bsf	31,4	;volatile
  1078                           
  1079                           ;ADC.c: 109:             ADCON0bits.CHS1 = 1;
  1080  0085  159F               	bsf	31,3	;volatile
  1081                           
  1082                           ;ADC.c: 110:             ADCON0bits.CHS0 = 0;
  1083  0086  111F               	bcf	31,2	;volatile
  1084                           
  1085                           ;ADC.c: 111:             break;
  1086  0087  28CD               	goto	l41
  1087  0088                     l39:	
  1088                           ;ADC.c: 112:         case 15:
  1089                           
  1090                           
  1091                           ;ADC.c: 113:             ADCON0bits.CHS3 = 1;
  1092  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1094  008A  169F               	bsf	31,5	;volatile
  1095                           
  1096                           ;ADC.c: 114:             ADCON0bits.CHS2 = 1;
  1097  008B  161F               	bsf	31,4	;volatile
  1098                           
  1099                           ;ADC.c: 115:             ADCON0bits.CHS1 = 1;
  1100  008C  159F               	bsf	31,3	;volatile
  1101                           
  1102                           ;ADC.c: 116:             ADCON0bits.CHS0 = 1;
  1103  008D  151F               	bsf	31,2	;volatile
  1104                           
  1105                           ;ADC.c: 117:             break;
  1106  008E  28CD               	goto	l41
  1107  008F                     l40:	
  1108                           ;ADC.c: 118:         default:
  1109                           
  1110                           
  1111                           ;ADC.c: 119:             ADCON0bits.CHS3 = 0;
  1112  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0091  129F               	bcf	31,5	;volatile
  1115                           
  1116                           ;ADC.c: 120:             ADCON0bits.CHS2 = 0;
  1117  0092  121F               	bcf	31,4	;volatile
  1118                           
  1119                           ;ADC.c: 121:             ADCON0bits.CHS1 = 0;
  1120  0093  119F               	bcf	31,3	;volatile
  1121                           
  1122                           ;ADC.c: 122:             ADCON0bits.CHS0 = 0;
  1123  0094  111F               	bcf	31,2	;volatile
  1124                           
  1125                           ;ADC.c: 123:             break;
  1126  0095  28CD               	goto	l41
  1127  0096                     l866:
  1128                           
  1129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 1, Range of values is 0 to 0
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte            4     3 (average)
  1135                           ; direct_byte           11     8 (fixed)
  1136                           ; jumptable            260     6 (fixed)
  1137                           ;	Chosen strategy is simple_byte
  1138  0096  0874               	movf	Canal_ADC@x+1,w
  1139  0097  3A00               	xorlw	0	; case 0
  1140  0098  1903               	skipnz
  1141  0099  289B               	goto	l1370
  1142  009A  288F               	goto	l40
  1143  009B                     l1370:
  1144                           
  1145                           ; Switch size 1, requested type "simple"
  1146                           ; Number of cases is 16, Range of values is 0 to 15
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte           49    25 (average)
  1150                           ; direct_byte           56     8 (fixed)
  1151                           ; jumptable            260     6 (fixed)
  1152                           ;	Chosen strategy is simple_byte
  1153  009B  0873               	movf	Canal_ADC@x,w
  1154  009C  3A00               	xorlw	0	; case 0
  1155  009D  1903               	skipnz
  1156  009E  281F               	goto	l23
  1157  009F  3A01               	xorlw	1	; case 1
  1158  00A0  1903               	skipnz
  1159  00A1  2826               	goto	l25
  1160  00A2  3A03               	xorlw	3	; case 2
  1161  00A3  1903               	skipnz
  1162  00A4  282D               	goto	l26
  1163  00A5  3A01               	xorlw	1	; case 3
  1164  00A6  1903               	skipnz
  1165  00A7  2834               	goto	l27
  1166  00A8  3A07               	xorlw	7	; case 4
  1167  00A9  1903               	skipnz
  1168  00AA  283B               	goto	l28
  1169  00AB  3A01               	xorlw	1	; case 5
  1170  00AC  1903               	skipnz
  1171  00AD  2842               	goto	l29
  1172  00AE  3A03               	xorlw	3	; case 6
  1173  00AF  1903               	skipnz
  1174  00B0  2849               	goto	l30
  1175  00B1  3A01               	xorlw	1	; case 7
  1176  00B2  1903               	skipnz
  1177  00B3  2850               	goto	l31
  1178  00B4  3A0F               	xorlw	15	; case 8
  1179  00B5  1903               	skipnz
  1180  00B6  2857               	goto	l32
  1181  00B7  3A01               	xorlw	1	; case 9
  1182  00B8  1903               	skipnz
  1183  00B9  285E               	goto	l33
  1184  00BA  3A03               	xorlw	3	; case 10
  1185  00BB  1903               	skipnz
  1186  00BC  2865               	goto	l34
  1187  00BD  3A01               	xorlw	1	; case 11
  1188  00BE  1903               	skipnz
  1189  00BF  286C               	goto	l35
  1190  00C0  3A07               	xorlw	7	; case 12
  1191  00C1  1903               	skipnz
  1192  00C2  2873               	goto	l36
  1193  00C3  3A01               	xorlw	1	; case 13
  1194  00C4  1903               	skipnz
  1195  00C5  287A               	goto	l37
  1196  00C6  3A03               	xorlw	3	; case 14
  1197  00C7  1903               	skipnz
  1198  00C8  2881               	goto	l38
  1199  00C9  3A01               	xorlw	1	; case 15
  1200  00CA  1903               	skipnz
  1201  00CB  2888               	goto	l39
  1202  00CC  288F               	goto	l40
  1203  00CD                     l41:
  1204  00CD  0008               	return
  1205  00CE                     __end_of_Canal_ADC:
  1206                           
  1207                           	psect	text4
  1208  011E                     __ptext4:	
  1209 ;; *************** function _isr *****************
  1210 ;; Defined at:
  1211 ;;		line 48 in file "SPadc.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, pclath, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          2       0       0       0       0
  1228 ;;      Totals:         2       0       0       0       0
  1229 ;;Total ram usage:        2 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    1
  1232 ;; This function calls:
  1233 ;;		_spiWrite
  1234 ;; This function is called by:
  1235 ;;		Interrupt level 1
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _isr
  1241  011E                     _isr:
  1242  011E                     i1l822:
  1243                           
  1244                           ;SPadc.c: 49:     if(SSPIF == 1){
  1245  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1246  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0120  1D8C               	btfss	12,3	;volatile
  1248  0121  2923               	goto	u5_21
  1249  0122  2924               	goto	u5_20
  1250  0123                     u5_21:
  1251  0123  292D               	goto	i1l131
  1252  0124                     u5_20:
  1253  0124                     i1l824:
  1254                           
  1255                           ;SPadc.c: 50:         spiWrite(ADC);
  1256  0124  087A               	movf	_ADC,w
  1257  0125  120A  118A  2134  120A  118A  	fcall	_spiWrite
  1258  012A                     i1l826:
  1259                           
  1260                           ;SPadc.c: 51:         SSPIF = 0;
  1261  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1262  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1263  012C  118C               	bcf	12,3	;volatile
  1264  012D                     i1l131:
  1265  012D  0872               	movf	??_isr+1,w
  1266  012E  008A               	movwf	10
  1267  012F  0E71               	swapf	??_isr,w
  1268  0130  0083               	movwf	3
  1269  0131  0EFE               	swapf	btemp,f
  1270  0132  0E7E               	swapf	btemp,w
  1271  0133  0009               	retfie
  1272  0134                     __end_of_isr:
  1273                           
  1274                           	psect	intentry
  1275  0004                     __pintentry:	
  1276                           ;incstack = 0
  1277                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1278                           
  1279  0004                     interrupt_function:
  1280  007E                     saved_w	set	btemp
  1281  0004  00FE               	movwf	btemp
  1282  0005  0E03               	swapf	3,w
  1283  0006  00F1               	movwf	??_isr
  1284  0007  080A               	movf	10,w
  1285  0008  00F2               	movwf	??_isr+1
  1286  0009  120A  118A  291E   	ljmp	_isr
  1287                           
  1288                           	psect	text5
  1289  0134                     __ptext5:	
  1290 ;; *************** function _spiWrite *****************
  1291 ;; Defined at:
  1292 ;;		line 35 in file "SPI.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  dat             1    wreg     unsigned char 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  dat             1    0[COMMON] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         1       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0
  1309 ;;      Totals:         1       0       0       0       0
  1310 ;;Total ram usage:        1 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_isr
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _spiWrite
  1321  0134                     _spiWrite:
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _spiWrite: [wreg]
  1325                           ;spiWrite@dat stored from wreg
  1326  0134  00F0               	movwf	spiWrite@dat
  1327  0135                     i1l756:
  1328                           
  1329                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1330  0135  0870               	movf	spiWrite@dat,w
  1331  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0138  0093               	movwf	19	;volatile
  1334  0139                     i1l91:
  1335  0139  0008               	return
  1336  013A                     __end_of_spiWrite:
  1337  007E                     btemp	set	126	;btemp
  1338  007E                     wtemp0	set	126
  1339                           
  1340                           	psect	config
  1341                           
  1342                           ;Config register CONFIG1 @ 0x2007
  1343                           ;	Oscillator Selection bits
  1344                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1345                           ;	Watchdog Timer Enable bit
  1346                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1347                           ;	Power-up Timer Enable bit
  1348                           ;	PWRTE = OFF, PWRT disabled
  1349                           ;	RE3/MCLR pin function select bit
  1350                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1351                           ;	Code Protection bit
  1352                           ;	CP = OFF, Program memory code protection is disabled
  1353                           ;	Data Code Protection bit
  1354                           ;	CPD = OFF, Data memory code protection is disabled
  1355                           ;	Brown Out Reset Selection bits
  1356                           ;	BOREN = OFF, BOR disabled
  1357                           ;	Internal External Switchover bit
  1358                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1359                           ;	Fail-Safe Clock Monitor Enabled bit
  1360                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1361                           ;	Low Voltage Programming Enable bit
  1362                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1363                           ;	In-Circuit Debugger Mode bit
  1364                           ;	DEBUG = 0x1, unprogrammed default
  1365  2007                     	org	8199
  1366  2007  20D1               	dw	8401
  1367                           
  1368                           ;Config register CONFIG2 @ 0x2008
  1369                           ;	Brown-out Reset Selection bit
  1370                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1371                           ;	Flash Program Memory Self Write Enable bits
  1372                           ;	WRT = OFF, Write protection off
  1373  2008                     	org	8200
  1374  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      2       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     706
                                              1 BANK0      1     1      0
                          _Canal_ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              3 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Canal_ADC                                            2     0      2     250
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Canal_ADC
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 17:07:55 2021

            _SSPSTATbits 0094                       l30 0049                       l31 0050  
                     l23 001F                       l40 008F                       l32 0057  
                     l33 005E                       l25 0026                       l41 00CD  
                     l34 0065                       l26 002D                       l35 006C  
                     l27 0034                       l36 0073                       l28 003B  
                     l37 007A                       l29 0042                       l38 0081  
                     l39 0088                       l81 00E6                       l82 00EB  
                    l142 0105                      _ADC 007A                      l862 001E  
                    l866 0096                      _isr 011E                     l1330 00E5  
                   l1322 00D1                     l1324 00DA                     l1340 00F8  
                   l1332 00EC                     l1326 00DE                     l1342 00FB  
                   l1334 00F3                     l1328 00E0                     l1344 00FC  
                   l1336 00F4                     l1370 009B                     l1338 00F5  
                   l1346 0106                     l1348 010B                     ?_isr 0070  
                   u1020 00DA                     u1021 00D9                     i1l91 0139  
                   u5_20 0124                     u5_21 0123                     _main 0106  
                   btemp 007E                     _volt 0076                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l131 012D                    i1l822 011E                    i1l824 0124  
                  i1l826 012A                    i1l756 0135                    _TRISB 0086  
                  _SSPIF 0063                    _TXREG 0019                    _setup 00EC  
                  _volt2 0020                    pclath 000A          __end_of_spiInit 00EC  
                  status 0003                    wtemp0 007E       __size_of_Canal_ADC 00B0  
        __initialization 000F             __end_of_main 011E                   ??_main 0025  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
      __end_of_Canal_ADC 00CE         __end_of_spiWrite 013A                ??_spiInit 0076  
__end_of__initialization 001A           __pcstackCOMMON 0070            __end_of_setup 0106  
                ??_setup 0076               __pbssBANK0 0020               __pmaintext 0106  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00EC                  __ptext2 00CE                  __ptext3 001E  
                __ptext4 011E                  __ptext5 0134             __size_of_isr 0016  
                _spiInit 00CE     end_of_initialization 001A               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070                _Canal_ADC 001E  
              _TXSTAbits 0098      start_initialization 000F              __end_of_isr 0134  
             ?_Canal_ADC 0073              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0024        __size_of_spiWrite 0006                 ?_spiInit 0073  
         __size_of_setup 001A              ??_Canal_ADC 0075     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C               _ADCON0bits 001F               Canal_ADC@x 0073  
       __size_of_spiInit 001E            __size_of_main 0018                 _spiWrite 0134  
           spiInit@sType 0024        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000  
