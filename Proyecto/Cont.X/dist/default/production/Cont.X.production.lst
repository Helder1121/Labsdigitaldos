

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 14:10:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  000C                     _PIR1bits	set	12
   287  000B                     _INTCONbits	set	11
   288  0006                     _PORTB	set	6
   289  0008                     _PORTD	set	8
   290  0006                     _PORTBbits	set	6
   291  0063                     _SSPIF	set	99
   292  0094                     _SSPSTATbits	set	148
   293  0094                     _SSPSTAT	set	148
   294  0085                     _TRISAbits	set	133
   295  008C                     _PIE1bits	set	140
   296  0088                     _TRISD	set	136
   297  0086                     _TRISB	set	134
   298  043B                     _TRISC3	set	1083
   299  043D                     _TRISC5	set	1085
   300  0189                     _ANSELH	set	393
   301  0188                     _ANSEL	set	392
   302                           
   303                           	psect	cinit
   304  000F                     start_initialization:	
   305                           ; #config settings
   306                           
   307  000F                     __initialization:
   308                           
   309                           ; Clear objects allocated to COMMON
   310  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   311  0010                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  0010                     __end_of__initialization:
   315  0010  0183               	clrf	3
   316  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMMON
   319  007A                     __pbssCOMMON:
   320  007A                     _conta:
   321  007A                     	ds	1
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:
   325  0070                     ?_spiWrite:
   326  0070                     ??_spiWrite:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_setup:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_isr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     spiWrite@dat:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	1
   344  0071                     ??_isr:
   345                           
   346                           ; 1 bytes @ 0x1
   347  0071                     	ds	2
   348  0073                     ?_spiInit:
   349  0073                     spiInit@sDataSample:	
   350                           ; 1 bytes @ 0x3
   351                           
   352                           
   353                           ; 1 bytes @ 0x3
   354  0073                     	ds	1
   355  0074                     spiInit@sClockIdle:
   356                           
   357                           ; 1 bytes @ 0x4
   358  0074                     	ds	1
   359  0075                     spiInit@sTransmitEdge:
   360                           
   361                           ; 1 bytes @ 0x5
   362  0075                     	ds	1
   363  0076                     ??_spiInit:
   364  0076                     spiInit@sType:	
   365                           ; 1 bytes @ 0x6
   366                           
   367                           
   368                           ; 1 bytes @ 0x6
   369  0076                     	ds	1
   370  0077                     ??_setup:
   371  0077                     ??_main:	
   372                           ; 1 bytes @ 0x7
   373                           
   374                           
   375                           ; 1 bytes @ 0x7
   376  0077                     	ds	3
   377                           
   378                           	psect	maintext
   379  0014                     __pmaintext:	
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 57 in file "contador.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          3       0       0       0       0
   402 ;;      Totals:         3       0       0       0       0
   403 ;;Total ram usage:        3 bytes
   404 ;; Hardware stack levels required when called:    4
   405 ;; This function calls:
   406 ;;		_setup
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0014                     _main:
   415  0014                     l789:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   418                           
   419                           
   420                           ;contador.c: 58:     setup();
   421  0014  120A  118A  205B  120A  118A  	fcall	_setup
   422  0019                     l791:
   423                           
   424                           ;contador.c: 63:         if (PORTBbits.RB0 == 0){
   425  0019  1283               	bcf	3,5	;RP0=0, select bank0
   426  001A  1303               	bcf	3,6	;RP1=0, select bank0
   427  001B  1806               	btfsc	6,0	;volatile
   428  001C  281E               	goto	u91
   429  001D  281F               	goto	u90
   430  001E                     u91:
   431  001E  2839               	goto	l801
   432  001F                     u90:
   433  001F                     l793:
   434                           
   435                           ;contador.c: 64:             _delay((unsigned long)((100)*(8000000/4000.0)));
   436  001F  3002               	movlw	2
   437  0020  00F9               	movwf	??_main+2
   438  0021  3004               	movlw	4
   439  0022  00F8               	movwf	??_main+1
   440  0023  30BA               	movlw	186
   441  0024  00F7               	movwf	??_main
   442  0025                     u137:
   443  0025  0BF7               	decfsz	??_main,f
   444  0026  2825               	goto	u137
   445  0027  0BF8               	decfsz	??_main+1,f
   446  0028  2825               	goto	u137
   447  0029  0BF9               	decfsz	??_main+2,f
   448  002A  2825               	goto	u137
   449  002B  0000               	nop
   450  002C                     l795:
   451                           
   452                           ;contador.c: 65:             if (PORTBbits.RB0 == 1){
   453  002C  1283               	bcf	3,5	;RP0=0, select bank0
   454  002D  1303               	bcf	3,6	;RP1=0, select bank0
   455  002E  1C06               	btfss	6,0	;volatile
   456  002F  2831               	goto	u101
   457  0030  2832               	goto	u100
   458  0031                     u101:
   459  0031  2839               	goto	l801
   460  0032                     u100:
   461  0032                     l797:
   462                           
   463                           ;contador.c: 66:                 conta = conta + 1;
   464  0032  087A               	movf	_conta,w
   465  0033  3E01               	addlw	1
   466  0034  00F7               	movwf	??_main
   467  0035  0877               	movf	??_main,w
   468  0036  00FA               	movwf	_conta
   469  0037                     l799:
   470                           
   471                           ;contador.c: 67:                 PORTD = conta;
   472  0037  087A               	movf	_conta,w
   473  0038  0088               	movwf	8	;volatile
   474  0039                     l801:
   475                           
   476                           ;contador.c: 70:         if (PORTBbits.RB1 == 0){
   477  0039  1886               	btfsc	6,1	;volatile
   478  003A  283C               	goto	u111
   479  003B  283D               	goto	u110
   480  003C                     u111:
   481  003C  2819               	goto	l791
   482  003D                     u110:
   483  003D                     l803:
   484                           
   485                           ;contador.c: 71:             _delay((unsigned long)((100)*(8000000/4000.0)));
   486  003D  3002               	movlw	2
   487  003E  00F9               	movwf	??_main+2
   488  003F  3004               	movlw	4
   489  0040  00F8               	movwf	??_main+1
   490  0041  30BA               	movlw	186
   491  0042  00F7               	movwf	??_main
   492  0043                     u147:
   493  0043  0BF7               	decfsz	??_main,f
   494  0044  2843               	goto	u147
   495  0045  0BF8               	decfsz	??_main+1,f
   496  0046  2843               	goto	u147
   497  0047  0BF9               	decfsz	??_main+2,f
   498  0048  2843               	goto	u147
   499  0049  0000               	nop
   500  004A                     l805:
   501                           
   502                           ;contador.c: 72:             if (PORTBbits.RB1 == 1){
   503  004A  1283               	bcf	3,5	;RP0=0, select bank0
   504  004B  1303               	bcf	3,6	;RP1=0, select bank0
   505  004C  1C86               	btfss	6,1	;volatile
   506  004D  284F               	goto	u121
   507  004E  2850               	goto	u120
   508  004F                     u121:
   509  004F  2819               	goto	l791
   510  0050                     u120:
   511  0050                     l807:
   512                           
   513                           ;contador.c: 73:                 conta = conta - 1;
   514  0050  087A               	movf	_conta,w
   515  0051  3EFF               	addlw	255
   516  0052  00F7               	movwf	??_main
   517  0053  0877               	movf	??_main,w
   518  0054  00FA               	movwf	_conta
   519  0055                     l809:
   520                           
   521                           ;contador.c: 74:                 PORTD = conta;
   522  0055  087A               	movf	_conta,w
   523  0056  0088               	movwf	8	;volatile
   524  0057  2819               	goto	l791
   525  0058  120A  118A  280C   	ljmp	start
   526  005B                     __end_of_main:
   527                           
   528                           	psect	text1
   529  005B                     __ptext1:	
   530 ;; *************** function _setup *****************
   531 ;; Defined at:
   532 ;;		line 82 in file "contador.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    3
   553 ;; This function calls:
   554 ;;		_spiInit
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _setup
   562  005B                     _setup:
   563  005B                     l767:	
   564                           ;incstack = 0
   565                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   566                           
   567                           
   568                           ;contador.c: 83:     ANSEL = 0;
   569  005B  1683               	bsf	3,5	;RP0=1, select bank3
   570  005C  1703               	bsf	3,6	;RP1=1, select bank3
   571  005D  0188               	clrf	8	;volatile
   572                           
   573                           ;contador.c: 84:     ANSELH = 0;
   574  005E  0189               	clrf	9	;volatile
   575  005F                     l769:
   576                           
   577                           ;contador.c: 86:     TRISB = 3;
   578  005F  3003               	movlw	3
   579  0060  1683               	bsf	3,5	;RP0=1, select bank1
   580  0061  1303               	bcf	3,6	;RP1=0, select bank1
   581  0062  0086               	movwf	6	;volatile
   582  0063                     l771:
   583                           
   584                           ;contador.c: 87:     TRISD = 0;
   585  0063  0188               	clrf	8	;volatile
   586  0064                     l773:
   587                           
   588                           ;contador.c: 89:     PORTB = 0;
   589  0064  1283               	bcf	3,5	;RP0=0, select bank0
   590  0065  1303               	bcf	3,6	;RP1=0, select bank0
   591  0066  0186               	clrf	6	;volatile
   592  0067                     l775:
   593                           
   594                           ;contador.c: 90:     PORTD = 0;
   595  0067  0188               	clrf	8	;volatile
   596  0068                     l777:
   597                           
   598                           ;contador.c: 92:     INTCONbits.GIE = 1;
   599  0068  178B               	bsf	11,7	;volatile
   600  0069                     l779:
   601                           
   602                           ;contador.c: 93:     INTCONbits.PEIE = 1;
   603  0069  170B               	bsf	11,6	;volatile
   604  006A                     l781:
   605                           
   606                           ;contador.c: 94:     PIR1bits.SSPIF = 0;
   607  006A  118C               	bcf	12,3	;volatile
   608  006B                     l783:
   609                           
   610                           ;contador.c: 95:     PIE1bits.SSPIE = 1;
   611  006B  1683               	bsf	3,5	;RP0=1, select bank1
   612  006C  1303               	bcf	3,6	;RP1=0, select bank1
   613  006D  158C               	bsf	12,3	;volatile
   614  006E                     l785:
   615                           
   616                           ;contador.c: 96:     TRISAbits.TRISA5 = 1;
   617  006E  1685               	bsf	5,5	;volatile
   618  006F                     l787:
   619                           
   620                           ;contador.c: 98:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          ,
   621  006F  01F3               	clrf	spiInit@sDataSample
   622  0070  01F4               	clrf	spiInit@sClockIdle
   623  0071  01F5               	clrf	spiInit@sTransmitEdge
   624  0072  3024               	movlw	36
   625  0073  120A  118A  2079  120A  118A  	fcall	_spiInit
   626  0078                     l55:
   627  0078  0008               	return
   628  0079                     __end_of_setup:
   629                           
   630                           	psect	text2
   631  0079                     __ptext2:	
   632 ;; *************** function _spiInit *****************
   633 ;; Defined at:
   634 ;;		line 12 in file "SPI.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  sType           1    wreg     enum E1264
   637 ;;  sDataSample     1    3[COMMON] enum E1272
   638 ;;  sClockIdle      1    4[COMMON] enum E1276
   639 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  sType           1    6[COMMON] enum E1264
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         3       0       0       0       0
   652 ;;      Locals:         1       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         4       0       0       0       0
   655 ;;Total ram usage:        4 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    2
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_setup
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _spiInit
   667  0079                     _spiInit:
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   671                           ;spiInit@sType stored from wreg
   672  0079  00F6               	movwf	spiInit@sType
   673  007A                     l757:
   674                           
   675                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle;SPI
      +                          .c: 13: sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 
      +                          = 0;
   676  007A  1683               	bsf	3,5	;RP0=1, select bank1
   677  007B  1303               	bcf	3,6	;RP1=0, select bank1
   678  007C  1287               	bcf	7,5	;volatile
   679                           
   680                           ;SPI.c: 16:     if(sType & 0b00000100)
   681  007D  1D76               	btfss	spiInit@sType,2
   682  007E  2880               	goto	u81
   683  007F  2881               	goto	u80
   684  0080                     u81:
   685  0080  2885               	goto	l763
   686  0081                     u80:
   687  0081                     l759:
   688                           
   689                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   690  0081  0875               	movf	spiInit@sTransmitEdge,w
   691  0082  0094               	movwf	20	;volatile
   692  0083                     l761:
   693                           
   694                           ;SPI.c: 19:         TRISC3 = 1;
   695  0083  1587               	bsf	7,3	;volatile
   696                           
   697                           ;SPI.c: 20:     }
   698  0084  2889               	goto	l71
   699  0085                     l763:
   700                           
   701                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   702  0085  0873               	movf	spiInit@sDataSample,w
   703  0086  0475               	iorwf	spiInit@sTransmitEdge,w
   704  0087  0094               	movwf	20	;volatile
   705  0088                     l765:
   706                           
   707                           ;SPI.c: 24:         TRISC3 = 0;
   708  0088  1187               	bcf	7,3	;volatile
   709  0089                     l71:	
   710                           ;SPI.c: 25:     }
   711                           
   712                           
   713                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   714  0089  0876               	movf	spiInit@sType,w
   715  008A  0474               	iorwf	spiInit@sClockIdle,w
   716  008B  1283               	bcf	3,5	;RP0=0, select bank0
   717  008C  1303               	bcf	3,6	;RP1=0, select bank0
   718  008D  0094               	movwf	20	;volatile
   719  008E                     l72:
   720  008E  0008               	return
   721  008F                     __end_of_spiInit:
   722                           
   723                           	psect	text3
   724  008F                     __ptext3:	
   725 ;; *************** function _isr *****************
   726 ;; Defined at:
   727 ;;		line 48 in file "contador.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0
   744 ;;      Totals:         2       0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    1
   748 ;; This function calls:
   749 ;;		_spiWrite
   750 ;; This function is called by:
   751 ;;		Interrupt level 1
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _isr
   757  008F                     _isr:
   758  008F                     i1l717:
   759                           
   760                           ;contador.c: 49:     if(SSPIF == 1){
   761  008F  1283               	bcf	3,5	;RP0=0, select bank0
   762  0090  1303               	bcf	3,6	;RP1=0, select bank0
   763  0091  1D8C               	btfss	12,3	;volatile
   764  0092  2894               	goto	u3_21
   765  0093  2895               	goto	u3_20
   766  0094                     u3_21:
   767  0094  289E               	goto	i1l40
   768  0095                     u3_20:
   769  0095                     i1l719:
   770                           
   771                           ;contador.c: 50:         spiWrite(conta);
   772  0095  087A               	movf	_conta,w
   773  0096  120A  118A  20A5  120A  118A  	fcall	_spiWrite
   774  009B                     i1l721:
   775                           
   776                           ;contador.c: 51:         SSPIF = 0;
   777  009B  1283               	bcf	3,5	;RP0=0, select bank0
   778  009C  1303               	bcf	3,6	;RP1=0, select bank0
   779  009D  118C               	bcf	12,3	;volatile
   780  009E                     i1l40:
   781  009E  0872               	movf	??_isr+1,w
   782  009F  008A               	movwf	10
   783  00A0  0E71               	swapf	??_isr,w
   784  00A1  0083               	movwf	3
   785  00A2  0EFE               	swapf	btemp,f
   786  00A3  0E7E               	swapf	btemp,w
   787  00A4  0009               	retfie
   788  00A5                     __end_of_isr:
   789                           
   790                           	psect	intentry
   791  0004                     __pintentry:	
   792                           ;incstack = 0
   793                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   794                           
   795  0004                     interrupt_function:
   796  007E                     saved_w	set	btemp
   797  0004  00FE               	movwf	btemp
   798  0005  0E03               	swapf	3,w
   799  0006  00F1               	movwf	??_isr
   800  0007  080A               	movf	10,w
   801  0008  00F2               	movwf	??_isr+1
   802  0009  120A  118A  288F   	ljmp	_isr
   803                           
   804                           	psect	text4
   805  00A5                     __ptext4:	
   806 ;; *************** function _spiWrite *****************
   807 ;; Defined at:
   808 ;;		line 35 in file "SPI.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  dat             1    wreg     unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  dat             1    0[COMMON] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         1       0       0       0       0
   826 ;;Total ram usage:        1 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_isr
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _spiWrite
   837  00A5                     _spiWrite:
   838                           
   839                           ;incstack = 0
   840                           ; Regs used in _spiWrite: [wreg]
   841                           ;spiWrite@dat stored from wreg
   842  00A5  00F0               	movwf	spiWrite@dat
   843  00A6                     i1l691:
   844                           
   845                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   846  00A6  0870               	movf	spiWrite@dat,w
   847  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   848  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   849  00A9  0093               	movwf	19	;volatile
   850  00AA                     i1l81:
   851  00AA  0008               	return
   852  00AB                     __end_of_spiWrite:
   853  007E                     btemp	set	126	;btemp
   854  007E                     wtemp0	set	126
   855                           
   856                           	psect	config
   857                           
   858                           ;Config register CONFIG1 @ 0x2007
   859                           ;	Oscillator Selection bits
   860                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   861                           ;	Watchdog Timer Enable bit
   862                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   863                           ;	Power-up Timer Enable bit
   864                           ;	PWRTE = OFF, PWRT disabled
   865                           ;	RE3/MCLR pin function select bit
   866                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   867                           ;	Code Protection bit
   868                           ;	CP = OFF, Program memory code protection is disabled
   869                           ;	Data Code Protection bit
   870                           ;	CPD = OFF, Data memory code protection is disabled
   871                           ;	Brown Out Reset Selection bits
   872                           ;	BOREN = OFF, BOR disabled
   873                           ;	Internal External Switchover bit
   874                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   875                           ;	Fail-Safe Clock Monitor Enabled bit
   876                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   877                           ;	Low Voltage Programming Enable bit
   878                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   879                           ;	In-Circuit Debugger Mode bit
   880                           ;	DEBUG = 0x1, unprogrammed default
   881  2007                     	org	8199
   882  2007  20D1               	dw	8401
   883                           
   884                           ;Config register CONFIG2 @ 0x2008
   885                           ;	Brown-out Reset Selection bit
   886                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   887                           ;	Flash Program Memory Self Write Enable bits
   888                           ;	WRT = OFF, Write protection off
   889  2008                     	org	8200
   890  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 14:10:11 2021

            _SSPSTATbits 0094                       l71 0089                       l55 0078  
                     l72 008E                       u80 0081                       u81 0080  
                     u90 001F                       u91 001E                      l801 0039  
                    l803 003D                      l805 004A                      l807 0050  
                    l761 0083                      l809 0055                      l763 0085  
                    l771 0063                      l765 0088                      l757 007A  
                    l781 006A                      l773 0064                      l759 0081  
                    l783 006B                      l775 0067                      l767 005B  
                    l791 0019                      l785 006E                      l777 0068  
                    l769 005F                      l793 001F                      l787 006F  
                    l779 0069                      l795 002C                      l797 0032  
                    l789 0014                      l799 0037                      u100 0032  
                    u101 0031                      u110 003D                      u111 003C  
                    u120 0050                      u121 004F                      u137 0025  
                    u147 0043                      _isr 008F                     ?_isr 0070  
                   i1l40 009E                     i1l81 00AA                     u3_20 0095  
                   u3_21 0094                     _main 0014                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l721 009B                    i1l717 008F  
                  i1l719 0095                    i1l691 00A6                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063                    _conta 007A                    _setup 005B  
                  pclath 000A          __end_of_spiInit 008F                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 005B  
                 ??_main 0077                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00AB  
              ??_spiInit 0076  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_setup 0079                  ??_setup 0077               __pmaintext 0014  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 005B                  __ptext2 0079                  __ptext3 008F  
                __ptext4 00A5             __size_of_isr 0016                  _spiInit 0079  
   end_of_initialization 0010               ??_spiWrite 0070                _PORTBbits 0006  
              _TRISAbits 0085              spiWrite@dat 0070      start_initialization 000F  
            __end_of_isr 00A5              __pbssCOMMON 007A                ___latbits 0002  
      __size_of_spiWrite 0006                 ?_spiInit 0073           __size_of_setup 001E  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C         __size_of_spiInit 0016  
          __size_of_main 0047                 _spiWrite 00A5             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
