

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 10:43:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  0003                     __pstrings:
   456  0003                     stringtab:
   457  0003                     __stringtab:
   458  0003                     stringcode:	
   459                           ;	String table - string pointers are 1 byte each
   460                           
   461  0003                     stringdir:
   462  0003  3000               	movlw	high stringdir
   463  0004  008A               	movwf	10
   464  0005  0804               	movf	4,w
   465  0006  0A84               	incf	4,f
   466  0007  0782               	addwf	2,f
   467  0008                     __stringbase:
   468  0008  3400               	retlw	0
   469  0009                     __end_of__stringtab:
   470  0009                     _dpowers:
   471  0009  3401               	retlw	1
   472  000A  3400               	retlw	0
   473  000B  340A               	retlw	10
   474  000C  3400               	retlw	0
   475  000D  3464               	retlw	100
   476  000E  3400               	retlw	0
   477  000F  34E8               	retlw	232
   478  0010  3403               	retlw	3
   479  0011  3410               	retlw	16
   480  0012  3427               	retlw	39
   481  0013                     __end_of_dpowers:
   482  0013                     _SSPBUF	set	19
   483  0014                     _SSPCON	set	20
   484  0006                     _PORTB	set	6
   485  0019                     _TXREG	set	25
   486  0063                     _SSPIF	set	99
   487  00C7                     _SPEN	set	199
   488  0042                     _RD2	set	66
   489  0093                     _SSPADD	set	147
   490  0094                     _SSPSTAT	set	148
   491  0091                     _SSPCON2	set	145
   492  0099                     _SPBRG	set	153
   493  0086                     _TRISB	set	134
   494  04A0                     _BF	set	1184
   495  048B                     _RCEN	set	1163
   496  048E                     _ACKSTAT	set	1166
   497  048C                     _ACKEN	set	1164
   498  048D                     _ACKDT	set	1165
   499  048A                     _PEN	set	1162
   500  0489                     _RSEN	set	1161
   501  0488                     _SEN	set	1160
   502  043C                     _TRISC4	set	1084
   503  043B                     _TRISC3	set	1083
   504  04C1                     _TRMT	set	1217
   505  04C5                     _TXEN	set	1221
   506  043F                     _TRISC7	set	1087
   507  043E                     _TRISC6	set	1086
   508  04C4                     _SYNC	set	1220
   509  04C2                     _BRGH	set	1218
   510  0442                     _TRISD2	set	1090
   511  0189                     _ANSELH	set	393
   512  0013                     STR_5:
   513  0013  3420               	retlw	32	;' '
   514  0014  3447               	retlw	71	;'G'
   515  0015  3478               	retlw	120	;'x'
   516  0016  3420               	retlw	32	;' '
   517  0017  343D               	retlw	61	;'='
   518  0018  3420               	retlw	32	;' '
   519  0019  3425               	retlw	37	;'%'
   520  001A  3464               	retlw	100	;'d'
   521  001B  3420               	retlw	32	;' '
   522  001C  3420               	retlw	32	;' '
   523  001D  3420               	retlw	32	;' '
   524  001E  3420               	retlw	32	;' '
   525  001F  3400               	retlw	0
   526  0020                     STR_2:
   527  0020  3420               	retlw	32	;' '
   528  0021  3441               	retlw	65	;'A'
   529  0022  3479               	retlw	121	;'y'
   530  0023  3420               	retlw	32	;' '
   531  0024  343D               	retlw	61	;'='
   532  0025  3420               	retlw	32	;' '
   533  0026  3425               	retlw	37	;'%'
   534  0027  3464               	retlw	100	;'d'
   535  0028  3420               	retlw	32	;' '
   536  0029  3420               	retlw	32	;' '
   537  002A  3420               	retlw	32	;' '
   538  002B  3420               	retlw	32	;' '
   539  002C  3400               	retlw	0
   540  002D                     STR_6:
   541  002D  3420               	retlw	32	;' '
   542  002E  3447               	retlw	71	;'G'
   543  002F  3479               	retlw	121	;'y'
   544  0030  3420               	retlw	32	;' '
   545  0031  343D               	retlw	61	;'='
   546  0032  3420               	retlw	32	;' '
   547  0033  3425               	retlw	37	;'%'
   548  0034  3464               	retlw	100	;'d'
   549  0035  3420               	retlw	32	;' '
   550  0036  3420               	retlw	32	;' '
   551  0037  3420               	retlw	32	;' '
   552  0038  3420               	retlw	32	;' '
   553  0039  3400               	retlw	0
   554  003A                     STR_3:
   555  003A  3420               	retlw	32	;' '
   556  003B  3441               	retlw	65	;'A'
   557  003C  347A               	retlw	122	;'z'
   558  003D  3420               	retlw	32	;' '
   559  003E  343D               	retlw	61	;'='
   560  003F  3420               	retlw	32	;' '
   561  0040  3425               	retlw	37	;'%'
   562  0041  3464               	retlw	100	;'d'
   563  0042  3420               	retlw	32	;' '
   564  0043  3420               	retlw	32	;' '
   565  0044  3420               	retlw	32	;' '
   566  0045  3420               	retlw	32	;' '
   567  0046  3400               	retlw	0
   568  0047                     STR_1:
   569  0047  3441               	retlw	65	;'A'
   570  0048  3478               	retlw	120	;'x'
   571  0049  3420               	retlw	32	;' '
   572  004A  343D               	retlw	61	;'='
   573  004B  3420               	retlw	32	;' '
   574  004C  3425               	retlw	37	;'%'
   575  004D  3464               	retlw	100	;'d'
   576  004E  3420               	retlw	32	;' '
   577  004F  3420               	retlw	32	;' '
   578  0050  3420               	retlw	32	;' '
   579  0051  3420               	retlw	32	;' '
   580  0052  3400               	retlw	0
   581  0053                     STR_7:
   582  0053  3420               	retlw	32	;' '
   583  0054  3447               	retlw	71	;'G'
   584  0055  347A               	retlw	122	;'z'
   585  0056  3420               	retlw	32	;' '
   586  0057  343D               	retlw	61	;'='
   587  0058  3420               	retlw	32	;' '
   588  0059  3425               	retlw	37	;'%'
   589  005A  3464               	retlw	100	;'d'
   590  005B  340D               	retlw	13
   591  005C  340A               	retlw	10
   592  005D  3400               	retlw	0
   593  005E                     STR_4:
   594  005E  3420               	retlw	32	;' '
   595  005F  3454               	retlw	84	;'T'
   596  0060  3420               	retlw	32	;' '
   597  0061  343D               	retlw	61	;'='
   598  0062  3420               	retlw	32	;' '
   599  0063  3425               	retlw	37	;'%'
   600  0064  3464               	retlw	100	;'d'
   601  0065  3420               	retlw	32	;' '
   602  0066  3420               	retlw	32	;' '
   603  0067  3400               	retlw	0
   604                           
   605                           	psect	cinit
   606  07FC                     start_initialization:	
   607                           ; #config settings
   608                           
   609  07FC                     __initialization:
   610  07FC                     end_of_initialization:	
   611                           ;End of C runtime variable initialization code
   612                           
   613  07FC                     __end_of__initialization:
   614  07FC  0183               	clrf	3
   615  07FD  120A  118A  2BCF   	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	cstackCOMMON
   618  0070                     __pcstackCOMMON:
   619  0070                     ?_UART_TX_Init:
   620  0070                     ??_UART_TX_Init:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_MPU6050_Init:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_MPU6050_Read:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_I2C_Master_Init:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ??_I2C_Master_Init:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_Start:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Write:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_I2C_Master_Write:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Master_Stop:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_I2C_Master_Stop:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_I2C_Read:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_I2C_Read:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_UART_Write:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_UART_Write:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_UART_Write_String:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_Master_Wait:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_I2C_Master_Wait:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_I2C_ACK:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_I2C_ACK:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_I2C_NACK:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_I2C_NACK:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?___awdiv:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?___lwdiv:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0070                     UART_Write@data:	
   693                           ; 2 bytes @ 0x0
   694                           
   695  0070                     I2C_Master_Write@data:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ___awdiv@divisor:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ___lwdiv@divisor:	
   702                           ; 2 bytes @ 0x0
   703                           
   704                           
   705                           ; 2 bytes @ 0x0
   706  0070                     	ds	1
   707  0071                     ??_I2C_Start:
   708  0071                     ??_UART_Write_String:	
   709                           ; 1 bytes @ 0x1
   710                           
   711  0071                     I2C_Start@add:	
   712                           ; 1 bytes @ 0x1
   713                           
   714  0071                     I2C_Read@ACK_NACK:	
   715                           ; 1 bytes @ 0x1
   716                           
   717                           
   718                           ; 1 bytes @ 0x1
   719  0071                     	ds	1
   720  0072                     ??_MPU6050_Init:
   721  0072                     I2C_Read@Data:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     UART_Write_String@i:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ___awdiv@dividend:	
   728                           ; 2 bytes @ 0x2
   729                           
   730  0072                     ___lwdiv@dividend:	
   731                           ; 2 bytes @ 0x2
   732                           
   733                           
   734                           ; 2 bytes @ 0x2
   735  0072                     	ds	2
   736  0074                     ??___awdiv:
   737  0074                     ??___lwdiv:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     UART_Write_String@buf:	
   741                           ; 1 bytes @ 0x4
   742                           
   743                           
   744                           ; 1 bytes @ 0x4
   745  0074                     	ds	1
   746  0075                     ___awdiv@counter:
   747  0075                     ___lwdiv@quotient:	
   748                           ; 1 bytes @ 0x5
   749                           
   750                           
   751                           ; 2 bytes @ 0x5
   752  0075                     	ds	1
   753  0076                     ___awdiv@sign:
   754                           
   755                           ; 1 bytes @ 0x6
   756  0076                     	ds	1
   757  0077                     ___lwdiv@counter:
   758  0077                     ___awdiv@quotient:	
   759                           ; 1 bytes @ 0x7
   760                           
   761                           
   762                           ; 2 bytes @ 0x7
   763  0077                     	ds	1
   764  0078                     ?___lwmod:
   765  0078                     ___lwmod@divisor:	
   766                           ; 2 bytes @ 0x8
   767                           
   768                           
   769                           ; 2 bytes @ 0x8
   770  0078                     	ds	2
   771  007A                     ___lwmod@dividend:
   772                           
   773                           ; 2 bytes @ 0xA
   774  007A                     	ds	2
   775  007C                     ??___lwmod:
   776                           
   777                           ; 1 bytes @ 0xC
   778  007C                     	ds	1
   779  007D                     ___lwmod@counter:
   780                           
   781                           ; 1 bytes @ 0xD
   782  007D                     	ds	1
   783                           
   784                           	psect	cstackBANK0
   785  0020                     __pcstackBANK0:
   786  0020                     ?_sprintf:
   787  0020                     sprintf@f:	
   788                           ; 2 bytes @ 0x0
   789                           
   790                           
   791                           ; 1 bytes @ 0x0
   792  0020                     	ds	3
   793  0023                     ??_sprintf:
   794                           
   795                           ; 1 bytes @ 0x3
   796  0023                     	ds	3
   797  0026                     sprintf@ap:
   798                           
   799                           ; 1 bytes @ 0x6
   800  0026                     	ds	1
   801  0027                     sprintf@flag:
   802                           
   803                           ; 1 bytes @ 0x7
   804  0027                     	ds	1
   805  0028                     sprintf@prec:
   806                           
   807                           ; 1 bytes @ 0x8
   808  0028                     	ds	1
   809  0029                     sprintf@val:
   810                           
   811                           ; 2 bytes @ 0x9
   812  0029                     	ds	2
   813  002B                     sprintf@sp:
   814                           
   815                           ; 1 bytes @ 0xB
   816  002B                     	ds	1
   817  002C                     sprintf@c:
   818                           
   819                           ; 1 bytes @ 0xC
   820  002C                     	ds	1
   821  002D                     ??_MPU6050_Read:
   822                           
   823                           ; 1 bytes @ 0xD
   824  002D                     	ds	4
   825  0031                     MPU6050_Read@buffer:
   826                           
   827                           ; 40 bytes @ 0x11
   828  0031                     	ds	40
   829  0059                     MPU6050_Read@Ax:
   830                           
   831                           ; 2 bytes @ 0x39
   832  0059                     	ds	2
   833  005B                     MPU6050_Read@Az:
   834                           
   835                           ; 2 bytes @ 0x3B
   836  005B                     	ds	2
   837  005D                     MPU6050_Read@T:
   838                           
   839                           ; 2 bytes @ 0x3D
   840  005D                     	ds	2
   841  005F                     MPU6050_Read@Gx:
   842                           
   843                           ; 2 bytes @ 0x3F
   844  005F                     	ds	2
   845  0061                     MPU6050_Read@Gy:
   846                           
   847                           ; 2 bytes @ 0x41
   848  0061                     	ds	2
   849  0063                     MPU6050_Read@Gz:
   850                           
   851                           ; 2 bytes @ 0x43
   852  0063                     	ds	2
   853  0065                     MPU6050_Read@Ay:
   854                           
   855                           ; 2 bytes @ 0x45
   856  0065                     	ds	2
   857  0067                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x47
   860  0067                     	ds	3
   861                           
   862                           	psect	maintext
   863  03CF                     __pmaintext:	
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 54 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : B00/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       3       0       0       0
   886 ;;      Totals:         0       3       0       0       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels required when called:    4
   889 ;; This function calls:
   890 ;;		_MPU6050_Init
   891 ;;		_MPU6050_Read
   892 ;;		_UART_TX_Init
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _main
   900  03CF                     _main:
   901  03CF                     l1447:	
   902                           ;incstack = 0
   903                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   904                           
   905                           
   906                           ;main.c: 56:     UART_TX_Init();
   907  03CF  120A  118A  2358  120A  118A  	fcall	_UART_TX_Init
   908  03D4                     l1449:
   909                           
   910                           ;main.c: 57:     TRISD2 = 0;
   911  03D4  1683               	bsf	3,5	;RP0=1, select bank1
   912  03D5  1303               	bcf	3,6	;RP1=0, select bank1
   913  03D6  1108               	bcf	8,2	;volatile
   914  03D7                     l1451:
   915                           
   916                           ;main.c: 58:     TRISB = 0;
   917  03D7  0186               	clrf	6	;volatile
   918  03D8                     l1453:
   919                           
   920                           ;main.c: 59:     ANSELH = 0;
   921  03D8  1683               	bsf	3,5	;RP0=1, select bank3
   922  03D9  1703               	bsf	3,6	;RP1=1, select bank3
   923  03DA  0189               	clrf	9	;volatile
   924                           
   925                           ;main.c: 61:     MPU6050_Init();
   926  03DB  120A  118A  24E1  120A  118A  	fcall	_MPU6050_Init
   927  03E0                     l1455:
   928                           
   929                           ;main.c: 66:  {;main.c: 67:         RD2 = ~RD2;
   930  03E0  3004               	movlw	4
   931  03E1  1283               	bcf	3,5	;RP0=0, select bank0
   932  03E2  1303               	bcf	3,6	;RP1=0, select bank0
   933  03E3  0688               	xorwf	8,f
   934  03E4                     l1457:
   935                           
   936                           ;main.c: 68:         MPU6050_Read();
   937  03E4  120A  118A  2665  120A  118A  	fcall	_MPU6050_Read
   938  03E9                     l1459:
   939                           
   940                           ;main.c: 69:         _delay((unsigned long)((50)*(16000000/4000.0)));
   941  03E9  3002               	movlw	2
   942  03EA  1283               	bcf	3,5	;RP0=0, select bank0
   943  03EB  1303               	bcf	3,6	;RP1=0, select bank0
   944  03EC  00E9               	movwf	??_main+2
   945  03ED  3004               	movlw	4
   946  03EE  00E8               	movwf	??_main+1
   947  03EF  30B9               	movlw	185
   948  03F0  00E7               	movwf	??_main
   949  03F1                     u837:
   950  03F1  0BE7               	decfsz	??_main,f
   951  03F2  2BF1               	goto	u837
   952  03F3  0BE8               	decfsz	??_main+1,f
   953  03F4  2BF1               	goto	u837
   954  03F5  0BE9               	decfsz	??_main+2,f
   955  03F6  2BF1               	goto	u837
   956  03F7  2BF8               	nop2
   957  03F8  2BE0               	goto	l1455
   958  03F9  120A  118A  2800   	ljmp	start
   959  03FC                     __end_of_main:
   960                           
   961                           	psect	text1
   962  0358                     __ptext1:	
   963 ;; *************** function _UART_TX_Init *****************
   964 ;; Defined at:
   965 ;;		line 17 in file "USART.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0
   982 ;;      Totals:         0       0       0       0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _UART_TX_Init
   994  0358                     _UART_TX_Init:
   995  0358                     l1001:	
   996                           ;incstack = 0
   997                           ; Regs used in _UART_TX_Init: [wreg]
   998                           
   999                           
  1000                           ;USART.c: 19:   BRGH = 1;
  1001  0358  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0359  1303               	bcf	3,6	;RP1=0, select bank1
  1003  035A  1518               	bsf	24,2	;volatile
  1004  035B                     l1003:
  1005                           
  1006                           ;USART.c: 20:   SPBRG = 51;
  1007  035B  3033               	movlw	51
  1008  035C  0099               	movwf	25	;volatile
  1009  035D                     l1005:
  1010                           
  1011                           ;USART.c: 22:   SYNC = 0;
  1012  035D  1218               	bcf	24,4	;volatile
  1013  035E                     l1007:
  1014                           
  1015                           ;USART.c: 23:   SPEN = 1;
  1016  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1017  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0360  1798               	bsf	24,7	;volatile
  1019  0361                     l1009:
  1020                           
  1021                           ;USART.c: 25:   TRISC6 = 1;
  1022  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1023  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1024  0363  1707               	bsf	7,6	;volatile
  1025  0364                     l1011:
  1026                           
  1027                           ;USART.c: 26:   TRISC7 = 1;
  1028  0364  1787               	bsf	7,7	;volatile
  1029  0365                     l1013:
  1030                           
  1031                           ;USART.c: 27:   TXEN = 1;
  1032  0365  1698               	bsf	24,5	;volatile
  1033  0366                     l45:
  1034  0366  0008               	return
  1035  0367                     __end_of_UART_TX_Init:
  1036                           
  1037                           	psect	text2
  1038  0665                     __ptext2:	
  1039 ;; *************** function _MPU6050_Read *****************
  1040 ;; Defined at:
  1041 ;;		line 62 in file "MPU.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  buffer         40   17[BANK0 ] unsigned char [40]
  1046 ;;  Ay              2   69[BANK0 ] int 
  1047 ;;  Gz              2   67[BANK0 ] int 
  1048 ;;  Gy              2   65[BANK0 ] int 
  1049 ;;  Gx              2   63[BANK0 ] int 
  1050 ;;  T               2   61[BANK0 ] int 
  1051 ;;  Az              2   59[BANK0 ] int 
  1052 ;;  Ax              2   57[BANK0 ] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       0       0       0       0
  1063 ;;      Locals:         0      54       0       0       0
  1064 ;;      Temps:          0       4       0       0       0
  1065 ;;      Totals:         0      58       0       0       0
  1066 ;;Total ram usage:       58 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    3
  1069 ;; This function calls:
  1070 ;;		_I2C_Master_Stop
  1071 ;;		_I2C_Master_Write
  1072 ;;		_I2C_Read
  1073 ;;		_I2C_Start
  1074 ;;		_UART_Write_String
  1075 ;;		___awdiv
  1076 ;;		_sprintf
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _MPU6050_Read
  1084  0665                     _MPU6050_Read:
  1085  0665                     l1409:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1088                           
  1089                           
  1090                           ;MPU.c: 64:   char buffer[40];;MPU.c: 65:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 67:   I2C_St
      +                          art(0xD0);
  1091  0665  30D0               	movlw	208
  1092  0666  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  1093                           
  1094                           ;MPU.c: 68:   I2C_Master_Write(0x3B);
  1095  066B  303B               	movlw	59
  1096  066C  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  1097                           
  1098                           ;MPU.c: 69:   I2C_Master_Stop();
  1099  0671  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  1100                           
  1101                           ;MPU.c: 70:   I2C_Start(0xD1);
  1102  0676  30D1               	movlw	209
  1103  0677  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  1104  067C                     l1411:
  1105                           
  1106                           ;MPU.c: 71:   Ax = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1107  067C  3000               	movlw	0
  1108  067D  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1109  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0684  00AD               	movwf	??_MPU6050_Read
  1112  0685  01AE               	clrf	??_MPU6050_Read+1
  1113  0686  3000               	movlw	0
  1114  0687  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1115  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1116  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1117  068E  00AF               	movwf	??_MPU6050_Read+2
  1118  068F  01B0               	clrf	??_MPU6050_Read+3
  1119  0690  082F               	movf	??_MPU6050_Read+2,w
  1120  0691  00B0               	movwf	??_MPU6050_Read+3
  1121  0692  01AF               	clrf	??_MPU6050_Read+2
  1122  0693  082D               	movf	??_MPU6050_Read,w
  1123  0694  042F               	iorwf	??_MPU6050_Read+2,w
  1124  0695  00D9               	movwf	MPU6050_Read@Ax
  1125  0696  082E               	movf	??_MPU6050_Read+1,w
  1126  0697  0430               	iorwf	??_MPU6050_Read+3,w
  1127  0698  00DA               	movwf	MPU6050_Read@Ax+1
  1128  0699                     l1413:
  1129                           
  1130                           ;MPU.c: 72:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1131  0699  3000               	movlw	0
  1132  069A  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1133  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1134  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1135  06A1  00AD               	movwf	??_MPU6050_Read
  1136  06A2  01AE               	clrf	??_MPU6050_Read+1
  1137  06A3  3000               	movlw	0
  1138  06A4  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1139  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1140  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1141  06AB  00AF               	movwf	??_MPU6050_Read+2
  1142  06AC  01B0               	clrf	??_MPU6050_Read+3
  1143  06AD  082F               	movf	??_MPU6050_Read+2,w
  1144  06AE  00B0               	movwf	??_MPU6050_Read+3
  1145  06AF  01AF               	clrf	??_MPU6050_Read+2
  1146  06B0  082D               	movf	??_MPU6050_Read,w
  1147  06B1  042F               	iorwf	??_MPU6050_Read+2,w
  1148  06B2  00E5               	movwf	MPU6050_Read@Ay
  1149  06B3  082E               	movf	??_MPU6050_Read+1,w
  1150  06B4  0430               	iorwf	??_MPU6050_Read+3,w
  1151  06B5  00E6               	movwf	MPU6050_Read@Ay+1
  1152  06B6                     l1415:
  1153                           
  1154                           ;MPU.c: 73:   Az = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1155  06B6  3000               	movlw	0
  1156  06B7  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1157  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1158  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1159  06BE  00AD               	movwf	??_MPU6050_Read
  1160  06BF  01AE               	clrf	??_MPU6050_Read+1
  1161  06C0  3000               	movlw	0
  1162  06C1  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1163  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1164  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1165  06C8  00AF               	movwf	??_MPU6050_Read+2
  1166  06C9  01B0               	clrf	??_MPU6050_Read+3
  1167  06CA  082F               	movf	??_MPU6050_Read+2,w
  1168  06CB  00B0               	movwf	??_MPU6050_Read+3
  1169  06CC  01AF               	clrf	??_MPU6050_Read+2
  1170  06CD  082D               	movf	??_MPU6050_Read,w
  1171  06CE  042F               	iorwf	??_MPU6050_Read+2,w
  1172  06CF  00DB               	movwf	MPU6050_Read@Az
  1173  06D0  082E               	movf	??_MPU6050_Read+1,w
  1174  06D1  0430               	iorwf	??_MPU6050_Read+3,w
  1175  06D2  00DC               	movwf	MPU6050_Read@Az+1
  1176  06D3                     l1417:
  1177                           
  1178                           ;MPU.c: 74:   T = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1179  06D3  3000               	movlw	0
  1180  06D4  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1181  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1182  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1183  06DB  00AD               	movwf	??_MPU6050_Read
  1184  06DC  01AE               	clrf	??_MPU6050_Read+1
  1185  06DD  3000               	movlw	0
  1186  06DE  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1187  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1188  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1189  06E5  00AF               	movwf	??_MPU6050_Read+2
  1190  06E6  01B0               	clrf	??_MPU6050_Read+3
  1191  06E7  082F               	movf	??_MPU6050_Read+2,w
  1192  06E8  00B0               	movwf	??_MPU6050_Read+3
  1193  06E9  01AF               	clrf	??_MPU6050_Read+2
  1194  06EA  082D               	movf	??_MPU6050_Read,w
  1195  06EB  042F               	iorwf	??_MPU6050_Read+2,w
  1196  06EC  00DD               	movwf	MPU6050_Read@T
  1197  06ED  082E               	movf	??_MPU6050_Read+1,w
  1198  06EE  0430               	iorwf	??_MPU6050_Read+3,w
  1199  06EF  00DE               	movwf	MPU6050_Read@T+1
  1200  06F0                     l1419:
  1201                           
  1202                           ;MPU.c: 75:   Gx = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1203  06F0  3000               	movlw	0
  1204  06F1  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1205  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1206  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1207  06F8  00AD               	movwf	??_MPU6050_Read
  1208  06F9  01AE               	clrf	??_MPU6050_Read+1
  1209  06FA  3000               	movlw	0
  1210  06FB  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1211  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0702  00AF               	movwf	??_MPU6050_Read+2
  1214  0703  01B0               	clrf	??_MPU6050_Read+3
  1215  0704  082F               	movf	??_MPU6050_Read+2,w
  1216  0705  00B0               	movwf	??_MPU6050_Read+3
  1217  0706  01AF               	clrf	??_MPU6050_Read+2
  1218  0707  082D               	movf	??_MPU6050_Read,w
  1219  0708  042F               	iorwf	??_MPU6050_Read+2,w
  1220  0709  00DF               	movwf	MPU6050_Read@Gx
  1221  070A  082E               	movf	??_MPU6050_Read+1,w
  1222  070B  0430               	iorwf	??_MPU6050_Read+3,w
  1223  070C  00E0               	movwf	MPU6050_Read@Gx+1
  1224  070D                     l1421:
  1225                           
  1226                           ;MPU.c: 76:   Gy = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1227  070D  3000               	movlw	0
  1228  070E  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1229  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0715  00AD               	movwf	??_MPU6050_Read
  1232  0716  01AE               	clrf	??_MPU6050_Read+1
  1233  0717  3000               	movlw	0
  1234  0718  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1235  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1236  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1237  071F  00AF               	movwf	??_MPU6050_Read+2
  1238  0720  01B0               	clrf	??_MPU6050_Read+3
  1239  0721  082F               	movf	??_MPU6050_Read+2,w
  1240  0722  00B0               	movwf	??_MPU6050_Read+3
  1241  0723  01AF               	clrf	??_MPU6050_Read+2
  1242  0724  082D               	movf	??_MPU6050_Read,w
  1243  0725  042F               	iorwf	??_MPU6050_Read+2,w
  1244  0726  00E1               	movwf	MPU6050_Read@Gy
  1245  0727  082E               	movf	??_MPU6050_Read+1,w
  1246  0728  0430               	iorwf	??_MPU6050_Read+3,w
  1247  0729  00E2               	movwf	MPU6050_Read@Gy+1
  1248  072A                     l1423:
  1249                           
  1250                           ;MPU.c: 77:   Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);
  1251  072A  3001               	movlw	1
  1252  072B  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1253  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0732  00AD               	movwf	??_MPU6050_Read
  1256  0733  01AE               	clrf	??_MPU6050_Read+1
  1257  0734  3000               	movlw	0
  1258  0735  120A  118A  23A8  120A  118A  	fcall	_I2C_Read
  1259  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1260  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1261  073C  00AF               	movwf	??_MPU6050_Read+2
  1262  073D  01B0               	clrf	??_MPU6050_Read+3
  1263  073E  082F               	movf	??_MPU6050_Read+2,w
  1264  073F  00B0               	movwf	??_MPU6050_Read+3
  1265  0740  01AF               	clrf	??_MPU6050_Read+2
  1266  0741  082D               	movf	??_MPU6050_Read,w
  1267  0742  042F               	iorwf	??_MPU6050_Read+2,w
  1268  0743  00E3               	movwf	MPU6050_Read@Gz
  1269  0744  082E               	movf	??_MPU6050_Read+1,w
  1270  0745  0430               	iorwf	??_MPU6050_Read+3,w
  1271  0746  00E4               	movwf	MPU6050_Read@Gz+1
  1272  0747                     l1425:
  1273                           
  1274                           ;MPU.c: 78:   I2C_Master_Stop();
  1275  0747  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  1276  074C                     l1427:
  1277                           
  1278                           ;MPU.c: 80:   PORTB = (Ay+16384)/128;
  1279  074C  3080               	movlw	128
  1280  074D  00F0               	movwf	___awdiv@divisor
  1281  074E  3000               	movlw	0
  1282  074F  00F1               	movwf	___awdiv@divisor+1
  1283  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0752  0865               	movf	MPU6050_Read@Ay,w
  1286  0753  3E00               	addlw	0
  1287  0754  00F2               	movwf	___awdiv@dividend
  1288  0755  0866               	movf	MPU6050_Read@Ay+1,w
  1289  0756  1803               	skipnc
  1290  0757  3E01               	addlw	1
  1291  0758  3E40               	addlw	64
  1292  0759  00F3               	movwf	___awdiv@dividend+1
  1293  075A  120A  118A  247A  120A  118A  	fcall	___awdiv
  1294  075F  0870               	movf	?___awdiv,w
  1295  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0762  0086               	movwf	6	;volatile
  1298  0763                     l1429:
  1299                           
  1300                           ;MPU.c: 82:   sprintf(buffer,"Ax = %d    ",Ax);
  1301  0763  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1302  0764  00AD               	movwf	??_MPU6050_Read
  1303  0765  082D               	movf	??_MPU6050_Read,w
  1304  0766  00A0               	movwf	sprintf@f
  1305  0767  085A               	movf	MPU6050_Read@Ax+1,w
  1306  0768  00A2               	movwf	?_sprintf+2
  1307  0769  0859               	movf	MPU6050_Read@Ax,w
  1308  076A  00A1               	movwf	?_sprintf+1
  1309  076B  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1310  076C  120A  118A  257D  120A  118A  	fcall	_sprintf
  1311                           
  1312                           ;MPU.c: 83:   UART_Write_String(buffer);
  1313  0771  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1314  0772  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1315  0777                     l1431:
  1316                           
  1317                           ;MPU.c: 85:   sprintf(buffer," Ay = %d    ",Ay);
  1318  0777  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1319  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1321  077A  00AD               	movwf	??_MPU6050_Read
  1322  077B  082D               	movf	??_MPU6050_Read,w
  1323  077C  00A0               	movwf	sprintf@f
  1324  077D  0866               	movf	MPU6050_Read@Ay+1,w
  1325  077E  00A2               	movwf	?_sprintf+2
  1326  077F  0865               	movf	MPU6050_Read@Ay,w
  1327  0780  00A1               	movwf	?_sprintf+1
  1328  0781  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1329  0782  120A  118A  257D  120A  118A  	fcall	_sprintf
  1330  0787                     l1433:
  1331                           
  1332                           ;MPU.c: 86:   UART_Write_String(buffer);
  1333  0787  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1334  0788  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1335                           
  1336                           ;MPU.c: 88:   sprintf(buffer," Az = %d    ",Az);
  1337  078D  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1338  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1339  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0790  00AD               	movwf	??_MPU6050_Read
  1341  0791  082D               	movf	??_MPU6050_Read,w
  1342  0792  00A0               	movwf	sprintf@f
  1343  0793  085C               	movf	MPU6050_Read@Az+1,w
  1344  0794  00A2               	movwf	?_sprintf+2
  1345  0795  085B               	movf	MPU6050_Read@Az,w
  1346  0796  00A1               	movwf	?_sprintf+1
  1347  0797  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1348  0798  120A  118A  257D  120A  118A  	fcall	_sprintf
  1349  079D                     l1435:
  1350                           
  1351                           ;MPU.c: 89:   UART_Write_String(buffer);
  1352  079D  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1353  079E  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1354  07A3                     l1437:
  1355                           
  1356                           ;MPU.c: 91:   sprintf(buffer," T = %d  ",T);
  1357  07A3  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1358  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1359  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1360  07A6  00AD               	movwf	??_MPU6050_Read
  1361  07A7  082D               	movf	??_MPU6050_Read,w
  1362  07A8  00A0               	movwf	sprintf@f
  1363  07A9  085E               	movf	MPU6050_Read@T+1,w
  1364  07AA  00A2               	movwf	?_sprintf+2
  1365  07AB  085D               	movf	MPU6050_Read@T,w
  1366  07AC  00A1               	movwf	?_sprintf+1
  1367  07AD  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1368  07AE  120A  118A  257D  120A  118A  	fcall	_sprintf
  1369                           
  1370                           ;MPU.c: 92:   UART_Write_String(buffer);
  1371  07B3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1372  07B4  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1373  07B9                     l1439:
  1374                           
  1375                           ;MPU.c: 94:   sprintf(buffer," Gx = %d    ",Gx);
  1376  07B9  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1377  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1378  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1379  07BC  00AD               	movwf	??_MPU6050_Read
  1380  07BD  082D               	movf	??_MPU6050_Read,w
  1381  07BE  00A0               	movwf	sprintf@f
  1382  07BF  0860               	movf	MPU6050_Read@Gx+1,w
  1383  07C0  00A2               	movwf	?_sprintf+2
  1384  07C1  085F               	movf	MPU6050_Read@Gx,w
  1385  07C2  00A1               	movwf	?_sprintf+1
  1386  07C3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1387  07C4  120A  118A  257D  120A  118A  	fcall	_sprintf
  1388  07C9                     l1441:
  1389                           
  1390                           ;MPU.c: 95:   UART_Write_String(buffer);
  1391  07C9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1392  07CA  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1393                           
  1394                           ;MPU.c: 97:   sprintf(buffer," Gy = %d    ",Gy);
  1395  07CF  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1396  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1397  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1398  07D2  00AD               	movwf	??_MPU6050_Read
  1399  07D3  082D               	movf	??_MPU6050_Read,w
  1400  07D4  00A0               	movwf	sprintf@f
  1401  07D5  0862               	movf	MPU6050_Read@Gy+1,w
  1402  07D6  00A2               	movwf	?_sprintf+2
  1403  07D7  0861               	movf	MPU6050_Read@Gy,w
  1404  07D8  00A1               	movwf	?_sprintf+1
  1405  07D9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1406  07DA  120A  118A  257D  120A  118A  	fcall	_sprintf
  1407  07DF                     l1443:
  1408                           
  1409                           ;MPU.c: 98:   UART_Write_String(buffer);
  1410  07DF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1411  07E0  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1412  07E5                     l1445:
  1413                           
  1414                           ;MPU.c: 100:   sprintf(buffer," Gz = %d\r\n",Gz);
  1415  07E5  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1416  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1417  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1418  07E8  00AD               	movwf	??_MPU6050_Read
  1419  07E9  082D               	movf	??_MPU6050_Read,w
  1420  07EA  00A0               	movwf	sprintf@f
  1421  07EB  0864               	movf	MPU6050_Read@Gz+1,w
  1422  07EC  00A2               	movwf	?_sprintf+2
  1423  07ED  0863               	movf	MPU6050_Read@Gz,w
  1424  07EE  00A1               	movwf	?_sprintf+1
  1425  07EF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1426  07F0  120A  118A  257D  120A  118A  	fcall	_sprintf
  1427                           
  1428                           ;MPU.c: 101:   UART_Write_String(buffer);
  1429  07F5  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1430  07F6  120A  118A  2387  120A  118A  	fcall	_UART_Write_String
  1431  07FB                     l81:
  1432  07FB  0008               	return
  1433  07FC                     __end_of_MPU6050_Read:
  1434                           
  1435                           	psect	text3
  1436  057D                     __ptext3:	
  1437 ;; *************** function _sprintf *****************
  1438 ;; Defined at:
  1439 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  sp              1    wreg     PTR unsigned char 
  1442 ;;		 -> MPU6050_Read@buffer(40), 
  1443 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1444 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  1445 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1448 ;;		 -> MPU6050_Read@buffer(40), 
  1449 ;;  tmpval          4    0        struct .
  1450 ;;  val             2    9[BANK0 ] unsigned int 
  1451 ;;  cp              2    0        PTR const unsigned char 
  1452 ;;  len             2    0        unsigned int 
  1453 ;;  c               1   12[BANK0 ] unsigned char 
  1454 ;;  prec            1    8[BANK0 ] char 
  1455 ;;  flag            1    7[BANK0 ] unsigned char 
  1456 ;;  ap              1    6[BANK0 ] PTR void [1]
  1457 ;;		 -> ?_sprintf(2), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    0[BANK0 ] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       3       0       0       0
  1468 ;;      Locals:         0       7       0       0       0
  1469 ;;      Temps:          0       3       0       0       0
  1470 ;;      Totals:         0      13       0       0       0
  1471 ;;Total ram usage:       13 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    1
  1474 ;; This function calls:
  1475 ;;		___lwdiv
  1476 ;;		___lwmod
  1477 ;; This function is called by:
  1478 ;;		_MPU6050_Read
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _sprintf
  1484  057D                     _sprintf:
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1488                           ;sprintf@sp stored from wreg
  1489  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1490  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1491  057F  00AB               	movwf	sprintf@sp
  1492  0580                     l1251:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1495  0580  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1496  0581  00A3               	movwf	??_sprintf
  1497  0582  0823               	movf	??_sprintf,w
  1498  0583  00A6               	movwf	sprintf@ap
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1501  0584  2E4E               	goto	l1303
  1502  0585                     l1253:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1505  0585  3025               	movlw	37
  1506  0586  062C               	xorwf	sprintf@c,w
  1507  0587  1903               	btfsc	3,2
  1508  0588  2D8A               	goto	u651
  1509  0589  2D8B               	goto	u650
  1510  058A                     u651:
  1511  058A  2D97               	goto	l1259
  1512  058B                     u650:
  1513  058B                     l1255:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1516  058B  082C               	movf	sprintf@c,w
  1517  058C  00A3               	movwf	??_sprintf
  1518  058D  082B               	movf	sprintf@sp,w
  1519  058E  0084               	movwf	4
  1520  058F  0823               	movf	??_sprintf,w
  1521  0590  1383               	bcf	3,7	;select IRP bank0
  1522  0591  0080               	movwf	0
  1523  0592                     l1257:
  1524  0592  3001               	movlw	1
  1525  0593  00A3               	movwf	??_sprintf
  1526  0594  0823               	movf	??_sprintf,w
  1527  0595  07AB               	addwf	sprintf@sp,f
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1530  0596  2E4E               	goto	l1303
  1531  0597                     l1259:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1534  0597  01A7               	clrf	sprintf@flag
  1535  0598                     l1263:	
  1536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1537                           
  1538  0598  3001               	movlw	1
  1539  0599  07A0               	addwf	sprintf@f,f
  1540  059A  30FF               	movlw	-1
  1541  059B  0720               	addwf	sprintf@f,w
  1542  059C  0084               	movwf	4
  1543  059D  120A  118A  2003  120A  118A  	fcall	stringdir
  1544  05A2  00AC               	movwf	sprintf@c
  1545  05A3  00A3               	movwf	??_sprintf
  1546  05A4  01A4               	clrf	??_sprintf+1
  1547                           
  1548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1549                           ; Switch size 1, requested type "simple"
  1550                           ; Number of cases is 1, Range of values is 0 to 0
  1551                           ; switch strategies available:
  1552                           ; Name         Instructions Cycles
  1553                           ; simple_byte            4     3 (average)
  1554                           ; direct_byte           11     8 (fixed)
  1555                           ; jumptable            260     6 (fixed)
  1556                           ;	Chosen strategy is simple_byte
  1557  05A5  0824               	movf	??_sprintf+1,w
  1558  05A6  3A00               	xorlw	0	; case 0
  1559  05A7  1903               	skipnz
  1560  05A8  2DAA               	goto	l1499
  1561  05A9  2E4E               	goto	l1303
  1562  05AA                     l1499:
  1563                           
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 3, Range of values is 0 to 105
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte           10     6 (average)
  1569                           ; jumptable            260     6 (fixed)
  1570                           ;	Chosen strategy is simple_byte
  1571  05AA  0823               	movf	??_sprintf,w
  1572  05AB  3A00               	xorlw	0	; case 0
  1573  05AC  1903               	skipnz
  1574  05AD  2E60               	goto	l1305
  1575  05AE  3A64               	xorlw	100	; case 100
  1576  05AF  1903               	skipnz
  1577  05B0  2DB5               	goto	l1265
  1578  05B1  3A0D               	xorlw	13	; case 105
  1579  05B2  1903               	skipnz
  1580  05B3  2DB5               	goto	l1265
  1581  05B4  2E4E               	goto	l1303
  1582  05B5                     l1265:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1585  05B5  0826               	movf	sprintf@ap,w
  1586  05B6  0084               	movwf	4
  1587  05B7  1383               	bcf	3,7	;select IRP bank0
  1588  05B8  0800               	movf	0,w
  1589  05B9  00A9               	movwf	sprintf@val
  1590  05BA  0A84               	incf	4,f
  1591  05BB  0800               	movf	0,w
  1592  05BC  00AA               	movwf	sprintf@val+1
  1593  05BD                     l1267:
  1594  05BD  3002               	movlw	2
  1595  05BE  00A3               	movwf	??_sprintf
  1596  05BF  0823               	movf	??_sprintf,w
  1597  05C0  07A6               	addwf	sprintf@ap,f
  1598  05C1                     l1269:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1601  05C1  1FAA               	btfss	sprintf@val+1,7
  1602  05C2  2DC4               	goto	u661
  1603  05C3  2DC5               	goto	u660
  1604  05C4                     u661:
  1605  05C4  2DCE               	goto	l1275
  1606  05C5                     u660:
  1607  05C5                     l1271:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1610  05C5  3003               	movlw	3
  1611  05C6  00A3               	movwf	??_sprintf
  1612  05C7  0823               	movf	??_sprintf,w
  1613  05C8  04A7               	iorwf	sprintf@flag,f
  1614  05C9                     l1273:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1617  05C9  09A9               	comf	sprintf@val,f
  1618  05CA  09AA               	comf	sprintf@val+1,f
  1619  05CB  0AA9               	incf	sprintf@val,f
  1620  05CC  1903               	skipnz
  1621  05CD  0AAA               	incf	sprintf@val+1,f
  1622  05CE                     l1275:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1625  05CE  01AC               	clrf	sprintf@c
  1626  05CF  0AAC               	incf	sprintf@c,f
  1627  05D0                     l1281:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1630  05D0  082C               	movf	sprintf@c,w
  1631  05D1  00A3               	movwf	??_sprintf
  1632  05D2  0723               	addwf	??_sprintf,w
  1633  05D3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1634  05D4  0084               	movwf	4
  1635  05D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1636  05DA  00A4               	movwf	??_sprintf+1
  1637  05DB  120A  118A  2003  120A  118A  	fcall	stringdir
  1638  05E0  00A5               	movwf	??_sprintf+2
  1639  05E1  0825               	movf	??_sprintf+2,w
  1640  05E2  022A               	subwf	sprintf@val+1,w
  1641  05E3  1D03               	skipz
  1642  05E4  2DE7               	goto	u675
  1643  05E5  0824               	movf	??_sprintf+1,w
  1644  05E6  0229               	subwf	sprintf@val,w
  1645  05E7                     u675:
  1646  05E7  1803               	skipnc
  1647  05E8  2DEA               	goto	u671
  1648  05E9  2DEB               	goto	u670
  1649  05EA                     u671:
  1650  05EA  2DEC               	goto	l1285
  1651  05EB                     u670:
  1652  05EB  2DF6               	goto	l1287
  1653  05EC                     l1285:
  1654  05EC  3001               	movlw	1
  1655  05ED  00A3               	movwf	??_sprintf
  1656  05EE  0823               	movf	??_sprintf,w
  1657  05EF  07AC               	addwf	sprintf@c,f
  1658  05F0  3005               	movlw	5
  1659  05F1  062C               	xorwf	sprintf@c,w
  1660  05F2  1D03               	btfss	3,2
  1661  05F3  2DF5               	goto	u681
  1662  05F4  2DF6               	goto	u680
  1663  05F5                     u681:
  1664  05F5  2DD0               	goto	l1281
  1665  05F6                     u680:
  1666  05F6                     l1287:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1669  05F6  0827               	movf	sprintf@flag,w
  1670  05F7  3903               	andlw	3
  1671  05F8  1903               	btfsc	3,2
  1672  05F9  2DFB               	goto	u691
  1673  05FA  2DFC               	goto	u690
  1674  05FB                     u691:
  1675  05FB  2E07               	goto	l1293
  1676  05FC                     u690:
  1677  05FC                     l1289:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1680  05FC  302D               	movlw	45
  1681  05FD  00A3               	movwf	??_sprintf
  1682  05FE  082B               	movf	sprintf@sp,w
  1683  05FF  0084               	movwf	4
  1684  0600  0823               	movf	??_sprintf,w
  1685  0601  1383               	bcf	3,7	;select IRP bank0
  1686  0602  0080               	movwf	0
  1687  0603                     l1291:
  1688  0603  3001               	movlw	1
  1689  0604  00A3               	movwf	??_sprintf
  1690  0605  0823               	movf	??_sprintf,w
  1691  0606  07AB               	addwf	sprintf@sp,f
  1692  0607                     l1293:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1695  0607  082C               	movf	sprintf@c,w
  1696  0608  00A3               	movwf	??_sprintf
  1697  0609  0823               	movf	??_sprintf,w
  1698  060A  00A8               	movwf	sprintf@prec
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1701  060B  2E45               	goto	l1301
  1702  060C                     l1295:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1705  060C  300A               	movlw	10
  1706  060D  00F8               	movwf	___lwmod@divisor
  1707  060E  3000               	movlw	0
  1708  060F  00F9               	movwf	___lwmod@divisor+1
  1709  0610  0828               	movf	sprintf@prec,w
  1710  0611  00A3               	movwf	??_sprintf
  1711  0612  0723               	addwf	??_sprintf,w
  1712  0613  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1713  0614  0084               	movwf	4
  1714  0615  120A  118A  2003  120A  118A  	fcall	stringdir
  1715  061A  00F0               	movwf	___lwdiv@divisor
  1716  061B  120A  118A  2003  120A  118A  	fcall	stringdir
  1717  0620  00F1               	movwf	___lwdiv@divisor+1
  1718  0621  082A               	movf	sprintf@val+1,w
  1719  0622  00F3               	movwf	___lwdiv@dividend+1
  1720  0623  0829               	movf	sprintf@val,w
  1721  0624  00F2               	movwf	___lwdiv@dividend
  1722  0625  120A  118A  2436  120A  118A  	fcall	___lwdiv
  1723  062A  0871               	movf	?___lwdiv+1,w
  1724  062B  00FB               	movwf	___lwmod@dividend+1
  1725  062C  0870               	movf	?___lwdiv,w
  1726  062D  00FA               	movwf	___lwmod@dividend
  1727  062E  120A  118A  23FC  120A  118A  	fcall	___lwmod
  1728  0633  0878               	movf	?___lwmod,w
  1729  0634  3E30               	addlw	48
  1730  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0637  00A4               	movwf	??_sprintf+1
  1733  0638  0824               	movf	??_sprintf+1,w
  1734  0639  00AC               	movwf	sprintf@c
  1735  063A                     l1297:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1738  063A  082C               	movf	sprintf@c,w
  1739  063B  00A3               	movwf	??_sprintf
  1740  063C  082B               	movf	sprintf@sp,w
  1741  063D  0084               	movwf	4
  1742  063E  0823               	movf	??_sprintf,w
  1743  063F  1383               	bcf	3,7	;select IRP bank0
  1744  0640  0080               	movwf	0
  1745  0641                     l1299:
  1746  0641  3001               	movlw	1
  1747  0642  00A3               	movwf	??_sprintf
  1748  0643  0823               	movf	??_sprintf,w
  1749  0644  07AB               	addwf	sprintf@sp,f
  1750  0645                     l1301:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1753  0645  30FF               	movlw	255
  1754  0646  00A3               	movwf	??_sprintf
  1755  0647  0823               	movf	??_sprintf,w
  1756  0648  07A8               	addwf	sprintf@prec,f
  1757  0649  0A28               	incf	sprintf@prec,w
  1758  064A  1D03               	btfss	3,2
  1759  064B  2E4D               	goto	u701
  1760  064C  2E4E               	goto	u700
  1761  064D                     u701:
  1762  064D  2E0C               	goto	l1295
  1763  064E                     u700:
  1764  064E                     l1303:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1767  064E  3001               	movlw	1
  1768  064F  07A0               	addwf	sprintf@f,f
  1769  0650  30FF               	movlw	-1
  1770  0651  0720               	addwf	sprintf@f,w
  1771  0652  0084               	movwf	4
  1772  0653  120A  118A  2003  120A  118A  	fcall	stringdir
  1773  0658  00A3               	movwf	??_sprintf
  1774  0659  0823               	movf	??_sprintf,w
  1775  065A  00AC               	movwf	sprintf@c
  1776  065B  082C               	movf	sprintf@c,w
  1777  065C  1D03               	btfss	3,2
  1778  065D  2E5F               	goto	u711
  1779  065E  2E60               	goto	u710
  1780  065F                     u711:
  1781  065F  2D85               	goto	l1253
  1782  0660                     u710:
  1783  0660                     l1305:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1786  0660  082B               	movf	sprintf@sp,w
  1787  0661  0084               	movwf	4
  1788  0662  1383               	bcf	3,7	;select IRP bank0
  1789  0663  0180               	clrf	0
  1790  0664                     l281:
  1791  0664  0008               	return
  1792  0665                     __end_of_sprintf:
  1793                           
  1794                           	psect	text4
  1795  03FC                     __ptext4:	
  1796 ;; *************** function ___lwmod *****************
  1797 ;; Defined at:
  1798 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  divisor         2    8[COMMON] unsigned int 
  1801 ;;  dividend        2   10[COMMON] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  counter         1   13[COMMON] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2    8[COMMON] unsigned int 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         4       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0
  1815 ;;      Temps:          1       0       0       0       0
  1816 ;;      Totals:         6       0       0       0       0
  1817 ;;Total ram usage:        6 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_sprintf
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function ___lwmod
  1828  03FC                     ___lwmod:
  1829  03FC                     l1199:	
  1830                           ;incstack = 0
  1831                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1832                           
  1833  03FC  0878               	movf	___lwmod@divisor,w
  1834  03FD  0479               	iorwf	___lwmod@divisor+1,w
  1835  03FE  1903               	btfsc	3,2
  1836  03FF  2C01               	goto	u551
  1837  0400  2C02               	goto	u550
  1838  0401                     u551:
  1839  0401  2C31               	goto	l1217
  1840  0402                     u550:
  1841  0402                     l1201:
  1842  0402  01FD               	clrf	___lwmod@counter
  1843  0403  0AFD               	incf	___lwmod@counter,f
  1844  0404  2C10               	goto	l1207
  1845  0405                     l1203:
  1846  0405  3001               	movlw	1
  1847  0406                     u565:
  1848  0406  1003               	clrc
  1849  0407  0DF8               	rlf	___lwmod@divisor,f
  1850  0408  0DF9               	rlf	___lwmod@divisor+1,f
  1851  0409  3EFF               	addlw	-1
  1852  040A  1D03               	skipz
  1853  040B  2C06               	goto	u565
  1854  040C                     l1205:
  1855  040C  3001               	movlw	1
  1856  040D  00FC               	movwf	??___lwmod
  1857  040E  087C               	movf	??___lwmod,w
  1858  040F  07FD               	addwf	___lwmod@counter,f
  1859  0410                     l1207:
  1860  0410  1FF9               	btfss	___lwmod@divisor+1,7
  1861  0411  2C13               	goto	u571
  1862  0412  2C14               	goto	u570
  1863  0413                     u571:
  1864  0413  2C05               	goto	l1203
  1865  0414                     u570:
  1866  0414                     l1209:
  1867  0414  0879               	movf	___lwmod@divisor+1,w
  1868  0415  027B               	subwf	___lwmod@dividend+1,w
  1869  0416  1D03               	skipz
  1870  0417  2C1A               	goto	u585
  1871  0418  0878               	movf	___lwmod@divisor,w
  1872  0419  027A               	subwf	___lwmod@dividend,w
  1873  041A                     u585:
  1874  041A  1C03               	skipc
  1875  041B  2C1D               	goto	u581
  1876  041C  2C1E               	goto	u580
  1877  041D                     u581:
  1878  041D  2C24               	goto	l1213
  1879  041E                     u580:
  1880  041E                     l1211:
  1881  041E  0878               	movf	___lwmod@divisor,w
  1882  041F  02FA               	subwf	___lwmod@dividend,f
  1883  0420  0879               	movf	___lwmod@divisor+1,w
  1884  0421  1C03               	skipc
  1885  0422  03FB               	decf	___lwmod@dividend+1,f
  1886  0423  02FB               	subwf	___lwmod@dividend+1,f
  1887  0424                     l1213:
  1888  0424  3001               	movlw	1
  1889  0425                     u595:
  1890  0425  1003               	clrc
  1891  0426  0CF9               	rrf	___lwmod@divisor+1,f
  1892  0427  0CF8               	rrf	___lwmod@divisor,f
  1893  0428  3EFF               	addlw	-1
  1894  0429  1D03               	skipz
  1895  042A  2C25               	goto	u595
  1896  042B                     l1215:
  1897  042B  3001               	movlw	1
  1898  042C  02FD               	subwf	___lwmod@counter,f
  1899  042D  1D03               	btfss	3,2
  1900  042E  2C30               	goto	u601
  1901  042F  2C31               	goto	u600
  1902  0430                     u601:
  1903  0430  2C14               	goto	l1209
  1904  0431                     u600:
  1905  0431                     l1217:
  1906  0431  087B               	movf	___lwmod@dividend+1,w
  1907  0432  00F9               	movwf	?___lwmod+1
  1908  0433  087A               	movf	___lwmod@dividend,w
  1909  0434  00F8               	movwf	?___lwmod
  1910  0435                     l567:
  1911  0435  0008               	return
  1912  0436                     __end_of___lwmod:
  1913                           
  1914                           	psect	text5
  1915  0436                     __ptext5:	
  1916 ;; *************** function ___lwdiv *****************
  1917 ;; Defined at:
  1918 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  divisor         2    0[COMMON] unsigned int 
  1921 ;;  dividend        2    2[COMMON] unsigned int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  quotient        2    5[COMMON] unsigned int 
  1924 ;;  counter         1    7[COMMON] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2    0[COMMON] unsigned int 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         4       0       0       0       0
  1935 ;;      Locals:         3       0       0       0       0
  1936 ;;      Temps:          1       0       0       0       0
  1937 ;;      Totals:         8       0       0       0       0
  1938 ;;Total ram usage:        8 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_sprintf
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function ___lwdiv
  1949  0436                     ___lwdiv:
  1950  0436                     l1173:	
  1951                           ;incstack = 0
  1952                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1953                           
  1954  0436  01F5               	clrf	___lwdiv@quotient
  1955  0437  01F6               	clrf	___lwdiv@quotient+1
  1956  0438                     l1175:
  1957  0438  0870               	movf	___lwdiv@divisor,w
  1958  0439  0471               	iorwf	___lwdiv@divisor+1,w
  1959  043A  1903               	btfsc	3,2
  1960  043B  2C3D               	goto	u481
  1961  043C  2C3E               	goto	u480
  1962  043D                     u481:
  1963  043D  2C75               	goto	l1195
  1964  043E                     u480:
  1965  043E                     l1177:
  1966  043E  01F7               	clrf	___lwdiv@counter
  1967  043F  0AF7               	incf	___lwdiv@counter,f
  1968  0440  2C4C               	goto	l1183
  1969  0441                     l1179:
  1970  0441  3001               	movlw	1
  1971  0442                     u495:
  1972  0442  1003               	clrc
  1973  0443  0DF0               	rlf	___lwdiv@divisor,f
  1974  0444  0DF1               	rlf	___lwdiv@divisor+1,f
  1975  0445  3EFF               	addlw	-1
  1976  0446  1D03               	skipz
  1977  0447  2C42               	goto	u495
  1978  0448                     l1181:
  1979  0448  3001               	movlw	1
  1980  0449  00F4               	movwf	??___lwdiv
  1981  044A  0874               	movf	??___lwdiv,w
  1982  044B  07F7               	addwf	___lwdiv@counter,f
  1983  044C                     l1183:
  1984  044C  1FF1               	btfss	___lwdiv@divisor+1,7
  1985  044D  2C4F               	goto	u501
  1986  044E  2C50               	goto	u500
  1987  044F                     u501:
  1988  044F  2C41               	goto	l1179
  1989  0450                     u500:
  1990  0450                     l1185:
  1991  0450  3001               	movlw	1
  1992  0451                     u515:
  1993  0451  1003               	clrc
  1994  0452  0DF5               	rlf	___lwdiv@quotient,f
  1995  0453  0DF6               	rlf	___lwdiv@quotient+1,f
  1996  0454  3EFF               	addlw	-1
  1997  0455  1D03               	skipz
  1998  0456  2C51               	goto	u515
  1999  0457  0871               	movf	___lwdiv@divisor+1,w
  2000  0458  0273               	subwf	___lwdiv@dividend+1,w
  2001  0459  1D03               	skipz
  2002  045A  2C5D               	goto	u525
  2003  045B  0870               	movf	___lwdiv@divisor,w
  2004  045C  0272               	subwf	___lwdiv@dividend,w
  2005  045D                     u525:
  2006  045D  1C03               	skipc
  2007  045E  2C60               	goto	u521
  2008  045F  2C61               	goto	u520
  2009  0460                     u521:
  2010  0460  2C68               	goto	l1191
  2011  0461                     u520:
  2012  0461                     l1187:
  2013  0461  0870               	movf	___lwdiv@divisor,w
  2014  0462  02F2               	subwf	___lwdiv@dividend,f
  2015  0463  0871               	movf	___lwdiv@divisor+1,w
  2016  0464  1C03               	skipc
  2017  0465  03F3               	decf	___lwdiv@dividend+1,f
  2018  0466  02F3               	subwf	___lwdiv@dividend+1,f
  2019  0467                     l1189:
  2020  0467  1475               	bsf	___lwdiv@quotient,0
  2021  0468                     l1191:
  2022  0468  3001               	movlw	1
  2023  0469                     u535:
  2024  0469  1003               	clrc
  2025  046A  0CF1               	rrf	___lwdiv@divisor+1,f
  2026  046B  0CF0               	rrf	___lwdiv@divisor,f
  2027  046C  3EFF               	addlw	-1
  2028  046D  1D03               	skipz
  2029  046E  2C69               	goto	u535
  2030  046F                     l1193:
  2031  046F  3001               	movlw	1
  2032  0470  02F7               	subwf	___lwdiv@counter,f
  2033  0471  1D03               	btfss	3,2
  2034  0472  2C74               	goto	u541
  2035  0473  2C75               	goto	u540
  2036  0474                     u541:
  2037  0474  2C50               	goto	l1185
  2038  0475                     u540:
  2039  0475                     l1195:
  2040  0475  0876               	movf	___lwdiv@quotient+1,w
  2041  0476  00F1               	movwf	?___lwdiv+1
  2042  0477  0875               	movf	___lwdiv@quotient,w
  2043  0478  00F0               	movwf	?___lwdiv
  2044  0479                     l557:
  2045  0479  0008               	return
  2046  047A                     __end_of___lwdiv:
  2047                           
  2048                           	psect	text6
  2049  047A                     __ptext6:	
  2050 ;; *************** function ___awdiv *****************
  2051 ;; Defined at:
  2052 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  divisor         2    0[COMMON] int 
  2055 ;;  dividend        2    2[COMMON] int 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  quotient        2    7[COMMON] int 
  2058 ;;  sign            1    6[COMMON] unsigned char 
  2059 ;;  counter         1    5[COMMON] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2    0[COMMON] int 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2069 ;;      Params:         4       0       0       0       0
  2070 ;;      Locals:         4       0       0       0       0
  2071 ;;      Temps:          1       0       0       0       0
  2072 ;;      Totals:         9       0       0       0       0
  2073 ;;Total ram usage:        9 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_MPU6050_Read
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function ___awdiv
  2084  047A                     ___awdiv:
  2085  047A                     l1313:	
  2086                           ;incstack = 0
  2087                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2088                           
  2089  047A  01F6               	clrf	___awdiv@sign
  2090  047B                     l1315:
  2091  047B  1FF1               	btfss	___awdiv@divisor+1,7
  2092  047C  2C7E               	goto	u721
  2093  047D  2C7F               	goto	u720
  2094  047E                     u721:
  2095  047E  2C86               	goto	l1321
  2096  047F                     u720:
  2097  047F                     l1317:
  2098  047F  09F0               	comf	___awdiv@divisor,f
  2099  0480  09F1               	comf	___awdiv@divisor+1,f
  2100  0481  0AF0               	incf	___awdiv@divisor,f
  2101  0482  1903               	skipnz
  2102  0483  0AF1               	incf	___awdiv@divisor+1,f
  2103  0484                     l1319:
  2104  0484  01F6               	clrf	___awdiv@sign
  2105  0485  0AF6               	incf	___awdiv@sign,f
  2106  0486                     l1321:
  2107  0486  1FF3               	btfss	___awdiv@dividend+1,7
  2108  0487  2C89               	goto	u731
  2109  0488  2C8A               	goto	u730
  2110  0489                     u731:
  2111  0489  2C93               	goto	l1327
  2112  048A                     u730:
  2113  048A                     l1323:
  2114  048A  09F2               	comf	___awdiv@dividend,f
  2115  048B  09F3               	comf	___awdiv@dividend+1,f
  2116  048C  0AF2               	incf	___awdiv@dividend,f
  2117  048D  1903               	skipnz
  2118  048E  0AF3               	incf	___awdiv@dividend+1,f
  2119  048F                     l1325:
  2120  048F  3001               	movlw	1
  2121  0490  00F4               	movwf	??___awdiv
  2122  0491  0874               	movf	??___awdiv,w
  2123  0492  06F6               	xorwf	___awdiv@sign,f
  2124  0493                     l1327:
  2125  0493  01F7               	clrf	___awdiv@quotient
  2126  0494  01F8               	clrf	___awdiv@quotient+1
  2127  0495                     l1329:
  2128  0495  0870               	movf	___awdiv@divisor,w
  2129  0496  0471               	iorwf	___awdiv@divisor+1,w
  2130  0497  1903               	btfsc	3,2
  2131  0498  2C9A               	goto	u741
  2132  0499  2C9B               	goto	u740
  2133  049A                     u741:
  2134  049A  2CD2               	goto	l1349
  2135  049B                     u740:
  2136  049B                     l1331:
  2137  049B  01F5               	clrf	___awdiv@counter
  2138  049C  0AF5               	incf	___awdiv@counter,f
  2139  049D  2CA9               	goto	l1337
  2140  049E                     l1333:
  2141  049E  3001               	movlw	1
  2142  049F                     u755:
  2143  049F  1003               	clrc
  2144  04A0  0DF0               	rlf	___awdiv@divisor,f
  2145  04A1  0DF1               	rlf	___awdiv@divisor+1,f
  2146  04A2  3EFF               	addlw	-1
  2147  04A3  1D03               	skipz
  2148  04A4  2C9F               	goto	u755
  2149  04A5                     l1335:
  2150  04A5  3001               	movlw	1
  2151  04A6  00F4               	movwf	??___awdiv
  2152  04A7  0874               	movf	??___awdiv,w
  2153  04A8  07F5               	addwf	___awdiv@counter,f
  2154  04A9                     l1337:
  2155  04A9  1FF1               	btfss	___awdiv@divisor+1,7
  2156  04AA  2CAC               	goto	u761
  2157  04AB  2CAD               	goto	u760
  2158  04AC                     u761:
  2159  04AC  2C9E               	goto	l1333
  2160  04AD                     u760:
  2161  04AD                     l1339:
  2162  04AD  3001               	movlw	1
  2163  04AE                     u775:
  2164  04AE  1003               	clrc
  2165  04AF  0DF7               	rlf	___awdiv@quotient,f
  2166  04B0  0DF8               	rlf	___awdiv@quotient+1,f
  2167  04B1  3EFF               	addlw	-1
  2168  04B2  1D03               	skipz
  2169  04B3  2CAE               	goto	u775
  2170  04B4  0871               	movf	___awdiv@divisor+1,w
  2171  04B5  0273               	subwf	___awdiv@dividend+1,w
  2172  04B6  1D03               	skipz
  2173  04B7  2CBA               	goto	u785
  2174  04B8  0870               	movf	___awdiv@divisor,w
  2175  04B9  0272               	subwf	___awdiv@dividend,w
  2176  04BA                     u785:
  2177  04BA  1C03               	skipc
  2178  04BB  2CBD               	goto	u781
  2179  04BC  2CBE               	goto	u780
  2180  04BD                     u781:
  2181  04BD  2CC5               	goto	l1345
  2182  04BE                     u780:
  2183  04BE                     l1341:
  2184  04BE  0870               	movf	___awdiv@divisor,w
  2185  04BF  02F2               	subwf	___awdiv@dividend,f
  2186  04C0  0871               	movf	___awdiv@divisor+1,w
  2187  04C1  1C03               	skipc
  2188  04C2  03F3               	decf	___awdiv@dividend+1,f
  2189  04C3  02F3               	subwf	___awdiv@dividend+1,f
  2190  04C4                     l1343:
  2191  04C4  1477               	bsf	___awdiv@quotient,0
  2192  04C5                     l1345:
  2193  04C5  3001               	movlw	1
  2194  04C6                     u795:
  2195  04C6  1003               	clrc
  2196  04C7  0CF1               	rrf	___awdiv@divisor+1,f
  2197  04C8  0CF0               	rrf	___awdiv@divisor,f
  2198  04C9  3EFF               	addlw	-1
  2199  04CA  1D03               	skipz
  2200  04CB  2CC6               	goto	u795
  2201  04CC                     l1347:
  2202  04CC  3001               	movlw	1
  2203  04CD  02F5               	subwf	___awdiv@counter,f
  2204  04CE  1D03               	btfss	3,2
  2205  04CF  2CD1               	goto	u801
  2206  04D0  2CD2               	goto	u800
  2207  04D1                     u801:
  2208  04D1  2CAD               	goto	l1339
  2209  04D2                     u800:
  2210  04D2                     l1349:
  2211  04D2  0876               	movf	___awdiv@sign,w
  2212  04D3  1903               	btfsc	3,2
  2213  04D4  2CD6               	goto	u811
  2214  04D5  2CD7               	goto	u810
  2215  04D6                     u811:
  2216  04D6  2CDC               	goto	l1353
  2217  04D7                     u810:
  2218  04D7                     l1351:
  2219  04D7  09F7               	comf	___awdiv@quotient,f
  2220  04D8  09F8               	comf	___awdiv@quotient+1,f
  2221  04D9  0AF7               	incf	___awdiv@quotient,f
  2222  04DA  1903               	skipnz
  2223  04DB  0AF8               	incf	___awdiv@quotient+1,f
  2224  04DC                     l1353:
  2225  04DC  0878               	movf	___awdiv@quotient+1,w
  2226  04DD  00F1               	movwf	?___awdiv+1
  2227  04DE  0877               	movf	___awdiv@quotient,w
  2228  04DF  00F0               	movwf	?___awdiv
  2229  04E0                     l438:
  2230  04E0  0008               	return
  2231  04E1                     __end_of___awdiv:
  2232                           
  2233                           	psect	text7
  2234  0387                     __ptext7:	
  2235 ;; *************** function _UART_Write_String *****************
  2236 ;; Defined at:
  2237 ;;		line 36 in file "USART.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  buf             1    wreg     PTR unsigned char 
  2240 ;;		 -> MPU6050_Read@buffer(40), 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  buf             1    4[COMMON] PTR unsigned char 
  2243 ;;		 -> MPU6050_Read@buffer(40), 
  2244 ;;  i               2    2[COMMON] int 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         0       0       0       0       0
  2255 ;;      Locals:         3       0       0       0       0
  2256 ;;      Temps:          1       0       0       0       0
  2257 ;;      Totals:         4       0       0       0       0
  2258 ;;Total ram usage:        4 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    1
  2261 ;; This function calls:
  2262 ;;		_UART_Write
  2263 ;; This function is called by:
  2264 ;;		_MPU6050_Read
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _UART_Write_String
  2270  0387                     _UART_Write_String:
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2274                           ;UART_Write_String@buf stored from wreg
  2275  0387  00F4               	movwf	UART_Write_String@buf
  2276  0388                     l1221:
  2277                           
  2278                           ;USART.c: 36: void UART_Write_String(char* buf);USART.c: 37: {;USART.c: 38:     int i=0;
  2279  0388  01F2               	clrf	UART_Write_String@i
  2280  0389  01F3               	clrf	UART_Write_String@i+1
  2281                           
  2282                           ;USART.c: 39:     while(buf[i] != '\0')
  2283  038A  2B9C               	goto	l1227
  2284  038B                     l1223:
  2285                           
  2286                           ;USART.c: 40:         UART_Write(buf[i++]);
  2287  038B  0872               	movf	UART_Write_String@i,w
  2288  038C  0774               	addwf	UART_Write_String@buf,w
  2289  038D  00F1               	movwf	??_UART_Write_String
  2290  038E  0871               	movf	??_UART_Write_String,w
  2291  038F  0084               	movwf	4
  2292  0390  0800               	movf	0,w
  2293  0391  120A  118A  2332  120A  118A  	fcall	_UART_Write
  2294  0396                     l1225:
  2295  0396  3001               	movlw	1
  2296  0397  07F2               	addwf	UART_Write_String@i,f
  2297  0398  1803               	skipnc
  2298  0399  0AF3               	incf	UART_Write_String@i+1,f
  2299  039A  3000               	movlw	0
  2300  039B  07F3               	addwf	UART_Write_String@i+1,f
  2301  039C                     l1227:
  2302                           
  2303                           ;USART.c: 39:     while(buf[i] != '\0')
  2304  039C  0872               	movf	UART_Write_String@i,w
  2305  039D  0774               	addwf	UART_Write_String@buf,w
  2306  039E  00F1               	movwf	??_UART_Write_String
  2307  039F  0871               	movf	??_UART_Write_String,w
  2308  03A0  0084               	movwf	4
  2309  03A1  1383               	bcf	3,7	;select IRP bank0
  2310  03A2  0800               	movf	0,w
  2311  03A3  1D03               	btfss	3,2
  2312  03A4  2BA6               	goto	u611
  2313  03A5  2BA7               	goto	u610
  2314  03A6                     u611:
  2315  03A6  2B8B               	goto	l1223
  2316  03A7                     u610:
  2317  03A7                     l57:
  2318  03A7  0008               	return
  2319  03A8                     __end_of_UART_Write_String:
  2320                           
  2321                           	psect	text8
  2322  0332                     __ptext8:	
  2323 ;; *************** function _UART_Write *****************
  2324 ;; Defined at:
  2325 ;;		line 30 in file "USART.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  data            1    wreg     unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  data            1    0[COMMON] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         1       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0
  2342 ;;      Totals:         1       0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_UART_Write_String
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _UART_Write
  2354  0332                     _UART_Write:
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _UART_Write: [wreg]
  2358                           ;UART_Write@data stored from wreg
  2359  0332  00F0               	movwf	UART_Write@data
  2360  0333                     l1161:
  2361  0333                     l48:	
  2362                           ;USART.c: 30: void UART_Write(unsigned char data);USART.c: 31: {;USART.c: 32:   while(!T
      +                          RMT);
  2363                           
  2364  0333  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0334  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0335  1C98               	btfss	24,1	;volatile
  2367  0336  2B38               	goto	u441
  2368  0337  2B39               	goto	u440
  2369  0338                     u441:
  2370  0338  2B33               	goto	l48
  2371  0339                     u440:
  2372  0339                     l1163:
  2373                           
  2374                           ;USART.c: 33:   TXREG = data;
  2375  0339  0870               	movf	UART_Write@data,w
  2376  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2377  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2378  033C  0099               	movwf	25	;volatile
  2379  033D                     l51:
  2380  033D  0008               	return
  2381  033E                     __end_of_UART_Write:
  2382                           
  2383                           	psect	text9
  2384  03A8                     __ptext9:	
  2385 ;; *************** function _I2C_Read *****************
  2386 ;; Defined at:
  2387 ;;		line 89 in file "I2c.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  ACK_NACK        1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2392 ;;  Data            1    2[COMMON] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      unsigned char 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         2       0       0       0       0
  2404 ;;      Temps:          1       0       0       0       0
  2405 ;;      Totals:         3       0       0       0       0
  2406 ;;Total ram usage:        3 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		_I2C_ACK
  2411 ;;		_I2C_NACK
  2412 ;; This function is called by:
  2413 ;;		_MPU6050_Read
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _I2C_Read
  2419  03A8                     _I2C_Read:
  2420                           
  2421                           ;incstack = 0
  2422                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2423                           ;I2C_Read@ACK_NACK stored from wreg
  2424  03A8  00F1               	movwf	I2C_Read@ACK_NACK
  2425  03A9                     l1237:
  2426                           
  2427                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  2428  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2429  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2430  03AB  1591               	bsf	17,3	;volatile
  2431  03AC                     l163:	
  2432                           ;I2c.c: 94:     while(!BF);
  2433                           
  2434  03AC  1C14               	btfss	20,0	;volatile
  2435  03AD  2BAF               	goto	u621
  2436  03AE  2BB0               	goto	u620
  2437  03AF                     u621:
  2438  03AF  2BAC               	goto	l163
  2439  03B0                     u620:
  2440  03B0                     l1239:
  2441                           
  2442                           ;I2c.c: 95:     Data = SSPBUF;
  2443  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2444  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2445  03B2  0813               	movf	19,w	;volatile
  2446  03B3  00F0               	movwf	??_I2C_Read
  2447  03B4  0870               	movf	??_I2C_Read,w
  2448  03B5  00F2               	movwf	I2C_Read@Data
  2449  03B6                     l1241:
  2450                           
  2451                           ;I2c.c: 96:     if(ACK_NACK==0)
  2452  03B6  0871               	movf	I2C_Read@ACK_NACK,w
  2453  03B7  1D03               	btfss	3,2
  2454  03B8  2BBA               	goto	u631
  2455  03B9  2BBB               	goto	u630
  2456  03BA                     u631:
  2457  03BA  2BC1               	goto	l1245
  2458  03BB                     u630:
  2459  03BB                     l1243:
  2460                           
  2461                           ;I2c.c: 97:         I2C_ACK();
  2462  03BB  120A  118A  2320  120A  118A  	fcall	_I2C_ACK
  2463  03C0  2BC6               	goto	l168
  2464  03C1                     l1245:
  2465                           
  2466                           ;I2c.c: 99:         I2C_NACK();
  2467  03C1  120A  118A  2329  120A  118A  	fcall	_I2C_NACK
  2468  03C6                     l168:
  2469  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2470  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2471  03C8  1D8C               	btfss	12,3	;volatile
  2472  03C9  2BCB               	goto	u641
  2473  03CA  2BCC               	goto	u640
  2474  03CB                     u641:
  2475  03CB  2BC6               	goto	l168
  2476  03CC                     u640:
  2477  03CC                     l170:
  2478                           
  2479                           ;I2c.c: 101:     SSPIF=0;
  2480  03CC  118C               	bcf	12,3	;volatile
  2481  03CD                     l1247:
  2482                           
  2483                           ;I2c.c: 102:     return Data;
  2484  03CD  0872               	movf	I2C_Read@Data,w
  2485  03CE                     l171:
  2486  03CE  0008               	return
  2487  03CF                     __end_of_I2C_Read:
  2488                           
  2489                           	psect	text10
  2490  0329                     __ptext10:	
  2491 ;; *************** function _I2C_NACK *****************
  2492 ;; Defined at:
  2493 ;;		line 62 in file "I2c.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		None
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_I2C_Read
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _I2C_NACK
  2522  0329                     _I2C_NACK:
  2523  0329                     l1171:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _I2C_NACK: []
  2526                           
  2527                           
  2528                           ;I2c.c: 64:  ACKDT = 1;
  2529  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2530  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2531  032B  1691               	bsf	17,5	;volatile
  2532                           
  2533                           ;I2c.c: 65:  ACKEN = 1;
  2534  032C  1611               	bsf	17,4	;volatile
  2535  032D                     l145:	
  2536                           ;I2c.c: 66:     while(ACKEN);
  2537                           
  2538  032D  1A11               	btfsc	17,4	;volatile
  2539  032E  2B30               	goto	u471
  2540  032F  2B31               	goto	u470
  2541  0330                     u471:
  2542  0330  2B2D               	goto	l145
  2543  0331                     u470:
  2544  0331                     l148:
  2545  0331  0008               	return
  2546  0332                     __end_of_I2C_NACK:
  2547                           
  2548                           	psect	text11
  2549  0320                     __ptext11:	
  2550 ;; *************** function _I2C_ACK *****************
  2551 ;; Defined at:
  2552 ;;		line 55 in file "I2c.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		None
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_I2C_Read
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _I2C_ACK
  2581  0320                     _I2C_ACK:
  2582  0320                     l1169:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _I2C_ACK: []
  2585                           
  2586                           
  2587                           ;I2c.c: 57:  ACKDT = 0;
  2588  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0322  1291               	bcf	17,5	;volatile
  2591                           
  2592                           ;I2c.c: 58:     ACKEN = 1;
  2593  0323  1611               	bsf	17,4	;volatile
  2594  0324                     l139:	
  2595                           ;I2c.c: 59:     while(ACKEN);
  2596                           
  2597  0324  1A11               	btfsc	17,4	;volatile
  2598  0325  2B27               	goto	u461
  2599  0326  2B28               	goto	u460
  2600  0327                     u461:
  2601  0327  2B24               	goto	l139
  2602  0328                     u460:
  2603  0328                     l142:
  2604  0328  0008               	return
  2605  0329                     __end_of_I2C_ACK:
  2606                           
  2607                           	psect	text12
  2608  04E1                     __ptext12:	
  2609 ;; *************** function _MPU6050_Init *****************
  2610 ;; Defined at:
  2611 ;;		line 19 in file "MPU.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, pclath, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0
  2627 ;;      Temps:          3       0       0       0       0
  2628 ;;      Totals:         3       0       0       0       0
  2629 ;;Total ram usage:        3 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    3
  2632 ;; This function calls:
  2633 ;;		_I2C_Master_Init
  2634 ;;		_I2C_Master_Stop
  2635 ;;		_I2C_Master_Write
  2636 ;;		_I2C_Start
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _MPU6050_Init
  2644  04E1                     _MPU6050_Init:
  2645  04E1                     l1357:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2648                           
  2649                           
  2650                           ;MPU.c: 22:   _delay((unsigned long)((100)*(16000000/4000.0)));
  2651  04E1  3003               	movlw	3
  2652  04E2  00F4               	movwf	??_MPU6050_Init+2
  2653  04E3  3008               	movlw	8
  2654  04E4  00F3               	movwf	??_MPU6050_Init+1
  2655  04E5  3077               	movlw	119
  2656  04E6  00F2               	movwf	??_MPU6050_Init
  2657  04E7                     u847:
  2658  04E7  0BF2               	decfsz	??_MPU6050_Init,f
  2659  04E8  2CE7               	goto	u847
  2660  04E9  0BF3               	decfsz	??_MPU6050_Init+1,f
  2661  04EA  2CE7               	goto	u847
  2662  04EB  0BF4               	decfsz	??_MPU6050_Init+2,f
  2663  04EC  2CE7               	goto	u847
  2664  04ED                     l1359:
  2665                           
  2666                           ;MPU.c: 23:   I2C_Master_Init();
  2667  04ED  120A  118A  233E  120A  118A  	fcall	_I2C_Master_Init
  2668  04F2                     l1361:
  2669                           
  2670                           ;MPU.c: 26:   I2C_Start(0xD0);
  2671  04F2  30D0               	movlw	208
  2672  04F3  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  2673  04F8                     l1363:
  2674                           
  2675                           ;MPU.c: 27:   I2C_Master_Write(0x19);
  2676  04F8  3019               	movlw	25
  2677  04F9  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2678  04FE                     l1365:
  2679                           
  2680                           ;MPU.c: 28:   I2C_Master_Write(0x07);
  2681  04FE  3007               	movlw	7
  2682  04FF  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2683  0504                     l1367:
  2684                           
  2685                           ;MPU.c: 29:   I2C_Master_Stop();
  2686  0504  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  2687  0509                     l1369:
  2688                           
  2689                           ;MPU.c: 32:   I2C_Start(0xD0);
  2690  0509  30D0               	movlw	208
  2691  050A  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  2692  050F                     l1371:
  2693                           
  2694                           ;MPU.c: 33:   I2C_Master_Write(0x6B);
  2695  050F  306B               	movlw	107
  2696  0510  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2697  0515                     l1373:
  2698                           
  2699                           ;MPU.c: 34:   I2C_Master_Write(0x01);
  2700  0515  3001               	movlw	1
  2701  0516  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2702  051B                     l1375:
  2703                           
  2704                           ;MPU.c: 35:   I2C_Master_Stop();
  2705  051B  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  2706  0520                     l1377:
  2707                           
  2708                           ;MPU.c: 38:   I2C_Start(0xD0);
  2709  0520  30D0               	movlw	208
  2710  0521  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  2711  0526                     l1379:
  2712                           
  2713                           ;MPU.c: 39:   I2C_Master_Write(0x1A);
  2714  0526  301A               	movlw	26
  2715  0527  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2716  052C                     l1381:
  2717                           
  2718                           ;MPU.c: 40:   I2C_Master_Write(0x00);
  2719  052C  3000               	movlw	0
  2720  052D  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2721  0532                     l1383:
  2722                           
  2723                           ;MPU.c: 41:   I2C_Master_Stop();
  2724  0532  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  2725  0537                     l1385:
  2726                           
  2727                           ;MPU.c: 44:   I2C_Start(0xD0);
  2728  0537  30D0               	movlw	208
  2729  0538  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  2730  053D                     l1387:
  2731                           
  2732                           ;MPU.c: 45:   I2C_Master_Write(0x1C);
  2733  053D  301C               	movlw	28
  2734  053E  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2735  0543                     l1389:
  2736                           
  2737                           ;MPU.c: 46:   I2C_Master_Write(0x00);
  2738  0543  3000               	movlw	0
  2739  0544  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2740  0549                     l1391:
  2741                           
  2742                           ;MPU.c: 47:   I2C_Master_Stop();
  2743  0549  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  2744  054E                     l1393:
  2745                           
  2746                           ;MPU.c: 50:   I2C_Start(0xD0);
  2747  054E  30D0               	movlw	208
  2748  054F  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  2749  0554                     l1395:
  2750                           
  2751                           ;MPU.c: 51:   I2C_Master_Write(0x1B);
  2752  0554  301B               	movlw	27
  2753  0555  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2754  055A                     l1397:
  2755                           
  2756                           ;MPU.c: 52:   I2C_Master_Write(0x18);
  2757  055A  3018               	movlw	24
  2758  055B  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2759  0560                     l1399:
  2760                           
  2761                           ;MPU.c: 53:   I2C_Master_Stop();
  2762  0560  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  2763  0565                     l1401:
  2764                           
  2765                           ;MPU.c: 56:   I2C_Start(0xD0);
  2766  0565  30D0               	movlw	208
  2767  0566  120A  118A  2377  120A  118A  	fcall	_I2C_Start
  2768  056B                     l1403:
  2769                           
  2770                           ;MPU.c: 57:   I2C_Master_Write(0x38);
  2771  056B  3038               	movlw	56
  2772  056C  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2773  0571                     l1405:
  2774                           
  2775                           ;MPU.c: 58:   I2C_Master_Write(0x01);
  2776  0571  3001               	movlw	1
  2777  0572  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2778  0577                     l1407:
  2779                           
  2780                           ;MPU.c: 59:   I2C_Master_Stop();
  2781  0577  120A  118A  2317  120A  118A  	fcall	_I2C_Master_Stop
  2782  057C                     l78:
  2783  057C  0008               	return
  2784  057D                     __end_of_MPU6050_Init:
  2785                           
  2786                           	psect	text13
  2787  0377                     __ptext13:	
  2788 ;; *************** function _I2C_Start *****************
  2789 ;; Defined at:
  2790 ;;		line 36 in file "I2c.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  add             1    wreg     unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  add             1    1[COMMON] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0, pclath, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2804 ;;      Params:         0       0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0
  2807 ;;      Totals:         1       0       0       0       0
  2808 ;;Total ram usage:        1 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    2
  2811 ;; This function calls:
  2812 ;;		_I2C_Master_Wait
  2813 ;;		_I2C_Master_Write
  2814 ;; This function is called by:
  2815 ;;		_MPU6050_Init
  2816 ;;		_MPU6050_Read
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function _I2C_Start
  2822  0377                     _I2C_Start:
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2826                           ;I2C_Start@add stored from wreg
  2827  0377  00F1               	movwf	I2C_Start@add
  2828  0378                     l1229:
  2829                           
  2830                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  2831  0378  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Wait
  2832  037D                     l1231:
  2833                           
  2834                           ;I2c.c: 39:     SEN = 1;
  2835  037D  1683               	bsf	3,5	;RP0=1, select bank1
  2836  037E  1303               	bcf	3,6	;RP1=0, select bank1
  2837  037F  1411               	bsf	17,0	;volatile
  2838                           
  2839                           ;I2c.c: 40:     I2C_Master_Write(add);
  2840  0380  0871               	movf	I2C_Start@add,w
  2841  0381  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Write
  2842  0386                     l130:
  2843  0386  0008               	return
  2844  0387                     __end_of_I2C_Start:
  2845                           
  2846                           	psect	text14
  2847  0367                     __ptext14:	
  2848 ;; *************** function _I2C_Master_Write *****************
  2849 ;; Defined at:
  2850 ;;		line 69 in file "I2c.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  data            1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  data            1    0[COMMON] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      unsigned char 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         1       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         1       0       0       0       0
  2868 ;;Total ram usage:        1 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    1
  2871 ;; This function calls:
  2872 ;;		_I2C_Master_Wait
  2873 ;; This function is called by:
  2874 ;;		_MPU6050_Init
  2875 ;;		_MPU6050_Read
  2876 ;;		_I2C_Start
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           
  2881                           ;psect for function _I2C_Master_Write
  2882  0367                     _I2C_Master_Write:
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2886                           ;I2C_Master_Write@data stored from wreg
  2887  0367  00F0               	movwf	I2C_Master_Write@data
  2888  0368                     l1165:
  2889                           
  2890                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  2891  0368  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Wait
  2892  036D                     l1167:
  2893                           
  2894                           ;I2c.c: 72:     SSPBUF = data;
  2895  036D  0870               	movf	I2C_Master_Write@data,w
  2896  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2897  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0370  0093               	movwf	19	;volatile
  2899  0371                     l151:	
  2900                           ;I2c.c: 73:     while(!SSPIF);
  2901                           
  2902  0371  1D8C               	btfss	12,3	;volatile
  2903  0372  2B74               	goto	u451
  2904  0373  2B75               	goto	u450
  2905  0374                     u451:
  2906  0374  2B71               	goto	l151
  2907  0375                     u450:
  2908  0375                     l153:
  2909                           
  2910                           ;I2c.c: 74:  SSPIF = 0;
  2911  0375  118C               	bcf	12,3	;volatile
  2912  0376                     l154:	
  2913                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2914                           
  2915  0376  0008               	return
  2916  0377                     __end_of_I2C_Master_Write:
  2917                           
  2918                           	psect	text15
  2919  0317                     __ptext15:	
  2920 ;; *************** function _I2C_Master_Stop *****************
  2921 ;; Defined at:
  2922 ;;		line 49 in file "I2c.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		_I2C_Master_Wait
  2945 ;; This function is called by:
  2946 ;;		_MPU6050_Init
  2947 ;;		_MPU6050_Read
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _I2C_Master_Stop
  2953  0317                     _I2C_Master_Stop:
  2954  0317                     l1233:	
  2955                           ;incstack = 0
  2956                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2957                           
  2958                           
  2959                           ;I2c.c: 51:     I2C_Master_Wait();
  2960  0317  120A  118A  234B  120A  118A  	fcall	_I2C_Master_Wait
  2961  031C                     l1235:
  2962                           
  2963                           ;I2c.c: 52:     PEN = 1;
  2964  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2965  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2966  031E  1511               	bsf	17,2	;volatile
  2967  031F                     l136:
  2968  031F  0008               	return
  2969  0320                     __end_of_I2C_Master_Stop:
  2970                           
  2971                           	psect	text16
  2972  034B                     __ptext16:	
  2973 ;; *************** function _I2C_Master_Wait *****************
  2974 ;; Defined at:
  2975 ;;		line 25 in file "I2c.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_I2C_Start
  2999 ;;		_I2C_Master_Stop
  3000 ;;		_I2C_Master_Write
  3001 ;;		_I2C_Master_Start
  3002 ;;		_I2C_Master_RepeatedStart
  3003 ;;		_I2C_Read_Byte
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function _I2C_Master_Wait
  3009  034B                     _I2C_Master_Wait:
  3010  034B                     l1157:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3013                           
  3014  034B                     l121:	
  3015                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3016                           
  3017  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3018  034C  1303               	bcf	3,6	;RP1=0, select bank1
  3019  034D  1914               	btfsc	20,2	;volatile
  3020  034E  2B50               	goto	u421
  3021  034F  2B51               	goto	u420
  3022  0350                     u421:
  3023  0350  2B4B               	goto	l121
  3024  0351                     u420:
  3025  0351                     l1159:
  3026  0351  0811               	movf	17,w	;volatile
  3027  0352  391F               	andlw	31
  3028  0353  1D03               	btfss	3,2
  3029  0354  2B56               	goto	u431
  3030  0355  2B57               	goto	u430
  3031  0356                     u431:
  3032  0356  2B4B               	goto	l121
  3033  0357                     u430:
  3034  0357                     l124:
  3035  0357  0008               	return
  3036  0358                     __end_of_I2C_Master_Wait:
  3037                           
  3038                           	psect	text17
  3039  033E                     __ptext17:	
  3040 ;; *************** function _I2C_Master_Init *****************
  3041 ;; Defined at:
  3042 ;;		line 15 in file "I2c.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_MPU6050_Init
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _I2C_Master_Init
  3071  033E                     _I2C_Master_Init:
  3072  033E                     l863:	
  3073                           ;incstack = 0
  3074                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3075                           
  3076                           
  3077                           ;I2c.c: 17:   SSPCON = 0x28;
  3078  033E  3028               	movlw	40
  3079  033F  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0340  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0341  0094               	movwf	20	;volatile
  3082  0342                     l865:
  3083                           
  3084                           ;I2c.c: 18:   SSPCON2 = 0x00;
  3085  0342  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0343  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0344  0191               	clrf	17	;volatile
  3088  0345                     l867:
  3089                           
  3090                           ;I2c.c: 19:   SSPSTAT = 0x00;
  3091  0345  0194               	clrf	20	;volatile
  3092                           
  3093                           ;I2c.c: 20:   SSPADD = ((16000000/4)/9600) - 1;
  3094  0346  309F               	movlw	159
  3095  0347  0093               	movwf	19	;volatile
  3096  0348                     l869:
  3097                           
  3098                           ;I2c.c: 21:   TRISC3 = 1;
  3099  0348  1587               	bsf	7,3	;volatile
  3100  0349                     l871:
  3101                           
  3102                           ;I2c.c: 22:   TRISC4 = 1;
  3103  0349  1607               	bsf	7,4	;volatile
  3104  034A                     l118:
  3105  034A  0008               	return
  3106  034B                     __end_of_I2C_Master_Init:
  3107  007E                     btemp	set	126	;btemp
  3108  007E                     wtemp0	set	126
  3109                           
  3110                           	psect	config
  3111                           
  3112                           ;Config register CONFIG1 @ 0x2007
  3113                           ;	Oscillator Selection bits
  3114                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3115                           ;	Watchdog Timer Enable bit
  3116                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3117                           ;	Power-up Timer Enable bit
  3118                           ;	PWRTE = OFF, PWRT disabled
  3119                           ;	RE3/MCLR pin function select bit
  3120                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3121                           ;	Code Protection bit
  3122                           ;	CP = OFF, Program memory code protection is disabled
  3123                           ;	Data Code Protection bit
  3124                           ;	CPD = OFF, Data memory code protection is disabled
  3125                           ;	Brown Out Reset Selection bits
  3126                           ;	BOREN = OFF, BOR disabled
  3127                           ;	Internal External Switchover bit
  3128                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3129                           ;	Fail-Safe Clock Monitor Enabled bit
  3130                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3131                           ;	Low Voltage Programming Enable bit
  3132                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3133                           ;	In-Circuit Debugger Mode bit
  3134                           ;	DEBUG = 0x1, unprogrammed default
  3135  2007                     	org	8199
  3136  2007  2CD2               	dw	11474
  3137                           
  3138                           ;Config register CONFIG2 @ 0x2008
  3139                           ;	Brown-out Reset Selection bit
  3140                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3141                           ;	Flash Program Memory Self Write Enable bits
  3142                           ;	WRT = OFF, Write protection off
  3143  2008                     	org	8200
  3144  2008  3EFF               	dw	16127

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3338
                                             71 BANK0      3     3      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    3272
                                             13 BANK0     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     4      0     343
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 10:43:44 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l51 033D                          l45 0366                          l48 0333  
                        l57 03A7                          l81 07FB                          l78 057C  
              ___awdiv@sign 0076                          fsr 0004  __size_of_UART_Write_String 0021  
                       l121 034B                         l130 0386                         l124 0357  
                       l118 034A                         l142 0328                         l151 0371  
                       l136 031F                         l153 0375                         l145 032D  
                       l154 0376                         l170 03CC                         l139 0324  
                       l171 03CE                         l163 03AC                         l148 0331  
                       l168 03C6                         l281 0664                         l438 04E0  
                       l557 0479                         l567 0435                         l871 0349  
                       l863 033E                         l865 0342                         l867 0345  
                       l869 0348                         _RD2 0042                         u420 0351  
                       u500 0450                         u421 0350                         u501 044F  
                       u430 0357                         u431 0356                         u440 0339  
                       u520 0461                         u600 0431                         _PEN 048A  
                       u441 0338                         u521 0460                         u601 0430  
                       u450 0375                         u610 03A7                         u451 0374  
                       u611 03A6                         u515 0451                         u460 0328  
                       u620 03B0                         u540 0475                         u700 064E  
                       u461 0327                         u621 03AF                         u541 0474  
                       u525 045D                         u701 064D                         u470 0331  
                       u630 03BB                         u550 0402                         u710 0660  
                       u471 0330                         u631 03BA                         u535 0469  
                       u551 0401                         u711 065F                         u640 03CC  
                       u800 04D2                         u720 047F                         u480 043E  
                       u641 03CB                         u801 04D1                         u721 047E  
                       u481 043D                         u810 04D7                         u730 048A  
                       u570 0414                         u650 058B                         u811 04D6  
                       u731 0489                         u571 0413                         u651 058A  
                       u740 049B                         u580 041E                         u660 05C5  
                       _SEN 0488                         u741 049A                         u581 041D  
                       u565 0406                         u661 05C4                         u670 05EB  
                       u495 0442                         u671 05EA                         u760 04AD  
                       u680 05F6                         u761 04AC                         u585 041A  
                       u681 05F5                         u690 05FC                         u755 049F  
                       u595 0425                         u691 05FB                         u675 05E7  
                       u780 04BE                         u781 04BD                         u837 03F1  
                       u847 04E7                         u775 04AE                         u785 04BA  
                       u795 04C6             __end_of_I2C_ACK 0329                         fsr0 0004  
                       indf 0000          MPU6050_Read@buffer 0031                        l1001 0358  
                      l1011 0364                        l1003 035B                        l1013 0365  
                      l1005 035D                        l1007 035E                        l1201 0402  
                      l1009 0361                        l1211 041E                        l1203 0405  
                      l1221 0388                        l1213 0424                        l1205 040C  
                      l1301 0645                        l1231 037D                        l1223 038B  
                      l1215 042B                        l1207 0410                        l1303 064E  
                      l1233 0317                        l1401 0565                        l1241 03B6  
                      l1161 0333                        l1225 0396                        l1321 0486  
                      l1313 047A                        l1209 0414                        l1217 0431  
                      l1305 0660                        l1235 031C                        l1403 056B  
                      l1171 0329                        l1243 03BB                        l1163 0339  
                      l1227 039C                        l1331 049B                        l1323 048A  
                      l1315 047B                        l1251 0580                        l1411 067C  
                      l1157 034B                        l1165 0368                        l1229 0378  
                      l1405 0571                        l1245 03C1                        l1237 03A9  
                      l1341 04BE                        l1333 049E                        l1325 048F  
                      l1317 047F                        l1181 0448                        l1173 0436  
                      l1253 0585                        l1421 070D                        l1413 0699  
                      l1159 0351                        l1167 036D                        l1407 0577  
                      l1247 03CD                        l1239 03B0                        l1351 04D7  
                      l1343 04C4                        l1335 04A5                        l1327 0493  
                      l1319 0484                        l1191 0468                        l1183 044C  
                      l1175 0438                        l1271 05C5                        l1263 0598  
                      l1255 058B                        l1431 0777                        l1423 072A  
                      l1415 06B6                        l1361 04F2                        l1169 0320  
                      l1353 04DC                        l1345 04C5                        l1337 04A9  
                      l1329 0495                        l1193 046F                        l1185 0450  
                      l1177 043E                        l1281 05D0                        l1273 05C9  
                      l1265 05B5                        l1257 0592                        l1441 07C9  
                      l1433 0787                        l1425 0747                        l1417 06D3  
                      l1409 0665                        l1371 050F                        l1363 04F8  
                      l1347 04CC                        l1339 04AD                        l1187 0461  
                      l1179 0441                        l1195 0475                        l1291 0603  
                      l1275 05CE                        l1267 05BD                        l1259 0597  
                      l1443 07DF                        l1435 079D                        l1427 074C  
                      l1419 06F0                        l1451 03D7                        l1381 052C  
                      l1373 0515                        l1365 04FE                        l1357 04E1  
                      l1349 04D2                        l1189 0467                        l1293 0607  
                      l1285 05EC                        l1269 05C1                        l1445 07E5  
                      l1437 07A3                        l1429 0763                        l1453 03D8  
                      l1391 0549                        l1383 0532                        l1375 051B  
                      l1367 0504                        l1359 04ED                        l1199 03FC  
                      l1295 060C                        l1287 05F6                        l1439 07B9  
                      l1455 03E0                        l1447 03CF                        l1393 054E  
                      l1385 0537                        l1377 0520                        l1369 0509  
                      l1297 063A                        l1289 05FC                        l1457 03E4  
                      l1449 03D4                        l1395 0554                        l1387 053D  
                      l1379 0526                        l1299 0641                        l1459 03E9  
                      l1397 055A                        l1389 0543                        l1399 0560  
                      l1499 05AA                        STR_1 0047                        STR_2 0020  
                      STR_3 003A                        STR_4 005E                        STR_5 0013  
                      STR_6 002D                        STR_7 0053                        _BRGH 04C2  
                      _RCEN 048B                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 0332                        _main 03CF            __end_of_I2C_Read 03CF  
                      btemp 007E                        start 0000            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 04E1  
           ___awdiv@divisor 0070             __end_of___lwdiv 047A             __end_of___lwmod 0436  
           ___awdiv@counter 0075                       _SPBRG 0099                       _PORTB 0006  
                     _TRISB 0086                       _SSPIF 0063                       _TXREG 0019  
               ?_UART_Write 0070               ?_MPU6050_Init 0070               ?_MPU6050_Read 0070  
           __end_of_dpowers 0013           __end_of_I2C_Start 0387                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0665  
            MPU6050_Read@Ax 0059              MPU6050_Read@Ay 0065              MPU6050_Read@Az 005B  
            MPU6050_Read@Gx 005F              MPU6050_Read@Gy 0061              MPU6050_Read@Gz 0063  
           __initialization 07FC                __end_of_main 03FC                   ??_I2C_ACK 0070  
                    ??_main 0067           ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072  
            ??_MPU6050_Read 002D          ??_I2C_Master_Write 0070            ___awdiv@dividend 0072  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISD2 0442                      _TRISC4 043C                      _TRISC6 043E  
                    _TRISC7 043F                      _SSPCON 0014                      _SSPBUF 0013  
          I2C_Read@ACK_NACK 0071         __size_of_UART_Write 000C                   ??___awdiv 0074  
                 ??___lwdiv 0074                   ??___lwmod 007C            ___awdiv@quotient 0077  
                 ?_I2C_NACK 0070                   ?_I2C_Read 0070                   ??_sprintf 0023  
   __end_of__initialization 07FC              __pcstackCOMMON 0070                  ??_I2C_NACK 0070  
                ??_I2C_Read 0070                I2C_Read@Data 0072                  __pmaintext 03CF  
      __end_of_MPU6050_Init 057D        __end_of_MPU6050_Read 07FC                     _I2C_ACK 0320  
                   _ACKSTAT 048E                ??_UART_Write 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094               ?_UART_TX_Init 0070                  __stringtab 0003  
              I2C_Start@add 0071                   _I2C_Start 0377                     ___awdiv 047A  
        __end_of_UART_Write 033E                     ___lwdiv 0436                     ___lwmod 03FC  
                   __ptext1 0358                     __ptext2 0665                     __ptext3 057D  
                   __ptext4 03FC                     __ptext5 0436                     __ptext6 047A  
                   __ptext7 0387                     __ptext8 0332                     __ptext9 03A8  
                   _dpowers 0009    __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009              ??_UART_TX_Init 0070                     _sprintf 057D  
      end_of_initialization 07FC                  ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010  
            UART_Write@data 0070           __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027  
     __size_of_MPU6050_Init 009C       __size_of_MPU6050_Read 0197         start_initialization 07FC  
             MPU6050_Read@T 005D                _MPU6050_Init 04E1                _MPU6050_Read 0665  
         ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070  
               ??_I2C_Start 0071        __end_of_UART_TX_Init 0367                    ?_I2C_ACK 0070  
                 ___latbits 0002               __pcstackBANK0 0020                 sprintf@flag 0027  
               sprintf@prec 0028            _I2C_Master_Write 0367            ___lwdiv@dividend 0072  
                  ?___awdiv 0070                    ?___lwdiv 0070                    ?___lwmod 0078  
      I2C_Master_Write@data 0070                   __pstrings 0003                    _I2C_NACK 0329  
                  _I2C_Read 03A8            ___lwdiv@quotient 0075                    ?_sprintf 0020  
          __size_of_I2C_ACK 0009        UART_Write_String@buf 0074                 __stringbase 0008  
     __size_of_UART_TX_Init 000F            __size_of___awdiv 0067            __size_of___lwdiv 0044  
          __size_of___lwmod 003A          __end_of__stringtab 0009           _UART_Write_String 0387  
                sprintf@val 0029             _I2C_Master_Init 033E             _I2C_Master_Wait 034B  
           _I2C_Master_Stop 0317          ?_UART_Write_String 0070             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077                    __ptext10 0329                    __ptext11 0320  
                  __ptext12 04E1                    __ptext13 0377                    __ptext14 0367  
                  __ptext15 0317                    __ptext16 034B                    __ptext17 033E  
          __size_of_sprintf 00E8                _UART_TX_Init 0358         ??_UART_Write_String 0071  
             __size_of_main 002D   __end_of_UART_Write_String 03A8    __end_of_I2C_Master_Write 0377  
                 sprintf@ap 0026                   sprintf@sp 002B            ___lwmod@dividend 007A  
                 stringcode 0003          UART_Write_String@i 0072     __end_of_I2C_Master_Init 034B  
   __end_of_I2C_Master_Wait 0358     __end_of_I2C_Master_Stop 0320                    sprintf@c 002C  
                  sprintf@f 0020             ___lwmod@divisor 0078             ___lwmod@counter 007D  
                  stringdir 0003                    stringtab 0003                  _UART_Write 0332  
