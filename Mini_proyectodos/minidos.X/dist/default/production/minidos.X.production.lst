

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 23:22:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  0003                     __pstrings:
   456  0003                     stringtab:
   457  0003                     __stringtab:
   458  0003                     stringcode:	
   459                           ;	String table - string pointers are 1 byte each
   460                           
   461  0003                     stringdir:
   462  0003  3000               	movlw	high stringdir
   463  0004  008A               	movwf	10
   464  0005  0804               	movf	4,w
   465  0006  0A84               	incf	4,f
   466  0007  0782               	addwf	2,f
   467  0008                     __stringbase:
   468  0008  3400               	retlw	0
   469  0009                     __end_of__stringtab:
   470  0009                     _dpowers:
   471  0009  3401               	retlw	1
   472  000A  3400               	retlw	0
   473  000B  340A               	retlw	10
   474  000C  3400               	retlw	0
   475  000D  3464               	retlw	100
   476  000E  3400               	retlw	0
   477  000F  34E8               	retlw	232
   478  0010  3403               	retlw	3
   479  0011  3410               	retlw	16
   480  0012  3427               	retlw	39
   481  0013                     __end_of_dpowers:
   482  0013                     _SSPBUF	set	19
   483  0014                     _SSPCON	set	20
   484  0006                     _PORTB	set	6
   485  0019                     _TXREG	set	25
   486  0063                     _SSPIF	set	99
   487  00C7                     _SPEN	set	199
   488  0042                     _RD2	set	66
   489  0093                     _SSPADD	set	147
   490  0094                     _SSPSTAT	set	148
   491  0091                     _SSPCON2	set	145
   492  0099                     _SPBRG	set	153
   493  0086                     _TRISB	set	134
   494  04A0                     _BF	set	1184
   495  048B                     _RCEN	set	1163
   496  048E                     _ACKSTAT	set	1166
   497  048C                     _ACKEN	set	1164
   498  048D                     _ACKDT	set	1165
   499  048A                     _PEN	set	1162
   500  0489                     _RSEN	set	1161
   501  0488                     _SEN	set	1160
   502  043C                     _TRISC4	set	1084
   503  043B                     _TRISC3	set	1083
   504  04C1                     _TRMT	set	1217
   505  04C5                     _TXEN	set	1221
   506  043F                     _TRISC7	set	1087
   507  043E                     _TRISC6	set	1086
   508  04C4                     _SYNC	set	1220
   509  04C2                     _BRGH	set	1218
   510  0442                     _TRISD2	set	1090
   511  0189                     _ANSELH	set	393
   512  0013                     STR_1:
   513  0013  3420               	retlw	32	;' '
   514  0014  3441               	retlw	65	;'A'
   515  0015  3479               	retlw	121	;'y'
   516  0016  3420               	retlw	32	;' '
   517  0017  343D               	retlw	61	;'='
   518  0018  3420               	retlw	32	;' '
   519  0019  3425               	retlw	37	;'%'
   520  001A  3464               	retlw	100	;'d'
   521  001B  3420               	retlw	32	;' '
   522  001C  3420               	retlw	32	;' '
   523  001D  3420               	retlw	32	;' '
   524  001E  3420               	retlw	32	;' '
   525  001F  3400               	retlw	0
   526                           
   527                           	psect	cinit
   528  07FC                     start_initialization:	
   529                           ; #config settings
   530                           
   531  07FC                     __initialization:
   532  07FC                     end_of_initialization:	
   533                           ;End of C runtime variable initialization code
   534                           
   535  07FC                     __end_of__initialization:
   536  07FC  0183               	clrf	3
   537  07FD  120A  118A  2C81   	ljmp	_main	;jump to C main() function
   538                           
   539                           	psect	cstackCOMMON
   540  0070                     __pcstackCOMMON:
   541  0070                     ?_UART_TX_Init:
   542  0070                     ??_UART_TX_Init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_MPU6050_Init:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_MPU6050_Read:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Master_Init:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Master_Init:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_I2C_Start:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_I2C_Master_Write:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_I2C_Master_Write:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_I2C_Master_Stop:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_I2C_Master_Stop:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_I2C_Read:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_I2C_Read:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_main:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_UART_Write:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_UART_Write:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_I2C_Master_Wait:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ??_I2C_Master_Wait:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_I2C_ACK:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ??_I2C_ACK:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_I2C_NACK:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ??_I2C_NACK:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?___awdiv:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?___lwdiv:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     UART_Write@data:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     I2C_Master_Write@data:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ___awdiv@divisor:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ___lwdiv@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625  0070                     	ds	1
   626  0071                     ??_I2C_Start:
   627  0071                     ?_UART_Write_String:	
   628                           ; 1 bytes @ 0x1
   629                           
   630  0071                     I2C_Start@add:	
   631                           ; 1 bytes @ 0x1
   632                           
   633  0071                     I2C_Read@ACK_NACK:	
   634                           ; 1 bytes @ 0x1
   635                           
   636  0071                     UART_Write_String@buf:	
   637                           ; 1 bytes @ 0x1
   638                           
   639                           
   640                           ; 2 bytes @ 0x1
   641  0071                     	ds	1
   642  0072                     ??_MPU6050_Init:
   643  0072                     I2C_Read@Data:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___awdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ___lwdiv@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652                           
   653                           ; 2 bytes @ 0x2
   654  0072                     	ds	1
   655  0073                     ??_UART_Write_String:
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??___awdiv:
   660  0074                     ??___lwdiv:	
   661                           ; 1 bytes @ 0x4
   662                           
   663                           
   664                           ; 1 bytes @ 0x4
   665  0074                     	ds	1
   666  0075                     ___awdiv@counter:
   667  0075                     UART_Write_String@i:	
   668                           ; 1 bytes @ 0x5
   669                           
   670  0075                     ___lwdiv@quotient:	
   671                           ; 2 bytes @ 0x5
   672                           
   673                           
   674                           ; 2 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     ___awdiv@sign:
   677                           
   678                           ; 1 bytes @ 0x6
   679  0076                     	ds	1
   680  0077                     ___lwdiv@counter:
   681  0077                     ___awdiv@quotient:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 2 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     ?___lwmod:
   688  0078                     ___lwmod@divisor:	
   689                           ; 2 bytes @ 0x8
   690                           
   691                           
   692                           ; 2 bytes @ 0x8
   693  0078                     	ds	2
   694  007A                     ___lwmod@dividend:
   695                           
   696                           ; 2 bytes @ 0xA
   697  007A                     	ds	2
   698  007C                     ??___lwmod:
   699                           
   700                           ; 1 bytes @ 0xC
   701  007C                     	ds	1
   702  007D                     ___lwmod@counter:
   703                           
   704                           ; 1 bytes @ 0xD
   705  007D                     	ds	1
   706                           
   707                           	psect	cstackBANK0
   708  0020                     __pcstackBANK0:
   709  0020                     ?_sprintf:
   710  0020                     sprintf@f:	
   711                           ; 2 bytes @ 0x0
   712                           
   713                           
   714                           ; 1 bytes @ 0x0
   715  0020                     	ds	3
   716  0023                     ??_sprintf:
   717                           
   718                           ; 1 bytes @ 0x3
   719  0023                     	ds	3
   720  0026                     sprintf@ap:
   721                           
   722                           ; 1 bytes @ 0x6
   723  0026                     	ds	1
   724  0027                     sprintf@flag:
   725                           
   726                           ; 1 bytes @ 0x7
   727  0027                     	ds	1
   728  0028                     sprintf@prec:
   729                           
   730                           ; 1 bytes @ 0x8
   731  0028                     	ds	1
   732  0029                     sprintf@val:
   733                           
   734                           ; 2 bytes @ 0x9
   735  0029                     	ds	2
   736  002B                     sprintf@sp:
   737                           
   738                           ; 1 bytes @ 0xB
   739  002B                     	ds	1
   740  002C                     sprintf@c:
   741                           
   742                           ; 1 bytes @ 0xC
   743  002C                     	ds	1
   744  002D                     ??_MPU6050_Read:
   745                           
   746                           ; 1 bytes @ 0xD
   747  002D                     	ds	4
   748  0031                     MPU6050_Read@buffer:
   749                           
   750                           ; 40 bytes @ 0x11
   751  0031                     	ds	52
   752  0065                     MPU6050_Read@Ay:
   753                           
   754                           ; 2 bytes @ 0x45
   755  0065                     	ds	2
   756  0067                     ??_main:
   757                           
   758                           ; 1 bytes @ 0x47
   759  0067                     	ds	3
   760                           
   761                           	psect	maintext
   762  0481                     __pmaintext:	
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 54 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       3       0       0       0
   785 ;;      Totals:         0       3       0       0       0
   786 ;;Total ram usage:        3 bytes
   787 ;; Hardware stack levels required when called:    4
   788 ;; This function calls:
   789 ;;		_MPU6050_Init
   790 ;;		_MPU6050_Read
   791 ;;		_UART_TX_Init
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _main
   799  0481                     _main:
   800  0481                     l1415:	
   801                           ;incstack = 0
   802                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   803                           
   804                           
   805                           ;main.c: 56:     UART_TX_Init();
   806  0481  120A  118A  242B  120A  118A  	fcall	_UART_TX_Init
   807  0486                     l1417:
   808                           
   809                           ;main.c: 57:     TRISD2 = 0;
   810  0486  1683               	bsf	3,5	;RP0=1, select bank1
   811  0487  1303               	bcf	3,6	;RP1=0, select bank1
   812  0488  1108               	bcf	8,2	;volatile
   813  0489                     l1419:
   814                           
   815                           ;main.c: 58:     TRISB = 0;
   816  0489  0186               	clrf	6	;volatile
   817  048A                     l1421:
   818                           
   819                           ;main.c: 59:     ANSELH = 0;
   820  048A  1683               	bsf	3,5	;RP0=1, select bank3
   821  048B  1703               	bsf	3,6	;RP1=1, select bank3
   822  048C  0189               	clrf	9	;volatile
   823                           
   824                           ;main.c: 61:     MPU6050_Init();
   825  048D  120A  118A  25C2  120A  118A  	fcall	_MPU6050_Init
   826  0492                     l1423:
   827                           
   828                           ;main.c: 66:  {;main.c: 67:         RD2 = ~RD2;
   829  0492  3004               	movlw	4
   830  0493  1283               	bcf	3,5	;RP0=0, select bank0
   831  0494  1303               	bcf	3,6	;RP1=0, select bank0
   832  0495  0688               	xorwf	8,f
   833  0496                     l1425:
   834                           
   835                           ;main.c: 68:         MPU6050_Read();
   836  0496  120A  118A  265F  120A  118A  	fcall	_MPU6050_Read
   837  049B                     l1427:
   838                           
   839                           ;main.c: 69:         _delay((unsigned long)((50)*(16000000/4000.0)));
   840  049B  3002               	movlw	2
   841  049C  1283               	bcf	3,5	;RP0=0, select bank0
   842  049D  1303               	bcf	3,6	;RP1=0, select bank0
   843  049E  00E9               	movwf	??_main+2
   844  049F  3004               	movlw	4
   845  04A0  00E8               	movwf	??_main+1
   846  04A1  30B9               	movlw	185
   847  04A2  00E7               	movwf	??_main
   848  04A3                     u837:
   849  04A3  0BE7               	decfsz	??_main,f
   850  04A4  2CA3               	goto	u837
   851  04A5  0BE8               	decfsz	??_main+1,f
   852  04A6  2CA3               	goto	u837
   853  04A7  0BE9               	decfsz	??_main+2,f
   854  04A8  2CA3               	goto	u837
   855  04A9  2CAA               	nop2
   856  04AA  2C92               	goto	l1423
   857  04AB  120A  118A  2800   	ljmp	start
   858  04AE                     __end_of_main:
   859                           
   860                           	psect	text1
   861  042B                     __ptext1:	
   862 ;; *************** function _UART_TX_Init *****************
   863 ;; Defined at:
   864 ;;		line 17 in file "USART.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _UART_TX_Init
   893  042B                     _UART_TX_Init:
   894  042B                     l1001:	
   895                           ;incstack = 0
   896                           ; Regs used in _UART_TX_Init: [wreg]
   897                           
   898                           
   899                           ;USART.c: 19:   BRGH = 0;
   900  042B  1683               	bsf	3,5	;RP0=1, select bank1
   901  042C  1303               	bcf	3,6	;RP1=0, select bank1
   902  042D  1118               	bcf	24,2	;volatile
   903  042E                     l1003:
   904                           
   905                           ;USART.c: 20:   SPBRG = 12;
   906  042E  300C               	movlw	12
   907  042F  0099               	movwf	25	;volatile
   908  0430                     l1005:
   909                           
   910                           ;USART.c: 22:   SYNC = 0;
   911  0430  1218               	bcf	24,4	;volatile
   912  0431                     l1007:
   913                           
   914                           ;USART.c: 23:   SPEN = 1;
   915  0431  1283               	bcf	3,5	;RP0=0, select bank0
   916  0432  1303               	bcf	3,6	;RP1=0, select bank0
   917  0433  1798               	bsf	24,7	;volatile
   918  0434                     l1009:
   919                           
   920                           ;USART.c: 25:   TRISC6 = 1;
   921  0434  1683               	bsf	3,5	;RP0=1, select bank1
   922  0435  1303               	bcf	3,6	;RP1=0, select bank1
   923  0436  1707               	bsf	7,6	;volatile
   924  0437                     l1011:
   925                           
   926                           ;USART.c: 26:   TRISC7 = 1;
   927  0437  1787               	bsf	7,7	;volatile
   928  0438                     l1013:
   929                           
   930                           ;USART.c: 27:   TXEN = 1;
   931  0438  1698               	bsf	24,5	;volatile
   932  0439                     l45:
   933  0439  0008               	return
   934  043A                     __end_of_UART_TX_Init:
   935                           
   936                           	psect	text2
   937  065F                     __ptext2:	
   938 ;; *************** function _MPU6050_Read *****************
   939 ;; Defined at:
   940 ;;		line 62 in file "MPU.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  buffer         40   17[BANK0 ] unsigned char [40]
   945 ;;  Ay              2   69[BANK0 ] int 
   946 ;;  Gz              2    0        int 
   947 ;;  Gy              2    0        int 
   948 ;;  Gx              2    0        int 
   949 ;;  T               2    0        int 
   950 ;;  Az              2    0        int 
   951 ;;  Ax              2    0        int 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0      54       0       0       0
   963 ;;      Temps:          0       4       0       0       0
   964 ;;      Totals:         0      58       0       0       0
   965 ;;Total ram usage:       58 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    3
   968 ;; This function calls:
   969 ;;		_I2C_Master_Stop
   970 ;;		_I2C_Master_Write
   971 ;;		_I2C_Read
   972 ;;		_I2C_Start
   973 ;;		_UART_Write_String
   974 ;;		___awdiv
   975 ;;		_sprintf
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _MPU6050_Read
   983  065F                     _MPU6050_Read:
   984  065F                     l1393:	
   985                           ;incstack = 0
   986                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   987                           
   988                           
   989                           ;MPU.c: 64:   char buffer[40];;MPU.c: 65:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 67:   I2C_St
      +                          art(0xD0);
   990  065F  30D0               	movlw	208
   991  0660  120A  118A  244A  120A  118A  	fcall	_I2C_Start
   992                           
   993                           ;MPU.c: 68:   I2C_Master_Write(0x3B);
   994  0665  303B               	movlw	59
   995  0666  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
   996                           
   997                           ;MPU.c: 69:   I2C_Master_Stop();
   998  066B  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
   999                           
  1000                           ;MPU.c: 70:   I2C_Start(0xD1);
  1001  0670  30D1               	movlw	209
  1002  0671  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  1003  0676                     l1395:
  1004  0676  3000               	movlw	0
  1005  0677  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1006  067C  3000               	movlw	0
  1007  067D  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1008  0682                     l1397:
  1009                           
  1010                           ;MPU.c: 72:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1011  0682  3000               	movlw	0
  1012  0683  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1013  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1015  068A  00AD               	movwf	??_MPU6050_Read
  1016  068B  01AE               	clrf	??_MPU6050_Read+1
  1017  068C  3000               	movlw	0
  1018  068D  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1019  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0694  00AF               	movwf	??_MPU6050_Read+2
  1022  0695  01B0               	clrf	??_MPU6050_Read+3
  1023  0696  082F               	movf	??_MPU6050_Read+2,w
  1024  0697  00B0               	movwf	??_MPU6050_Read+3
  1025  0698  01AF               	clrf	??_MPU6050_Read+2
  1026  0699  082D               	movf	??_MPU6050_Read,w
  1027  069A  042F               	iorwf	??_MPU6050_Read+2,w
  1028  069B  00E5               	movwf	MPU6050_Read@Ay
  1029  069C  082E               	movf	??_MPU6050_Read+1,w
  1030  069D  0430               	iorwf	??_MPU6050_Read+3,w
  1031  069E  00E6               	movwf	MPU6050_Read@Ay+1
  1032  069F                     l1399:
  1033  069F  3000               	movlw	0
  1034  06A0  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1035  06A5  3000               	movlw	0
  1036  06A6  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1037  06AB                     l1401:
  1038  06AB  3000               	movlw	0
  1039  06AC  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1040  06B1  3000               	movlw	0
  1041  06B2  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1042  06B7                     l1403:
  1043  06B7  3000               	movlw	0
  1044  06B8  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1045  06BD  3000               	movlw	0
  1046  06BE  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1047  06C3                     l1405:
  1048  06C3  3000               	movlw	0
  1049  06C4  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1050  06C9  3000               	movlw	0
  1051  06CA  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1052  06CF                     l1407:
  1053  06CF  3000               	movlw	0
  1054  06D0  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1055  06D5  3001               	movlw	1
  1056  06D6  120A  118A  245A  120A  118A  	fcall	_I2C_Read
  1057  06DB                     l1409:
  1058                           
  1059                           ;MPU.c: 78:   I2C_Master_Stop();
  1060  06DB  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  1061  06E0                     l1411:
  1062                           
  1063                           ;MPU.c: 80:   PORTB = (Ay+16384)/128;
  1064  06E0  3080               	movlw	128
  1065  06E1  00F0               	movwf	___awdiv@divisor
  1066  06E2  3000               	movlw	0
  1067  06E3  00F1               	movwf	___awdiv@divisor+1
  1068  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1069  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1070  06E6  0865               	movf	MPU6050_Read@Ay,w
  1071  06E7  3E00               	addlw	0
  1072  06E8  00F2               	movwf	___awdiv@dividend
  1073  06E9  0866               	movf	MPU6050_Read@Ay+1,w
  1074  06EA  1803               	skipnc
  1075  06EB  3E01               	addlw	1
  1076  06EC  3E40               	addlw	64
  1077  06ED  00F3               	movwf	___awdiv@dividend+1
  1078  06EE  120A  118A  255B  120A  118A  	fcall	___awdiv
  1079  06F3  0870               	movf	?___awdiv,w
  1080  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1081  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1082  06F6  0086               	movwf	6	;volatile
  1083  06F7                     l1413:
  1084                           
  1085                           ;MPU.c: 85:   sprintf(buffer," Ay = %d    ",Ay);
  1086  06F7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1087  06F8  00AD               	movwf	??_MPU6050_Read
  1088  06F9  082D               	movf	??_MPU6050_Read,w
  1089  06FA  00A0               	movwf	sprintf@f
  1090  06FB  0866               	movf	MPU6050_Read@Ay+1,w
  1091  06FC  00A2               	movwf	?_sprintf+2
  1092  06FD  0865               	movf	MPU6050_Read@Ay,w
  1093  06FE  00A1               	movwf	?_sprintf+1
  1094  06FF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1095  0700  120A  118A  2714  120A  118A  	fcall	_sprintf
  1096                           
  1097                           ;MPU.c: 86:   UART_Write_String(PORTB);
  1098  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0707  0806               	movf	6,w	;volatile
  1101  0708  00AD               	movwf	??_MPU6050_Read
  1102  0709  01AE               	clrf	??_MPU6050_Read+1
  1103  070A  082D               	movf	??_MPU6050_Read,w
  1104  070B  00F1               	movwf	UART_Write_String@buf
  1105  070C  082E               	movf	??_MPU6050_Read+1,w
  1106  070D  00F2               	movwf	UART_Write_String@buf+1
  1107  070E  120A  118A  24AE  120A  118A  	fcall	_UART_Write_String
  1108  0713                     l81:
  1109  0713  0008               	return
  1110  0714                     __end_of_MPU6050_Read:
  1111                           
  1112                           	psect	text3
  1113  0714                     __ptext3:	
  1114 ;; *************** function _sprintf *****************
  1115 ;; Defined at:
  1116 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  sp              1    wreg     PTR unsigned char 
  1119 ;;		 -> MPU6050_Read@buffer(40), 
  1120 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1121 ;;		 -> STR_1(13), 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1124 ;;		 -> MPU6050_Read@buffer(40), 
  1125 ;;  tmpval          4    0        struct .
  1126 ;;  val             2    9[BANK0 ] unsigned int 
  1127 ;;  cp              2    0        PTR const unsigned char 
  1128 ;;  len             2    0        unsigned int 
  1129 ;;  c               1   12[BANK0 ] unsigned char 
  1130 ;;  prec            1    8[BANK0 ] char 
  1131 ;;  flag            1    7[BANK0 ] unsigned char 
  1132 ;;  ap              1    6[BANK0 ] PTR void [1]
  1133 ;;		 -> ?_sprintf(2), 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2    0[BANK0 ] int 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       3       0       0       0
  1144 ;;      Locals:         0       7       0       0       0
  1145 ;;      Temps:          0       3       0       0       0
  1146 ;;      Totals:         0      13       0       0       0
  1147 ;;Total ram usage:       13 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    1
  1150 ;; This function calls:
  1151 ;;		___lwdiv
  1152 ;;		___lwmod
  1153 ;; This function is called by:
  1154 ;;		_MPU6050_Read
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _sprintf
  1160  0714                     _sprintf:
  1161                           
  1162                           ;incstack = 0
  1163                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1164                           ;sprintf@sp stored from wreg
  1165  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0716  00AB               	movwf	sprintf@sp
  1168  0717                     l1235:
  1169                           
  1170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1171  0717  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1172  0718  00A3               	movwf	??_sprintf
  1173  0719  0823               	movf	??_sprintf,w
  1174  071A  00A6               	movwf	sprintf@ap
  1175                           
  1176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1177  071B  2FE5               	goto	l1287
  1178  071C                     l1237:
  1179                           
  1180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1181  071C  3025               	movlw	37
  1182  071D  062C               	xorwf	sprintf@c,w
  1183  071E  1903               	btfsc	3,2
  1184  071F  2F21               	goto	u651
  1185  0720  2F22               	goto	u650
  1186  0721                     u651:
  1187  0721  2F2E               	goto	l1243
  1188  0722                     u650:
  1189  0722                     l1239:
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1192  0722  082C               	movf	sprintf@c,w
  1193  0723  00A3               	movwf	??_sprintf
  1194  0724  082B               	movf	sprintf@sp,w
  1195  0725  0084               	movwf	4
  1196  0726  0823               	movf	??_sprintf,w
  1197  0727  1383               	bcf	3,7	;select IRP bank0
  1198  0728  0080               	movwf	0
  1199  0729                     l1241:
  1200  0729  3001               	movlw	1
  1201  072A  00A3               	movwf	??_sprintf
  1202  072B  0823               	movf	??_sprintf,w
  1203  072C  07AB               	addwf	sprintf@sp,f
  1204                           
  1205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1206  072D  2FE5               	goto	l1287
  1207  072E                     l1243:
  1208                           
  1209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1210  072E  01A7               	clrf	sprintf@flag
  1211  072F                     l1247:	
  1212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1213                           
  1214  072F  3001               	movlw	1
  1215  0730  07A0               	addwf	sprintf@f,f
  1216  0731  30FF               	movlw	-1
  1217  0732  0720               	addwf	sprintf@f,w
  1218  0733  0084               	movwf	4
  1219  0734  120A  118A  2003  120A  118A  	fcall	stringdir
  1220  0739  00AC               	movwf	sprintf@c
  1221  073A  00A3               	movwf	??_sprintf
  1222  073B  01A4               	clrf	??_sprintf+1
  1223                           
  1224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1225                           ; Switch size 1, requested type "simple"
  1226                           ; Number of cases is 1, Range of values is 0 to 0
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte            4     3 (average)
  1230                           ; direct_byte           11     8 (fixed)
  1231                           ; jumptable            260     6 (fixed)
  1232                           ;	Chosen strategy is simple_byte
  1233  073C  0824               	movf	??_sprintf+1,w
  1234  073D  3A00               	xorlw	0	; case 0
  1235  073E  1903               	skipnz
  1236  073F  2F41               	goto	l1467
  1237  0740  2FE5               	goto	l1287
  1238  0741                     l1467:
  1239                           
  1240                           ; Switch size 1, requested type "simple"
  1241                           ; Number of cases is 3, Range of values is 0 to 105
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte           10     6 (average)
  1245                           ; jumptable            260     6 (fixed)
  1246                           ;	Chosen strategy is simple_byte
  1247  0741  0823               	movf	??_sprintf,w
  1248  0742  3A00               	xorlw	0	; case 0
  1249  0743  1903               	skipnz
  1250  0744  2FF7               	goto	l1289
  1251  0745  3A64               	xorlw	100	; case 100
  1252  0746  1903               	skipnz
  1253  0747  2F4C               	goto	l1249
  1254  0748  3A0D               	xorlw	13	; case 105
  1255  0749  1903               	skipnz
  1256  074A  2F4C               	goto	l1249
  1257  074B  2FE5               	goto	l1287
  1258  074C                     l1249:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1261  074C  0826               	movf	sprintf@ap,w
  1262  074D  0084               	movwf	4
  1263  074E  1383               	bcf	3,7	;select IRP bank0
  1264  074F  0800               	movf	0,w
  1265  0750  00A9               	movwf	sprintf@val
  1266  0751  0A84               	incf	4,f
  1267  0752  0800               	movf	0,w
  1268  0753  00AA               	movwf	sprintf@val+1
  1269  0754                     l1251:
  1270  0754  3002               	movlw	2
  1271  0755  00A3               	movwf	??_sprintf
  1272  0756  0823               	movf	??_sprintf,w
  1273  0757  07A6               	addwf	sprintf@ap,f
  1274  0758                     l1253:
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1277  0758  1FAA               	btfss	sprintf@val+1,7
  1278  0759  2F5B               	goto	u661
  1279  075A  2F5C               	goto	u660
  1280  075B                     u661:
  1281  075B  2F65               	goto	l1259
  1282  075C                     u660:
  1283  075C                     l1255:
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1286  075C  3003               	movlw	3
  1287  075D  00A3               	movwf	??_sprintf
  1288  075E  0823               	movf	??_sprintf,w
  1289  075F  04A7               	iorwf	sprintf@flag,f
  1290  0760                     l1257:
  1291                           
  1292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1293  0760  09A9               	comf	sprintf@val,f
  1294  0761  09AA               	comf	sprintf@val+1,f
  1295  0762  0AA9               	incf	sprintf@val,f
  1296  0763  1903               	skipnz
  1297  0764  0AAA               	incf	sprintf@val+1,f
  1298  0765                     l1259:
  1299                           
  1300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1301  0765  01AC               	clrf	sprintf@c
  1302  0766  0AAC               	incf	sprintf@c,f
  1303  0767                     l1265:
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1306  0767  082C               	movf	sprintf@c,w
  1307  0768  00A3               	movwf	??_sprintf
  1308  0769  0723               	addwf	??_sprintf,w
  1309  076A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1310  076B  0084               	movwf	4
  1311  076C  120A  118A  2003  120A  118A  	fcall	stringdir
  1312  0771  00A4               	movwf	??_sprintf+1
  1313  0772  120A  118A  2003  120A  118A  	fcall	stringdir
  1314  0777  00A5               	movwf	??_sprintf+2
  1315  0778  0825               	movf	??_sprintf+2,w
  1316  0779  022A               	subwf	sprintf@val+1,w
  1317  077A  1D03               	skipz
  1318  077B  2F7E               	goto	u675
  1319  077C  0824               	movf	??_sprintf+1,w
  1320  077D  0229               	subwf	sprintf@val,w
  1321  077E                     u675:
  1322  077E  1803               	skipnc
  1323  077F  2F81               	goto	u671
  1324  0780  2F82               	goto	u670
  1325  0781                     u671:
  1326  0781  2F83               	goto	l1269
  1327  0782                     u670:
  1328  0782  2F8D               	goto	l1271
  1329  0783                     l1269:
  1330  0783  3001               	movlw	1
  1331  0784  00A3               	movwf	??_sprintf
  1332  0785  0823               	movf	??_sprintf,w
  1333  0786  07AC               	addwf	sprintf@c,f
  1334  0787  3005               	movlw	5
  1335  0788  062C               	xorwf	sprintf@c,w
  1336  0789  1D03               	btfss	3,2
  1337  078A  2F8C               	goto	u681
  1338  078B  2F8D               	goto	u680
  1339  078C                     u681:
  1340  078C  2F67               	goto	l1265
  1341  078D                     u680:
  1342  078D                     l1271:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1345  078D  0827               	movf	sprintf@flag,w
  1346  078E  3903               	andlw	3
  1347  078F  1903               	btfsc	3,2
  1348  0790  2F92               	goto	u691
  1349  0791  2F93               	goto	u690
  1350  0792                     u691:
  1351  0792  2F9E               	goto	l1277
  1352  0793                     u690:
  1353  0793                     l1273:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1356  0793  302D               	movlw	45
  1357  0794  00A3               	movwf	??_sprintf
  1358  0795  082B               	movf	sprintf@sp,w
  1359  0796  0084               	movwf	4
  1360  0797  0823               	movf	??_sprintf,w
  1361  0798  1383               	bcf	3,7	;select IRP bank0
  1362  0799  0080               	movwf	0
  1363  079A                     l1275:
  1364  079A  3001               	movlw	1
  1365  079B  00A3               	movwf	??_sprintf
  1366  079C  0823               	movf	??_sprintf,w
  1367  079D  07AB               	addwf	sprintf@sp,f
  1368  079E                     l1277:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1371  079E  082C               	movf	sprintf@c,w
  1372  079F  00A3               	movwf	??_sprintf
  1373  07A0  0823               	movf	??_sprintf,w
  1374  07A1  00A8               	movwf	sprintf@prec
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1377  07A2  2FDC               	goto	l1285
  1378  07A3                     l1279:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1381  07A3  300A               	movlw	10
  1382  07A4  00F8               	movwf	___lwmod@divisor
  1383  07A5  3000               	movlw	0
  1384  07A6  00F9               	movwf	___lwmod@divisor+1
  1385  07A7  0828               	movf	sprintf@prec,w
  1386  07A8  00A3               	movwf	??_sprintf
  1387  07A9  0723               	addwf	??_sprintf,w
  1388  07AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1389  07AB  0084               	movwf	4
  1390  07AC  120A  118A  2003  120A  118A  	fcall	stringdir
  1391  07B1  00F0               	movwf	___lwdiv@divisor
  1392  07B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1393  07B7  00F1               	movwf	___lwdiv@divisor+1
  1394  07B8  082A               	movf	sprintf@val+1,w
  1395  07B9  00F3               	movwf	___lwdiv@dividend+1
  1396  07BA  0829               	movf	sprintf@val,w
  1397  07BB  00F2               	movwf	___lwdiv@dividend
  1398  07BC  120A  118A  2517  120A  118A  	fcall	___lwdiv
  1399  07C1  0871               	movf	?___lwdiv+1,w
  1400  07C2  00FB               	movwf	___lwmod@dividend+1
  1401  07C3  0870               	movf	?___lwdiv,w
  1402  07C4  00FA               	movwf	___lwmod@dividend
  1403  07C5  120A  118A  24DD  120A  118A  	fcall	___lwmod
  1404  07CA  0878               	movf	?___lwmod,w
  1405  07CB  3E30               	addlw	48
  1406  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1407  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1408  07CE  00A4               	movwf	??_sprintf+1
  1409  07CF  0824               	movf	??_sprintf+1,w
  1410  07D0  00AC               	movwf	sprintf@c
  1411  07D1                     l1281:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1414  07D1  082C               	movf	sprintf@c,w
  1415  07D2  00A3               	movwf	??_sprintf
  1416  07D3  082B               	movf	sprintf@sp,w
  1417  07D4  0084               	movwf	4
  1418  07D5  0823               	movf	??_sprintf,w
  1419  07D6  1383               	bcf	3,7	;select IRP bank0
  1420  07D7  0080               	movwf	0
  1421  07D8                     l1283:
  1422  07D8  3001               	movlw	1
  1423  07D9  00A3               	movwf	??_sprintf
  1424  07DA  0823               	movf	??_sprintf,w
  1425  07DB  07AB               	addwf	sprintf@sp,f
  1426  07DC                     l1285:
  1427                           
  1428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1429  07DC  30FF               	movlw	255
  1430  07DD  00A3               	movwf	??_sprintf
  1431  07DE  0823               	movf	??_sprintf,w
  1432  07DF  07A8               	addwf	sprintf@prec,f
  1433  07E0  0A28               	incf	sprintf@prec,w
  1434  07E1  1D03               	btfss	3,2
  1435  07E2  2FE4               	goto	u701
  1436  07E3  2FE5               	goto	u700
  1437  07E4                     u701:
  1438  07E4  2FA3               	goto	l1279
  1439  07E5                     u700:
  1440  07E5                     l1287:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1443  07E5  3001               	movlw	1
  1444  07E6  07A0               	addwf	sprintf@f,f
  1445  07E7  30FF               	movlw	-1
  1446  07E8  0720               	addwf	sprintf@f,w
  1447  07E9  0084               	movwf	4
  1448  07EA  120A  118A  2003  120A  118A  	fcall	stringdir
  1449  07EF  00A3               	movwf	??_sprintf
  1450  07F0  0823               	movf	??_sprintf,w
  1451  07F1  00AC               	movwf	sprintf@c
  1452  07F2  082C               	movf	sprintf@c,w
  1453  07F3  1D03               	btfss	3,2
  1454  07F4  2FF6               	goto	u711
  1455  07F5  2FF7               	goto	u710
  1456  07F6                     u711:
  1457  07F6  2F1C               	goto	l1237
  1458  07F7                     u710:
  1459  07F7                     l1289:
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1462  07F7  082B               	movf	sprintf@sp,w
  1463  07F8  0084               	movwf	4
  1464  07F9  1383               	bcf	3,7	;select IRP bank0
  1465  07FA  0180               	clrf	0
  1466  07FB                     l281:
  1467  07FB  0008               	return
  1468  07FC                     __end_of_sprintf:
  1469                           
  1470                           	psect	text4
  1471  04DD                     __ptext4:	
  1472 ;; *************** function ___lwmod *****************
  1473 ;; Defined at:
  1474 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  divisor         2    8[COMMON] unsigned int 
  1477 ;;  dividend        2   10[COMMON] unsigned int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  counter         1   13[COMMON] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  2    8[COMMON] unsigned int 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         4       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0
  1492 ;;      Totals:         6       0       0       0       0
  1493 ;;Total ram usage:        6 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_sprintf
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function ___lwmod
  1504  04DD                     ___lwmod:
  1505  04DD                     l1183:	
  1506                           ;incstack = 0
  1507                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1508                           
  1509  04DD  0878               	movf	___lwmod@divisor,w
  1510  04DE  0479               	iorwf	___lwmod@divisor+1,w
  1511  04DF  1903               	btfsc	3,2
  1512  04E0  2CE2               	goto	u551
  1513  04E1  2CE3               	goto	u550
  1514  04E2                     u551:
  1515  04E2  2D12               	goto	l1201
  1516  04E3                     u550:
  1517  04E3                     l1185:
  1518  04E3  01FD               	clrf	___lwmod@counter
  1519  04E4  0AFD               	incf	___lwmod@counter,f
  1520  04E5  2CF1               	goto	l1191
  1521  04E6                     l1187:
  1522  04E6  3001               	movlw	1
  1523  04E7                     u565:
  1524  04E7  1003               	clrc
  1525  04E8  0DF8               	rlf	___lwmod@divisor,f
  1526  04E9  0DF9               	rlf	___lwmod@divisor+1,f
  1527  04EA  3EFF               	addlw	-1
  1528  04EB  1D03               	skipz
  1529  04EC  2CE7               	goto	u565
  1530  04ED                     l1189:
  1531  04ED  3001               	movlw	1
  1532  04EE  00FC               	movwf	??___lwmod
  1533  04EF  087C               	movf	??___lwmod,w
  1534  04F0  07FD               	addwf	___lwmod@counter,f
  1535  04F1                     l1191:
  1536  04F1  1FF9               	btfss	___lwmod@divisor+1,7
  1537  04F2  2CF4               	goto	u571
  1538  04F3  2CF5               	goto	u570
  1539  04F4                     u571:
  1540  04F4  2CE6               	goto	l1187
  1541  04F5                     u570:
  1542  04F5                     l1193:
  1543  04F5  0879               	movf	___lwmod@divisor+1,w
  1544  04F6  027B               	subwf	___lwmod@dividend+1,w
  1545  04F7  1D03               	skipz
  1546  04F8  2CFB               	goto	u585
  1547  04F9  0878               	movf	___lwmod@divisor,w
  1548  04FA  027A               	subwf	___lwmod@dividend,w
  1549  04FB                     u585:
  1550  04FB  1C03               	skipc
  1551  04FC  2CFE               	goto	u581
  1552  04FD  2CFF               	goto	u580
  1553  04FE                     u581:
  1554  04FE  2D05               	goto	l1197
  1555  04FF                     u580:
  1556  04FF                     l1195:
  1557  04FF  0878               	movf	___lwmod@divisor,w
  1558  0500  02FA               	subwf	___lwmod@dividend,f
  1559  0501  0879               	movf	___lwmod@divisor+1,w
  1560  0502  1C03               	skipc
  1561  0503  03FB               	decf	___lwmod@dividend+1,f
  1562  0504  02FB               	subwf	___lwmod@dividend+1,f
  1563  0505                     l1197:
  1564  0505  3001               	movlw	1
  1565  0506                     u595:
  1566  0506  1003               	clrc
  1567  0507  0CF9               	rrf	___lwmod@divisor+1,f
  1568  0508  0CF8               	rrf	___lwmod@divisor,f
  1569  0509  3EFF               	addlw	-1
  1570  050A  1D03               	skipz
  1571  050B  2D06               	goto	u595
  1572  050C                     l1199:
  1573  050C  3001               	movlw	1
  1574  050D  02FD               	subwf	___lwmod@counter,f
  1575  050E  1D03               	btfss	3,2
  1576  050F  2D11               	goto	u601
  1577  0510  2D12               	goto	u600
  1578  0511                     u601:
  1579  0511  2CF5               	goto	l1193
  1580  0512                     u600:
  1581  0512                     l1201:
  1582  0512  087B               	movf	___lwmod@dividend+1,w
  1583  0513  00F9               	movwf	?___lwmod+1
  1584  0514  087A               	movf	___lwmod@dividend,w
  1585  0515  00F8               	movwf	?___lwmod
  1586  0516                     l567:
  1587  0516  0008               	return
  1588  0517                     __end_of___lwmod:
  1589                           
  1590                           	psect	text5
  1591  0517                     __ptext5:	
  1592 ;; *************** function ___lwdiv *****************
  1593 ;; Defined at:
  1594 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  divisor         2    0[COMMON] unsigned int 
  1597 ;;  dividend        2    2[COMMON] unsigned int 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  quotient        2    5[COMMON] unsigned int 
  1600 ;;  counter         1    7[COMMON] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  2    0[COMMON] unsigned int 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         4       0       0       0       0
  1611 ;;      Locals:         3       0       0       0       0
  1612 ;;      Temps:          1       0       0       0       0
  1613 ;;      Totals:         8       0       0       0       0
  1614 ;;Total ram usage:        8 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_sprintf
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function ___lwdiv
  1625  0517                     ___lwdiv:
  1626  0517                     l1157:	
  1627                           ;incstack = 0
  1628                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1629                           
  1630  0517  01F5               	clrf	___lwdiv@quotient
  1631  0518  01F6               	clrf	___lwdiv@quotient+1
  1632  0519                     l1159:
  1633  0519  0870               	movf	___lwdiv@divisor,w
  1634  051A  0471               	iorwf	___lwdiv@divisor+1,w
  1635  051B  1903               	btfsc	3,2
  1636  051C  2D1E               	goto	u481
  1637  051D  2D1F               	goto	u480
  1638  051E                     u481:
  1639  051E  2D56               	goto	l1179
  1640  051F                     u480:
  1641  051F                     l1161:
  1642  051F  01F7               	clrf	___lwdiv@counter
  1643  0520  0AF7               	incf	___lwdiv@counter,f
  1644  0521  2D2D               	goto	l1167
  1645  0522                     l1163:
  1646  0522  3001               	movlw	1
  1647  0523                     u495:
  1648  0523  1003               	clrc
  1649  0524  0DF0               	rlf	___lwdiv@divisor,f
  1650  0525  0DF1               	rlf	___lwdiv@divisor+1,f
  1651  0526  3EFF               	addlw	-1
  1652  0527  1D03               	skipz
  1653  0528  2D23               	goto	u495
  1654  0529                     l1165:
  1655  0529  3001               	movlw	1
  1656  052A  00F4               	movwf	??___lwdiv
  1657  052B  0874               	movf	??___lwdiv,w
  1658  052C  07F7               	addwf	___lwdiv@counter,f
  1659  052D                     l1167:
  1660  052D  1FF1               	btfss	___lwdiv@divisor+1,7
  1661  052E  2D30               	goto	u501
  1662  052F  2D31               	goto	u500
  1663  0530                     u501:
  1664  0530  2D22               	goto	l1163
  1665  0531                     u500:
  1666  0531                     l1169:
  1667  0531  3001               	movlw	1
  1668  0532                     u515:
  1669  0532  1003               	clrc
  1670  0533  0DF5               	rlf	___lwdiv@quotient,f
  1671  0534  0DF6               	rlf	___lwdiv@quotient+1,f
  1672  0535  3EFF               	addlw	-1
  1673  0536  1D03               	skipz
  1674  0537  2D32               	goto	u515
  1675  0538  0871               	movf	___lwdiv@divisor+1,w
  1676  0539  0273               	subwf	___lwdiv@dividend+1,w
  1677  053A  1D03               	skipz
  1678  053B  2D3E               	goto	u525
  1679  053C  0870               	movf	___lwdiv@divisor,w
  1680  053D  0272               	subwf	___lwdiv@dividend,w
  1681  053E                     u525:
  1682  053E  1C03               	skipc
  1683  053F  2D41               	goto	u521
  1684  0540  2D42               	goto	u520
  1685  0541                     u521:
  1686  0541  2D49               	goto	l1175
  1687  0542                     u520:
  1688  0542                     l1171:
  1689  0542  0870               	movf	___lwdiv@divisor,w
  1690  0543  02F2               	subwf	___lwdiv@dividend,f
  1691  0544  0871               	movf	___lwdiv@divisor+1,w
  1692  0545  1C03               	skipc
  1693  0546  03F3               	decf	___lwdiv@dividend+1,f
  1694  0547  02F3               	subwf	___lwdiv@dividend+1,f
  1695  0548                     l1173:
  1696  0548  1475               	bsf	___lwdiv@quotient,0
  1697  0549                     l1175:
  1698  0549  3001               	movlw	1
  1699  054A                     u535:
  1700  054A  1003               	clrc
  1701  054B  0CF1               	rrf	___lwdiv@divisor+1,f
  1702  054C  0CF0               	rrf	___lwdiv@divisor,f
  1703  054D  3EFF               	addlw	-1
  1704  054E  1D03               	skipz
  1705  054F  2D4A               	goto	u535
  1706  0550                     l1177:
  1707  0550  3001               	movlw	1
  1708  0551  02F7               	subwf	___lwdiv@counter,f
  1709  0552  1D03               	btfss	3,2
  1710  0553  2D55               	goto	u541
  1711  0554  2D56               	goto	u540
  1712  0555                     u541:
  1713  0555  2D31               	goto	l1169
  1714  0556                     u540:
  1715  0556                     l1179:
  1716  0556  0876               	movf	___lwdiv@quotient+1,w
  1717  0557  00F1               	movwf	?___lwdiv+1
  1718  0558  0875               	movf	___lwdiv@quotient,w
  1719  0559  00F0               	movwf	?___lwdiv
  1720  055A                     l557:
  1721  055A  0008               	return
  1722  055B                     __end_of___lwdiv:
  1723                           
  1724                           	psect	text6
  1725  055B                     __ptext6:	
  1726 ;; *************** function ___awdiv *****************
  1727 ;; Defined at:
  1728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  divisor         2    0[COMMON] int 
  1731 ;;  dividend        2    2[COMMON] int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  quotient        2    7[COMMON] int 
  1734 ;;  sign            1    6[COMMON] unsigned char 
  1735 ;;  counter         1    5[COMMON] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    0[COMMON] int 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         4       0       0       0       0
  1746 ;;      Locals:         4       0       0       0       0
  1747 ;;      Temps:          1       0       0       0       0
  1748 ;;      Totals:         9       0       0       0       0
  1749 ;;Total ram usage:        9 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_MPU6050_Read
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function ___awdiv
  1760  055B                     ___awdiv:
  1761  055B                     l1297:	
  1762                           ;incstack = 0
  1763                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1764                           
  1765  055B  01F6               	clrf	___awdiv@sign
  1766  055C                     l1299:
  1767  055C  1FF1               	btfss	___awdiv@divisor+1,7
  1768  055D  2D5F               	goto	u721
  1769  055E  2D60               	goto	u720
  1770  055F                     u721:
  1771  055F  2D67               	goto	l1305
  1772  0560                     u720:
  1773  0560                     l1301:
  1774  0560  09F0               	comf	___awdiv@divisor,f
  1775  0561  09F1               	comf	___awdiv@divisor+1,f
  1776  0562  0AF0               	incf	___awdiv@divisor,f
  1777  0563  1903               	skipnz
  1778  0564  0AF1               	incf	___awdiv@divisor+1,f
  1779  0565                     l1303:
  1780  0565  01F6               	clrf	___awdiv@sign
  1781  0566  0AF6               	incf	___awdiv@sign,f
  1782  0567                     l1305:
  1783  0567  1FF3               	btfss	___awdiv@dividend+1,7
  1784  0568  2D6A               	goto	u731
  1785  0569  2D6B               	goto	u730
  1786  056A                     u731:
  1787  056A  2D74               	goto	l1311
  1788  056B                     u730:
  1789  056B                     l1307:
  1790  056B  09F2               	comf	___awdiv@dividend,f
  1791  056C  09F3               	comf	___awdiv@dividend+1,f
  1792  056D  0AF2               	incf	___awdiv@dividend,f
  1793  056E  1903               	skipnz
  1794  056F  0AF3               	incf	___awdiv@dividend+1,f
  1795  0570                     l1309:
  1796  0570  3001               	movlw	1
  1797  0571  00F4               	movwf	??___awdiv
  1798  0572  0874               	movf	??___awdiv,w
  1799  0573  06F6               	xorwf	___awdiv@sign,f
  1800  0574                     l1311:
  1801  0574  01F7               	clrf	___awdiv@quotient
  1802  0575  01F8               	clrf	___awdiv@quotient+1
  1803  0576                     l1313:
  1804  0576  0870               	movf	___awdiv@divisor,w
  1805  0577  0471               	iorwf	___awdiv@divisor+1,w
  1806  0578  1903               	btfsc	3,2
  1807  0579  2D7B               	goto	u741
  1808  057A  2D7C               	goto	u740
  1809  057B                     u741:
  1810  057B  2DB3               	goto	l1333
  1811  057C                     u740:
  1812  057C                     l1315:
  1813  057C  01F5               	clrf	___awdiv@counter
  1814  057D  0AF5               	incf	___awdiv@counter,f
  1815  057E  2D8A               	goto	l1321
  1816  057F                     l1317:
  1817  057F  3001               	movlw	1
  1818  0580                     u755:
  1819  0580  1003               	clrc
  1820  0581  0DF0               	rlf	___awdiv@divisor,f
  1821  0582  0DF1               	rlf	___awdiv@divisor+1,f
  1822  0583  3EFF               	addlw	-1
  1823  0584  1D03               	skipz
  1824  0585  2D80               	goto	u755
  1825  0586                     l1319:
  1826  0586  3001               	movlw	1
  1827  0587  00F4               	movwf	??___awdiv
  1828  0588  0874               	movf	??___awdiv,w
  1829  0589  07F5               	addwf	___awdiv@counter,f
  1830  058A                     l1321:
  1831  058A  1FF1               	btfss	___awdiv@divisor+1,7
  1832  058B  2D8D               	goto	u761
  1833  058C  2D8E               	goto	u760
  1834  058D                     u761:
  1835  058D  2D7F               	goto	l1317
  1836  058E                     u760:
  1837  058E                     l1323:
  1838  058E  3001               	movlw	1
  1839  058F                     u775:
  1840  058F  1003               	clrc
  1841  0590  0DF7               	rlf	___awdiv@quotient,f
  1842  0591  0DF8               	rlf	___awdiv@quotient+1,f
  1843  0592  3EFF               	addlw	-1
  1844  0593  1D03               	skipz
  1845  0594  2D8F               	goto	u775
  1846  0595  0871               	movf	___awdiv@divisor+1,w
  1847  0596  0273               	subwf	___awdiv@dividend+1,w
  1848  0597  1D03               	skipz
  1849  0598  2D9B               	goto	u785
  1850  0599  0870               	movf	___awdiv@divisor,w
  1851  059A  0272               	subwf	___awdiv@dividend,w
  1852  059B                     u785:
  1853  059B  1C03               	skipc
  1854  059C  2D9E               	goto	u781
  1855  059D  2D9F               	goto	u780
  1856  059E                     u781:
  1857  059E  2DA6               	goto	l1329
  1858  059F                     u780:
  1859  059F                     l1325:
  1860  059F  0870               	movf	___awdiv@divisor,w
  1861  05A0  02F2               	subwf	___awdiv@dividend,f
  1862  05A1  0871               	movf	___awdiv@divisor+1,w
  1863  05A2  1C03               	skipc
  1864  05A3  03F3               	decf	___awdiv@dividend+1,f
  1865  05A4  02F3               	subwf	___awdiv@dividend+1,f
  1866  05A5                     l1327:
  1867  05A5  1477               	bsf	___awdiv@quotient,0
  1868  05A6                     l1329:
  1869  05A6  3001               	movlw	1
  1870  05A7                     u795:
  1871  05A7  1003               	clrc
  1872  05A8  0CF1               	rrf	___awdiv@divisor+1,f
  1873  05A9  0CF0               	rrf	___awdiv@divisor,f
  1874  05AA  3EFF               	addlw	-1
  1875  05AB  1D03               	skipz
  1876  05AC  2DA7               	goto	u795
  1877  05AD                     l1331:
  1878  05AD  3001               	movlw	1
  1879  05AE  02F5               	subwf	___awdiv@counter,f
  1880  05AF  1D03               	btfss	3,2
  1881  05B0  2DB2               	goto	u801
  1882  05B1  2DB3               	goto	u800
  1883  05B2                     u801:
  1884  05B2  2D8E               	goto	l1323
  1885  05B3                     u800:
  1886  05B3                     l1333:
  1887  05B3  0876               	movf	___awdiv@sign,w
  1888  05B4  1903               	btfsc	3,2
  1889  05B5  2DB7               	goto	u811
  1890  05B6  2DB8               	goto	u810
  1891  05B7                     u811:
  1892  05B7  2DBD               	goto	l1337
  1893  05B8                     u810:
  1894  05B8                     l1335:
  1895  05B8  09F7               	comf	___awdiv@quotient,f
  1896  05B9  09F8               	comf	___awdiv@quotient+1,f
  1897  05BA  0AF7               	incf	___awdiv@quotient,f
  1898  05BB  1903               	skipnz
  1899  05BC  0AF8               	incf	___awdiv@quotient+1,f
  1900  05BD                     l1337:
  1901  05BD  0878               	movf	___awdiv@quotient+1,w
  1902  05BE  00F1               	movwf	?___awdiv+1
  1903  05BF  0877               	movf	___awdiv@quotient,w
  1904  05C0  00F0               	movwf	?___awdiv
  1905  05C1                     l438:
  1906  05C1  0008               	return
  1907  05C2                     __end_of___awdiv:
  1908                           
  1909                           	psect	text7
  1910  04AE                     __ptext7:	
  1911 ;; *************** function _UART_Write_String *****************
  1912 ;; Defined at:
  1913 ;;		line 36 in file "USART.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  buf             2    1[COMMON] PTR unsigned char 
  1916 ;;		 -> RAM(512), 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  i               2    5[COMMON] int 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         2       0       0       0       0
  1929 ;;      Locals:         2       0       0       0       0
  1930 ;;      Temps:          2       0       0       0       0
  1931 ;;      Totals:         6       0       0       0       0
  1932 ;;Total ram usage:        6 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    1
  1935 ;; This function calls:
  1936 ;;		_UART_Write
  1937 ;; This function is called by:
  1938 ;;		_MPU6050_Read
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _UART_Write_String
  1944  04AE                     _UART_Write_String:
  1945  04AE                     l1205:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1948                           
  1949                           
  1950                           ;USART.c: 36: void UART_Write_String(char* buf);USART.c: 37: {;USART.c: 38:     int i=0;
  1951  04AE  01F5               	clrf	UART_Write_String@i
  1952  04AF  01F6               	clrf	UART_Write_String@i+1
  1953                           
  1954                           ;USART.c: 39:     while(buf[i] != '\0')
  1955  04B0  2CCA               	goto	l1211
  1956  04B1                     l1207:
  1957                           
  1958                           ;USART.c: 40:         UART_Write(buf[i++]);
  1959  04B1  0875               	movf	UART_Write_String@i,w
  1960  04B2  0771               	addwf	UART_Write_String@buf,w
  1961  04B3  00F3               	movwf	??_UART_Write_String
  1962  04B4  0876               	movf	UART_Write_String@i+1,w
  1963  04B5  1803               	skipnc
  1964  04B6  0A76               	incf	UART_Write_String@i+1,w
  1965  04B7  0772               	addwf	UART_Write_String@buf+1,w
  1966  04B8  00F4               	movwf	??_UART_Write_String+1
  1967  04B9  0873               	movf	??_UART_Write_String,w
  1968  04BA  0084               	movwf	4
  1969  04BB  1783               	bsf	3,7
  1970  04BC  1C74               	btfss	??_UART_Write_String+1,0
  1971  04BD  1383               	bcf	3,7
  1972  04BE  0800               	movf	0,w
  1973  04BF  120A  118A  2405  120A  118A  	fcall	_UART_Write
  1974  04C4                     l1209:
  1975  04C4  3001               	movlw	1
  1976  04C5  07F5               	addwf	UART_Write_String@i,f
  1977  04C6  1803               	skipnc
  1978  04C7  0AF6               	incf	UART_Write_String@i+1,f
  1979  04C8  3000               	movlw	0
  1980  04C9  07F6               	addwf	UART_Write_String@i+1,f
  1981  04CA                     l1211:
  1982                           
  1983                           ;USART.c: 39:     while(buf[i] != '\0')
  1984  04CA  0875               	movf	UART_Write_String@i,w
  1985  04CB  0771               	addwf	UART_Write_String@buf,w
  1986  04CC  00F3               	movwf	??_UART_Write_String
  1987  04CD  0876               	movf	UART_Write_String@i+1,w
  1988  04CE  1803               	skipnc
  1989  04CF  0A76               	incf	UART_Write_String@i+1,w
  1990  04D0  0772               	addwf	UART_Write_String@buf+1,w
  1991  04D1  00F4               	movwf	??_UART_Write_String+1
  1992  04D2  0873               	movf	??_UART_Write_String,w
  1993  04D3  0084               	movwf	4
  1994  04D4  1783               	bsf	3,7
  1995  04D5  1C74               	btfss	??_UART_Write_String+1,0
  1996  04D6  1383               	bcf	3,7
  1997  04D7  0800               	movf	0,w
  1998  04D8  1D03               	btfss	3,2
  1999  04D9  2CDB               	goto	u611
  2000  04DA  2CDC               	goto	u610
  2001  04DB                     u611:
  2002  04DB  2CB1               	goto	l1207
  2003  04DC                     u610:
  2004  04DC                     l57:
  2005  04DC  0008               	return
  2006  04DD                     __end_of_UART_Write_String:
  2007                           
  2008                           	psect	text8
  2009  0405                     __ptext8:	
  2010 ;; *************** function _UART_Write *****************
  2011 ;; Defined at:
  2012 ;;		line 30 in file "USART.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  data            1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  data            1    0[COMMON] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         1       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0
  2029 ;;      Totals:         1       0       0       0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_UART_Write_String
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _UART_Write
  2041  0405                     _UART_Write:
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _UART_Write: [wreg]
  2045                           ;UART_Write@data stored from wreg
  2046  0405  00F0               	movwf	UART_Write@data
  2047  0406                     l1145:
  2048  0406                     l48:	
  2049                           ;USART.c: 30: void UART_Write(unsigned char data);USART.c: 31: {;USART.c: 32:   while(!T
      +                          RMT);
  2050                           
  2051  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0408  1C98               	btfss	24,1	;volatile
  2054  0409  2C0B               	goto	u441
  2055  040A  2C0C               	goto	u440
  2056  040B                     u441:
  2057  040B  2C06               	goto	l48
  2058  040C                     u440:
  2059  040C                     l1147:
  2060                           
  2061                           ;USART.c: 33:   TXREG = data;
  2062  040C  0870               	movf	UART_Write@data,w
  2063  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2064  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2065  040F  0099               	movwf	25	;volatile
  2066  0410                     l51:
  2067  0410  0008               	return
  2068  0411                     __end_of_UART_Write:
  2069                           
  2070                           	psect	text9
  2071  045A                     __ptext9:	
  2072 ;; *************** function _I2C_Read *****************
  2073 ;; Defined at:
  2074 ;;		line 89 in file "I2c.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  ACK_NACK        1    wreg     unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2079 ;;  Data            1    2[COMMON] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      unsigned char 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         2       0       0       0       0
  2091 ;;      Temps:          1       0       0       0       0
  2092 ;;      Totals:         3       0       0       0       0
  2093 ;;Total ram usage:        3 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    1
  2096 ;; This function calls:
  2097 ;;		_I2C_ACK
  2098 ;;		_I2C_NACK
  2099 ;; This function is called by:
  2100 ;;		_MPU6050_Read
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _I2C_Read
  2106  045A                     _I2C_Read:
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2110                           ;I2C_Read@ACK_NACK stored from wreg
  2111  045A  00F1               	movwf	I2C_Read@ACK_NACK
  2112  045B                     l1221:
  2113                           
  2114                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  2115  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2116  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2117  045D  1591               	bsf	17,3	;volatile
  2118  045E                     l163:	
  2119                           ;I2c.c: 94:     while(!BF);
  2120                           
  2121  045E  1C14               	btfss	20,0	;volatile
  2122  045F  2C61               	goto	u621
  2123  0460  2C62               	goto	u620
  2124  0461                     u621:
  2125  0461  2C5E               	goto	l163
  2126  0462                     u620:
  2127  0462                     l1223:
  2128                           
  2129                           ;I2c.c: 95:     Data = SSPBUF;
  2130  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0464  0813               	movf	19,w	;volatile
  2133  0465  00F0               	movwf	??_I2C_Read
  2134  0466  0870               	movf	??_I2C_Read,w
  2135  0467  00F2               	movwf	I2C_Read@Data
  2136  0468                     l1225:
  2137                           
  2138                           ;I2c.c: 96:     if(ACK_NACK==0)
  2139  0468  0871               	movf	I2C_Read@ACK_NACK,w
  2140  0469  1D03               	btfss	3,2
  2141  046A  2C6C               	goto	u631
  2142  046B  2C6D               	goto	u630
  2143  046C                     u631:
  2144  046C  2C73               	goto	l1229
  2145  046D                     u630:
  2146  046D                     l1227:
  2147                           
  2148                           ;I2c.c: 97:         I2C_ACK();
  2149  046D  120A  118A  23F3  120A  118A  	fcall	_I2C_ACK
  2150  0472  2C78               	goto	l168
  2151  0473                     l1229:
  2152                           
  2153                           ;I2c.c: 99:         I2C_NACK();
  2154  0473  120A  118A  23FC  120A  118A  	fcall	_I2C_NACK
  2155  0478                     l168:
  2156  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2158  047A  1D8C               	btfss	12,3	;volatile
  2159  047B  2C7D               	goto	u641
  2160  047C  2C7E               	goto	u640
  2161  047D                     u641:
  2162  047D  2C78               	goto	l168
  2163  047E                     u640:
  2164  047E                     l170:
  2165                           
  2166                           ;I2c.c: 101:     SSPIF=0;
  2167  047E  118C               	bcf	12,3	;volatile
  2168  047F                     l1231:
  2169                           
  2170                           ;I2c.c: 102:     return Data;
  2171  047F  0872               	movf	I2C_Read@Data,w
  2172  0480                     l171:
  2173  0480  0008               	return
  2174  0481                     __end_of_I2C_Read:
  2175                           
  2176                           	psect	text10
  2177  03FC                     __ptext10:	
  2178 ;; *************** function _I2C_NACK *****************
  2179 ;; Defined at:
  2180 ;;		line 62 in file "I2c.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		None
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0
  2197 ;;      Totals:         0       0       0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_I2C_Read
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _I2C_NACK
  2209  03FC                     _I2C_NACK:
  2210  03FC                     l1155:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _I2C_NACK: []
  2213                           
  2214                           
  2215                           ;I2c.c: 64:  ACKDT = 1;
  2216  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2217  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  2218  03FE  1691               	bsf	17,5	;volatile
  2219                           
  2220                           ;I2c.c: 65:  ACKEN = 1;
  2221  03FF  1611               	bsf	17,4	;volatile
  2222  0400                     l145:	
  2223                           ;I2c.c: 66:     while(ACKEN);
  2224                           
  2225  0400  1A11               	btfsc	17,4	;volatile
  2226  0401  2C03               	goto	u471
  2227  0402  2C04               	goto	u470
  2228  0403                     u471:
  2229  0403  2C00               	goto	l145
  2230  0404                     u470:
  2231  0404                     l148:
  2232  0404  0008               	return
  2233  0405                     __end_of_I2C_NACK:
  2234                           
  2235                           	psect	text11
  2236  03F3                     __ptext11:	
  2237 ;; *************** function _I2C_ACK *****************
  2238 ;; Defined at:
  2239 ;;		line 55 in file "I2c.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		None
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_I2C_Read
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _I2C_ACK
  2268  03F3                     _I2C_ACK:
  2269  03F3                     l1153:	
  2270                           ;incstack = 0
  2271                           ; Regs used in _I2C_ACK: []
  2272                           
  2273                           
  2274                           ;I2c.c: 57:  ACKDT = 0;
  2275  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2276  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2277  03F5  1291               	bcf	17,5	;volatile
  2278                           
  2279                           ;I2c.c: 58:     ACKEN = 1;
  2280  03F6  1611               	bsf	17,4	;volatile
  2281  03F7                     l139:	
  2282                           ;I2c.c: 59:     while(ACKEN);
  2283                           
  2284  03F7  1A11               	btfsc	17,4	;volatile
  2285  03F8  2BFA               	goto	u461
  2286  03F9  2BFB               	goto	u460
  2287  03FA                     u461:
  2288  03FA  2BF7               	goto	l139
  2289  03FB                     u460:
  2290  03FB                     l142:
  2291  03FB  0008               	return
  2292  03FC                     __end_of_I2C_ACK:
  2293                           
  2294                           	psect	text12
  2295  05C2                     __ptext12:	
  2296 ;; *************** function _MPU6050_Init *****************
  2297 ;; Defined at:
  2298 ;;		line 19 in file "MPU.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0
  2314 ;;      Temps:          3       0       0       0       0
  2315 ;;      Totals:         3       0       0       0       0
  2316 ;;Total ram usage:        3 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    3
  2319 ;; This function calls:
  2320 ;;		_I2C_Master_Init
  2321 ;;		_I2C_Master_Stop
  2322 ;;		_I2C_Master_Write
  2323 ;;		_I2C_Start
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _MPU6050_Init
  2331  05C2                     _MPU6050_Init:
  2332  05C2                     l1341:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2335                           
  2336                           
  2337                           ;MPU.c: 22:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2338  05C2  3002               	movlw	2
  2339  05C3  00F4               	movwf	??_MPU6050_Init+2
  2340  05C4  3004               	movlw	4
  2341  05C5  00F3               	movwf	??_MPU6050_Init+1
  2342  05C6  30BA               	movlw	186
  2343  05C7  00F2               	movwf	??_MPU6050_Init
  2344  05C8                     u847:
  2345  05C8  0BF2               	decfsz	??_MPU6050_Init,f
  2346  05C9  2DC8               	goto	u847
  2347  05CA  0BF3               	decfsz	??_MPU6050_Init+1,f
  2348  05CB  2DC8               	goto	u847
  2349  05CC  0BF4               	decfsz	??_MPU6050_Init+2,f
  2350  05CD  2DC8               	goto	u847
  2351  05CE  0000               	nop
  2352  05CF                     l1343:
  2353                           
  2354                           ;MPU.c: 23:   I2C_Master_Init();
  2355  05CF  120A  118A  2411  120A  118A  	fcall	_I2C_Master_Init
  2356  05D4                     l1345:
  2357                           
  2358                           ;MPU.c: 26:   I2C_Start(0xD0);
  2359  05D4  30D0               	movlw	208
  2360  05D5  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  2361  05DA                     l1347:
  2362                           
  2363                           ;MPU.c: 27:   I2C_Master_Write(0x19);
  2364  05DA  3019               	movlw	25
  2365  05DB  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2366  05E0                     l1349:
  2367                           
  2368                           ;MPU.c: 28:   I2C_Master_Write(0x07);
  2369  05E0  3007               	movlw	7
  2370  05E1  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2371  05E6                     l1351:
  2372                           
  2373                           ;MPU.c: 29:   I2C_Master_Stop();
  2374  05E6  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  2375  05EB                     l1353:
  2376                           
  2377                           ;MPU.c: 32:   I2C_Start(0xD0);
  2378  05EB  30D0               	movlw	208
  2379  05EC  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  2380  05F1                     l1355:
  2381                           
  2382                           ;MPU.c: 33:   I2C_Master_Write(0x6B);
  2383  05F1  306B               	movlw	107
  2384  05F2  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2385  05F7                     l1357:
  2386                           
  2387                           ;MPU.c: 34:   I2C_Master_Write(0x01);
  2388  05F7  3001               	movlw	1
  2389  05F8  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2390  05FD                     l1359:
  2391                           
  2392                           ;MPU.c: 35:   I2C_Master_Stop();
  2393  05FD  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  2394  0602                     l1361:
  2395                           
  2396                           ;MPU.c: 38:   I2C_Start(0xD0);
  2397  0602  30D0               	movlw	208
  2398  0603  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  2399  0608                     l1363:
  2400                           
  2401                           ;MPU.c: 39:   I2C_Master_Write(0x1A);
  2402  0608  301A               	movlw	26
  2403  0609  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2404  060E                     l1365:
  2405                           
  2406                           ;MPU.c: 40:   I2C_Master_Write(0x00);
  2407  060E  3000               	movlw	0
  2408  060F  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2409  0614                     l1367:
  2410                           
  2411                           ;MPU.c: 41:   I2C_Master_Stop();
  2412  0614  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  2413  0619                     l1369:
  2414                           
  2415                           ;MPU.c: 44:   I2C_Start(0xD0);
  2416  0619  30D0               	movlw	208
  2417  061A  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  2418  061F                     l1371:
  2419                           
  2420                           ;MPU.c: 45:   I2C_Master_Write(0x1C);
  2421  061F  301C               	movlw	28
  2422  0620  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2423  0625                     l1373:
  2424                           
  2425                           ;MPU.c: 46:   I2C_Master_Write(0x00);
  2426  0625  3000               	movlw	0
  2427  0626  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2428  062B                     l1375:
  2429                           
  2430                           ;MPU.c: 47:   I2C_Master_Stop();
  2431  062B  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  2432  0630                     l1377:
  2433                           
  2434                           ;MPU.c: 50:   I2C_Start(0xD0);
  2435  0630  30D0               	movlw	208
  2436  0631  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  2437  0636                     l1379:
  2438                           
  2439                           ;MPU.c: 51:   I2C_Master_Write(0x1B);
  2440  0636  301B               	movlw	27
  2441  0637  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2442  063C                     l1381:
  2443                           
  2444                           ;MPU.c: 52:   I2C_Master_Write(0x18);
  2445  063C  3018               	movlw	24
  2446  063D  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2447  0642                     l1383:
  2448                           
  2449                           ;MPU.c: 53:   I2C_Master_Stop();
  2450  0642  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  2451  0647                     l1385:
  2452                           
  2453                           ;MPU.c: 56:   I2C_Start(0xD0);
  2454  0647  30D0               	movlw	208
  2455  0648  120A  118A  244A  120A  118A  	fcall	_I2C_Start
  2456  064D                     l1387:
  2457                           
  2458                           ;MPU.c: 57:   I2C_Master_Write(0x38);
  2459  064D  3038               	movlw	56
  2460  064E  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2461  0653                     l1389:
  2462                           
  2463                           ;MPU.c: 58:   I2C_Master_Write(0x01);
  2464  0653  3001               	movlw	1
  2465  0654  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2466  0659                     l1391:
  2467                           
  2468                           ;MPU.c: 59:   I2C_Master_Stop();
  2469  0659  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Stop
  2470  065E                     l78:
  2471  065E  0008               	return
  2472  065F                     __end_of_MPU6050_Init:
  2473                           
  2474                           	psect	text13
  2475  044A                     __ptext13:	
  2476 ;; *************** function _I2C_Start *****************
  2477 ;; Defined at:
  2478 ;;		line 36 in file "I2c.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  add             1    wreg     unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  add             1    1[COMMON] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         1       0       0       0       0
  2496 ;;Total ram usage:        1 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		_I2C_Master_Wait
  2501 ;;		_I2C_Master_Write
  2502 ;; This function is called by:
  2503 ;;		_MPU6050_Init
  2504 ;;		_MPU6050_Read
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _I2C_Start
  2510  044A                     _I2C_Start:
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2514                           ;I2C_Start@add stored from wreg
  2515  044A  00F1               	movwf	I2C_Start@add
  2516  044B                     l1213:
  2517                           
  2518                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  2519  044B  120A  118A  241E  120A  118A  	fcall	_I2C_Master_Wait
  2520  0450                     l1215:
  2521                           
  2522                           ;I2c.c: 39:     SEN = 1;
  2523  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0452  1411               	bsf	17,0	;volatile
  2526                           
  2527                           ;I2c.c: 40:     I2C_Master_Write(add);
  2528  0453  0871               	movf	I2C_Start@add,w
  2529  0454  120A  118A  243A  120A  118A  	fcall	_I2C_Master_Write
  2530  0459                     l130:
  2531  0459  0008               	return
  2532  045A                     __end_of_I2C_Start:
  2533                           
  2534                           	psect	text14
  2535  043A                     __ptext14:	
  2536 ;; *************** function _I2C_Master_Write *****************
  2537 ;; Defined at:
  2538 ;;		line 69 in file "I2c.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  data            1    wreg     unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  data            1    0[COMMON] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0
  2555 ;;      Totals:         1       0       0       0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    1
  2559 ;; This function calls:
  2560 ;;		_I2C_Master_Wait
  2561 ;; This function is called by:
  2562 ;;		_MPU6050_Init
  2563 ;;		_MPU6050_Read
  2564 ;;		_I2C_Start
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _I2C_Master_Write
  2570  043A                     _I2C_Master_Write:
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2574                           ;I2C_Master_Write@data stored from wreg
  2575  043A  00F0               	movwf	I2C_Master_Write@data
  2576  043B                     l1149:
  2577                           
  2578                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  2579  043B  120A  118A  241E  120A  118A  	fcall	_I2C_Master_Wait
  2580  0440                     l1151:
  2581                           
  2582                           ;I2c.c: 72:     SSPBUF = data;
  2583  0440  0870               	movf	I2C_Master_Write@data,w
  2584  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0443  0093               	movwf	19	;volatile
  2587  0444                     l151:	
  2588                           ;I2c.c: 73:     while(!SSPIF);
  2589                           
  2590  0444  1D8C               	btfss	12,3	;volatile
  2591  0445  2C47               	goto	u451
  2592  0446  2C48               	goto	u450
  2593  0447                     u451:
  2594  0447  2C44               	goto	l151
  2595  0448                     u450:
  2596  0448                     l153:
  2597                           
  2598                           ;I2c.c: 74:  SSPIF = 0;
  2599  0448  118C               	bcf	12,3	;volatile
  2600  0449                     l154:	
  2601                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2602                           
  2603  0449  0008               	return
  2604  044A                     __end_of_I2C_Master_Write:
  2605                           
  2606                           	psect	text15
  2607  03EA                     __ptext15:	
  2608 ;; *************** function _I2C_Master_Stop *****************
  2609 ;; Defined at:
  2610 ;;		line 49 in file "I2c.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0
  2627 ;;      Totals:         0       0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    1
  2631 ;; This function calls:
  2632 ;;		_I2C_Master_Wait
  2633 ;; This function is called by:
  2634 ;;		_MPU6050_Init
  2635 ;;		_MPU6050_Read
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function _I2C_Master_Stop
  2641  03EA                     _I2C_Master_Stop:
  2642  03EA                     l1217:	
  2643                           ;incstack = 0
  2644                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2645                           
  2646                           
  2647                           ;I2c.c: 51:     I2C_Master_Wait();
  2648  03EA  120A  118A  241E  120A  118A  	fcall	_I2C_Master_Wait
  2649  03EF                     l1219:
  2650                           
  2651                           ;I2c.c: 52:     PEN = 1;
  2652  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2653  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2654  03F1  1511               	bsf	17,2	;volatile
  2655  03F2                     l136:
  2656  03F2  0008               	return
  2657  03F3                     __end_of_I2C_Master_Stop:
  2658                           
  2659                           	psect	text16
  2660  041E                     __ptext16:	
  2661 ;; *************** function _I2C_Master_Wait *****************
  2662 ;; Defined at:
  2663 ;;		line 25 in file "I2c.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         0       0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0
  2680 ;;      Totals:         0       0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_I2C_Start
  2687 ;;		_I2C_Master_Stop
  2688 ;;		_I2C_Master_Write
  2689 ;;		_I2C_Master_Start
  2690 ;;		_I2C_Master_RepeatedStart
  2691 ;;		_I2C_Read_Byte
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _I2C_Master_Wait
  2697  041E                     _I2C_Master_Wait:
  2698  041E                     l1141:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2701                           
  2702  041E                     l121:	
  2703                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2704                           
  2705  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2706  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0420  1914               	btfsc	20,2	;volatile
  2708  0421  2C23               	goto	u421
  2709  0422  2C24               	goto	u420
  2710  0423                     u421:
  2711  0423  2C1E               	goto	l121
  2712  0424                     u420:
  2713  0424                     l1143:
  2714  0424  0811               	movf	17,w	;volatile
  2715  0425  391F               	andlw	31
  2716  0426  1D03               	btfss	3,2
  2717  0427  2C29               	goto	u431
  2718  0428  2C2A               	goto	u430
  2719  0429                     u431:
  2720  0429  2C1E               	goto	l121
  2721  042A                     u430:
  2722  042A                     l124:
  2723  042A  0008               	return
  2724  042B                     __end_of_I2C_Master_Wait:
  2725                           
  2726                           	psect	text17
  2727  0411                     __ptext17:	
  2728 ;; *************** function _I2C_Master_Init *****************
  2729 ;; Defined at:
  2730 ;;		line 15 in file "I2c.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       0       0       0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_MPU6050_Init
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           
  2758                           ;psect for function _I2C_Master_Init
  2759  0411                     _I2C_Master_Init:
  2760  0411                     l863:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2763                           
  2764                           
  2765                           ;I2c.c: 17:   SSPCON = 0x28;
  2766  0411  3028               	movlw	40
  2767  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0414  0094               	movwf	20	;volatile
  2770  0415                     l865:
  2771                           
  2772                           ;I2c.c: 18:   SSPCON2 = 0x00;
  2773  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2775  0417  0191               	clrf	17	;volatile
  2776  0418                     l867:
  2777                           
  2778                           ;I2c.c: 19:   SSPSTAT = 0x00;
  2779  0418  0194               	clrf	20	;volatile
  2780                           
  2781                           ;I2c.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  2782  0419  30CF               	movlw	207
  2783  041A  0093               	movwf	19	;volatile
  2784  041B                     l869:
  2785                           
  2786                           ;I2c.c: 21:   TRISC3 = 1;
  2787  041B  1587               	bsf	7,3	;volatile
  2788  041C                     l871:
  2789                           
  2790                           ;I2c.c: 22:   TRISC4 = 1;
  2791  041C  1607               	bsf	7,4	;volatile
  2792  041D                     l118:
  2793  041D  0008               	return
  2794  041E                     __end_of_I2C_Master_Init:
  2795  007E                     btemp	set	126	;btemp
  2796  007E                     wtemp0	set	126
  2797                           
  2798                           	psect	config
  2799                           
  2800                           ;Config register CONFIG1 @ 0x2007
  2801                           ;	Oscillator Selection bits
  2802                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2803                           ;	Watchdog Timer Enable bit
  2804                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2805                           ;	Power-up Timer Enable bit
  2806                           ;	PWRTE = OFF, PWRT disabled
  2807                           ;	RE3/MCLR pin function select bit
  2808                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2809                           ;	Code Protection bit
  2810                           ;	CP = OFF, Program memory code protection is disabled
  2811                           ;	Data Code Protection bit
  2812                           ;	CPD = OFF, Data memory code protection is disabled
  2813                           ;	Brown Out Reset Selection bits
  2814                           ;	BOREN = OFF, BOR disabled
  2815                           ;	Internal External Switchover bit
  2816                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2817                           ;	Fail-Safe Clock Monitor Enabled bit
  2818                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2819                           ;	Low Voltage Programming Enable bit
  2820                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2821                           ;	In-Circuit Debugger Mode bit
  2822                           ;	DEBUG = 0x1, unprogrammed default
  2823  2007                     	org	8199
  2824  2007  2CD4               	dw	11476
  2825                           
  2826                           ;Config register CONFIG2 @ 0x2008
  2827                           ;	Brown-out Reset Selection bit
  2828                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2829                           ;	Flash Program Memory Self Write Enable bits
  2830                           ;	WRT = OFF, Write protection off
  2831  2008                     	org	8200
  2832  2008  3EFF               	dw	16127

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2109
                                             71 BANK0      3     3      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    2043
                                             13 BANK0     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    6     4      2     188
                                              1 COMMON     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 23:22:33 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l51 0410                          l45 0439                          l48 0406  
                        l57 04DC                          l81 0713                          l78 065E  
              ___awdiv@sign 0076                          fsr 0004  __size_of_UART_Write_String 002F  
                       l121 041E                         l130 0459                         l124 042A  
                       l118 041D                         l142 03FB                         l151 0444  
                       l136 03F2                         l153 0448                         l145 0400  
                       l154 0449                         l170 047E                         l139 03F7  
                       l171 0480                         l163 045E                         l148 0404  
                       l168 0478                         l281 07FB                         l438 05C1  
                       l557 055A                         l567 0516                         l871 041C  
                       l863 0411                         l865 0415                         l867 0418  
                       l869 041B                         _RD2 0042                         u420 0424  
                       u500 0531                         u421 0423                         u501 0530  
                       u430 042A                         u431 0429                         u440 040C  
                       u520 0542                         u600 0512                         _PEN 048A  
                       u441 040B                         u521 0541                         u601 0511  
                       u450 0448                         u610 04DC                         u451 0447  
                       u611 04DB                         u515 0532                         u460 03FB  
                       u620 0462                         u540 0556                         u700 07E5  
                       u461 03FA                         u621 0461                         u541 0555  
                       u525 053E                         u701 07E4                         u470 0404  
                       u630 046D                         u550 04E3                         u710 07F7  
                       u471 0403                         u631 046C                         u535 054A  
                       u551 04E2                         u711 07F6                         u640 047E  
                       u800 05B3                         u720 0560                         u480 051F  
                       u641 047D                         u801 05B2                         u721 055F  
                       u481 051E                         u810 05B8                         u730 056B  
                       u570 04F5                         u650 0722                         u811 05B7  
                       u731 056A                         u571 04F4                         u651 0721  
                       u740 057C                         u580 04FF                         u660 075C  
                       _SEN 0488                         u741 057B                         u581 04FE  
                       u565 04E7                         u661 075B                         u670 0782  
                       u495 0523                         u671 0781                         u760 058E  
                       u680 078D                         u761 058D                         u585 04FB  
                       u681 078C                         u690 0793                         u755 0580  
                       u595 0506                         u691 0792                         u675 077E  
                       u780 059F                         u781 059E                         u837 04A3  
                       u847 05C8                         u775 058F                         u785 059B  
                       u795 05A7             __end_of_I2C_ACK 03FC                         fsr0 0004  
                       indf 0000          MPU6050_Read@buffer 0031                        l1001 042B  
                      l1011 0437                        l1003 042E                        l1013 0438  
                      l1005 0430                        l1007 0431                        l1201 0512  
                      l1009 0434                        l1211 04CA                        l1141 041E  
                      l1213 044B                        l1221 045B                        l1205 04AE  
                      l1301 0560                        l1143 0424                        l1151 0440  
                      l1215 0450                        l1231 047F                        l1223 0462  
                      l1207 04B1                        l1311 0574                        l1303 0565  
                      l1217 03EA                        l1153 03F3                        l1225 0468  
                      l1145 0406                        l1209 04C4                        l1321 058A  
                      l1313 0576                        l1305 0567                        l1161 051F  
                      l1241 0729                        l1401 06AB                        l1219 03EF  
                      l1155 03FC                        l1227 046D                        l1147 040C  
                      l1331 05AD                        l1323 058E                        l1315 057C  
                      l1307 056B                        l1171 0542                        l1163 0522  
                      l1251 0754                        l1243 072E                        l1235 0717  
                      l1411 06E0                        l1403 06B7                        l1149 043B  
                      l1341 05C2                        l1229 0473                        l1325 059F  
                      l1317 057F                        l1333 05B3                        l1309 0570  
                      l1173 0548                        l1165 0529                        l1157 0517  
                      l1253 0758                        l1237 071C                        l1413 06F7  
                      l1405 06C3                        l1421 048A                        l1351 05E6  
                      l1343 05CF                        l1335 05B8                        l1327 05A5  
                      l1319 0586                        l1175 0549                        l1167 052D  
                      l1159 0519                        l1191 04F1                        l1183 04DD  
                      l1271 078D                        l1255 075C                        l1247 072F  
                      l1239 0722                        l1407 06CF                        l1423 0492  
                      l1415 0481                        l1361 0602                        l1353 05EB  
                      l1345 05D4                        l1337 05BD                        l1329 05A6  
                      l1177 0550                        l1169 0531                        l1193 04F5  
                      l1185 04E3                        l1281 07D1                        l1273 0793  
                      l1265 0767                        l1257 0760                        l1249 074C  
                      l1409 06DB                        l1425 0496                        l1417 0486  
                      l1371 061F                        l1363 0608                        l1355 05F1  
                      l1347 05DA                        l1179 0556                        l1195 04FF  
                      l1187 04E6                        l1283 07D8                        l1275 079A  
                      l1259 0765                        l1427 049B                        l1419 0489  
                      l1381 063C                        l1373 0625                        l1365 060E  
                      l1357 05F7                        l1349 05E0                        l1197 0505  
                      l1189 04ED                        l1285 07DC                        l1277 079E  
                      l1269 0783                        l1391 0659                        l1383 0642  
                      l1375 062B                        l1367 0614                        l1359 05FD  
                      l1199 050C                        l1279 07A3                        l1287 07E5  
                      l1385 0647                        l1377 0630                        l1369 0619  
                      l1297 055B                        l1289 07F7                        l1393 065F  
                      l1387 064D                        l1379 0636                        l1299 055C  
                      l1467 0741                        l1395 0676                        l1389 0653  
                      l1397 0682                        l1399 069F                        STR_1 0013  
                      _BRGH 04C2                        _RCEN 048B                        _SPEN 00C7  
                      _RSEN 0489                        _TRMT 04C1                        _TXEN 04C5  
                      _SYNC 04C4            __end_of_I2C_NACK 0405                        _main 0481  
          __end_of_I2C_Read 0481                        btemp 007E                        start 0000  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___awdiv 05C2             ___awdiv@divisor 0070             __end_of___lwdiv 055B  
           __end_of___lwmod 0517             ___awdiv@counter 0075                       _SPBRG 0099  
                     _PORTB 0006                       _TRISB 0086                       _SSPIF 0063  
                     _TXREG 0019                 ?_UART_Write 0070               ?_MPU6050_Init 0070  
             ?_MPU6050_Read 0070             __end_of_dpowers 0013           __end_of_I2C_Start 045A  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 07FC              MPU6050_Read@Ay 0065             __initialization 07FC  
              __end_of_main 04AE                   ??_I2C_ACK 0070                      ??_main 0067  
         ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072              ??_MPU6050_Read 002D  
        ??_I2C_Master_Write 0070            ___awdiv@dividend 0072                      _ANSELH 0189  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISD2 0442  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013            I2C_Read@ACK_NACK 0071  
       __size_of_UART_Write 000C                   ??___awdiv 0074                   ??___lwdiv 0074  
                 ??___lwmod 007C            ___awdiv@quotient 0077                   ?_I2C_NACK 0070  
                 ?_I2C_Read 0070                   ??_sprintf 0023     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  ??_I2C_NACK 0070                  ??_I2C_Read 0070  
              I2C_Read@Data 0072                  __pmaintext 0481        __end_of_MPU6050_Init 065F  
      __end_of_MPU6050_Read 0714                     _I2C_ACK 03F3                     _ACKSTAT 048E  
              ??_UART_Write 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
             ?_UART_TX_Init 0070                  __stringtab 0003                I2C_Start@add 0071  
                 _I2C_Start 044A                     ___awdiv 055B          __end_of_UART_Write 0411  
                   ___lwdiv 0517                     ___lwmod 04DD                     __ptext1 042B  
                   __ptext2 065F                     __ptext3 0714                     __ptext4 04DD  
                   __ptext5 0517                     __ptext6 055B                     __ptext7 04AE  
                   __ptext8 0405                     __ptext9 045A                     _dpowers 0009  
  __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009  
            ??_UART_TX_Init 0070                     _sprintf 0714        end_of_initialization 07FC  
                ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010              UART_Write@data 0070  
         __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027       __size_of_MPU6050_Init 009D  
     __size_of_MPU6050_Read 00B5         start_initialization 07FC                _MPU6050_Init 05C2  
              _MPU6050_Read 065F           ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070  
         ??_I2C_Master_Stop 0070                 ??_I2C_Start 0071        __end_of_UART_TX_Init 043A  
                  ?_I2C_ACK 0070                   ___latbits 0002               __pcstackBANK0 0020  
               sprintf@flag 0027                 sprintf@prec 0028            _I2C_Master_Write 043A  
          ___lwdiv@dividend 0072                    ?___awdiv 0070                    ?___lwdiv 0070  
                  ?___lwmod 0078        I2C_Master_Write@data 0070                   __pstrings 0003  
                  _I2C_NACK 03FC                    _I2C_Read 045A            ___lwdiv@quotient 0075  
                  ?_sprintf 0020            __size_of_I2C_ACK 0009        UART_Write_String@buf 0071  
               __stringbase 0008       __size_of_UART_TX_Init 000F            __size_of___awdiv 0067  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 0009  
         _UART_Write_String 04AE                  sprintf@val 0029             _I2C_Master_Init 0411  
           _I2C_Master_Wait 041E             _I2C_Master_Stop 03EA          ?_UART_Write_String 0071  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 03FC  
                  __ptext11 03F3                    __ptext12 05C2                    __ptext13 044A  
                  __ptext14 043A                    __ptext15 03EA                    __ptext16 041E  
                  __ptext17 0411            __size_of_sprintf 00E8                _UART_TX_Init 042B  
       ??_UART_Write_String 0073               __size_of_main 002D   __end_of_UART_Write_String 04DD  
  __end_of_I2C_Master_Write 044A                   sprintf@ap 0026                   sprintf@sp 002B  
          ___lwmod@dividend 007A                   stringcode 0003          UART_Write_String@i 0075  
   __end_of_I2C_Master_Init 041E     __end_of_I2C_Master_Wait 042B     __end_of_I2C_Master_Stop 03F3  
                  sprintf@c 002C                    sprintf@f 0020             ___lwmod@divisor 0078  
           ___lwmod@counter 007D                    stringdir 0003                    stringtab 0003  
                _UART_Write 0405  
