

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 13:53:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  0003                     __pstrings:
   456  0003                     stringtab:
   457  0003                     __stringtab:
   458  0003                     stringcode:	
   459                           ;	String table - string pointers are 1 byte each
   460                           
   461  0003                     stringdir:
   462  0003  3000               	movlw	high stringdir
   463  0004  008A               	movwf	10
   464  0005  0804               	movf	4,w
   465  0006  0A84               	incf	4,f
   466  0007  0782               	addwf	2,f
   467  0008                     __stringbase:
   468  0008  3400               	retlw	0
   469  0009                     __end_of__stringtab:
   470  0009                     _dpowers:
   471  0009  3401               	retlw	1
   472  000A  3400               	retlw	0
   473  000B  340A               	retlw	10
   474  000C  3400               	retlw	0
   475  000D  3464               	retlw	100
   476  000E  3400               	retlw	0
   477  000F  34E8               	retlw	232
   478  0010  3403               	retlw	3
   479  0011  3410               	retlw	16
   480  0012  3427               	retlw	39
   481  0013                     __end_of_dpowers:
   482  0013                     _SSPBUF	set	19
   483  0014                     _SSPCON	set	20
   484  0006                     _PORTB	set	6
   485  0019                     _TXREG	set	25
   486  0063                     _SSPIF	set	99
   487  00C7                     _SPEN	set	199
   488  0042                     _RD2	set	66
   489  0093                     _SSPADD	set	147
   490  0094                     _SSPSTAT	set	148
   491  0091                     _SSPCON2	set	145
   492  0099                     _SPBRG	set	153
   493  0086                     _TRISB	set	134
   494  04A0                     _BF	set	1184
   495  048B                     _RCEN	set	1163
   496  048E                     _ACKSTAT	set	1166
   497  048C                     _ACKEN	set	1164
   498  048D                     _ACKDT	set	1165
   499  048A                     _PEN	set	1162
   500  0489                     _RSEN	set	1161
   501  0488                     _SEN	set	1160
   502  043C                     _TRISC4	set	1084
   503  043B                     _TRISC3	set	1083
   504  04C1                     _TRMT	set	1217
   505  04C5                     _TXEN	set	1221
   506  043F                     _TRISC7	set	1087
   507  043E                     _TRISC6	set	1086
   508  04C4                     _SYNC	set	1220
   509  04C2                     _BRGH	set	1218
   510  0442                     _TRISD2	set	1090
   511  0189                     _ANSELH	set	393
   512  0013                     STR_1:
   513  0013  3420               	retlw	32	;' '
   514  0014  3441               	retlw	65	;'A'
   515  0015  3479               	retlw	121	;'y'
   516  0016  3420               	retlw	32	;' '
   517  0017  343D               	retlw	61	;'='
   518  0018  3420               	retlw	32	;' '
   519  0019  3425               	retlw	37	;'%'
   520  001A  3464               	retlw	100	;'d'
   521  001B  3420               	retlw	32	;' '
   522  001C  3420               	retlw	32	;' '
   523  001D  3420               	retlw	32	;' '
   524  001E  3420               	retlw	32	;' '
   525  001F  3400               	retlw	0
   526                           
   527                           	psect	cinit
   528  07FC                     start_initialization:	
   529                           ; #config settings
   530                           
   531  07FC                     __initialization:
   532  07FC                     end_of_initialization:	
   533                           ;End of C runtime variable initialization code
   534                           
   535  07FC                     __end_of__initialization:
   536  07FC  0183               	clrf	3
   537  07FD  120A  118A  2C86   	ljmp	_main	;jump to C main() function
   538                           
   539                           	psect	cstackCOMMON
   540  0070                     __pcstackCOMMON:
   541  0070                     ?_UART_TX_Init:
   542  0070                     ??_UART_TX_Init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_MPU6050_Init:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_MPU6050_Read:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Master_Init:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Master_Init:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_I2C_Start:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_I2C_Master_Write:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_I2C_Master_Write:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_I2C_Master_Stop:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_I2C_Master_Stop:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_I2C_Read:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_I2C_Read:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_main:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_UART_Write:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_UART_Write:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_I2C_Master_Wait:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ??_I2C_Master_Wait:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_I2C_ACK:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ??_I2C_ACK:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_I2C_NACK:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ??_I2C_NACK:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?___awdiv:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?___lwdiv:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     UART_Write@data:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     I2C_Master_Write@data:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ___awdiv@divisor:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ___lwdiv@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625  0070                     	ds	1
   626  0071                     ??_I2C_Start:
   627  0071                     ?_UART_Write_String:	
   628                           ; 1 bytes @ 0x1
   629                           
   630  0071                     I2C_Start@add:	
   631                           ; 1 bytes @ 0x1
   632                           
   633  0071                     I2C_Read@ACK_NACK:	
   634                           ; 1 bytes @ 0x1
   635                           
   636  0071                     UART_Write_String@buf:	
   637                           ; 1 bytes @ 0x1
   638                           
   639                           
   640                           ; 2 bytes @ 0x1
   641  0071                     	ds	1
   642  0072                     ??_MPU6050_Init:
   643  0072                     I2C_Read@Data:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___awdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ___lwdiv@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652                           
   653                           ; 2 bytes @ 0x2
   654  0072                     	ds	1
   655  0073                     ??_UART_Write_String:
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??___awdiv:
   660  0074                     ??___lwdiv:	
   661                           ; 1 bytes @ 0x4
   662                           
   663                           
   664                           ; 1 bytes @ 0x4
   665  0074                     	ds	1
   666  0075                     ___awdiv@counter:
   667  0075                     UART_Write_String@i:	
   668                           ; 1 bytes @ 0x5
   669                           
   670  0075                     ___lwdiv@quotient:	
   671                           ; 2 bytes @ 0x5
   672                           
   673                           
   674                           ; 2 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     ___awdiv@sign:
   677                           
   678                           ; 1 bytes @ 0x6
   679  0076                     	ds	1
   680  0077                     ___lwdiv@counter:
   681  0077                     ___awdiv@quotient:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 2 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     ?___lwmod:
   688  0078                     ___lwmod@divisor:	
   689                           ; 2 bytes @ 0x8
   690                           
   691                           
   692                           ; 2 bytes @ 0x8
   693  0078                     	ds	2
   694  007A                     ___lwmod@dividend:
   695                           
   696                           ; 2 bytes @ 0xA
   697  007A                     	ds	2
   698  007C                     ??___lwmod:
   699                           
   700                           ; 1 bytes @ 0xC
   701  007C                     	ds	1
   702  007D                     ___lwmod@counter:
   703                           
   704                           ; 1 bytes @ 0xD
   705  007D                     	ds	1
   706                           
   707                           	psect	cstackBANK0
   708  0020                     __pcstackBANK0:
   709  0020                     ?_sprintf:
   710  0020                     sprintf@f:	
   711                           ; 2 bytes @ 0x0
   712                           
   713                           
   714                           ; 1 bytes @ 0x0
   715  0020                     	ds	3
   716  0023                     ??_sprintf:
   717                           
   718                           ; 1 bytes @ 0x3
   719  0023                     	ds	3
   720  0026                     sprintf@ap:
   721                           
   722                           ; 1 bytes @ 0x6
   723  0026                     	ds	1
   724  0027                     sprintf@flag:
   725                           
   726                           ; 1 bytes @ 0x7
   727  0027                     	ds	1
   728  0028                     sprintf@prec:
   729                           
   730                           ; 1 bytes @ 0x8
   731  0028                     	ds	1
   732  0029                     sprintf@val:
   733                           
   734                           ; 2 bytes @ 0x9
   735  0029                     	ds	2
   736  002B                     sprintf@sp:
   737                           
   738                           ; 1 bytes @ 0xB
   739  002B                     	ds	1
   740  002C                     sprintf@c:
   741                           
   742                           ; 1 bytes @ 0xC
   743  002C                     	ds	1
   744  002D                     ??_MPU6050_Read:
   745                           
   746                           ; 1 bytes @ 0xD
   747  002D                     	ds	4
   748  0031                     MPU6050_Read@buffer:
   749                           
   750                           ; 40 bytes @ 0x11
   751  0031                     	ds	52
   752  0065                     MPU6050_Read@Ay:
   753                           
   754                           ; 2 bytes @ 0x45
   755  0065                     	ds	2
   756  0067                     ??_main:
   757                           
   758                           ; 1 bytes @ 0x47
   759  0067                     	ds	2
   760                           
   761                           	psect	maintext
   762  0486                     __pmaintext:	
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 45 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       2       0       0       0
   785 ;;      Totals:         0       2       0       0       0
   786 ;;Total ram usage:        2 bytes
   787 ;; Hardware stack levels required when called:    4
   788 ;; This function calls:
   789 ;;		_MPU6050_Init
   790 ;;		_MPU6050_Read
   791 ;;		_UART_TX_Init
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _main
   799  0486                     _main:
   800  0486                     l1415:	
   801                           ;incstack = 0
   802                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   803                           
   804                           
   805                           ;main.c: 47:     UART_TX_Init();
   806  0486  120A  118A  2430  120A  118A  	fcall	_UART_TX_Init
   807  048B                     l1417:
   808                           
   809                           ;main.c: 48:     TRISD2 = 0;
   810  048B  1683               	bsf	3,5	;RP0=1, select bank1
   811  048C  1303               	bcf	3,6	;RP1=0, select bank1
   812  048D  1108               	bcf	8,2	;volatile
   813  048E                     l1419:
   814                           
   815                           ;main.c: 49:     TRISB = 0;
   816  048E  0186               	clrf	6	;volatile
   817  048F                     l1421:
   818                           
   819                           ;main.c: 50:     ANSELH = 0;
   820  048F  1683               	bsf	3,5	;RP0=1, select bank3
   821  0490  1703               	bsf	3,6	;RP1=1, select bank3
   822  0491  0189               	clrf	9	;volatile
   823                           
   824                           ;main.c: 52:     MPU6050_Init();
   825  0492  120A  118A  25C2  120A  118A  	fcall	_MPU6050_Init
   826  0497                     l1423:
   827                           
   828                           ;main.c: 57:  {;main.c: 58:         RD2 = ~RD2;
   829  0497  3004               	movlw	4
   830  0498  1283               	bcf	3,5	;RP0=0, select bank0
   831  0499  1303               	bcf	3,6	;RP1=0, select bank0
   832  049A  0688               	xorwf	8,f
   833  049B                     l1425:
   834                           
   835                           ;main.c: 59:         MPU6050_Read();
   836  049B  120A  118A  265F  120A  118A  	fcall	_MPU6050_Read
   837  04A0                     l1427:
   838                           
   839                           ;main.c: 60:         _delay((unsigned long)((50)*(8000000/4000.0)));
   840  04A0  3082               	movlw	130
   841  04A1  1283               	bcf	3,5	;RP0=0, select bank0
   842  04A2  1303               	bcf	3,6	;RP1=0, select bank0
   843  04A3  00E8               	movwf	??_main+1
   844  04A4  30DD               	movlw	221
   845  04A5  00E7               	movwf	??_main
   846  04A6                     u837:
   847  04A6  0BE7               	decfsz	??_main,f
   848  04A7  2CA6               	goto	u837
   849  04A8  0BE8               	decfsz	??_main+1,f
   850  04A9  2CA6               	goto	u837
   851  04AA  2C97               	goto	l1423
   852  04AB  120A  118A  2800   	ljmp	start
   853  04AE                     __end_of_main:
   854                           
   855                           	psect	text1
   856  0430                     __ptext1:	
   857 ;; *************** function _UART_TX_Init *****************
   858 ;; Defined at:
   859 ;;		line 14 in file "USART.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _UART_TX_Init
   888  0430                     _UART_TX_Init:
   889  0430                     l1001:	
   890                           ;incstack = 0
   891                           ; Regs used in _UART_TX_Init: [wreg]
   892                           
   893                           
   894                           ;USART.c: 16:   BRGH = 0;
   895  0430  1683               	bsf	3,5	;RP0=1, select bank1
   896  0431  1303               	bcf	3,6	;RP1=0, select bank1
   897  0432  1118               	bcf	24,2	;volatile
   898  0433                     l1003:
   899                           
   900                           ;USART.c: 17:   SPBRG = 12;
   901  0433  300C               	movlw	12
   902  0434  0099               	movwf	25	;volatile
   903  0435                     l1005:
   904                           
   905                           ;USART.c: 19:   SYNC = 0;
   906  0435  1218               	bcf	24,4	;volatile
   907  0436                     l1007:
   908                           
   909                           ;USART.c: 20:   SPEN = 1;
   910  0436  1283               	bcf	3,5	;RP0=0, select bank0
   911  0437  1303               	bcf	3,6	;RP1=0, select bank0
   912  0438  1798               	bsf	24,7	;volatile
   913  0439                     l1009:
   914                           
   915                           ;USART.c: 22:   TRISC6 = 1;
   916  0439  1683               	bsf	3,5	;RP0=1, select bank1
   917  043A  1303               	bcf	3,6	;RP1=0, select bank1
   918  043B  1707               	bsf	7,6	;volatile
   919  043C                     l1011:
   920                           
   921                           ;USART.c: 23:   TRISC7 = 1;
   922  043C  1787               	bsf	7,7	;volatile
   923  043D                     l1013:
   924                           
   925                           ;USART.c: 24:   TXEN = 1;
   926  043D  1698               	bsf	24,5	;volatile
   927  043E                     l45:
   928  043E  0008               	return
   929  043F                     __end_of_UART_TX_Init:
   930                           
   931                           	psect	text2
   932  065F                     __ptext2:	
   933 ;; *************** function _MPU6050_Read *****************
   934 ;; Defined at:
   935 ;;		line 60 in file "MPU.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  buffer         40   17[BANK0 ] unsigned char [40]
   940 ;;  Ay              2   69[BANK0 ] int 
   941 ;;  Gz              2    0        int 
   942 ;;  Gy              2    0        int 
   943 ;;  Gx              2    0        int 
   944 ;;  T               2    0        int 
   945 ;;  Az              2    0        int 
   946 ;;  Ax              2    0        int 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0      54       0       0       0
   958 ;;      Temps:          0       4       0       0       0
   959 ;;      Totals:         0      58       0       0       0
   960 ;;Total ram usage:       58 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    3
   963 ;; This function calls:
   964 ;;		_I2C_Master_Stop
   965 ;;		_I2C_Master_Write
   966 ;;		_I2C_Read
   967 ;;		_I2C_Start
   968 ;;		_UART_Write_String
   969 ;;		___awdiv
   970 ;;		_sprintf
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _MPU6050_Read
   978  065F                     _MPU6050_Read:
   979  065F                     l1393:	
   980                           ;incstack = 0
   981                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   982                           
   983                           
   984                           ;MPU.c: 62:   char buffer[40];;MPU.c: 63:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 65:   I2C_St
      +                          art(0xD0);
   985  065F  30D0               	movlw	208
   986  0660  120A  118A  244F  120A  118A  	fcall	_I2C_Start
   987                           
   988                           ;MPU.c: 66:   I2C_Master_Write(0x3B);
   989  0665  303B               	movlw	59
   990  0666  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
   991                           
   992                           ;MPU.c: 67:   I2C_Master_Stop();
   993  066B  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
   994                           
   995                           ;MPU.c: 68:   I2C_Start(0xD1);
   996  0670  30D1               	movlw	209
   997  0671  120A  118A  244F  120A  118A  	fcall	_I2C_Start
   998  0676                     l1395:
   999  0676  3000               	movlw	0
  1000  0677  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1001  067C  3000               	movlw	0
  1002  067D  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1003  0682                     l1397:
  1004                           
  1005                           ;MPU.c: 70:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1006  0682  3000               	movlw	0
  1007  0683  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1008  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1010  068A  00AD               	movwf	??_MPU6050_Read
  1011  068B  01AE               	clrf	??_MPU6050_Read+1
  1012  068C  3000               	movlw	0
  1013  068D  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1014  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0694  00AF               	movwf	??_MPU6050_Read+2
  1017  0695  01B0               	clrf	??_MPU6050_Read+3
  1018  0696  082F               	movf	??_MPU6050_Read+2,w
  1019  0697  00B0               	movwf	??_MPU6050_Read+3
  1020  0698  01AF               	clrf	??_MPU6050_Read+2
  1021  0699  082D               	movf	??_MPU6050_Read,w
  1022  069A  042F               	iorwf	??_MPU6050_Read+2,w
  1023  069B  00E5               	movwf	MPU6050_Read@Ay
  1024  069C  082E               	movf	??_MPU6050_Read+1,w
  1025  069D  0430               	iorwf	??_MPU6050_Read+3,w
  1026  069E  00E6               	movwf	MPU6050_Read@Ay+1
  1027  069F                     l1399:
  1028  069F  3000               	movlw	0
  1029  06A0  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1030  06A5  3000               	movlw	0
  1031  06A6  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1032  06AB                     l1401:
  1033  06AB  3000               	movlw	0
  1034  06AC  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1035  06B1  3000               	movlw	0
  1036  06B2  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1037  06B7                     l1403:
  1038  06B7  3000               	movlw	0
  1039  06B8  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1040  06BD  3000               	movlw	0
  1041  06BE  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1042  06C3                     l1405:
  1043  06C3  3000               	movlw	0
  1044  06C4  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1045  06C9  3000               	movlw	0
  1046  06CA  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1047  06CF                     l1407:
  1048  06CF  3000               	movlw	0
  1049  06D0  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1050  06D5  3001               	movlw	1
  1051  06D6  120A  118A  245F  120A  118A  	fcall	_I2C_Read
  1052  06DB                     l1409:
  1053                           
  1054                           ;MPU.c: 76:   I2C_Master_Stop();
  1055  06DB  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  1056  06E0                     l1411:
  1057                           
  1058                           ;MPU.c: 78:   PORTB = (Ay+16384)/128;
  1059  06E0  3080               	movlw	128
  1060  06E1  00F0               	movwf	___awdiv@divisor
  1061  06E2  3000               	movlw	0
  1062  06E3  00F1               	movwf	___awdiv@divisor+1
  1063  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1064  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1065  06E6  0865               	movf	MPU6050_Read@Ay,w
  1066  06E7  3E00               	addlw	0
  1067  06E8  00F2               	movwf	___awdiv@dividend
  1068  06E9  0866               	movf	MPU6050_Read@Ay+1,w
  1069  06EA  1803               	skipnc
  1070  06EB  3E01               	addlw	1
  1071  06EC  3E40               	addlw	64
  1072  06ED  00F3               	movwf	___awdiv@dividend+1
  1073  06EE  120A  118A  255B  120A  118A  	fcall	___awdiv
  1074  06F3  0870               	movf	?___awdiv,w
  1075  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1076  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1077  06F6  0086               	movwf	6	;volatile
  1078  06F7                     l1413:
  1079                           
  1080                           ;MPU.c: 83:   sprintf(buffer," Ay = %d    ",Ay);
  1081  06F7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1082  06F8  00AD               	movwf	??_MPU6050_Read
  1083  06F9  082D               	movf	??_MPU6050_Read,w
  1084  06FA  00A0               	movwf	sprintf@f
  1085  06FB  0866               	movf	MPU6050_Read@Ay+1,w
  1086  06FC  00A2               	movwf	?_sprintf+2
  1087  06FD  0865               	movf	MPU6050_Read@Ay,w
  1088  06FE  00A1               	movwf	?_sprintf+1
  1089  06FF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1090  0700  120A  118A  2714  120A  118A  	fcall	_sprintf
  1091                           
  1092                           ;MPU.c: 84:   UART_Write_String(PORTB);
  1093  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0707  0806               	movf	6,w	;volatile
  1096  0708  00AD               	movwf	??_MPU6050_Read
  1097  0709  01AE               	clrf	??_MPU6050_Read+1
  1098  070A  082D               	movf	??_MPU6050_Read,w
  1099  070B  00F1               	movwf	UART_Write_String@buf
  1100  070C  082E               	movf	??_MPU6050_Read+1,w
  1101  070D  00F2               	movwf	UART_Write_String@buf+1
  1102  070E  120A  118A  24AE  120A  118A  	fcall	_UART_Write_String
  1103  0713                     l81:
  1104  0713  0008               	return
  1105  0714                     __end_of_MPU6050_Read:
  1106                           
  1107                           	psect	text3
  1108  0714                     __ptext3:	
  1109 ;; *************** function _sprintf *****************
  1110 ;; Defined at:
  1111 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  sp              1    wreg     PTR unsigned char 
  1114 ;;		 -> MPU6050_Read@buffer(40), 
  1115 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1116 ;;		 -> STR_1(13), 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1119 ;;		 -> MPU6050_Read@buffer(40), 
  1120 ;;  tmpval          4    0        struct .
  1121 ;;  val             2    9[BANK0 ] unsigned int 
  1122 ;;  cp              2    0        PTR const unsigned char 
  1123 ;;  len             2    0        unsigned int 
  1124 ;;  c               1   12[BANK0 ] unsigned char 
  1125 ;;  prec            1    8[BANK0 ] char 
  1126 ;;  flag            1    7[BANK0 ] unsigned char 
  1127 ;;  ap              1    6[BANK0 ] PTR void [1]
  1128 ;;		 -> ?_sprintf(2), 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  2    0[BANK0 ] int 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       3       0       0       0
  1139 ;;      Locals:         0       7       0       0       0
  1140 ;;      Temps:          0       3       0       0       0
  1141 ;;      Totals:         0      13       0       0       0
  1142 ;;Total ram usage:       13 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		___lwdiv
  1147 ;;		___lwmod
  1148 ;; This function is called by:
  1149 ;;		_MPU6050_Read
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _sprintf
  1155  0714                     _sprintf:
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1159                           ;sprintf@sp stored from wreg
  1160  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0716  00AB               	movwf	sprintf@sp
  1163  0717                     l1235:
  1164                           
  1165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1166  0717  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1167  0718  00A3               	movwf	??_sprintf
  1168  0719  0823               	movf	??_sprintf,w
  1169  071A  00A6               	movwf	sprintf@ap
  1170                           
  1171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1172  071B  2FE5               	goto	l1287
  1173  071C                     l1237:
  1174                           
  1175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1176  071C  3025               	movlw	37
  1177  071D  062C               	xorwf	sprintf@c,w
  1178  071E  1903               	btfsc	3,2
  1179  071F  2F21               	goto	u651
  1180  0720  2F22               	goto	u650
  1181  0721                     u651:
  1182  0721  2F2E               	goto	l1243
  1183  0722                     u650:
  1184  0722                     l1239:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1187  0722  082C               	movf	sprintf@c,w
  1188  0723  00A3               	movwf	??_sprintf
  1189  0724  082B               	movf	sprintf@sp,w
  1190  0725  0084               	movwf	4
  1191  0726  0823               	movf	??_sprintf,w
  1192  0727  1383               	bcf	3,7	;select IRP bank0
  1193  0728  0080               	movwf	0
  1194  0729                     l1241:
  1195  0729  3001               	movlw	1
  1196  072A  00A3               	movwf	??_sprintf
  1197  072B  0823               	movf	??_sprintf,w
  1198  072C  07AB               	addwf	sprintf@sp,f
  1199                           
  1200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1201  072D  2FE5               	goto	l1287
  1202  072E                     l1243:
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1205  072E  01A7               	clrf	sprintf@flag
  1206  072F                     l1247:	
  1207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1208                           
  1209  072F  3001               	movlw	1
  1210  0730  07A0               	addwf	sprintf@f,f
  1211  0731  30FF               	movlw	-1
  1212  0732  0720               	addwf	sprintf@f,w
  1213  0733  0084               	movwf	4
  1214  0734  120A  118A  2003  120A  118A  	fcall	stringdir
  1215  0739  00AC               	movwf	sprintf@c
  1216  073A  00A3               	movwf	??_sprintf
  1217  073B  01A4               	clrf	??_sprintf+1
  1218                           
  1219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1220                           ; Switch size 1, requested type "simple"
  1221                           ; Number of cases is 1, Range of values is 0 to 0
  1222                           ; switch strategies available:
  1223                           ; Name         Instructions Cycles
  1224                           ; simple_byte            4     3 (average)
  1225                           ; direct_byte           11     8 (fixed)
  1226                           ; jumptable            260     6 (fixed)
  1227                           ;	Chosen strategy is simple_byte
  1228  073C  0824               	movf	??_sprintf+1,w
  1229  073D  3A00               	xorlw	0	; case 0
  1230  073E  1903               	skipnz
  1231  073F  2F41               	goto	l1467
  1232  0740  2FE5               	goto	l1287
  1233  0741                     l1467:
  1234                           
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 3, Range of values is 0 to 105
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte           10     6 (average)
  1240                           ; jumptable            260     6 (fixed)
  1241                           ;	Chosen strategy is simple_byte
  1242  0741  0823               	movf	??_sprintf,w
  1243  0742  3A00               	xorlw	0	; case 0
  1244  0743  1903               	skipnz
  1245  0744  2FF7               	goto	l1289
  1246  0745  3A64               	xorlw	100	; case 100
  1247  0746  1903               	skipnz
  1248  0747  2F4C               	goto	l1249
  1249  0748  3A0D               	xorlw	13	; case 105
  1250  0749  1903               	skipnz
  1251  074A  2F4C               	goto	l1249
  1252  074B  2FE5               	goto	l1287
  1253  074C                     l1249:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1256  074C  0826               	movf	sprintf@ap,w
  1257  074D  0084               	movwf	4
  1258  074E  1383               	bcf	3,7	;select IRP bank0
  1259  074F  0800               	movf	0,w
  1260  0750  00A9               	movwf	sprintf@val
  1261  0751  0A84               	incf	4,f
  1262  0752  0800               	movf	0,w
  1263  0753  00AA               	movwf	sprintf@val+1
  1264  0754                     l1251:
  1265  0754  3002               	movlw	2
  1266  0755  00A3               	movwf	??_sprintf
  1267  0756  0823               	movf	??_sprintf,w
  1268  0757  07A6               	addwf	sprintf@ap,f
  1269  0758                     l1253:
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1272  0758  1FAA               	btfss	sprintf@val+1,7
  1273  0759  2F5B               	goto	u661
  1274  075A  2F5C               	goto	u660
  1275  075B                     u661:
  1276  075B  2F65               	goto	l1259
  1277  075C                     u660:
  1278  075C                     l1255:
  1279                           
  1280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1281  075C  3003               	movlw	3
  1282  075D  00A3               	movwf	??_sprintf
  1283  075E  0823               	movf	??_sprintf,w
  1284  075F  04A7               	iorwf	sprintf@flag,f
  1285  0760                     l1257:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1288  0760  09A9               	comf	sprintf@val,f
  1289  0761  09AA               	comf	sprintf@val+1,f
  1290  0762  0AA9               	incf	sprintf@val,f
  1291  0763  1903               	skipnz
  1292  0764  0AAA               	incf	sprintf@val+1,f
  1293  0765                     l1259:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1296  0765  01AC               	clrf	sprintf@c
  1297  0766  0AAC               	incf	sprintf@c,f
  1298  0767                     l1265:
  1299                           
  1300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1301  0767  082C               	movf	sprintf@c,w
  1302  0768  00A3               	movwf	??_sprintf
  1303  0769  0723               	addwf	??_sprintf,w
  1304  076A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1305  076B  0084               	movwf	4
  1306  076C  120A  118A  2003  120A  118A  	fcall	stringdir
  1307  0771  00A4               	movwf	??_sprintf+1
  1308  0772  120A  118A  2003  120A  118A  	fcall	stringdir
  1309  0777  00A5               	movwf	??_sprintf+2
  1310  0778  0825               	movf	??_sprintf+2,w
  1311  0779  022A               	subwf	sprintf@val+1,w
  1312  077A  1D03               	skipz
  1313  077B  2F7E               	goto	u675
  1314  077C  0824               	movf	??_sprintf+1,w
  1315  077D  0229               	subwf	sprintf@val,w
  1316  077E                     u675:
  1317  077E  1803               	skipnc
  1318  077F  2F81               	goto	u671
  1319  0780  2F82               	goto	u670
  1320  0781                     u671:
  1321  0781  2F83               	goto	l1269
  1322  0782                     u670:
  1323  0782  2F8D               	goto	l1271
  1324  0783                     l1269:
  1325  0783  3001               	movlw	1
  1326  0784  00A3               	movwf	??_sprintf
  1327  0785  0823               	movf	??_sprintf,w
  1328  0786  07AC               	addwf	sprintf@c,f
  1329  0787  3005               	movlw	5
  1330  0788  062C               	xorwf	sprintf@c,w
  1331  0789  1D03               	btfss	3,2
  1332  078A  2F8C               	goto	u681
  1333  078B  2F8D               	goto	u680
  1334  078C                     u681:
  1335  078C  2F67               	goto	l1265
  1336  078D                     u680:
  1337  078D                     l1271:
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1340  078D  0827               	movf	sprintf@flag,w
  1341  078E  3903               	andlw	3
  1342  078F  1903               	btfsc	3,2
  1343  0790  2F92               	goto	u691
  1344  0791  2F93               	goto	u690
  1345  0792                     u691:
  1346  0792  2F9E               	goto	l1277
  1347  0793                     u690:
  1348  0793                     l1273:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1351  0793  302D               	movlw	45
  1352  0794  00A3               	movwf	??_sprintf
  1353  0795  082B               	movf	sprintf@sp,w
  1354  0796  0084               	movwf	4
  1355  0797  0823               	movf	??_sprintf,w
  1356  0798  1383               	bcf	3,7	;select IRP bank0
  1357  0799  0080               	movwf	0
  1358  079A                     l1275:
  1359  079A  3001               	movlw	1
  1360  079B  00A3               	movwf	??_sprintf
  1361  079C  0823               	movf	??_sprintf,w
  1362  079D  07AB               	addwf	sprintf@sp,f
  1363  079E                     l1277:
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1366  079E  082C               	movf	sprintf@c,w
  1367  079F  00A3               	movwf	??_sprintf
  1368  07A0  0823               	movf	??_sprintf,w
  1369  07A1  00A8               	movwf	sprintf@prec
  1370                           
  1371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1372  07A2  2FDC               	goto	l1285
  1373  07A3                     l1279:
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1376  07A3  300A               	movlw	10
  1377  07A4  00F8               	movwf	___lwmod@divisor
  1378  07A5  3000               	movlw	0
  1379  07A6  00F9               	movwf	___lwmod@divisor+1
  1380  07A7  0828               	movf	sprintf@prec,w
  1381  07A8  00A3               	movwf	??_sprintf
  1382  07A9  0723               	addwf	??_sprintf,w
  1383  07AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1384  07AB  0084               	movwf	4
  1385  07AC  120A  118A  2003  120A  118A  	fcall	stringdir
  1386  07B1  00F0               	movwf	___lwdiv@divisor
  1387  07B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1388  07B7  00F1               	movwf	___lwdiv@divisor+1
  1389  07B8  082A               	movf	sprintf@val+1,w
  1390  07B9  00F3               	movwf	___lwdiv@dividend+1
  1391  07BA  0829               	movf	sprintf@val,w
  1392  07BB  00F2               	movwf	___lwdiv@dividend
  1393  07BC  120A  118A  2517  120A  118A  	fcall	___lwdiv
  1394  07C1  0871               	movf	?___lwdiv+1,w
  1395  07C2  00FB               	movwf	___lwmod@dividend+1
  1396  07C3  0870               	movf	?___lwdiv,w
  1397  07C4  00FA               	movwf	___lwmod@dividend
  1398  07C5  120A  118A  24DD  120A  118A  	fcall	___lwmod
  1399  07CA  0878               	movf	?___lwmod,w
  1400  07CB  3E30               	addlw	48
  1401  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1402  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1403  07CE  00A4               	movwf	??_sprintf+1
  1404  07CF  0824               	movf	??_sprintf+1,w
  1405  07D0  00AC               	movwf	sprintf@c
  1406  07D1                     l1281:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1409  07D1  082C               	movf	sprintf@c,w
  1410  07D2  00A3               	movwf	??_sprintf
  1411  07D3  082B               	movf	sprintf@sp,w
  1412  07D4  0084               	movwf	4
  1413  07D5  0823               	movf	??_sprintf,w
  1414  07D6  1383               	bcf	3,7	;select IRP bank0
  1415  07D7  0080               	movwf	0
  1416  07D8                     l1283:
  1417  07D8  3001               	movlw	1
  1418  07D9  00A3               	movwf	??_sprintf
  1419  07DA  0823               	movf	??_sprintf,w
  1420  07DB  07AB               	addwf	sprintf@sp,f
  1421  07DC                     l1285:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1424  07DC  30FF               	movlw	255
  1425  07DD  00A3               	movwf	??_sprintf
  1426  07DE  0823               	movf	??_sprintf,w
  1427  07DF  07A8               	addwf	sprintf@prec,f
  1428  07E0  0A28               	incf	sprintf@prec,w
  1429  07E1  1D03               	btfss	3,2
  1430  07E2  2FE4               	goto	u701
  1431  07E3  2FE5               	goto	u700
  1432  07E4                     u701:
  1433  07E4  2FA3               	goto	l1279
  1434  07E5                     u700:
  1435  07E5                     l1287:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1438  07E5  3001               	movlw	1
  1439  07E6  07A0               	addwf	sprintf@f,f
  1440  07E7  30FF               	movlw	-1
  1441  07E8  0720               	addwf	sprintf@f,w
  1442  07E9  0084               	movwf	4
  1443  07EA  120A  118A  2003  120A  118A  	fcall	stringdir
  1444  07EF  00A3               	movwf	??_sprintf
  1445  07F0  0823               	movf	??_sprintf,w
  1446  07F1  00AC               	movwf	sprintf@c
  1447  07F2  082C               	movf	sprintf@c,w
  1448  07F3  1D03               	btfss	3,2
  1449  07F4  2FF6               	goto	u711
  1450  07F5  2FF7               	goto	u710
  1451  07F6                     u711:
  1452  07F6  2F1C               	goto	l1237
  1453  07F7                     u710:
  1454  07F7                     l1289:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1457  07F7  082B               	movf	sprintf@sp,w
  1458  07F8  0084               	movwf	4
  1459  07F9  1383               	bcf	3,7	;select IRP bank0
  1460  07FA  0180               	clrf	0
  1461  07FB                     l281:
  1462  07FB  0008               	return
  1463  07FC                     __end_of_sprintf:
  1464                           
  1465                           	psect	text4
  1466  04DD                     __ptext4:	
  1467 ;; *************** function ___lwmod *****************
  1468 ;; Defined at:
  1469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  divisor         2    8[COMMON] unsigned int 
  1472 ;;  dividend        2   10[COMMON] unsigned int 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  counter         1   13[COMMON] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    8[COMMON] unsigned int 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         4       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0
  1486 ;;      Temps:          1       0       0       0       0
  1487 ;;      Totals:         6       0       0       0       0
  1488 ;;Total ram usage:        6 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_sprintf
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function ___lwmod
  1499  04DD                     ___lwmod:
  1500  04DD                     l1183:	
  1501                           ;incstack = 0
  1502                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1503                           
  1504  04DD  0878               	movf	___lwmod@divisor,w
  1505  04DE  0479               	iorwf	___lwmod@divisor+1,w
  1506  04DF  1903               	btfsc	3,2
  1507  04E0  2CE2               	goto	u551
  1508  04E1  2CE3               	goto	u550
  1509  04E2                     u551:
  1510  04E2  2D12               	goto	l1201
  1511  04E3                     u550:
  1512  04E3                     l1185:
  1513  04E3  01FD               	clrf	___lwmod@counter
  1514  04E4  0AFD               	incf	___lwmod@counter,f
  1515  04E5  2CF1               	goto	l1191
  1516  04E6                     l1187:
  1517  04E6  3001               	movlw	1
  1518  04E7                     u565:
  1519  04E7  1003               	clrc
  1520  04E8  0DF8               	rlf	___lwmod@divisor,f
  1521  04E9  0DF9               	rlf	___lwmod@divisor+1,f
  1522  04EA  3EFF               	addlw	-1
  1523  04EB  1D03               	skipz
  1524  04EC  2CE7               	goto	u565
  1525  04ED                     l1189:
  1526  04ED  3001               	movlw	1
  1527  04EE  00FC               	movwf	??___lwmod
  1528  04EF  087C               	movf	??___lwmod,w
  1529  04F0  07FD               	addwf	___lwmod@counter,f
  1530  04F1                     l1191:
  1531  04F1  1FF9               	btfss	___lwmod@divisor+1,7
  1532  04F2  2CF4               	goto	u571
  1533  04F3  2CF5               	goto	u570
  1534  04F4                     u571:
  1535  04F4  2CE6               	goto	l1187
  1536  04F5                     u570:
  1537  04F5                     l1193:
  1538  04F5  0879               	movf	___lwmod@divisor+1,w
  1539  04F6  027B               	subwf	___lwmod@dividend+1,w
  1540  04F7  1D03               	skipz
  1541  04F8  2CFB               	goto	u585
  1542  04F9  0878               	movf	___lwmod@divisor,w
  1543  04FA  027A               	subwf	___lwmod@dividend,w
  1544  04FB                     u585:
  1545  04FB  1C03               	skipc
  1546  04FC  2CFE               	goto	u581
  1547  04FD  2CFF               	goto	u580
  1548  04FE                     u581:
  1549  04FE  2D05               	goto	l1197
  1550  04FF                     u580:
  1551  04FF                     l1195:
  1552  04FF  0878               	movf	___lwmod@divisor,w
  1553  0500  02FA               	subwf	___lwmod@dividend,f
  1554  0501  0879               	movf	___lwmod@divisor+1,w
  1555  0502  1C03               	skipc
  1556  0503  03FB               	decf	___lwmod@dividend+1,f
  1557  0504  02FB               	subwf	___lwmod@dividend+1,f
  1558  0505                     l1197:
  1559  0505  3001               	movlw	1
  1560  0506                     u595:
  1561  0506  1003               	clrc
  1562  0507  0CF9               	rrf	___lwmod@divisor+1,f
  1563  0508  0CF8               	rrf	___lwmod@divisor,f
  1564  0509  3EFF               	addlw	-1
  1565  050A  1D03               	skipz
  1566  050B  2D06               	goto	u595
  1567  050C                     l1199:
  1568  050C  3001               	movlw	1
  1569  050D  02FD               	subwf	___lwmod@counter,f
  1570  050E  1D03               	btfss	3,2
  1571  050F  2D11               	goto	u601
  1572  0510  2D12               	goto	u600
  1573  0511                     u601:
  1574  0511  2CF5               	goto	l1193
  1575  0512                     u600:
  1576  0512                     l1201:
  1577  0512  087B               	movf	___lwmod@dividend+1,w
  1578  0513  00F9               	movwf	?___lwmod+1
  1579  0514  087A               	movf	___lwmod@dividend,w
  1580  0515  00F8               	movwf	?___lwmod
  1581  0516                     l567:
  1582  0516  0008               	return
  1583  0517                     __end_of___lwmod:
  1584                           
  1585                           	psect	text5
  1586  0517                     __ptext5:	
  1587 ;; *************** function ___lwdiv *****************
  1588 ;; Defined at:
  1589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  divisor         2    0[COMMON] unsigned int 
  1592 ;;  dividend        2    2[COMMON] unsigned int 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  quotient        2    5[COMMON] unsigned int 
  1595 ;;  counter         1    7[COMMON] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2    0[COMMON] unsigned int 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         4       0       0       0       0
  1606 ;;      Locals:         3       0       0       0       0
  1607 ;;      Temps:          1       0       0       0       0
  1608 ;;      Totals:         8       0       0       0       0
  1609 ;;Total ram usage:        8 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_sprintf
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function ___lwdiv
  1620  0517                     ___lwdiv:
  1621  0517                     l1157:	
  1622                           ;incstack = 0
  1623                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1624                           
  1625  0517  01F5               	clrf	___lwdiv@quotient
  1626  0518  01F6               	clrf	___lwdiv@quotient+1
  1627  0519                     l1159:
  1628  0519  0870               	movf	___lwdiv@divisor,w
  1629  051A  0471               	iorwf	___lwdiv@divisor+1,w
  1630  051B  1903               	btfsc	3,2
  1631  051C  2D1E               	goto	u481
  1632  051D  2D1F               	goto	u480
  1633  051E                     u481:
  1634  051E  2D56               	goto	l1179
  1635  051F                     u480:
  1636  051F                     l1161:
  1637  051F  01F7               	clrf	___lwdiv@counter
  1638  0520  0AF7               	incf	___lwdiv@counter,f
  1639  0521  2D2D               	goto	l1167
  1640  0522                     l1163:
  1641  0522  3001               	movlw	1
  1642  0523                     u495:
  1643  0523  1003               	clrc
  1644  0524  0DF0               	rlf	___lwdiv@divisor,f
  1645  0525  0DF1               	rlf	___lwdiv@divisor+1,f
  1646  0526  3EFF               	addlw	-1
  1647  0527  1D03               	skipz
  1648  0528  2D23               	goto	u495
  1649  0529                     l1165:
  1650  0529  3001               	movlw	1
  1651  052A  00F4               	movwf	??___lwdiv
  1652  052B  0874               	movf	??___lwdiv,w
  1653  052C  07F7               	addwf	___lwdiv@counter,f
  1654  052D                     l1167:
  1655  052D  1FF1               	btfss	___lwdiv@divisor+1,7
  1656  052E  2D30               	goto	u501
  1657  052F  2D31               	goto	u500
  1658  0530                     u501:
  1659  0530  2D22               	goto	l1163
  1660  0531                     u500:
  1661  0531                     l1169:
  1662  0531  3001               	movlw	1
  1663  0532                     u515:
  1664  0532  1003               	clrc
  1665  0533  0DF5               	rlf	___lwdiv@quotient,f
  1666  0534  0DF6               	rlf	___lwdiv@quotient+1,f
  1667  0535  3EFF               	addlw	-1
  1668  0536  1D03               	skipz
  1669  0537  2D32               	goto	u515
  1670  0538  0871               	movf	___lwdiv@divisor+1,w
  1671  0539  0273               	subwf	___lwdiv@dividend+1,w
  1672  053A  1D03               	skipz
  1673  053B  2D3E               	goto	u525
  1674  053C  0870               	movf	___lwdiv@divisor,w
  1675  053D  0272               	subwf	___lwdiv@dividend,w
  1676  053E                     u525:
  1677  053E  1C03               	skipc
  1678  053F  2D41               	goto	u521
  1679  0540  2D42               	goto	u520
  1680  0541                     u521:
  1681  0541  2D49               	goto	l1175
  1682  0542                     u520:
  1683  0542                     l1171:
  1684  0542  0870               	movf	___lwdiv@divisor,w
  1685  0543  02F2               	subwf	___lwdiv@dividend,f
  1686  0544  0871               	movf	___lwdiv@divisor+1,w
  1687  0545  1C03               	skipc
  1688  0546  03F3               	decf	___lwdiv@dividend+1,f
  1689  0547  02F3               	subwf	___lwdiv@dividend+1,f
  1690  0548                     l1173:
  1691  0548  1475               	bsf	___lwdiv@quotient,0
  1692  0549                     l1175:
  1693  0549  3001               	movlw	1
  1694  054A                     u535:
  1695  054A  1003               	clrc
  1696  054B  0CF1               	rrf	___lwdiv@divisor+1,f
  1697  054C  0CF0               	rrf	___lwdiv@divisor,f
  1698  054D  3EFF               	addlw	-1
  1699  054E  1D03               	skipz
  1700  054F  2D4A               	goto	u535
  1701  0550                     l1177:
  1702  0550  3001               	movlw	1
  1703  0551  02F7               	subwf	___lwdiv@counter,f
  1704  0552  1D03               	btfss	3,2
  1705  0553  2D55               	goto	u541
  1706  0554  2D56               	goto	u540
  1707  0555                     u541:
  1708  0555  2D31               	goto	l1169
  1709  0556                     u540:
  1710  0556                     l1179:
  1711  0556  0876               	movf	___lwdiv@quotient+1,w
  1712  0557  00F1               	movwf	?___lwdiv+1
  1713  0558  0875               	movf	___lwdiv@quotient,w
  1714  0559  00F0               	movwf	?___lwdiv
  1715  055A                     l557:
  1716  055A  0008               	return
  1717  055B                     __end_of___lwdiv:
  1718                           
  1719                           	psect	text6
  1720  055B                     __ptext6:	
  1721 ;; *************** function ___awdiv *****************
  1722 ;; Defined at:
  1723 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  divisor         2    0[COMMON] int 
  1726 ;;  dividend        2    2[COMMON] int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  quotient        2    7[COMMON] int 
  1729 ;;  sign            1    6[COMMON] unsigned char 
  1730 ;;  counter         1    5[COMMON] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    0[COMMON] int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         4       0       0       0       0
  1741 ;;      Locals:         4       0       0       0       0
  1742 ;;      Temps:          1       0       0       0       0
  1743 ;;      Totals:         9       0       0       0       0
  1744 ;;Total ram usage:        9 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_MPU6050_Read
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function ___awdiv
  1755  055B                     ___awdiv:
  1756  055B                     l1297:	
  1757                           ;incstack = 0
  1758                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1759                           
  1760  055B  01F6               	clrf	___awdiv@sign
  1761  055C                     l1299:
  1762  055C  1FF1               	btfss	___awdiv@divisor+1,7
  1763  055D  2D5F               	goto	u721
  1764  055E  2D60               	goto	u720
  1765  055F                     u721:
  1766  055F  2D67               	goto	l1305
  1767  0560                     u720:
  1768  0560                     l1301:
  1769  0560  09F0               	comf	___awdiv@divisor,f
  1770  0561  09F1               	comf	___awdiv@divisor+1,f
  1771  0562  0AF0               	incf	___awdiv@divisor,f
  1772  0563  1903               	skipnz
  1773  0564  0AF1               	incf	___awdiv@divisor+1,f
  1774  0565                     l1303:
  1775  0565  01F6               	clrf	___awdiv@sign
  1776  0566  0AF6               	incf	___awdiv@sign,f
  1777  0567                     l1305:
  1778  0567  1FF3               	btfss	___awdiv@dividend+1,7
  1779  0568  2D6A               	goto	u731
  1780  0569  2D6B               	goto	u730
  1781  056A                     u731:
  1782  056A  2D74               	goto	l1311
  1783  056B                     u730:
  1784  056B                     l1307:
  1785  056B  09F2               	comf	___awdiv@dividend,f
  1786  056C  09F3               	comf	___awdiv@dividend+1,f
  1787  056D  0AF2               	incf	___awdiv@dividend,f
  1788  056E  1903               	skipnz
  1789  056F  0AF3               	incf	___awdiv@dividend+1,f
  1790  0570                     l1309:
  1791  0570  3001               	movlw	1
  1792  0571  00F4               	movwf	??___awdiv
  1793  0572  0874               	movf	??___awdiv,w
  1794  0573  06F6               	xorwf	___awdiv@sign,f
  1795  0574                     l1311:
  1796  0574  01F7               	clrf	___awdiv@quotient
  1797  0575  01F8               	clrf	___awdiv@quotient+1
  1798  0576                     l1313:
  1799  0576  0870               	movf	___awdiv@divisor,w
  1800  0577  0471               	iorwf	___awdiv@divisor+1,w
  1801  0578  1903               	btfsc	3,2
  1802  0579  2D7B               	goto	u741
  1803  057A  2D7C               	goto	u740
  1804  057B                     u741:
  1805  057B  2DB3               	goto	l1333
  1806  057C                     u740:
  1807  057C                     l1315:
  1808  057C  01F5               	clrf	___awdiv@counter
  1809  057D  0AF5               	incf	___awdiv@counter,f
  1810  057E  2D8A               	goto	l1321
  1811  057F                     l1317:
  1812  057F  3001               	movlw	1
  1813  0580                     u755:
  1814  0580  1003               	clrc
  1815  0581  0DF0               	rlf	___awdiv@divisor,f
  1816  0582  0DF1               	rlf	___awdiv@divisor+1,f
  1817  0583  3EFF               	addlw	-1
  1818  0584  1D03               	skipz
  1819  0585  2D80               	goto	u755
  1820  0586                     l1319:
  1821  0586  3001               	movlw	1
  1822  0587  00F4               	movwf	??___awdiv
  1823  0588  0874               	movf	??___awdiv,w
  1824  0589  07F5               	addwf	___awdiv@counter,f
  1825  058A                     l1321:
  1826  058A  1FF1               	btfss	___awdiv@divisor+1,7
  1827  058B  2D8D               	goto	u761
  1828  058C  2D8E               	goto	u760
  1829  058D                     u761:
  1830  058D  2D7F               	goto	l1317
  1831  058E                     u760:
  1832  058E                     l1323:
  1833  058E  3001               	movlw	1
  1834  058F                     u775:
  1835  058F  1003               	clrc
  1836  0590  0DF7               	rlf	___awdiv@quotient,f
  1837  0591  0DF8               	rlf	___awdiv@quotient+1,f
  1838  0592  3EFF               	addlw	-1
  1839  0593  1D03               	skipz
  1840  0594  2D8F               	goto	u775
  1841  0595  0871               	movf	___awdiv@divisor+1,w
  1842  0596  0273               	subwf	___awdiv@dividend+1,w
  1843  0597  1D03               	skipz
  1844  0598  2D9B               	goto	u785
  1845  0599  0870               	movf	___awdiv@divisor,w
  1846  059A  0272               	subwf	___awdiv@dividend,w
  1847  059B                     u785:
  1848  059B  1C03               	skipc
  1849  059C  2D9E               	goto	u781
  1850  059D  2D9F               	goto	u780
  1851  059E                     u781:
  1852  059E  2DA6               	goto	l1329
  1853  059F                     u780:
  1854  059F                     l1325:
  1855  059F  0870               	movf	___awdiv@divisor,w
  1856  05A0  02F2               	subwf	___awdiv@dividend,f
  1857  05A1  0871               	movf	___awdiv@divisor+1,w
  1858  05A2  1C03               	skipc
  1859  05A3  03F3               	decf	___awdiv@dividend+1,f
  1860  05A4  02F3               	subwf	___awdiv@dividend+1,f
  1861  05A5                     l1327:
  1862  05A5  1477               	bsf	___awdiv@quotient,0
  1863  05A6                     l1329:
  1864  05A6  3001               	movlw	1
  1865  05A7                     u795:
  1866  05A7  1003               	clrc
  1867  05A8  0CF1               	rrf	___awdiv@divisor+1,f
  1868  05A9  0CF0               	rrf	___awdiv@divisor,f
  1869  05AA  3EFF               	addlw	-1
  1870  05AB  1D03               	skipz
  1871  05AC  2DA7               	goto	u795
  1872  05AD                     l1331:
  1873  05AD  3001               	movlw	1
  1874  05AE  02F5               	subwf	___awdiv@counter,f
  1875  05AF  1D03               	btfss	3,2
  1876  05B0  2DB2               	goto	u801
  1877  05B1  2DB3               	goto	u800
  1878  05B2                     u801:
  1879  05B2  2D8E               	goto	l1323
  1880  05B3                     u800:
  1881  05B3                     l1333:
  1882  05B3  0876               	movf	___awdiv@sign,w
  1883  05B4  1903               	btfsc	3,2
  1884  05B5  2DB7               	goto	u811
  1885  05B6  2DB8               	goto	u810
  1886  05B7                     u811:
  1887  05B7  2DBD               	goto	l1337
  1888  05B8                     u810:
  1889  05B8                     l1335:
  1890  05B8  09F7               	comf	___awdiv@quotient,f
  1891  05B9  09F8               	comf	___awdiv@quotient+1,f
  1892  05BA  0AF7               	incf	___awdiv@quotient,f
  1893  05BB  1903               	skipnz
  1894  05BC  0AF8               	incf	___awdiv@quotient+1,f
  1895  05BD                     l1337:
  1896  05BD  0878               	movf	___awdiv@quotient+1,w
  1897  05BE  00F1               	movwf	?___awdiv+1
  1898  05BF  0877               	movf	___awdiv@quotient,w
  1899  05C0  00F0               	movwf	?___awdiv
  1900  05C1                     l438:
  1901  05C1  0008               	return
  1902  05C2                     __end_of___awdiv:
  1903                           
  1904                           	psect	text7
  1905  04AE                     __ptext7:	
  1906 ;; *************** function _UART_Write_String *****************
  1907 ;; Defined at:
  1908 ;;		line 33 in file "USART.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  buf             2    1[COMMON] PTR unsigned char 
  1911 ;;		 -> RAM(512), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               2    5[COMMON] int 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         2       0       0       0       0
  1924 ;;      Locals:         2       0       0       0       0
  1925 ;;      Temps:          2       0       0       0       0
  1926 ;;      Totals:         6       0       0       0       0
  1927 ;;Total ram usage:        6 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    1
  1930 ;; This function calls:
  1931 ;;		_UART_Write
  1932 ;; This function is called by:
  1933 ;;		_MPU6050_Read
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _UART_Write_String
  1939  04AE                     _UART_Write_String:
  1940  04AE                     l1205:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;USART.c: 33: void UART_Write_String(char* buf);USART.c: 34: {;USART.c: 35:     int i=0;
  1946  04AE  01F5               	clrf	UART_Write_String@i
  1947  04AF  01F6               	clrf	UART_Write_String@i+1
  1948                           
  1949                           ;USART.c: 36:     while(buf[i] != '\0')
  1950  04B0  2CCA               	goto	l1211
  1951  04B1                     l1207:
  1952                           
  1953                           ;USART.c: 37:         UART_Write(buf[i++]);
  1954  04B1  0875               	movf	UART_Write_String@i,w
  1955  04B2  0771               	addwf	UART_Write_String@buf,w
  1956  04B3  00F3               	movwf	??_UART_Write_String
  1957  04B4  0876               	movf	UART_Write_String@i+1,w
  1958  04B5  1803               	skipnc
  1959  04B6  0A76               	incf	UART_Write_String@i+1,w
  1960  04B7  0772               	addwf	UART_Write_String@buf+1,w
  1961  04B8  00F4               	movwf	??_UART_Write_String+1
  1962  04B9  0873               	movf	??_UART_Write_String,w
  1963  04BA  0084               	movwf	4
  1964  04BB  1783               	bsf	3,7
  1965  04BC  1C74               	btfss	??_UART_Write_String+1,0
  1966  04BD  1383               	bcf	3,7
  1967  04BE  0800               	movf	0,w
  1968  04BF  120A  118A  240A  120A  118A  	fcall	_UART_Write
  1969  04C4                     l1209:
  1970  04C4  3001               	movlw	1
  1971  04C5  07F5               	addwf	UART_Write_String@i,f
  1972  04C6  1803               	skipnc
  1973  04C7  0AF6               	incf	UART_Write_String@i+1,f
  1974  04C8  3000               	movlw	0
  1975  04C9  07F6               	addwf	UART_Write_String@i+1,f
  1976  04CA                     l1211:
  1977                           
  1978                           ;USART.c: 36:     while(buf[i] != '\0')
  1979  04CA  0875               	movf	UART_Write_String@i,w
  1980  04CB  0771               	addwf	UART_Write_String@buf,w
  1981  04CC  00F3               	movwf	??_UART_Write_String
  1982  04CD  0876               	movf	UART_Write_String@i+1,w
  1983  04CE  1803               	skipnc
  1984  04CF  0A76               	incf	UART_Write_String@i+1,w
  1985  04D0  0772               	addwf	UART_Write_String@buf+1,w
  1986  04D1  00F4               	movwf	??_UART_Write_String+1
  1987  04D2  0873               	movf	??_UART_Write_String,w
  1988  04D3  0084               	movwf	4
  1989  04D4  1783               	bsf	3,7
  1990  04D5  1C74               	btfss	??_UART_Write_String+1,0
  1991  04D6  1383               	bcf	3,7
  1992  04D7  0800               	movf	0,w
  1993  04D8  1D03               	btfss	3,2
  1994  04D9  2CDB               	goto	u611
  1995  04DA  2CDC               	goto	u610
  1996  04DB                     u611:
  1997  04DB  2CB1               	goto	l1207
  1998  04DC                     u610:
  1999  04DC                     l57:
  2000  04DC  0008               	return
  2001  04DD                     __end_of_UART_Write_String:
  2002                           
  2003                           	psect	text8
  2004  040A                     __ptext8:	
  2005 ;; *************** function _UART_Write *****************
  2006 ;; Defined at:
  2007 ;;		line 27 in file "USART.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  data            1    wreg     unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  data            1    0[COMMON] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         1       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0
  2024 ;;      Totals:         1       0       0       0       0
  2025 ;;Total ram usage:        1 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_UART_Write_String
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _UART_Write
  2036  040A                     _UART_Write:
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _UART_Write: [wreg]
  2040                           ;UART_Write@data stored from wreg
  2041  040A  00F0               	movwf	UART_Write@data
  2042  040B                     l1145:
  2043  040B                     l48:	
  2044                           ;USART.c: 27: void UART_Write(unsigned char data);USART.c: 28: {;USART.c: 29:   while(!T
      +                          RMT);
  2045                           
  2046  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2047  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2048  040D  1C98               	btfss	24,1	;volatile
  2049  040E  2C10               	goto	u441
  2050  040F  2C11               	goto	u440
  2051  0410                     u441:
  2052  0410  2C0B               	goto	l48
  2053  0411                     u440:
  2054  0411                     l1147:
  2055                           
  2056                           ;USART.c: 30:   TXREG = data;
  2057  0411  0870               	movf	UART_Write@data,w
  2058  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0414  0099               	movwf	25	;volatile
  2061  0415                     l51:
  2062  0415  0008               	return
  2063  0416                     __end_of_UART_Write:
  2064                           
  2065                           	psect	text9
  2066  045F                     __ptext9:	
  2067 ;; *************** function _I2C_Read *****************
  2068 ;; Defined at:
  2069 ;;		line 87 in file "I2c.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  ACK_NACK        1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2074 ;;  Data            1    2[COMMON] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      unsigned char 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         0       0       0       0       0
  2085 ;;      Locals:         2       0       0       0       0
  2086 ;;      Temps:          1       0       0       0       0
  2087 ;;      Totals:         3       0       0       0       0
  2088 ;;Total ram usage:        3 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    1
  2091 ;; This function calls:
  2092 ;;		_I2C_ACK
  2093 ;;		_I2C_NACK
  2094 ;; This function is called by:
  2095 ;;		_MPU6050_Read
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _I2C_Read
  2101  045F                     _I2C_Read:
  2102                           
  2103                           ;incstack = 0
  2104                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2105                           ;I2C_Read@ACK_NACK stored from wreg
  2106  045F  00F1               	movwf	I2C_Read@ACK_NACK
  2107  0460                     l1221:
  2108                           
  2109                           ;I2c.c: 87: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 88: {;I2c.c: 90:     u
      +                          nsigned char Data;;I2c.c: 91:     RCEN = 1;
  2110  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0462  1591               	bsf	17,3	;volatile
  2113  0463                     l163:	
  2114                           ;I2c.c: 92:     while(!BF);
  2115                           
  2116  0463  1C14               	btfss	20,0	;volatile
  2117  0464  2C66               	goto	u621
  2118  0465  2C67               	goto	u620
  2119  0466                     u621:
  2120  0466  2C63               	goto	l163
  2121  0467                     u620:
  2122  0467                     l1223:
  2123                           
  2124                           ;I2c.c: 93:     Data = SSPBUF;
  2125  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0469  0813               	movf	19,w	;volatile
  2128  046A  00F0               	movwf	??_I2C_Read
  2129  046B  0870               	movf	??_I2C_Read,w
  2130  046C  00F2               	movwf	I2C_Read@Data
  2131  046D                     l1225:
  2132                           
  2133                           ;I2c.c: 94:     if(ACK_NACK==0)
  2134  046D  0871               	movf	I2C_Read@ACK_NACK,w
  2135  046E  1D03               	btfss	3,2
  2136  046F  2C71               	goto	u631
  2137  0470  2C72               	goto	u630
  2138  0471                     u631:
  2139  0471  2C78               	goto	l1229
  2140  0472                     u630:
  2141  0472                     l1227:
  2142                           
  2143                           ;I2c.c: 95:         I2C_ACK();
  2144  0472  120A  118A  23F8  120A  118A  	fcall	_I2C_ACK
  2145  0477  2C7D               	goto	l168
  2146  0478                     l1229:
  2147                           
  2148                           ;I2c.c: 97:         I2C_NACK();
  2149  0478  120A  118A  2401  120A  118A  	fcall	_I2C_NACK
  2150  047D                     l168:
  2151  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2152  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2153  047F  1D8C               	btfss	12,3	;volatile
  2154  0480  2C82               	goto	u641
  2155  0481  2C83               	goto	u640
  2156  0482                     u641:
  2157  0482  2C7D               	goto	l168
  2158  0483                     u640:
  2159  0483                     l170:
  2160                           
  2161                           ;I2c.c: 99:     SSPIF=0;
  2162  0483  118C               	bcf	12,3	;volatile
  2163  0484                     l1231:
  2164                           
  2165                           ;I2c.c: 100:     return Data;
  2166  0484  0872               	movf	I2C_Read@Data,w
  2167  0485                     l171:
  2168  0485  0008               	return
  2169  0486                     __end_of_I2C_Read:
  2170                           
  2171                           	psect	text10
  2172  0401                     __ptext10:	
  2173 ;; *************** function _I2C_NACK *****************
  2174 ;; Defined at:
  2175 ;;		line 60 in file "I2c.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		None
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_I2C_Read
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _I2C_NACK
  2204  0401                     _I2C_NACK:
  2205  0401                     l1155:	
  2206                           ;incstack = 0
  2207                           ; Regs used in _I2C_NACK: []
  2208                           
  2209                           
  2210                           ;I2c.c: 62:  ACKDT = 1;
  2211  0401  1683               	bsf	3,5	;RP0=1, select bank1
  2212  0402  1303               	bcf	3,6	;RP1=0, select bank1
  2213  0403  1691               	bsf	17,5	;volatile
  2214                           
  2215                           ;I2c.c: 63:  ACKEN = 1;
  2216  0404  1611               	bsf	17,4	;volatile
  2217  0405                     l145:	
  2218                           ;I2c.c: 64:     while(ACKEN);
  2219                           
  2220  0405  1A11               	btfsc	17,4	;volatile
  2221  0406  2C08               	goto	u471
  2222  0407  2C09               	goto	u470
  2223  0408                     u471:
  2224  0408  2C05               	goto	l145
  2225  0409                     u470:
  2226  0409                     l148:
  2227  0409  0008               	return
  2228  040A                     __end_of_I2C_NACK:
  2229                           
  2230                           	psect	text11
  2231  03F8                     __ptext11:	
  2232 ;; *************** function _I2C_ACK *****************
  2233 ;; Defined at:
  2234 ;;		line 53 in file "I2c.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		None
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_I2C_Read
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function _I2C_ACK
  2263  03F8                     _I2C_ACK:
  2264  03F8                     l1153:	
  2265                           ;incstack = 0
  2266                           ; Regs used in _I2C_ACK: []
  2267                           
  2268                           
  2269                           ;I2c.c: 55:  ACKDT = 0;
  2270  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2271  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2272  03FA  1291               	bcf	17,5	;volatile
  2273                           
  2274                           ;I2c.c: 56:     ACKEN = 1;
  2275  03FB  1611               	bsf	17,4	;volatile
  2276  03FC                     l139:	
  2277                           ;I2c.c: 57:     while(ACKEN);
  2278                           
  2279  03FC  1A11               	btfsc	17,4	;volatile
  2280  03FD  2BFF               	goto	u461
  2281  03FE  2C00               	goto	u460
  2282  03FF                     u461:
  2283  03FF  2BFC               	goto	l139
  2284  0400                     u460:
  2285  0400                     l142:
  2286  0400  0008               	return
  2287  0401                     __end_of_I2C_ACK:
  2288                           
  2289                           	psect	text12
  2290  05C2                     __ptext12:	
  2291 ;; *************** function _MPU6050_Init *****************
  2292 ;; Defined at:
  2293 ;;		line 17 in file "MPU.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0
  2309 ;;      Temps:          3       0       0       0       0
  2310 ;;      Totals:         3       0       0       0       0
  2311 ;;Total ram usage:        3 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    3
  2314 ;; This function calls:
  2315 ;;		_I2C_Master_Init
  2316 ;;		_I2C_Master_Stop
  2317 ;;		_I2C_Master_Write
  2318 ;;		_I2C_Start
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _MPU6050_Init
  2326  05C2                     _MPU6050_Init:
  2327  05C2                     l1341:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2330                           
  2331                           
  2332                           ;MPU.c: 20:   _delay((unsigned long)((100)*(8000000/4000.0)));
  2333  05C2  3002               	movlw	2
  2334  05C3  00F4               	movwf	??_MPU6050_Init+2
  2335  05C4  3004               	movlw	4
  2336  05C5  00F3               	movwf	??_MPU6050_Init+1
  2337  05C6  30BA               	movlw	186
  2338  05C7  00F2               	movwf	??_MPU6050_Init
  2339  05C8                     u847:
  2340  05C8  0BF2               	decfsz	??_MPU6050_Init,f
  2341  05C9  2DC8               	goto	u847
  2342  05CA  0BF3               	decfsz	??_MPU6050_Init+1,f
  2343  05CB  2DC8               	goto	u847
  2344  05CC  0BF4               	decfsz	??_MPU6050_Init+2,f
  2345  05CD  2DC8               	goto	u847
  2346  05CE  0000               	nop
  2347  05CF                     l1343:
  2348                           
  2349                           ;MPU.c: 21:   I2C_Master_Init();
  2350  05CF  120A  118A  2416  120A  118A  	fcall	_I2C_Master_Init
  2351  05D4                     l1345:
  2352                           
  2353                           ;MPU.c: 24:   I2C_Start(0xD0);
  2354  05D4  30D0               	movlw	208
  2355  05D5  120A  118A  244F  120A  118A  	fcall	_I2C_Start
  2356  05DA                     l1347:
  2357                           
  2358                           ;MPU.c: 25:   I2C_Master_Write(0x19);
  2359  05DA  3019               	movlw	25
  2360  05DB  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2361  05E0                     l1349:
  2362                           
  2363                           ;MPU.c: 26:   I2C_Master_Write(0x07);
  2364  05E0  3007               	movlw	7
  2365  05E1  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2366  05E6                     l1351:
  2367                           
  2368                           ;MPU.c: 27:   I2C_Master_Stop();
  2369  05E6  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  2370  05EB                     l1353:
  2371                           
  2372                           ;MPU.c: 30:   I2C_Start(0xD0);
  2373  05EB  30D0               	movlw	208
  2374  05EC  120A  118A  244F  120A  118A  	fcall	_I2C_Start
  2375  05F1                     l1355:
  2376                           
  2377                           ;MPU.c: 31:   I2C_Master_Write(0x6B);
  2378  05F1  306B               	movlw	107
  2379  05F2  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2380  05F7                     l1357:
  2381                           
  2382                           ;MPU.c: 32:   I2C_Master_Write(0x01);
  2383  05F7  3001               	movlw	1
  2384  05F8  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2385  05FD                     l1359:
  2386                           
  2387                           ;MPU.c: 33:   I2C_Master_Stop();
  2388  05FD  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  2389  0602                     l1361:
  2390                           
  2391                           ;MPU.c: 36:   I2C_Start(0xD0);
  2392  0602  30D0               	movlw	208
  2393  0603  120A  118A  244F  120A  118A  	fcall	_I2C_Start
  2394  0608                     l1363:
  2395                           
  2396                           ;MPU.c: 37:   I2C_Master_Write(0x1A);
  2397  0608  301A               	movlw	26
  2398  0609  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2399  060E                     l1365:
  2400                           
  2401                           ;MPU.c: 38:   I2C_Master_Write(0x00);
  2402  060E  3000               	movlw	0
  2403  060F  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2404  0614                     l1367:
  2405                           
  2406                           ;MPU.c: 39:   I2C_Master_Stop();
  2407  0614  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  2408  0619                     l1369:
  2409                           
  2410                           ;MPU.c: 42:   I2C_Start(0xD0);
  2411  0619  30D0               	movlw	208
  2412  061A  120A  118A  244F  120A  118A  	fcall	_I2C_Start
  2413  061F                     l1371:
  2414                           
  2415                           ;MPU.c: 43:   I2C_Master_Write(0x1C);
  2416  061F  301C               	movlw	28
  2417  0620  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2418  0625                     l1373:
  2419                           
  2420                           ;MPU.c: 44:   I2C_Master_Write(0x00);
  2421  0625  3000               	movlw	0
  2422  0626  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2423  062B                     l1375:
  2424                           
  2425                           ;MPU.c: 45:   I2C_Master_Stop();
  2426  062B  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  2427  0630                     l1377:
  2428                           
  2429                           ;MPU.c: 48:   I2C_Start(0xD0);
  2430  0630  30D0               	movlw	208
  2431  0631  120A  118A  244F  120A  118A  	fcall	_I2C_Start
  2432  0636                     l1379:
  2433                           
  2434                           ;MPU.c: 49:   I2C_Master_Write(0x1B);
  2435  0636  301B               	movlw	27
  2436  0637  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2437  063C                     l1381:
  2438                           
  2439                           ;MPU.c: 50:   I2C_Master_Write(0x18);
  2440  063C  3018               	movlw	24
  2441  063D  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2442  0642                     l1383:
  2443                           
  2444                           ;MPU.c: 51:   I2C_Master_Stop();
  2445  0642  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  2446  0647                     l1385:
  2447                           
  2448                           ;MPU.c: 54:   I2C_Start(0xD0);
  2449  0647  30D0               	movlw	208
  2450  0648  120A  118A  244F  120A  118A  	fcall	_I2C_Start
  2451  064D                     l1387:
  2452                           
  2453                           ;MPU.c: 55:   I2C_Master_Write(0x38);
  2454  064D  3038               	movlw	56
  2455  064E  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2456  0653                     l1389:
  2457                           
  2458                           ;MPU.c: 56:   I2C_Master_Write(0x01);
  2459  0653  3001               	movlw	1
  2460  0654  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2461  0659                     l1391:
  2462                           
  2463                           ;MPU.c: 57:   I2C_Master_Stop();
  2464  0659  120A  118A  23EF  120A  118A  	fcall	_I2C_Master_Stop
  2465  065E                     l78:
  2466  065E  0008               	return
  2467  065F                     __end_of_MPU6050_Init:
  2468                           
  2469                           	psect	text13
  2470  044F                     __ptext13:	
  2471 ;; *************** function _I2C_Start *****************
  2472 ;; Defined at:
  2473 ;;		line 34 in file "I2c.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  add             1    wreg     unsigned char 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  add             1    1[COMMON] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       0       0
  2488 ;;      Locals:         1       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0
  2490 ;;      Totals:         1       0       0       0       0
  2491 ;;Total ram usage:        1 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    2
  2494 ;; This function calls:
  2495 ;;		_I2C_Master_Wait
  2496 ;;		_I2C_Master_Write
  2497 ;; This function is called by:
  2498 ;;		_MPU6050_Init
  2499 ;;		_MPU6050_Read
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function _I2C_Start
  2505  044F                     _I2C_Start:
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2509                           ;I2C_Start@add stored from wreg
  2510  044F  00F1               	movwf	I2C_Start@add
  2511  0450                     l1213:
  2512                           
  2513                           ;I2c.c: 34: void I2C_Start(char add);I2c.c: 35: {;I2c.c: 36:     I2C_Master_Wait();
  2514  0450  120A  118A  2423  120A  118A  	fcall	_I2C_Master_Wait
  2515  0455                     l1215:
  2516                           
  2517                           ;I2c.c: 37:     SEN = 1;
  2518  0455  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0456  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0457  1411               	bsf	17,0	;volatile
  2521                           
  2522                           ;I2c.c: 38:     I2C_Master_Write(add);
  2523  0458  0871               	movf	I2C_Start@add,w
  2524  0459  120A  118A  243F  120A  118A  	fcall	_I2C_Master_Write
  2525  045E                     l130:
  2526  045E  0008               	return
  2527  045F                     __end_of_I2C_Start:
  2528                           
  2529                           	psect	text14
  2530  043F                     __ptext14:	
  2531 ;; *************** function _I2C_Master_Write *****************
  2532 ;; Defined at:
  2533 ;;		line 67 in file "I2c.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  data            1    wreg     unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  data            1    0[COMMON] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      unsigned char 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, pclath, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2547 ;;      Params:         0       0       0       0       0
  2548 ;;      Locals:         1       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0
  2550 ;;      Totals:         1       0       0       0       0
  2551 ;;Total ram usage:        1 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    1
  2554 ;; This function calls:
  2555 ;;		_I2C_Master_Wait
  2556 ;; This function is called by:
  2557 ;;		_MPU6050_Init
  2558 ;;		_MPU6050_Read
  2559 ;;		_I2C_Start
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _I2C_Master_Write
  2565  043F                     _I2C_Master_Write:
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2569                           ;I2C_Master_Write@data stored from wreg
  2570  043F  00F0               	movwf	I2C_Master_Write@data
  2571  0440                     l1149:
  2572                           
  2573                           ;I2c.c: 67: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 68: {;I2c.c: 69:  
      +                             I2C_Master_Wait();
  2574  0440  120A  118A  2423  120A  118A  	fcall	_I2C_Master_Wait
  2575  0445                     l1151:
  2576                           
  2577                           ;I2c.c: 70:     SSPBUF = data;
  2578  0445  0870               	movf	I2C_Master_Write@data,w
  2579  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0448  0093               	movwf	19	;volatile
  2582  0449                     l151:	
  2583                           ;I2c.c: 71:     while(!SSPIF);
  2584                           
  2585  0449  1D8C               	btfss	12,3	;volatile
  2586  044A  2C4C               	goto	u451
  2587  044B  2C4D               	goto	u450
  2588  044C                     u451:
  2589  044C  2C49               	goto	l151
  2590  044D                     u450:
  2591  044D                     l153:
  2592                           
  2593                           ;I2c.c: 72:  SSPIF = 0;
  2594  044D  118C               	bcf	12,3	;volatile
  2595  044E                     l154:	
  2596                           ;I2c.c: 73:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2597                           
  2598  044E  0008               	return
  2599  044F                     __end_of_I2C_Master_Write:
  2600                           
  2601                           	psect	text15
  2602  03EF                     __ptext15:	
  2603 ;; *************** function _I2C_Master_Stop *****************
  2604 ;; Defined at:
  2605 ;;		line 47 in file "I2c.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, pclath, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    1
  2626 ;; This function calls:
  2627 ;;		_I2C_Master_Wait
  2628 ;; This function is called by:
  2629 ;;		_MPU6050_Init
  2630 ;;		_MPU6050_Read
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           
  2635                           ;psect for function _I2C_Master_Stop
  2636  03EF                     _I2C_Master_Stop:
  2637  03EF                     l1217:	
  2638                           ;incstack = 0
  2639                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2640                           
  2641                           
  2642                           ;I2c.c: 49:     I2C_Master_Wait();
  2643  03EF  120A  118A  2423  120A  118A  	fcall	_I2C_Master_Wait
  2644  03F4                     l1219:
  2645                           
  2646                           ;I2c.c: 50:     PEN = 1;
  2647  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2648  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2649  03F6  1511               	bsf	17,2	;volatile
  2650  03F7                     l136:
  2651  03F7  0008               	return
  2652  03F8                     __end_of_I2C_Master_Stop:
  2653                           
  2654                           	psect	text16
  2655  0423                     __ptext16:	
  2656 ;; *************** function _I2C_Master_Wait *****************
  2657 ;; Defined at:
  2658 ;;		line 23 in file "I2c.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_I2C_Start
  2682 ;;		_I2C_Master_Stop
  2683 ;;		_I2C_Master_Write
  2684 ;;		_I2C_Master_Start
  2685 ;;		_I2C_Master_RepeatedStart
  2686 ;;		_I2C_Read_Byte
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _I2C_Master_Wait
  2692  0423                     _I2C_Master_Wait:
  2693  0423                     l1141:	
  2694                           ;incstack = 0
  2695                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2696                           
  2697  0423                     l121:	
  2698                           ;I2c.c: 25:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2699                           
  2700  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2701  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2702  0425  1914               	btfsc	20,2	;volatile
  2703  0426  2C28               	goto	u421
  2704  0427  2C29               	goto	u420
  2705  0428                     u421:
  2706  0428  2C23               	goto	l121
  2707  0429                     u420:
  2708  0429                     l1143:
  2709  0429  0811               	movf	17,w	;volatile
  2710  042A  391F               	andlw	31
  2711  042B  1D03               	btfss	3,2
  2712  042C  2C2E               	goto	u431
  2713  042D  2C2F               	goto	u430
  2714  042E                     u431:
  2715  042E  2C23               	goto	l121
  2716  042F                     u430:
  2717  042F                     l124:
  2718  042F  0008               	return
  2719  0430                     __end_of_I2C_Master_Wait:
  2720                           
  2721                           	psect	text17
  2722  0416                     __ptext17:	
  2723 ;; *************** function _I2C_Master_Init *****************
  2724 ;; Defined at:
  2725 ;;		line 13 in file "I2c.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2739 ;;      Params:         0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_MPU6050_Init
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _I2C_Master_Init
  2754  0416                     _I2C_Master_Init:
  2755  0416                     l863:	
  2756                           ;incstack = 0
  2757                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2758                           
  2759                           
  2760                           ;I2c.c: 15:   SSPCON = 0x28;
  2761  0416  3028               	movlw	40
  2762  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0419  0094               	movwf	20	;volatile
  2765  041A                     l865:
  2766                           
  2767                           ;I2c.c: 16:   SSPCON2 = 0x00;
  2768  041A  1683               	bsf	3,5	;RP0=1, select bank1
  2769  041B  1303               	bcf	3,6	;RP1=0, select bank1
  2770  041C  0191               	clrf	17	;volatile
  2771  041D                     l867:
  2772                           
  2773                           ;I2c.c: 17:   SSPSTAT = 0x00;
  2774  041D  0194               	clrf	20	;volatile
  2775                           
  2776                           ;I2c.c: 18:   SSPADD = ((8000000/4)/9600) - 1;
  2777  041E  30CF               	movlw	207
  2778  041F  0093               	movwf	19	;volatile
  2779  0420                     l869:
  2780                           
  2781                           ;I2c.c: 19:   TRISC3 = 1;
  2782  0420  1587               	bsf	7,3	;volatile
  2783  0421                     l871:
  2784                           
  2785                           ;I2c.c: 20:   TRISC4 = 1;
  2786  0421  1607               	bsf	7,4	;volatile
  2787  0422                     l118:
  2788  0422  0008               	return
  2789  0423                     __end_of_I2C_Master_Init:
  2790  007E                     btemp	set	126	;btemp
  2791  007E                     wtemp0	set	126
  2792                           
  2793                           	psect	config
  2794                           
  2795                           ;Config register CONFIG1 @ 0x2007
  2796                           ;	Oscillator Selection bits
  2797                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2798                           ;	Watchdog Timer Enable bit
  2799                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2800                           ;	Power-up Timer Enable bit
  2801                           ;	PWRTE = OFF, PWRT disabled
  2802                           ;	RE3/MCLR pin function select bit
  2803                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2804                           ;	Code Protection bit
  2805                           ;	CP = OFF, Program memory code protection is disabled
  2806                           ;	Data Code Protection bit
  2807                           ;	CPD = OFF, Data memory code protection is disabled
  2808                           ;	Brown Out Reset Selection bits
  2809                           ;	BOREN = OFF, BOR disabled
  2810                           ;	Internal External Switchover bit
  2811                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2812                           ;	Fail-Safe Clock Monitor Enabled bit
  2813                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2814                           ;	Low Voltage Programming Enable bit
  2815                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2816                           ;	In-Circuit Debugger Mode bit
  2817                           ;	DEBUG = 0x1, unprogrammed default
  2818  2007                     	org	8199
  2819  2007  2CD4               	dw	11476
  2820                           
  2821                           ;Config register CONFIG2 @ 0x2008
  2822                           ;	Brown-out Reset Selection bit
  2823                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2824                           ;	Flash Program Memory Self Write Enable bits
  2825                           ;	WRT = OFF, Write protection off
  2826  2008                     	org	8200
  2827  2008  3EFF               	dw	16127

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2109
                                             71 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    2043
                                             13 BANK0     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    6     4      2     188
                                              1 COMMON     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 13:53:49 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l51 0415                          l45 043E                          l48 040B  
                        l57 04DC                          l81 0713                          l78 065E  
              ___awdiv@sign 0076                          fsr 0004  __size_of_UART_Write_String 002F  
                       l121 0423                         l130 045E                         l124 042F  
                       l118 0422                         l142 0400                         l151 0449  
                       l136 03F7                         l153 044D                         l145 0405  
                       l154 044E                         l170 0483                         l139 03FC  
                       l171 0485                         l163 0463                         l148 0409  
                       l168 047D                         l281 07FB                         l438 05C1  
                       l557 055A                         l567 0516                         l871 0421  
                       l863 0416                         l865 041A                         l867 041D  
                       l869 0420                         _RD2 0042                         u420 0429  
                       u500 0531                         u421 0428                         u501 0530  
                       u430 042F                         u431 042E                         u440 0411  
                       u520 0542                         u600 0512                         _PEN 048A  
                       u441 0410                         u521 0541                         u601 0511  
                       u450 044D                         u610 04DC                         u451 044C  
                       u611 04DB                         u515 0532                         u460 0400  
                       u620 0467                         u540 0556                         u700 07E5  
                       u461 03FF                         u621 0466                         u541 0555  
                       u525 053E                         u701 07E4                         u470 0409  
                       u630 0472                         u550 04E3                         u710 07F7  
                       u471 0408                         u631 0471                         u535 054A  
                       u551 04E2                         u711 07F6                         u640 0483  
                       u800 05B3                         u720 0560                         u480 051F  
                       u641 0482                         u801 05B2                         u721 055F  
                       u481 051E                         u810 05B8                         u730 056B  
                       u570 04F5                         u650 0722                         u811 05B7  
                       u731 056A                         u571 04F4                         u651 0721  
                       u740 057C                         u580 04FF                         u660 075C  
                       _SEN 0488                         u741 057B                         u581 04FE  
                       u565 04E7                         u661 075B                         u670 0782  
                       u495 0523                         u671 0781                         u760 058E  
                       u680 078D                         u761 058D                         u585 04FB  
                       u681 078C                         u690 0793                         u755 0580  
                       u595 0506                         u691 0792                         u675 077E  
                       u780 059F                         u781 059E                         u837 04A6  
                       u847 05C8                         u775 058F                         u785 059B  
                       u795 05A7             __end_of_I2C_ACK 0401                         fsr0 0004  
                       indf 0000          MPU6050_Read@buffer 0031                        l1001 0430  
                      l1011 043C                        l1003 0433                        l1013 043D  
                      l1005 0435                        l1007 0436                        l1201 0512  
                      l1009 0439                        l1211 04CA                        l1141 0423  
                      l1213 0450                        l1221 0460                        l1205 04AE  
                      l1301 0560                        l1143 0429                        l1151 0445  
                      l1215 0455                        l1231 0484                        l1223 0467  
                      l1207 04B1                        l1311 0574                        l1303 0565  
                      l1217 03EF                        l1153 03F8                        l1225 046D  
                      l1145 040B                        l1209 04C4                        l1321 058A  
                      l1313 0576                        l1305 0567                        l1161 051F  
                      l1241 0729                        l1401 06AB                        l1219 03F4  
                      l1155 0401                        l1227 0472                        l1147 0411  
                      l1331 05AD                        l1323 058E                        l1315 057C  
                      l1307 056B                        l1171 0542                        l1163 0522  
                      l1251 0754                        l1243 072E                        l1235 0717  
                      l1411 06E0                        l1403 06B7                        l1149 0440  
                      l1341 05C2                        l1229 0478                        l1325 059F  
                      l1317 057F                        l1333 05B3                        l1309 0570  
                      l1173 0548                        l1165 0529                        l1157 0517  
                      l1253 0758                        l1237 071C                        l1413 06F7  
                      l1405 06C3                        l1421 048F                        l1351 05E6  
                      l1343 05CF                        l1335 05B8                        l1327 05A5  
                      l1319 0586                        l1175 0549                        l1167 052D  
                      l1159 0519                        l1191 04F1                        l1183 04DD  
                      l1271 078D                        l1255 075C                        l1247 072F  
                      l1239 0722                        l1407 06CF                        l1423 0497  
                      l1415 0486                        l1361 0602                        l1353 05EB  
                      l1345 05D4                        l1337 05BD                        l1329 05A6  
                      l1177 0550                        l1169 0531                        l1193 04F5  
                      l1185 04E3                        l1281 07D1                        l1273 0793  
                      l1265 0767                        l1257 0760                        l1249 074C  
                      l1409 06DB                        l1425 049B                        l1417 048B  
                      l1371 061F                        l1363 0608                        l1355 05F1  
                      l1347 05DA                        l1179 0556                        l1195 04FF  
                      l1187 04E6                        l1283 07D8                        l1275 079A  
                      l1259 0765                        l1427 04A0                        l1419 048E  
                      l1381 063C                        l1373 0625                        l1365 060E  
                      l1357 05F7                        l1349 05E0                        l1197 0505  
                      l1189 04ED                        l1285 07DC                        l1277 079E  
                      l1269 0783                        l1391 0659                        l1383 0642  
                      l1375 062B                        l1367 0614                        l1359 05FD  
                      l1199 050C                        l1279 07A3                        l1287 07E5  
                      l1385 0647                        l1377 0630                        l1369 0619  
                      l1297 055B                        l1289 07F7                        l1393 065F  
                      l1387 064D                        l1379 0636                        l1299 055C  
                      l1467 0741                        l1395 0676                        l1389 0653  
                      l1397 0682                        l1399 069F                        STR_1 0013  
                      _BRGH 04C2                        _RCEN 048B                        _SPEN 00C7  
                      _RSEN 0489                        _TRMT 04C1                        _TXEN 04C5  
                      _SYNC 04C4            __end_of_I2C_NACK 040A                        _main 0486  
          __end_of_I2C_Read 0486                        btemp 007E                        start 0000  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___awdiv 05C2             ___awdiv@divisor 0070             __end_of___lwdiv 055B  
           __end_of___lwmod 0517             ___awdiv@counter 0075                       _SPBRG 0099  
                     _PORTB 0006                       _TRISB 0086                       _SSPIF 0063  
                     _TXREG 0019                 ?_UART_Write 0070               ?_MPU6050_Init 0070  
             ?_MPU6050_Read 0070             __end_of_dpowers 0013           __end_of_I2C_Start 045F  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 07FC              MPU6050_Read@Ay 0065             __initialization 07FC  
              __end_of_main 04AE                   ??_I2C_ACK 0070                      ??_main 0067  
         ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072              ??_MPU6050_Read 002D  
        ??_I2C_Master_Write 0070            ___awdiv@dividend 0072                      _ANSELH 0189  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISD2 0442  
                    _TRISC4 043C                      _TRISC6 043E                      _TRISC7 043F  
                    _SSPCON 0014                      _SSPBUF 0013            I2C_Read@ACK_NACK 0071  
       __size_of_UART_Write 000C                   ??___awdiv 0074                   ??___lwdiv 0074  
                 ??___lwmod 007C            ___awdiv@quotient 0077                   ?_I2C_NACK 0070  
                 ?_I2C_Read 0070                   ??_sprintf 0023     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  ??_I2C_NACK 0070                  ??_I2C_Read 0070  
              I2C_Read@Data 0072                  __pmaintext 0486        __end_of_MPU6050_Init 065F  
      __end_of_MPU6050_Read 0714                     _I2C_ACK 03F8                     _ACKSTAT 048E  
              ??_UART_Write 0070                     _SSPCON2 0091                     _SSPSTAT 0094  
             ?_UART_TX_Init 0070                  __stringtab 0003                I2C_Start@add 0071  
                 _I2C_Start 044F                     ___awdiv 055B          __end_of_UART_Write 0416  
                   ___lwdiv 0517                     ___lwmod 04DD                     __ptext1 0430  
                   __ptext2 065F                     __ptext3 0714                     __ptext4 04DD  
                   __ptext5 0517                     __ptext6 055B                     __ptext7 04AE  
                   __ptext8 040A                     __ptext9 045F                     _dpowers 0009  
  __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009  
            ??_UART_TX_Init 0070                     _sprintf 0714        end_of_initialization 07FC  
                ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010              UART_Write@data 0070  
         __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027       __size_of_MPU6050_Init 009D  
     __size_of_MPU6050_Read 00B5         start_initialization 07FC                _MPU6050_Init 05C2  
              _MPU6050_Read 065F           ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070  
         ??_I2C_Master_Stop 0070                 ??_I2C_Start 0071        __end_of_UART_TX_Init 043F  
                  ?_I2C_ACK 0070                   ___latbits 0002               __pcstackBANK0 0020  
               sprintf@flag 0027                 sprintf@prec 0028            _I2C_Master_Write 043F  
          ___lwdiv@dividend 0072                    ?___awdiv 0070                    ?___lwdiv 0070  
                  ?___lwmod 0078        I2C_Master_Write@data 0070                   __pstrings 0003  
                  _I2C_NACK 0401                    _I2C_Read 045F            ___lwdiv@quotient 0075  
                  ?_sprintf 0020            __size_of_I2C_ACK 0009        UART_Write_String@buf 0071  
               __stringbase 0008       __size_of_UART_TX_Init 000F            __size_of___awdiv 0067  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 0009  
         _UART_Write_String 04AE                  sprintf@val 0029             _I2C_Master_Init 0416  
           _I2C_Master_Wait 0423             _I2C_Master_Stop 03EF          ?_UART_Write_String 0071  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077                    __ptext10 0401  
                  __ptext11 03F8                    __ptext12 05C2                    __ptext13 044F  
                  __ptext14 043F                    __ptext15 03EF                    __ptext16 0423  
                  __ptext17 0416            __size_of_sprintf 00E8                _UART_TX_Init 0430  
       ??_UART_Write_String 0073               __size_of_main 0028   __end_of_UART_Write_String 04DD  
  __end_of_I2C_Master_Write 044F                   sprintf@ap 0026                   sprintf@sp 002B  
          ___lwmod@dividend 007A                   stringcode 0003          UART_Write_String@i 0075  
   __end_of_I2C_Master_Init 0423     __end_of_I2C_Master_Wait 0430     __end_of_I2C_Master_Stop 03F8  
                  sprintf@c 002C                    sprintf@f 0020             ___lwmod@divisor 0078  
           ___lwmod@counter 007D                    stringdir 0003                    stringtab 0003  
                _UART_Write 040A  
