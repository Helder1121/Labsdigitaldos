

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 01:15:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  0003                     __pstrings:
   456  0003                     stringtab:
   457  0003                     __stringtab:
   458  0003                     stringcode:	
   459                           ;	String table - string pointers are 1 byte each
   460                           
   461  0003                     stringdir:
   462  0003  3000               	movlw	high stringdir
   463  0004  008A               	movwf	10
   464  0005  0804               	movf	4,w
   465  0006  0A84               	incf	4,f
   466  0007  0782               	addwf	2,f
   467  0008                     __stringbase:
   468  0008  3400               	retlw	0
   469  0009                     __end_of__stringtab:
   470  0009                     _dpowers:
   471  0009  3401               	retlw	1
   472  000A  3400               	retlw	0
   473  000B  340A               	retlw	10
   474  000C  3400               	retlw	0
   475  000D  3464               	retlw	100
   476  000E  3400               	retlw	0
   477  000F  34E8               	retlw	232
   478  0010  3403               	retlw	3
   479  0011  3410               	retlw	16
   480  0012  3427               	retlw	39
   481  0013                     __end_of_dpowers:
   482  0013                     _SSPBUF	set	19
   483  0014                     _SSPCON	set	20
   484  0006                     _PORTB	set	6
   485  0019                     _TXREG	set	25
   486  0063                     _SSPIF	set	99
   487  00C7                     _SPEN	set	199
   488  0042                     _RD2	set	66
   489  0093                     _SSPADD	set	147
   490  0094                     _SSPSTAT	set	148
   491  0091                     _SSPCON2	set	145
   492  0099                     _SPBRG	set	153
   493  0086                     _TRISB	set	134
   494  04A0                     _BF	set	1184
   495  048B                     _RCEN	set	1163
   496  048E                     _ACKSTAT	set	1166
   497  048C                     _ACKEN	set	1164
   498  048D                     _ACKDT	set	1165
   499  048A                     _PEN	set	1162
   500  0489                     _RSEN	set	1161
   501  0488                     _SEN	set	1160
   502  043C                     _TRISC4	set	1084
   503  043B                     _TRISC3	set	1083
   504  04C1                     _TRMT	set	1217
   505  04C5                     _TXEN	set	1221
   506  043F                     _TRISC7	set	1087
   507  043E                     _TRISC6	set	1086
   508  04C4                     _SYNC	set	1220
   509  04C2                     _BRGH	set	1218
   510  0442                     _TRISD2	set	1090
   511  0189                     _ANSELH	set	393
   512  0013                     STR_5:
   513  0013  3420               	retlw	32	;' '
   514  0014  3447               	retlw	71	;'G'
   515  0015  3478               	retlw	120	;'x'
   516  0016  3420               	retlw	32	;' '
   517  0017  343D               	retlw	61	;'='
   518  0018  3420               	retlw	32	;' '
   519  0019  3425               	retlw	37	;'%'
   520  001A  3464               	retlw	100	;'d'
   521  001B  3420               	retlw	32	;' '
   522  001C  3420               	retlw	32	;' '
   523  001D  3420               	retlw	32	;' '
   524  001E  3420               	retlw	32	;' '
   525  001F  3400               	retlw	0
   526  0020                     STR_2:
   527  0020  3420               	retlw	32	;' '
   528  0021  3441               	retlw	65	;'A'
   529  0022  3479               	retlw	121	;'y'
   530  0023  3420               	retlw	32	;' '
   531  0024  343D               	retlw	61	;'='
   532  0025  3420               	retlw	32	;' '
   533  0026  3425               	retlw	37	;'%'
   534  0027  3464               	retlw	100	;'d'
   535  0028  3420               	retlw	32	;' '
   536  0029  3420               	retlw	32	;' '
   537  002A  3420               	retlw	32	;' '
   538  002B  3420               	retlw	32	;' '
   539  002C  3400               	retlw	0
   540  002D                     STR_6:
   541  002D  3420               	retlw	32	;' '
   542  002E  3447               	retlw	71	;'G'
   543  002F  3479               	retlw	121	;'y'
   544  0030  3420               	retlw	32	;' '
   545  0031  343D               	retlw	61	;'='
   546  0032  3420               	retlw	32	;' '
   547  0033  3425               	retlw	37	;'%'
   548  0034  3464               	retlw	100	;'d'
   549  0035  3420               	retlw	32	;' '
   550  0036  3420               	retlw	32	;' '
   551  0037  3420               	retlw	32	;' '
   552  0038  3420               	retlw	32	;' '
   553  0039  3400               	retlw	0
   554  003A                     STR_3:
   555  003A  3420               	retlw	32	;' '
   556  003B  3441               	retlw	65	;'A'
   557  003C  347A               	retlw	122	;'z'
   558  003D  3420               	retlw	32	;' '
   559  003E  343D               	retlw	61	;'='
   560  003F  3420               	retlw	32	;' '
   561  0040  3425               	retlw	37	;'%'
   562  0041  3464               	retlw	100	;'d'
   563  0042  3420               	retlw	32	;' '
   564  0043  3420               	retlw	32	;' '
   565  0044  3420               	retlw	32	;' '
   566  0045  3420               	retlw	32	;' '
   567  0046  3400               	retlw	0
   568  0047                     STR_1:
   569  0047  3441               	retlw	65	;'A'
   570  0048  3478               	retlw	120	;'x'
   571  0049  3420               	retlw	32	;' '
   572  004A  343D               	retlw	61	;'='
   573  004B  3420               	retlw	32	;' '
   574  004C  3425               	retlw	37	;'%'
   575  004D  3464               	retlw	100	;'d'
   576  004E  3420               	retlw	32	;' '
   577  004F  3420               	retlw	32	;' '
   578  0050  3420               	retlw	32	;' '
   579  0051  3420               	retlw	32	;' '
   580  0052  3400               	retlw	0
   581  0053                     STR_7:
   582  0053  3420               	retlw	32	;' '
   583  0054  3447               	retlw	71	;'G'
   584  0055  347A               	retlw	122	;'z'
   585  0056  3420               	retlw	32	;' '
   586  0057  343D               	retlw	61	;'='
   587  0058  3420               	retlw	32	;' '
   588  0059  3425               	retlw	37	;'%'
   589  005A  3464               	retlw	100	;'d'
   590  005B  340D               	retlw	13
   591  005C  340A               	retlw	10
   592  005D  3400               	retlw	0
   593  005E                     STR_4:
   594  005E  3420               	retlw	32	;' '
   595  005F  3454               	retlw	84	;'T'
   596  0060  3420               	retlw	32	;' '
   597  0061  343D               	retlw	61	;'='
   598  0062  3420               	retlw	32	;' '
   599  0063  3425               	retlw	37	;'%'
   600  0064  3464               	retlw	100	;'d'
   601  0065  3420               	retlw	32	;' '
   602  0066  3420               	retlw	32	;' '
   603  0067  3400               	retlw	0
   604                           
   605                           	psect	cinit
   606  07FC                     start_initialization:	
   607                           ; #config settings
   608                           
   609  07FC                     __initialization:
   610  07FC                     end_of_initialization:	
   611                           ;End of C runtime variable initialization code
   612                           
   613  07FC                     __end_of__initialization:
   614  07FC  0183               	clrf	3
   615  07FD  120A  118A  2BD8   	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	cstackCOMMON
   618  0070                     __pcstackCOMMON:
   619  0070                     ?_UART_TX_Init:
   620  0070                     ??_UART_TX_Init:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_MPU6050_Init:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_MPU6050_Read:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_I2C_Master_Init:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ??_I2C_Master_Init:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_Start:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Write:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_I2C_Master_Write:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Master_Stop:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_I2C_Master_Stop:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_I2C_Read:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_I2C_Read:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_UART_Write:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_UART_Write:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_UART_Write_String:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_Master_Wait:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_I2C_Master_Wait:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_I2C_ACK:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_I2C_ACK:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_I2C_NACK:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_I2C_NACK:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?___awdiv:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?___lwdiv:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0070                     UART_Write@data:	
   693                           ; 2 bytes @ 0x0
   694                           
   695  0070                     I2C_Master_Write@data:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ___awdiv@divisor:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ___lwdiv@divisor:	
   702                           ; 2 bytes @ 0x0
   703                           
   704                           
   705                           ; 2 bytes @ 0x0
   706  0070                     	ds	1
   707  0071                     ??_I2C_Start:
   708  0071                     ??_UART_Write_String:	
   709                           ; 1 bytes @ 0x1
   710                           
   711  0071                     I2C_Start@add:	
   712                           ; 1 bytes @ 0x1
   713                           
   714  0071                     I2C_Read@ACK_NACK:	
   715                           ; 1 bytes @ 0x1
   716                           
   717                           
   718                           ; 1 bytes @ 0x1
   719  0071                     	ds	1
   720  0072                     ??_MPU6050_Init:
   721  0072                     I2C_Read@Data:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     UART_Write_String@i:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ___awdiv@dividend:	
   728                           ; 2 bytes @ 0x2
   729                           
   730  0072                     ___lwdiv@dividend:	
   731                           ; 2 bytes @ 0x2
   732                           
   733                           
   734                           ; 2 bytes @ 0x2
   735  0072                     	ds	2
   736  0074                     ??___awdiv:
   737  0074                     ??___lwdiv:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     UART_Write_String@buf:	
   741                           ; 1 bytes @ 0x4
   742                           
   743                           
   744                           ; 1 bytes @ 0x4
   745  0074                     	ds	1
   746  0075                     ___awdiv@counter:
   747  0075                     ___lwdiv@quotient:	
   748                           ; 1 bytes @ 0x5
   749                           
   750                           
   751                           ; 2 bytes @ 0x5
   752  0075                     	ds	1
   753  0076                     ___awdiv@sign:
   754                           
   755                           ; 1 bytes @ 0x6
   756  0076                     	ds	1
   757  0077                     ___lwdiv@counter:
   758  0077                     ___awdiv@quotient:	
   759                           ; 1 bytes @ 0x7
   760                           
   761                           
   762                           ; 2 bytes @ 0x7
   763  0077                     	ds	1
   764  0078                     ?___lwmod:
   765  0078                     ___lwmod@divisor:	
   766                           ; 2 bytes @ 0x8
   767                           
   768                           
   769                           ; 2 bytes @ 0x8
   770  0078                     	ds	2
   771  007A                     ___lwmod@dividend:
   772                           
   773                           ; 2 bytes @ 0xA
   774  007A                     	ds	2
   775  007C                     ??___lwmod:
   776                           
   777                           ; 1 bytes @ 0xC
   778  007C                     	ds	1
   779  007D                     ___lwmod@counter:
   780                           
   781                           ; 1 bytes @ 0xD
   782  007D                     	ds	1
   783                           
   784                           	psect	cstackBANK0
   785  0020                     __pcstackBANK0:
   786  0020                     ?_sprintf:
   787  0020                     sprintf@f:	
   788                           ; 2 bytes @ 0x0
   789                           
   790                           
   791                           ; 1 bytes @ 0x0
   792  0020                     	ds	3
   793  0023                     ??_sprintf:
   794                           
   795                           ; 1 bytes @ 0x3
   796  0023                     	ds	3
   797  0026                     sprintf@ap:
   798                           
   799                           ; 1 bytes @ 0x6
   800  0026                     	ds	1
   801  0027                     sprintf@flag:
   802                           
   803                           ; 1 bytes @ 0x7
   804  0027                     	ds	1
   805  0028                     sprintf@prec:
   806                           
   807                           ; 1 bytes @ 0x8
   808  0028                     	ds	1
   809  0029                     sprintf@val:
   810                           
   811                           ; 2 bytes @ 0x9
   812  0029                     	ds	2
   813  002B                     sprintf@sp:
   814                           
   815                           ; 1 bytes @ 0xB
   816  002B                     	ds	1
   817  002C                     sprintf@c:
   818                           
   819                           ; 1 bytes @ 0xC
   820  002C                     	ds	1
   821  002D                     ??_MPU6050_Read:
   822                           
   823                           ; 1 bytes @ 0xD
   824  002D                     	ds	4
   825  0031                     MPU6050_Read@buffer:
   826                           
   827                           ; 40 bytes @ 0x11
   828  0031                     	ds	40
   829  0059                     MPU6050_Read@Ax:
   830                           
   831                           ; 2 bytes @ 0x39
   832  0059                     	ds	2
   833  005B                     MPU6050_Read@Az:
   834                           
   835                           ; 2 bytes @ 0x3B
   836  005B                     	ds	2
   837  005D                     MPU6050_Read@T:
   838                           
   839                           ; 2 bytes @ 0x3D
   840  005D                     	ds	2
   841  005F                     MPU6050_Read@Gx:
   842                           
   843                           ; 2 bytes @ 0x3F
   844  005F                     	ds	2
   845  0061                     MPU6050_Read@Gy:
   846                           
   847                           ; 2 bytes @ 0x41
   848  0061                     	ds	2
   849  0063                     MPU6050_Read@Gz:
   850                           
   851                           ; 2 bytes @ 0x43
   852  0063                     	ds	2
   853  0065                     MPU6050_Read@Ay:
   854                           
   855                           ; 2 bytes @ 0x45
   856  0065                     	ds	2
   857  0067                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x47
   860  0067                     	ds	2
   861                           
   862                           	psect	maintext
   863  03D8                     __pmaintext:	
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 54 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : B00/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       2       0       0       0
   886 ;;      Totals:         0       2       0       0       0
   887 ;;Total ram usage:        2 bytes
   888 ;; Hardware stack levels required when called:    4
   889 ;; This function calls:
   890 ;;		_MPU6050_Init
   891 ;;		_MPU6050_Read
   892 ;;		_UART_TX_Init
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _main
   900  03D8                     _main:
   901  03D8                     l1447:	
   902                           ;incstack = 0
   903                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   904                           
   905                           
   906                           ;main.c: 56:     UART_TX_Init();
   907  03D8  120A  118A  2361  120A  118A  	fcall	_UART_TX_Init
   908  03DD                     l1449:
   909                           
   910                           ;main.c: 57:     TRISD2 = 0;
   911  03DD  1683               	bsf	3,5	;RP0=1, select bank1
   912  03DE  1303               	bcf	3,6	;RP1=0, select bank1
   913  03DF  1108               	bcf	8,2	;volatile
   914  03E0                     l1451:
   915                           
   916                           ;main.c: 58:     TRISB = 0;
   917  03E0  0186               	clrf	6	;volatile
   918  03E1                     l1453:
   919                           
   920                           ;main.c: 59:     ANSELH = 0;
   921  03E1  1683               	bsf	3,5	;RP0=1, select bank3
   922  03E2  1703               	bsf	3,6	;RP1=1, select bank3
   923  03E3  0189               	clrf	9	;volatile
   924                           
   925                           ;main.c: 61:     MPU6050_Init();
   926  03E4  120A  118A  24E5  120A  118A  	fcall	_MPU6050_Init
   927  03E9                     l1455:
   928                           
   929                           ;main.c: 66:  {;main.c: 67:         RD2 = ~RD2;
   930  03E9  3004               	movlw	4
   931  03EA  1283               	bcf	3,5	;RP0=0, select bank0
   932  03EB  1303               	bcf	3,6	;RP1=0, select bank0
   933  03EC  0688               	xorwf	8,f
   934  03ED                     l1457:
   935                           
   936                           ;main.c: 68:         MPU6050_Read();
   937  03ED  120A  118A  2669  120A  118A  	fcall	_MPU6050_Read
   938  03F2                     l1459:
   939                           
   940                           ;main.c: 69:         _delay((unsigned long)((50)*(8000000/4000.0)));
   941  03F2  3082               	movlw	130
   942  03F3  1283               	bcf	3,5	;RP0=0, select bank0
   943  03F4  1303               	bcf	3,6	;RP1=0, select bank0
   944  03F5  00E8               	movwf	??_main+1
   945  03F6  30DD               	movlw	221
   946  03F7  00E7               	movwf	??_main
   947  03F8                     u837:
   948  03F8  0BE7               	decfsz	??_main,f
   949  03F9  2BF8               	goto	u837
   950  03FA  0BE8               	decfsz	??_main+1,f
   951  03FB  2BF8               	goto	u837
   952  03FC  2BE9               	goto	l1455
   953  03FD  120A  118A  2800   	ljmp	start
   954  0400                     __end_of_main:
   955                           
   956                           	psect	text1
   957  0361                     __ptext1:	
   958 ;; *************** function _UART_TX_Init *****************
   959 ;; Defined at:
   960 ;;		line 17 in file "USART.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _UART_TX_Init
   989  0361                     _UART_TX_Init:
   990  0361                     l1001:	
   991                           ;incstack = 0
   992                           ; Regs used in _UART_TX_Init: [wreg]
   993                           
   994                           
   995                           ;USART.c: 19:   BRGH = 1;
   996  0361  1683               	bsf	3,5	;RP0=1, select bank1
   997  0362  1303               	bcf	3,6	;RP1=0, select bank1
   998  0363  1518               	bsf	24,2	;volatile
   999  0364                     l1003:
  1000                           
  1001                           ;USART.c: 20:   SPBRG = 51;
  1002  0364  3033               	movlw	51
  1003  0365  0099               	movwf	25	;volatile
  1004  0366                     l1005:
  1005                           
  1006                           ;USART.c: 22:   SYNC = 0;
  1007  0366  1218               	bcf	24,4	;volatile
  1008  0367                     l1007:
  1009                           
  1010                           ;USART.c: 23:   SPEN = 1;
  1011  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0369  1798               	bsf	24,7	;volatile
  1014  036A                     l1009:
  1015                           
  1016                           ;USART.c: 25:   TRISC6 = 1;
  1017  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1018  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1019  036C  1707               	bsf	7,6	;volatile
  1020  036D                     l1011:
  1021                           
  1022                           ;USART.c: 26:   TRISC7 = 1;
  1023  036D  1787               	bsf	7,7	;volatile
  1024  036E                     l1013:
  1025                           
  1026                           ;USART.c: 27:   TXEN = 1;
  1027  036E  1698               	bsf	24,5	;volatile
  1028  036F                     l45:
  1029  036F  0008               	return
  1030  0370                     __end_of_UART_TX_Init:
  1031                           
  1032                           	psect	text2
  1033  0669                     __ptext2:	
  1034 ;; *************** function _MPU6050_Read *****************
  1035 ;; Defined at:
  1036 ;;		line 62 in file "MPU.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  buffer         40   17[BANK0 ] unsigned char [40]
  1041 ;;  Ay              2   69[BANK0 ] int 
  1042 ;;  Gz              2   67[BANK0 ] int 
  1043 ;;  Gy              2   65[BANK0 ] int 
  1044 ;;  Gx              2   63[BANK0 ] int 
  1045 ;;  T               2   61[BANK0 ] int 
  1046 ;;  Az              2   59[BANK0 ] int 
  1047 ;;  Ax              2   57[BANK0 ] int 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         0      54       0       0       0
  1059 ;;      Temps:          0       4       0       0       0
  1060 ;;      Totals:         0      58       0       0       0
  1061 ;;Total ram usage:       58 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    3
  1064 ;; This function calls:
  1065 ;;		_I2C_Master_Stop
  1066 ;;		_I2C_Master_Write
  1067 ;;		_I2C_Read
  1068 ;;		_I2C_Start
  1069 ;;		_UART_Write_String
  1070 ;;		___awdiv
  1071 ;;		_sprintf
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _MPU6050_Read
  1079  0669                     _MPU6050_Read:
  1080  0669                     l1409:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _MPU6050_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1083                           
  1084                           
  1085                           ;MPU.c: 64:   char buffer[40];;MPU.c: 65:   int Ax,Ay,Az,T,Gx,Gy,Gz;;MPU.c: 67:   I2C_St
      +                          art(0xD0);
  1086  0669  30D0               	movlw	208
  1087  066A  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  1088                           
  1089                           ;MPU.c: 68:   I2C_Master_Write(0x3B);
  1090  066F  303B               	movlw	59
  1091  0670  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  1092                           
  1093                           ;MPU.c: 69:   I2C_Master_Stop();
  1094  0675  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  1095                           
  1096                           ;MPU.c: 70:   I2C_Start(0xD1);
  1097  067A  30D1               	movlw	209
  1098  067B  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  1099  0680                     l1411:
  1100                           
  1101                           ;MPU.c: 71:   Ax = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1102  0680  3000               	movlw	0
  1103  0681  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1104  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0688  00AD               	movwf	??_MPU6050_Read
  1107  0689  01AE               	clrf	??_MPU6050_Read+1
  1108  068A  3000               	movlw	0
  1109  068B  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1110  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0692  00AF               	movwf	??_MPU6050_Read+2
  1113  0693  01B0               	clrf	??_MPU6050_Read+3
  1114  0694  082F               	movf	??_MPU6050_Read+2,w
  1115  0695  00B0               	movwf	??_MPU6050_Read+3
  1116  0696  01AF               	clrf	??_MPU6050_Read+2
  1117  0697  082D               	movf	??_MPU6050_Read,w
  1118  0698  042F               	iorwf	??_MPU6050_Read+2,w
  1119  0699  00D9               	movwf	MPU6050_Read@Ax
  1120  069A  082E               	movf	??_MPU6050_Read+1,w
  1121  069B  0430               	iorwf	??_MPU6050_Read+3,w
  1122  069C  00DA               	movwf	MPU6050_Read@Ax+1
  1123  069D                     l1413:
  1124                           
  1125                           ;MPU.c: 72:   Ay = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1126  069D  3000               	movlw	0
  1127  069E  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1128  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1129  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1130  06A5  00AD               	movwf	??_MPU6050_Read
  1131  06A6  01AE               	clrf	??_MPU6050_Read+1
  1132  06A7  3000               	movlw	0
  1133  06A8  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1134  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1135  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1136  06AF  00AF               	movwf	??_MPU6050_Read+2
  1137  06B0  01B0               	clrf	??_MPU6050_Read+3
  1138  06B1  082F               	movf	??_MPU6050_Read+2,w
  1139  06B2  00B0               	movwf	??_MPU6050_Read+3
  1140  06B3  01AF               	clrf	??_MPU6050_Read+2
  1141  06B4  082D               	movf	??_MPU6050_Read,w
  1142  06B5  042F               	iorwf	??_MPU6050_Read+2,w
  1143  06B6  00E5               	movwf	MPU6050_Read@Ay
  1144  06B7  082E               	movf	??_MPU6050_Read+1,w
  1145  06B8  0430               	iorwf	??_MPU6050_Read+3,w
  1146  06B9  00E6               	movwf	MPU6050_Read@Ay+1
  1147  06BA                     l1415:
  1148                           
  1149                           ;MPU.c: 73:   Az = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1150  06BA  3000               	movlw	0
  1151  06BB  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1152  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1153  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1154  06C2  00AD               	movwf	??_MPU6050_Read
  1155  06C3  01AE               	clrf	??_MPU6050_Read+1
  1156  06C4  3000               	movlw	0
  1157  06C5  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1158  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1159  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1160  06CC  00AF               	movwf	??_MPU6050_Read+2
  1161  06CD  01B0               	clrf	??_MPU6050_Read+3
  1162  06CE  082F               	movf	??_MPU6050_Read+2,w
  1163  06CF  00B0               	movwf	??_MPU6050_Read+3
  1164  06D0  01AF               	clrf	??_MPU6050_Read+2
  1165  06D1  082D               	movf	??_MPU6050_Read,w
  1166  06D2  042F               	iorwf	??_MPU6050_Read+2,w
  1167  06D3  00DB               	movwf	MPU6050_Read@Az
  1168  06D4  082E               	movf	??_MPU6050_Read+1,w
  1169  06D5  0430               	iorwf	??_MPU6050_Read+3,w
  1170  06D6  00DC               	movwf	MPU6050_Read@Az+1
  1171  06D7                     l1417:
  1172                           
  1173                           ;MPU.c: 74:   T = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1174  06D7  3000               	movlw	0
  1175  06D8  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1176  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1177  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1178  06DF  00AD               	movwf	??_MPU6050_Read
  1179  06E0  01AE               	clrf	??_MPU6050_Read+1
  1180  06E1  3000               	movlw	0
  1181  06E2  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1182  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1183  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1184  06E9  00AF               	movwf	??_MPU6050_Read+2
  1185  06EA  01B0               	clrf	??_MPU6050_Read+3
  1186  06EB  082F               	movf	??_MPU6050_Read+2,w
  1187  06EC  00B0               	movwf	??_MPU6050_Read+3
  1188  06ED  01AF               	clrf	??_MPU6050_Read+2
  1189  06EE  082D               	movf	??_MPU6050_Read,w
  1190  06EF  042F               	iorwf	??_MPU6050_Read+2,w
  1191  06F0  00DD               	movwf	MPU6050_Read@T
  1192  06F1  082E               	movf	??_MPU6050_Read+1,w
  1193  06F2  0430               	iorwf	??_MPU6050_Read+3,w
  1194  06F3  00DE               	movwf	MPU6050_Read@T+1
  1195  06F4                     l1419:
  1196                           
  1197                           ;MPU.c: 75:   Gx = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1198  06F4  3000               	movlw	0
  1199  06F5  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1200  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1201  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1202  06FC  00AD               	movwf	??_MPU6050_Read
  1203  06FD  01AE               	clrf	??_MPU6050_Read+1
  1204  06FE  3000               	movlw	0
  1205  06FF  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1206  0704  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0705  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0706  00AF               	movwf	??_MPU6050_Read+2
  1209  0707  01B0               	clrf	??_MPU6050_Read+3
  1210  0708  082F               	movf	??_MPU6050_Read+2,w
  1211  0709  00B0               	movwf	??_MPU6050_Read+3
  1212  070A  01AF               	clrf	??_MPU6050_Read+2
  1213  070B  082D               	movf	??_MPU6050_Read,w
  1214  070C  042F               	iorwf	??_MPU6050_Read+2,w
  1215  070D  00DF               	movwf	MPU6050_Read@Gx
  1216  070E  082E               	movf	??_MPU6050_Read+1,w
  1217  070F  0430               	iorwf	??_MPU6050_Read+3,w
  1218  0710  00E0               	movwf	MPU6050_Read@Gx+1
  1219  0711                     l1421:
  1220                           
  1221                           ;MPU.c: 76:   Gy = ((int)I2C_Read(0)<<8) | (int)I2C_Read(0);
  1222  0711  3000               	movlw	0
  1223  0712  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1224  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0719  00AD               	movwf	??_MPU6050_Read
  1227  071A  01AE               	clrf	??_MPU6050_Read+1
  1228  071B  3000               	movlw	0
  1229  071C  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1230  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0723  00AF               	movwf	??_MPU6050_Read+2
  1233  0724  01B0               	clrf	??_MPU6050_Read+3
  1234  0725  082F               	movf	??_MPU6050_Read+2,w
  1235  0726  00B0               	movwf	??_MPU6050_Read+3
  1236  0727  01AF               	clrf	??_MPU6050_Read+2
  1237  0728  082D               	movf	??_MPU6050_Read,w
  1238  0729  042F               	iorwf	??_MPU6050_Read+2,w
  1239  072A  00E1               	movwf	MPU6050_Read@Gy
  1240  072B  082E               	movf	??_MPU6050_Read+1,w
  1241  072C  0430               	iorwf	??_MPU6050_Read+3,w
  1242  072D  00E2               	movwf	MPU6050_Read@Gy+1
  1243  072E                     l1423:
  1244                           
  1245                           ;MPU.c: 77:   Gz = ((int)I2C_Read(0)<<8) | (int)I2C_Read(1);
  1246  072E  3001               	movlw	1
  1247  072F  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1248  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0736  00AD               	movwf	??_MPU6050_Read
  1251  0737  01AE               	clrf	??_MPU6050_Read+1
  1252  0738  3000               	movlw	0
  1253  0739  120A  118A  23B1  120A  118A  	fcall	_I2C_Read
  1254  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1255  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0740  00AF               	movwf	??_MPU6050_Read+2
  1257  0741  01B0               	clrf	??_MPU6050_Read+3
  1258  0742  082F               	movf	??_MPU6050_Read+2,w
  1259  0743  00B0               	movwf	??_MPU6050_Read+3
  1260  0744  01AF               	clrf	??_MPU6050_Read+2
  1261  0745  082D               	movf	??_MPU6050_Read,w
  1262  0746  042F               	iorwf	??_MPU6050_Read+2,w
  1263  0747  00E3               	movwf	MPU6050_Read@Gz
  1264  0748  082E               	movf	??_MPU6050_Read+1,w
  1265  0749  0430               	iorwf	??_MPU6050_Read+3,w
  1266  074A  00E4               	movwf	MPU6050_Read@Gz+1
  1267  074B                     l1425:
  1268                           
  1269                           ;MPU.c: 78:   I2C_Master_Stop();
  1270  074B  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  1271  0750                     l1427:
  1272                           
  1273                           ;MPU.c: 80:   PORTB = Ay/64;
  1274  0750  3040               	movlw	64
  1275  0751  00F0               	movwf	___awdiv@divisor
  1276  0752  3000               	movlw	0
  1277  0753  00F1               	movwf	___awdiv@divisor+1
  1278  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0756  0866               	movf	MPU6050_Read@Ay+1,w
  1281  0757  00F3               	movwf	___awdiv@dividend+1
  1282  0758  0865               	movf	MPU6050_Read@Ay,w
  1283  0759  00F2               	movwf	___awdiv@dividend
  1284  075A  120A  118A  247E  120A  118A  	fcall	___awdiv
  1285  075F  0870               	movf	?___awdiv,w
  1286  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0762  0086               	movwf	6	;volatile
  1289  0763                     l1429:
  1290                           
  1291                           ;MPU.c: 82:   sprintf(buffer,"Ax = %d    ",Ax);
  1292  0763  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1293  0764  00AD               	movwf	??_MPU6050_Read
  1294  0765  082D               	movf	??_MPU6050_Read,w
  1295  0766  00A0               	movwf	sprintf@f
  1296  0767  085A               	movf	MPU6050_Read@Ax+1,w
  1297  0768  00A2               	movwf	?_sprintf+2
  1298  0769  0859               	movf	MPU6050_Read@Ax,w
  1299  076A  00A1               	movwf	?_sprintf+1
  1300  076B  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1301  076C  120A  118A  2581  120A  118A  	fcall	_sprintf
  1302                           
  1303                           ;MPU.c: 83:   UART_Write_String(buffer);
  1304  0771  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1305  0772  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1306  0777                     l1431:
  1307                           
  1308                           ;MPU.c: 85:   sprintf(buffer," Ay = %d    ",Ay);
  1309  0777  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1310  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1312  077A  00AD               	movwf	??_MPU6050_Read
  1313  077B  082D               	movf	??_MPU6050_Read,w
  1314  077C  00A0               	movwf	sprintf@f
  1315  077D  0866               	movf	MPU6050_Read@Ay+1,w
  1316  077E  00A2               	movwf	?_sprintf+2
  1317  077F  0865               	movf	MPU6050_Read@Ay,w
  1318  0780  00A1               	movwf	?_sprintf+1
  1319  0781  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1320  0782  120A  118A  2581  120A  118A  	fcall	_sprintf
  1321  0787                     l1433:
  1322                           
  1323                           ;MPU.c: 86:   UART_Write_String(buffer);
  1324  0787  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1325  0788  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1326                           
  1327                           ;MPU.c: 88:   sprintf(buffer," Az = %d    ",Az);
  1328  078D  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1329  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1330  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0790  00AD               	movwf	??_MPU6050_Read
  1332  0791  082D               	movf	??_MPU6050_Read,w
  1333  0792  00A0               	movwf	sprintf@f
  1334  0793  085C               	movf	MPU6050_Read@Az+1,w
  1335  0794  00A2               	movwf	?_sprintf+2
  1336  0795  085B               	movf	MPU6050_Read@Az,w
  1337  0796  00A1               	movwf	?_sprintf+1
  1338  0797  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1339  0798  120A  118A  2581  120A  118A  	fcall	_sprintf
  1340  079D                     l1435:
  1341                           
  1342                           ;MPU.c: 89:   UART_Write_String(buffer);
  1343  079D  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1344  079E  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1345  07A3                     l1437:
  1346                           
  1347                           ;MPU.c: 91:   sprintf(buffer," T = %d  ",T);
  1348  07A3  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1349  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1350  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1351  07A6  00AD               	movwf	??_MPU6050_Read
  1352  07A7  082D               	movf	??_MPU6050_Read,w
  1353  07A8  00A0               	movwf	sprintf@f
  1354  07A9  085E               	movf	MPU6050_Read@T+1,w
  1355  07AA  00A2               	movwf	?_sprintf+2
  1356  07AB  085D               	movf	MPU6050_Read@T,w
  1357  07AC  00A1               	movwf	?_sprintf+1
  1358  07AD  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1359  07AE  120A  118A  2581  120A  118A  	fcall	_sprintf
  1360                           
  1361                           ;MPU.c: 92:   UART_Write_String(buffer);
  1362  07B3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1363  07B4  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1364  07B9                     l1439:
  1365                           
  1366                           ;MPU.c: 94:   sprintf(buffer," Gx = %d    ",Gx);
  1367  07B9  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1368  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1369  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1370  07BC  00AD               	movwf	??_MPU6050_Read
  1371  07BD  082D               	movf	??_MPU6050_Read,w
  1372  07BE  00A0               	movwf	sprintf@f
  1373  07BF  0860               	movf	MPU6050_Read@Gx+1,w
  1374  07C0  00A2               	movwf	?_sprintf+2
  1375  07C1  085F               	movf	MPU6050_Read@Gx,w
  1376  07C2  00A1               	movwf	?_sprintf+1
  1377  07C3  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1378  07C4  120A  118A  2581  120A  118A  	fcall	_sprintf
  1379  07C9                     l1441:
  1380                           
  1381                           ;MPU.c: 95:   UART_Write_String(buffer);
  1382  07C9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1383  07CA  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1384                           
  1385                           ;MPU.c: 97:   sprintf(buffer," Gy = %d    ",Gy);
  1386  07CF  3025               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1387  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1388  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1389  07D2  00AD               	movwf	??_MPU6050_Read
  1390  07D3  082D               	movf	??_MPU6050_Read,w
  1391  07D4  00A0               	movwf	sprintf@f
  1392  07D5  0862               	movf	MPU6050_Read@Gy+1,w
  1393  07D6  00A2               	movwf	?_sprintf+2
  1394  07D7  0861               	movf	MPU6050_Read@Gy,w
  1395  07D8  00A1               	movwf	?_sprintf+1
  1396  07D9  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1397  07DA  120A  118A  2581  120A  118A  	fcall	_sprintf
  1398  07DF                     l1443:
  1399                           
  1400                           ;MPU.c: 98:   UART_Write_String(buffer);
  1401  07DF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1402  07E0  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1403  07E5                     l1445:
  1404                           
  1405                           ;MPU.c: 100:   sprintf(buffer," Gz = %d\r\n",Gz);
  1406  07E5  304B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1407  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1408  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1409  07E8  00AD               	movwf	??_MPU6050_Read
  1410  07E9  082D               	movf	??_MPU6050_Read,w
  1411  07EA  00A0               	movwf	sprintf@f
  1412  07EB  0864               	movf	MPU6050_Read@Gz+1,w
  1413  07EC  00A2               	movwf	?_sprintf+2
  1414  07ED  0863               	movf	MPU6050_Read@Gz,w
  1415  07EE  00A1               	movwf	?_sprintf+1
  1416  07EF  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1417  07F0  120A  118A  2581  120A  118A  	fcall	_sprintf
  1418                           
  1419                           ;MPU.c: 101:   UART_Write_String(buffer);
  1420  07F5  3031               	movlw	(low (MPU6050_Read@buffer| 0))& (0+255)
  1421  07F6  120A  118A  2390  120A  118A  	fcall	_UART_Write_String
  1422  07FB                     l81:
  1423  07FB  0008               	return
  1424  07FC                     __end_of_MPU6050_Read:
  1425                           
  1426                           	psect	text3
  1427  0581                     __ptext3:	
  1428 ;; *************** function _sprintf *****************
  1429 ;; Defined at:
  1430 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  sp              1    wreg     PTR unsigned char 
  1433 ;;		 -> MPU6050_Read@buffer(40), 
  1434 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1435 ;;		 -> STR_7(11), STR_6(13), STR_5(13), STR_4(10), 
  1436 ;;		 -> STR_3(13), STR_2(13), STR_1(12), 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1439 ;;		 -> MPU6050_Read@buffer(40), 
  1440 ;;  tmpval          4    0        struct .
  1441 ;;  val             2    9[BANK0 ] unsigned int 
  1442 ;;  cp              2    0        PTR const unsigned char 
  1443 ;;  len             2    0        unsigned int 
  1444 ;;  c               1   12[BANK0 ] unsigned char 
  1445 ;;  prec            1    8[BANK0 ] char 
  1446 ;;  flag            1    7[BANK0 ] unsigned char 
  1447 ;;  ap              1    6[BANK0 ] PTR void [1]
  1448 ;;		 -> ?_sprintf(2), 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  2    0[BANK0 ] int 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       3       0       0       0
  1459 ;;      Locals:         0       7       0       0       0
  1460 ;;      Temps:          0       3       0       0       0
  1461 ;;      Totals:         0      13       0       0       0
  1462 ;;Total ram usage:       13 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		___lwdiv
  1467 ;;		___lwmod
  1468 ;; This function is called by:
  1469 ;;		_MPU6050_Read
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _sprintf
  1475  0581                     _sprintf:
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1479                           ;sprintf@sp stored from wreg
  1480  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0583  00AB               	movwf	sprintf@sp
  1483  0584                     l1251:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1486  0584  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1487  0585  00A3               	movwf	??_sprintf
  1488  0586  0823               	movf	??_sprintf,w
  1489  0587  00A6               	movwf	sprintf@ap
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1492  0588  2E52               	goto	l1303
  1493  0589                     l1253:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1496  0589  3025               	movlw	37
  1497  058A  062C               	xorwf	sprintf@c,w
  1498  058B  1903               	btfsc	3,2
  1499  058C  2D8E               	goto	u651
  1500  058D  2D8F               	goto	u650
  1501  058E                     u651:
  1502  058E  2D9B               	goto	l1259
  1503  058F                     u650:
  1504  058F                     l1255:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1507  058F  082C               	movf	sprintf@c,w
  1508  0590  00A3               	movwf	??_sprintf
  1509  0591  082B               	movf	sprintf@sp,w
  1510  0592  0084               	movwf	4
  1511  0593  0823               	movf	??_sprintf,w
  1512  0594  1383               	bcf	3,7	;select IRP bank0
  1513  0595  0080               	movwf	0
  1514  0596                     l1257:
  1515  0596  3001               	movlw	1
  1516  0597  00A3               	movwf	??_sprintf
  1517  0598  0823               	movf	??_sprintf,w
  1518  0599  07AB               	addwf	sprintf@sp,f
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1521  059A  2E52               	goto	l1303
  1522  059B                     l1259:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1525  059B  01A7               	clrf	sprintf@flag
  1526  059C                     l1263:	
  1527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1528                           
  1529  059C  3001               	movlw	1
  1530  059D  07A0               	addwf	sprintf@f,f
  1531  059E  30FF               	movlw	-1
  1532  059F  0720               	addwf	sprintf@f,w
  1533  05A0  0084               	movwf	4
  1534  05A1  120A  118A  2003  120A  118A  	fcall	stringdir
  1535  05A6  00AC               	movwf	sprintf@c
  1536  05A7  00A3               	movwf	??_sprintf
  1537  05A8  01A4               	clrf	??_sprintf+1
  1538                           
  1539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 1, Range of values is 0 to 0
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte            4     3 (average)
  1545                           ; direct_byte           11     8 (fixed)
  1546                           ; jumptable            260     6 (fixed)
  1547                           ;	Chosen strategy is simple_byte
  1548  05A9  0824               	movf	??_sprintf+1,w
  1549  05AA  3A00               	xorlw	0	; case 0
  1550  05AB  1903               	skipnz
  1551  05AC  2DAE               	goto	l1499
  1552  05AD  2E52               	goto	l1303
  1553  05AE                     l1499:
  1554                           
  1555                           ; Switch size 1, requested type "simple"
  1556                           ; Number of cases is 3, Range of values is 0 to 105
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte           10     6 (average)
  1560                           ; jumptable            260     6 (fixed)
  1561                           ;	Chosen strategy is simple_byte
  1562  05AE  0823               	movf	??_sprintf,w
  1563  05AF  3A00               	xorlw	0	; case 0
  1564  05B0  1903               	skipnz
  1565  05B1  2E64               	goto	l1305
  1566  05B2  3A64               	xorlw	100	; case 100
  1567  05B3  1903               	skipnz
  1568  05B4  2DB9               	goto	l1265
  1569  05B5  3A0D               	xorlw	13	; case 105
  1570  05B6  1903               	skipnz
  1571  05B7  2DB9               	goto	l1265
  1572  05B8  2E52               	goto	l1303
  1573  05B9                     l1265:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1576  05B9  0826               	movf	sprintf@ap,w
  1577  05BA  0084               	movwf	4
  1578  05BB  1383               	bcf	3,7	;select IRP bank0
  1579  05BC  0800               	movf	0,w
  1580  05BD  00A9               	movwf	sprintf@val
  1581  05BE  0A84               	incf	4,f
  1582  05BF  0800               	movf	0,w
  1583  05C0  00AA               	movwf	sprintf@val+1
  1584  05C1                     l1267:
  1585  05C1  3002               	movlw	2
  1586  05C2  00A3               	movwf	??_sprintf
  1587  05C3  0823               	movf	??_sprintf,w
  1588  05C4  07A6               	addwf	sprintf@ap,f
  1589  05C5                     l1269:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1592  05C5  1FAA               	btfss	sprintf@val+1,7
  1593  05C6  2DC8               	goto	u661
  1594  05C7  2DC9               	goto	u660
  1595  05C8                     u661:
  1596  05C8  2DD2               	goto	l1275
  1597  05C9                     u660:
  1598  05C9                     l1271:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1601  05C9  3003               	movlw	3
  1602  05CA  00A3               	movwf	??_sprintf
  1603  05CB  0823               	movf	??_sprintf,w
  1604  05CC  04A7               	iorwf	sprintf@flag,f
  1605  05CD                     l1273:
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1608  05CD  09A9               	comf	sprintf@val,f
  1609  05CE  09AA               	comf	sprintf@val+1,f
  1610  05CF  0AA9               	incf	sprintf@val,f
  1611  05D0  1903               	skipnz
  1612  05D1  0AAA               	incf	sprintf@val+1,f
  1613  05D2                     l1275:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1616  05D2  01AC               	clrf	sprintf@c
  1617  05D3  0AAC               	incf	sprintf@c,f
  1618  05D4                     l1281:
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1621  05D4  082C               	movf	sprintf@c,w
  1622  05D5  00A3               	movwf	??_sprintf
  1623  05D6  0723               	addwf	??_sprintf,w
  1624  05D7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1625  05D8  0084               	movwf	4
  1626  05D9  120A  118A  2003  120A  118A  	fcall	stringdir
  1627  05DE  00A4               	movwf	??_sprintf+1
  1628  05DF  120A  118A  2003  120A  118A  	fcall	stringdir
  1629  05E4  00A5               	movwf	??_sprintf+2
  1630  05E5  0825               	movf	??_sprintf+2,w
  1631  05E6  022A               	subwf	sprintf@val+1,w
  1632  05E7  1D03               	skipz
  1633  05E8  2DEB               	goto	u675
  1634  05E9  0824               	movf	??_sprintf+1,w
  1635  05EA  0229               	subwf	sprintf@val,w
  1636  05EB                     u675:
  1637  05EB  1803               	skipnc
  1638  05EC  2DEE               	goto	u671
  1639  05ED  2DEF               	goto	u670
  1640  05EE                     u671:
  1641  05EE  2DF0               	goto	l1285
  1642  05EF                     u670:
  1643  05EF  2DFA               	goto	l1287
  1644  05F0                     l1285:
  1645  05F0  3001               	movlw	1
  1646  05F1  00A3               	movwf	??_sprintf
  1647  05F2  0823               	movf	??_sprintf,w
  1648  05F3  07AC               	addwf	sprintf@c,f
  1649  05F4  3005               	movlw	5
  1650  05F5  062C               	xorwf	sprintf@c,w
  1651  05F6  1D03               	btfss	3,2
  1652  05F7  2DF9               	goto	u681
  1653  05F8  2DFA               	goto	u680
  1654  05F9                     u681:
  1655  05F9  2DD4               	goto	l1281
  1656  05FA                     u680:
  1657  05FA                     l1287:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1660  05FA  0827               	movf	sprintf@flag,w
  1661  05FB  3903               	andlw	3
  1662  05FC  1903               	btfsc	3,2
  1663  05FD  2DFF               	goto	u691
  1664  05FE  2E00               	goto	u690
  1665  05FF                     u691:
  1666  05FF  2E0B               	goto	l1293
  1667  0600                     u690:
  1668  0600                     l1289:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1671  0600  302D               	movlw	45
  1672  0601  00A3               	movwf	??_sprintf
  1673  0602  082B               	movf	sprintf@sp,w
  1674  0603  0084               	movwf	4
  1675  0604  0823               	movf	??_sprintf,w
  1676  0605  1383               	bcf	3,7	;select IRP bank0
  1677  0606  0080               	movwf	0
  1678  0607                     l1291:
  1679  0607  3001               	movlw	1
  1680  0608  00A3               	movwf	??_sprintf
  1681  0609  0823               	movf	??_sprintf,w
  1682  060A  07AB               	addwf	sprintf@sp,f
  1683  060B                     l1293:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1686  060B  082C               	movf	sprintf@c,w
  1687  060C  00A3               	movwf	??_sprintf
  1688  060D  0823               	movf	??_sprintf,w
  1689  060E  00A8               	movwf	sprintf@prec
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1692  060F  2E49               	goto	l1301
  1693  0610                     l1295:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1696  0610  300A               	movlw	10
  1697  0611  00F8               	movwf	___lwmod@divisor
  1698  0612  3000               	movlw	0
  1699  0613  00F9               	movwf	___lwmod@divisor+1
  1700  0614  0828               	movf	sprintf@prec,w
  1701  0615  00A3               	movwf	??_sprintf
  1702  0616  0723               	addwf	??_sprintf,w
  1703  0617  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1704  0618  0084               	movwf	4
  1705  0619  120A  118A  2003  120A  118A  	fcall	stringdir
  1706  061E  00F0               	movwf	___lwdiv@divisor
  1707  061F  120A  118A  2003  120A  118A  	fcall	stringdir
  1708  0624  00F1               	movwf	___lwdiv@divisor+1
  1709  0625  082A               	movf	sprintf@val+1,w
  1710  0626  00F3               	movwf	___lwdiv@dividend+1
  1711  0627  0829               	movf	sprintf@val,w
  1712  0628  00F2               	movwf	___lwdiv@dividend
  1713  0629  120A  118A  243A  120A  118A  	fcall	___lwdiv
  1714  062E  0871               	movf	?___lwdiv+1,w
  1715  062F  00FB               	movwf	___lwmod@dividend+1
  1716  0630  0870               	movf	?___lwdiv,w
  1717  0631  00FA               	movwf	___lwmod@dividend
  1718  0632  120A  118A  2400  120A  118A  	fcall	___lwmod
  1719  0637  0878               	movf	?___lwmod,w
  1720  0638  3E30               	addlw	48
  1721  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1722  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1723  063B  00A4               	movwf	??_sprintf+1
  1724  063C  0824               	movf	??_sprintf+1,w
  1725  063D  00AC               	movwf	sprintf@c
  1726  063E                     l1297:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1729  063E  082C               	movf	sprintf@c,w
  1730  063F  00A3               	movwf	??_sprintf
  1731  0640  082B               	movf	sprintf@sp,w
  1732  0641  0084               	movwf	4
  1733  0642  0823               	movf	??_sprintf,w
  1734  0643  1383               	bcf	3,7	;select IRP bank0
  1735  0644  0080               	movwf	0
  1736  0645                     l1299:
  1737  0645  3001               	movlw	1
  1738  0646  00A3               	movwf	??_sprintf
  1739  0647  0823               	movf	??_sprintf,w
  1740  0648  07AB               	addwf	sprintf@sp,f
  1741  0649                     l1301:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1744  0649  30FF               	movlw	255
  1745  064A  00A3               	movwf	??_sprintf
  1746  064B  0823               	movf	??_sprintf,w
  1747  064C  07A8               	addwf	sprintf@prec,f
  1748  064D  0A28               	incf	sprintf@prec,w
  1749  064E  1D03               	btfss	3,2
  1750  064F  2E51               	goto	u701
  1751  0650  2E52               	goto	u700
  1752  0651                     u701:
  1753  0651  2E10               	goto	l1295
  1754  0652                     u700:
  1755  0652                     l1303:
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1758  0652  3001               	movlw	1
  1759  0653  07A0               	addwf	sprintf@f,f
  1760  0654  30FF               	movlw	-1
  1761  0655  0720               	addwf	sprintf@f,w
  1762  0656  0084               	movwf	4
  1763  0657  120A  118A  2003  120A  118A  	fcall	stringdir
  1764  065C  00A3               	movwf	??_sprintf
  1765  065D  0823               	movf	??_sprintf,w
  1766  065E  00AC               	movwf	sprintf@c
  1767  065F  082C               	movf	sprintf@c,w
  1768  0660  1D03               	btfss	3,2
  1769  0661  2E63               	goto	u711
  1770  0662  2E64               	goto	u710
  1771  0663                     u711:
  1772  0663  2D89               	goto	l1253
  1773  0664                     u710:
  1774  0664                     l1305:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1777  0664  082B               	movf	sprintf@sp,w
  1778  0665  0084               	movwf	4
  1779  0666  1383               	bcf	3,7	;select IRP bank0
  1780  0667  0180               	clrf	0
  1781  0668                     l281:
  1782  0668  0008               	return
  1783  0669                     __end_of_sprintf:
  1784                           
  1785                           	psect	text4
  1786  0400                     __ptext4:	
  1787 ;; *************** function ___lwmod *****************
  1788 ;; Defined at:
  1789 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  divisor         2    8[COMMON] unsigned int 
  1792 ;;  dividend        2   10[COMMON] unsigned int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  counter         1   13[COMMON] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    8[COMMON] unsigned int 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         4       0       0       0       0
  1805 ;;      Locals:         1       0       0       0       0
  1806 ;;      Temps:          1       0       0       0       0
  1807 ;;      Totals:         6       0       0       0       0
  1808 ;;Total ram usage:        6 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_sprintf
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function ___lwmod
  1819  0400                     ___lwmod:
  1820  0400                     l1199:	
  1821                           ;incstack = 0
  1822                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1823                           
  1824  0400  0878               	movf	___lwmod@divisor,w
  1825  0401  0479               	iorwf	___lwmod@divisor+1,w
  1826  0402  1903               	btfsc	3,2
  1827  0403  2C05               	goto	u551
  1828  0404  2C06               	goto	u550
  1829  0405                     u551:
  1830  0405  2C35               	goto	l1217
  1831  0406                     u550:
  1832  0406                     l1201:
  1833  0406  01FD               	clrf	___lwmod@counter
  1834  0407  0AFD               	incf	___lwmod@counter,f
  1835  0408  2C14               	goto	l1207
  1836  0409                     l1203:
  1837  0409  3001               	movlw	1
  1838  040A                     u565:
  1839  040A  1003               	clrc
  1840  040B  0DF8               	rlf	___lwmod@divisor,f
  1841  040C  0DF9               	rlf	___lwmod@divisor+1,f
  1842  040D  3EFF               	addlw	-1
  1843  040E  1D03               	skipz
  1844  040F  2C0A               	goto	u565
  1845  0410                     l1205:
  1846  0410  3001               	movlw	1
  1847  0411  00FC               	movwf	??___lwmod
  1848  0412  087C               	movf	??___lwmod,w
  1849  0413  07FD               	addwf	___lwmod@counter,f
  1850  0414                     l1207:
  1851  0414  1FF9               	btfss	___lwmod@divisor+1,7
  1852  0415  2C17               	goto	u571
  1853  0416  2C18               	goto	u570
  1854  0417                     u571:
  1855  0417  2C09               	goto	l1203
  1856  0418                     u570:
  1857  0418                     l1209:
  1858  0418  0879               	movf	___lwmod@divisor+1,w
  1859  0419  027B               	subwf	___lwmod@dividend+1,w
  1860  041A  1D03               	skipz
  1861  041B  2C1E               	goto	u585
  1862  041C  0878               	movf	___lwmod@divisor,w
  1863  041D  027A               	subwf	___lwmod@dividend,w
  1864  041E                     u585:
  1865  041E  1C03               	skipc
  1866  041F  2C21               	goto	u581
  1867  0420  2C22               	goto	u580
  1868  0421                     u581:
  1869  0421  2C28               	goto	l1213
  1870  0422                     u580:
  1871  0422                     l1211:
  1872  0422  0878               	movf	___lwmod@divisor,w
  1873  0423  02FA               	subwf	___lwmod@dividend,f
  1874  0424  0879               	movf	___lwmod@divisor+1,w
  1875  0425  1C03               	skipc
  1876  0426  03FB               	decf	___lwmod@dividend+1,f
  1877  0427  02FB               	subwf	___lwmod@dividend+1,f
  1878  0428                     l1213:
  1879  0428  3001               	movlw	1
  1880  0429                     u595:
  1881  0429  1003               	clrc
  1882  042A  0CF9               	rrf	___lwmod@divisor+1,f
  1883  042B  0CF8               	rrf	___lwmod@divisor,f
  1884  042C  3EFF               	addlw	-1
  1885  042D  1D03               	skipz
  1886  042E  2C29               	goto	u595
  1887  042F                     l1215:
  1888  042F  3001               	movlw	1
  1889  0430  02FD               	subwf	___lwmod@counter,f
  1890  0431  1D03               	btfss	3,2
  1891  0432  2C34               	goto	u601
  1892  0433  2C35               	goto	u600
  1893  0434                     u601:
  1894  0434  2C18               	goto	l1209
  1895  0435                     u600:
  1896  0435                     l1217:
  1897  0435  087B               	movf	___lwmod@dividend+1,w
  1898  0436  00F9               	movwf	?___lwmod+1
  1899  0437  087A               	movf	___lwmod@dividend,w
  1900  0438  00F8               	movwf	?___lwmod
  1901  0439                     l567:
  1902  0439  0008               	return
  1903  043A                     __end_of___lwmod:
  1904                           
  1905                           	psect	text5
  1906  043A                     __ptext5:	
  1907 ;; *************** function ___lwdiv *****************
  1908 ;; Defined at:
  1909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  divisor         2    0[COMMON] unsigned int 
  1912 ;;  dividend        2    2[COMMON] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  quotient        2    5[COMMON] unsigned int 
  1915 ;;  counter         1    7[COMMON] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  2    0[COMMON] unsigned int 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         4       0       0       0       0
  1926 ;;      Locals:         3       0       0       0       0
  1927 ;;      Temps:          1       0       0       0       0
  1928 ;;      Totals:         8       0       0       0       0
  1929 ;;Total ram usage:        8 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_sprintf
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function ___lwdiv
  1940  043A                     ___lwdiv:
  1941  043A                     l1173:	
  1942                           ;incstack = 0
  1943                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1944                           
  1945  043A  01F5               	clrf	___lwdiv@quotient
  1946  043B  01F6               	clrf	___lwdiv@quotient+1
  1947  043C                     l1175:
  1948  043C  0870               	movf	___lwdiv@divisor,w
  1949  043D  0471               	iorwf	___lwdiv@divisor+1,w
  1950  043E  1903               	btfsc	3,2
  1951  043F  2C41               	goto	u481
  1952  0440  2C42               	goto	u480
  1953  0441                     u481:
  1954  0441  2C79               	goto	l1195
  1955  0442                     u480:
  1956  0442                     l1177:
  1957  0442  01F7               	clrf	___lwdiv@counter
  1958  0443  0AF7               	incf	___lwdiv@counter,f
  1959  0444  2C50               	goto	l1183
  1960  0445                     l1179:
  1961  0445  3001               	movlw	1
  1962  0446                     u495:
  1963  0446  1003               	clrc
  1964  0447  0DF0               	rlf	___lwdiv@divisor,f
  1965  0448  0DF1               	rlf	___lwdiv@divisor+1,f
  1966  0449  3EFF               	addlw	-1
  1967  044A  1D03               	skipz
  1968  044B  2C46               	goto	u495
  1969  044C                     l1181:
  1970  044C  3001               	movlw	1
  1971  044D  00F4               	movwf	??___lwdiv
  1972  044E  0874               	movf	??___lwdiv,w
  1973  044F  07F7               	addwf	___lwdiv@counter,f
  1974  0450                     l1183:
  1975  0450  1FF1               	btfss	___lwdiv@divisor+1,7
  1976  0451  2C53               	goto	u501
  1977  0452  2C54               	goto	u500
  1978  0453                     u501:
  1979  0453  2C45               	goto	l1179
  1980  0454                     u500:
  1981  0454                     l1185:
  1982  0454  3001               	movlw	1
  1983  0455                     u515:
  1984  0455  1003               	clrc
  1985  0456  0DF5               	rlf	___lwdiv@quotient,f
  1986  0457  0DF6               	rlf	___lwdiv@quotient+1,f
  1987  0458  3EFF               	addlw	-1
  1988  0459  1D03               	skipz
  1989  045A  2C55               	goto	u515
  1990  045B  0871               	movf	___lwdiv@divisor+1,w
  1991  045C  0273               	subwf	___lwdiv@dividend+1,w
  1992  045D  1D03               	skipz
  1993  045E  2C61               	goto	u525
  1994  045F  0870               	movf	___lwdiv@divisor,w
  1995  0460  0272               	subwf	___lwdiv@dividend,w
  1996  0461                     u525:
  1997  0461  1C03               	skipc
  1998  0462  2C64               	goto	u521
  1999  0463  2C65               	goto	u520
  2000  0464                     u521:
  2001  0464  2C6C               	goto	l1191
  2002  0465                     u520:
  2003  0465                     l1187:
  2004  0465  0870               	movf	___lwdiv@divisor,w
  2005  0466  02F2               	subwf	___lwdiv@dividend,f
  2006  0467  0871               	movf	___lwdiv@divisor+1,w
  2007  0468  1C03               	skipc
  2008  0469  03F3               	decf	___lwdiv@dividend+1,f
  2009  046A  02F3               	subwf	___lwdiv@dividend+1,f
  2010  046B                     l1189:
  2011  046B  1475               	bsf	___lwdiv@quotient,0
  2012  046C                     l1191:
  2013  046C  3001               	movlw	1
  2014  046D                     u535:
  2015  046D  1003               	clrc
  2016  046E  0CF1               	rrf	___lwdiv@divisor+1,f
  2017  046F  0CF0               	rrf	___lwdiv@divisor,f
  2018  0470  3EFF               	addlw	-1
  2019  0471  1D03               	skipz
  2020  0472  2C6D               	goto	u535
  2021  0473                     l1193:
  2022  0473  3001               	movlw	1
  2023  0474  02F7               	subwf	___lwdiv@counter,f
  2024  0475  1D03               	btfss	3,2
  2025  0476  2C78               	goto	u541
  2026  0477  2C79               	goto	u540
  2027  0478                     u541:
  2028  0478  2C54               	goto	l1185
  2029  0479                     u540:
  2030  0479                     l1195:
  2031  0479  0876               	movf	___lwdiv@quotient+1,w
  2032  047A  00F1               	movwf	?___lwdiv+1
  2033  047B  0875               	movf	___lwdiv@quotient,w
  2034  047C  00F0               	movwf	?___lwdiv
  2035  047D                     l557:
  2036  047D  0008               	return
  2037  047E                     __end_of___lwdiv:
  2038                           
  2039                           	psect	text6
  2040  047E                     __ptext6:	
  2041 ;; *************** function ___awdiv *****************
  2042 ;; Defined at:
  2043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  divisor         2    0[COMMON] int 
  2046 ;;  dividend        2    2[COMMON] int 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  quotient        2    7[COMMON] int 
  2049 ;;  sign            1    6[COMMON] unsigned char 
  2050 ;;  counter         1    5[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2    0[COMMON] int 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         4       0       0       0       0
  2061 ;;      Locals:         4       0       0       0       0
  2062 ;;      Temps:          1       0       0       0       0
  2063 ;;      Totals:         9       0       0       0       0
  2064 ;;Total ram usage:        9 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_MPU6050_Read
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function ___awdiv
  2075  047E                     ___awdiv:
  2076  047E                     l1313:	
  2077                           ;incstack = 0
  2078                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2079                           
  2080  047E  01F6               	clrf	___awdiv@sign
  2081  047F                     l1315:
  2082  047F  1FF1               	btfss	___awdiv@divisor+1,7
  2083  0480  2C82               	goto	u721
  2084  0481  2C83               	goto	u720
  2085  0482                     u721:
  2086  0482  2C8A               	goto	l1321
  2087  0483                     u720:
  2088  0483                     l1317:
  2089  0483  09F0               	comf	___awdiv@divisor,f
  2090  0484  09F1               	comf	___awdiv@divisor+1,f
  2091  0485  0AF0               	incf	___awdiv@divisor,f
  2092  0486  1903               	skipnz
  2093  0487  0AF1               	incf	___awdiv@divisor+1,f
  2094  0488                     l1319:
  2095  0488  01F6               	clrf	___awdiv@sign
  2096  0489  0AF6               	incf	___awdiv@sign,f
  2097  048A                     l1321:
  2098  048A  1FF3               	btfss	___awdiv@dividend+1,7
  2099  048B  2C8D               	goto	u731
  2100  048C  2C8E               	goto	u730
  2101  048D                     u731:
  2102  048D  2C97               	goto	l1327
  2103  048E                     u730:
  2104  048E                     l1323:
  2105  048E  09F2               	comf	___awdiv@dividend,f
  2106  048F  09F3               	comf	___awdiv@dividend+1,f
  2107  0490  0AF2               	incf	___awdiv@dividend,f
  2108  0491  1903               	skipnz
  2109  0492  0AF3               	incf	___awdiv@dividend+1,f
  2110  0493                     l1325:
  2111  0493  3001               	movlw	1
  2112  0494  00F4               	movwf	??___awdiv
  2113  0495  0874               	movf	??___awdiv,w
  2114  0496  06F6               	xorwf	___awdiv@sign,f
  2115  0497                     l1327:
  2116  0497  01F7               	clrf	___awdiv@quotient
  2117  0498  01F8               	clrf	___awdiv@quotient+1
  2118  0499                     l1329:
  2119  0499  0870               	movf	___awdiv@divisor,w
  2120  049A  0471               	iorwf	___awdiv@divisor+1,w
  2121  049B  1903               	btfsc	3,2
  2122  049C  2C9E               	goto	u741
  2123  049D  2C9F               	goto	u740
  2124  049E                     u741:
  2125  049E  2CD6               	goto	l1349
  2126  049F                     u740:
  2127  049F                     l1331:
  2128  049F  01F5               	clrf	___awdiv@counter
  2129  04A0  0AF5               	incf	___awdiv@counter,f
  2130  04A1  2CAD               	goto	l1337
  2131  04A2                     l1333:
  2132  04A2  3001               	movlw	1
  2133  04A3                     u755:
  2134  04A3  1003               	clrc
  2135  04A4  0DF0               	rlf	___awdiv@divisor,f
  2136  04A5  0DF1               	rlf	___awdiv@divisor+1,f
  2137  04A6  3EFF               	addlw	-1
  2138  04A7  1D03               	skipz
  2139  04A8  2CA3               	goto	u755
  2140  04A9                     l1335:
  2141  04A9  3001               	movlw	1
  2142  04AA  00F4               	movwf	??___awdiv
  2143  04AB  0874               	movf	??___awdiv,w
  2144  04AC  07F5               	addwf	___awdiv@counter,f
  2145  04AD                     l1337:
  2146  04AD  1FF1               	btfss	___awdiv@divisor+1,7
  2147  04AE  2CB0               	goto	u761
  2148  04AF  2CB1               	goto	u760
  2149  04B0                     u761:
  2150  04B0  2CA2               	goto	l1333
  2151  04B1                     u760:
  2152  04B1                     l1339:
  2153  04B1  3001               	movlw	1
  2154  04B2                     u775:
  2155  04B2  1003               	clrc
  2156  04B3  0DF7               	rlf	___awdiv@quotient,f
  2157  04B4  0DF8               	rlf	___awdiv@quotient+1,f
  2158  04B5  3EFF               	addlw	-1
  2159  04B6  1D03               	skipz
  2160  04B7  2CB2               	goto	u775
  2161  04B8  0871               	movf	___awdiv@divisor+1,w
  2162  04B9  0273               	subwf	___awdiv@dividend+1,w
  2163  04BA  1D03               	skipz
  2164  04BB  2CBE               	goto	u785
  2165  04BC  0870               	movf	___awdiv@divisor,w
  2166  04BD  0272               	subwf	___awdiv@dividend,w
  2167  04BE                     u785:
  2168  04BE  1C03               	skipc
  2169  04BF  2CC1               	goto	u781
  2170  04C0  2CC2               	goto	u780
  2171  04C1                     u781:
  2172  04C1  2CC9               	goto	l1345
  2173  04C2                     u780:
  2174  04C2                     l1341:
  2175  04C2  0870               	movf	___awdiv@divisor,w
  2176  04C3  02F2               	subwf	___awdiv@dividend,f
  2177  04C4  0871               	movf	___awdiv@divisor+1,w
  2178  04C5  1C03               	skipc
  2179  04C6  03F3               	decf	___awdiv@dividend+1,f
  2180  04C7  02F3               	subwf	___awdiv@dividend+1,f
  2181  04C8                     l1343:
  2182  04C8  1477               	bsf	___awdiv@quotient,0
  2183  04C9                     l1345:
  2184  04C9  3001               	movlw	1
  2185  04CA                     u795:
  2186  04CA  1003               	clrc
  2187  04CB  0CF1               	rrf	___awdiv@divisor+1,f
  2188  04CC  0CF0               	rrf	___awdiv@divisor,f
  2189  04CD  3EFF               	addlw	-1
  2190  04CE  1D03               	skipz
  2191  04CF  2CCA               	goto	u795
  2192  04D0                     l1347:
  2193  04D0  3001               	movlw	1
  2194  04D1  02F5               	subwf	___awdiv@counter,f
  2195  04D2  1D03               	btfss	3,2
  2196  04D3  2CD5               	goto	u801
  2197  04D4  2CD6               	goto	u800
  2198  04D5                     u801:
  2199  04D5  2CB1               	goto	l1339
  2200  04D6                     u800:
  2201  04D6                     l1349:
  2202  04D6  0876               	movf	___awdiv@sign,w
  2203  04D7  1903               	btfsc	3,2
  2204  04D8  2CDA               	goto	u811
  2205  04D9  2CDB               	goto	u810
  2206  04DA                     u811:
  2207  04DA  2CE0               	goto	l1353
  2208  04DB                     u810:
  2209  04DB                     l1351:
  2210  04DB  09F7               	comf	___awdiv@quotient,f
  2211  04DC  09F8               	comf	___awdiv@quotient+1,f
  2212  04DD  0AF7               	incf	___awdiv@quotient,f
  2213  04DE  1903               	skipnz
  2214  04DF  0AF8               	incf	___awdiv@quotient+1,f
  2215  04E0                     l1353:
  2216  04E0  0878               	movf	___awdiv@quotient+1,w
  2217  04E1  00F1               	movwf	?___awdiv+1
  2218  04E2  0877               	movf	___awdiv@quotient,w
  2219  04E3  00F0               	movwf	?___awdiv
  2220  04E4                     l438:
  2221  04E4  0008               	return
  2222  04E5                     __end_of___awdiv:
  2223                           
  2224                           	psect	text7
  2225  0390                     __ptext7:	
  2226 ;; *************** function _UART_Write_String *****************
  2227 ;; Defined at:
  2228 ;;		line 36 in file "USART.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  buf             1    wreg     PTR unsigned char 
  2231 ;;		 -> MPU6050_Read@buffer(40), 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  buf             1    4[COMMON] PTR unsigned char 
  2234 ;;		 -> MPU6050_Read@buffer(40), 
  2235 ;;  i               2    2[COMMON] int 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       0       0
  2246 ;;      Locals:         3       0       0       0       0
  2247 ;;      Temps:          1       0       0       0       0
  2248 ;;      Totals:         4       0       0       0       0
  2249 ;;Total ram usage:        4 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    1
  2252 ;; This function calls:
  2253 ;;		_UART_Write
  2254 ;; This function is called by:
  2255 ;;		_MPU6050_Read
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _UART_Write_String
  2261  0390                     _UART_Write_String:
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2265                           ;UART_Write_String@buf stored from wreg
  2266  0390  00F4               	movwf	UART_Write_String@buf
  2267  0391                     l1221:
  2268                           
  2269                           ;USART.c: 36: void UART_Write_String(char* buf);USART.c: 37: {;USART.c: 38:     int i=0;
  2270  0391  01F2               	clrf	UART_Write_String@i
  2271  0392  01F3               	clrf	UART_Write_String@i+1
  2272                           
  2273                           ;USART.c: 39:     while(buf[i] != '\0')
  2274  0393  2BA5               	goto	l1227
  2275  0394                     l1223:
  2276                           
  2277                           ;USART.c: 40:         UART_Write(buf[i++]);
  2278  0394  0872               	movf	UART_Write_String@i,w
  2279  0395  0774               	addwf	UART_Write_String@buf,w
  2280  0396  00F1               	movwf	??_UART_Write_String
  2281  0397  0871               	movf	??_UART_Write_String,w
  2282  0398  0084               	movwf	4
  2283  0399  0800               	movf	0,w
  2284  039A  120A  118A  233B  120A  118A  	fcall	_UART_Write
  2285  039F                     l1225:
  2286  039F  3001               	movlw	1
  2287  03A0  07F2               	addwf	UART_Write_String@i,f
  2288  03A1  1803               	skipnc
  2289  03A2  0AF3               	incf	UART_Write_String@i+1,f
  2290  03A3  3000               	movlw	0
  2291  03A4  07F3               	addwf	UART_Write_String@i+1,f
  2292  03A5                     l1227:
  2293                           
  2294                           ;USART.c: 39:     while(buf[i] != '\0')
  2295  03A5  0872               	movf	UART_Write_String@i,w
  2296  03A6  0774               	addwf	UART_Write_String@buf,w
  2297  03A7  00F1               	movwf	??_UART_Write_String
  2298  03A8  0871               	movf	??_UART_Write_String,w
  2299  03A9  0084               	movwf	4
  2300  03AA  1383               	bcf	3,7	;select IRP bank0
  2301  03AB  0800               	movf	0,w
  2302  03AC  1D03               	btfss	3,2
  2303  03AD  2BAF               	goto	u611
  2304  03AE  2BB0               	goto	u610
  2305  03AF                     u611:
  2306  03AF  2B94               	goto	l1223
  2307  03B0                     u610:
  2308  03B0                     l57:
  2309  03B0  0008               	return
  2310  03B1                     __end_of_UART_Write_String:
  2311                           
  2312                           	psect	text8
  2313  033B                     __ptext8:	
  2314 ;; *************** function _UART_Write *****************
  2315 ;; Defined at:
  2316 ;;		line 30 in file "USART.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  data            1    wreg     unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  data            1    0[COMMON] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       0       0       0       0
  2331 ;;      Locals:         1       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0
  2333 ;;      Totals:         1       0       0       0       0
  2334 ;;Total ram usage:        1 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_UART_Write_String
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _UART_Write
  2345  033B                     _UART_Write:
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in _UART_Write: [wreg]
  2349                           ;UART_Write@data stored from wreg
  2350  033B  00F0               	movwf	UART_Write@data
  2351  033C                     l1161:
  2352  033C                     l48:	
  2353                           ;USART.c: 30: void UART_Write(unsigned char data);USART.c: 31: {;USART.c: 32:   while(!T
      +                          RMT);
  2354                           
  2355  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2356  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2357  033E  1C98               	btfss	24,1	;volatile
  2358  033F  2B41               	goto	u441
  2359  0340  2B42               	goto	u440
  2360  0341                     u441:
  2361  0341  2B3C               	goto	l48
  2362  0342                     u440:
  2363  0342                     l1163:
  2364                           
  2365                           ;USART.c: 33:   TXREG = data;
  2366  0342  0870               	movf	UART_Write@data,w
  2367  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0345  0099               	movwf	25	;volatile
  2370  0346                     l51:
  2371  0346  0008               	return
  2372  0347                     __end_of_UART_Write:
  2373                           
  2374                           	psect	text9
  2375  03B1                     __ptext9:	
  2376 ;; *************** function _I2C_Read *****************
  2377 ;; Defined at:
  2378 ;;		line 89 in file "I2c.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  ACK_NACK        1    wreg     unsigned char 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  2383 ;;  Data            1    2[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      unsigned char 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         2       0       0       0       0
  2395 ;;      Temps:          1       0       0       0       0
  2396 ;;      Totals:         3       0       0       0       0
  2397 ;;Total ram usage:        3 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    1
  2400 ;; This function calls:
  2401 ;;		_I2C_ACK
  2402 ;;		_I2C_NACK
  2403 ;; This function is called by:
  2404 ;;		_MPU6050_Read
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _I2C_Read
  2410  03B1                     _I2C_Read:
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2414                           ;I2C_Read@ACK_NACK stored from wreg
  2415  03B1  00F1               	movwf	I2C_Read@ACK_NACK
  2416  03B2                     l1237:
  2417                           
  2418                           ;I2c.c: 89: unsigned char I2C_Read(unsigned char ACK_NACK);I2c.c: 90: {;I2c.c: 92:     u
      +                          nsigned char Data;;I2c.c: 93:     RCEN = 1;
  2419  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2420  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2421  03B4  1591               	bsf	17,3	;volatile
  2422  03B5                     l163:	
  2423                           ;I2c.c: 94:     while(!BF);
  2424                           
  2425  03B5  1C14               	btfss	20,0	;volatile
  2426  03B6  2BB8               	goto	u621
  2427  03B7  2BB9               	goto	u620
  2428  03B8                     u621:
  2429  03B8  2BB5               	goto	l163
  2430  03B9                     u620:
  2431  03B9                     l1239:
  2432                           
  2433                           ;I2c.c: 95:     Data = SSPBUF;
  2434  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2435  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2436  03BB  0813               	movf	19,w	;volatile
  2437  03BC  00F0               	movwf	??_I2C_Read
  2438  03BD  0870               	movf	??_I2C_Read,w
  2439  03BE  00F2               	movwf	I2C_Read@Data
  2440  03BF                     l1241:
  2441                           
  2442                           ;I2c.c: 96:     if(ACK_NACK==0)
  2443  03BF  0871               	movf	I2C_Read@ACK_NACK,w
  2444  03C0  1D03               	btfss	3,2
  2445  03C1  2BC3               	goto	u631
  2446  03C2  2BC4               	goto	u630
  2447  03C3                     u631:
  2448  03C3  2BCA               	goto	l1245
  2449  03C4                     u630:
  2450  03C4                     l1243:
  2451                           
  2452                           ;I2c.c: 97:         I2C_ACK();
  2453  03C4  120A  118A  2329  120A  118A  	fcall	_I2C_ACK
  2454  03C9  2BCF               	goto	l168
  2455  03CA                     l1245:
  2456                           
  2457                           ;I2c.c: 99:         I2C_NACK();
  2458  03CA  120A  118A  2332  120A  118A  	fcall	_I2C_NACK
  2459  03CF                     l168:
  2460  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03D1  1D8C               	btfss	12,3	;volatile
  2463  03D2  2BD4               	goto	u641
  2464  03D3  2BD5               	goto	u640
  2465  03D4                     u641:
  2466  03D4  2BCF               	goto	l168
  2467  03D5                     u640:
  2468  03D5                     l170:
  2469                           
  2470                           ;I2c.c: 101:     SSPIF=0;
  2471  03D5  118C               	bcf	12,3	;volatile
  2472  03D6                     l1247:
  2473                           
  2474                           ;I2c.c: 102:     return Data;
  2475  03D6  0872               	movf	I2C_Read@Data,w
  2476  03D7                     l171:
  2477  03D7  0008               	return
  2478  03D8                     __end_of_I2C_Read:
  2479                           
  2480                           	psect	text10
  2481  0332                     __ptext10:	
  2482 ;; *************** function _I2C_NACK *****************
  2483 ;; Defined at:
  2484 ;;		line 62 in file "I2c.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		None
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0
  2501 ;;      Totals:         0       0       0       0       0
  2502 ;;Total ram usage:        0 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_I2C_Read
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _I2C_NACK
  2513  0332                     _I2C_NACK:
  2514  0332                     l1171:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _I2C_NACK: []
  2517                           
  2518                           
  2519                           ;I2c.c: 64:  ACKDT = 1;
  2520  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0334  1691               	bsf	17,5	;volatile
  2523                           
  2524                           ;I2c.c: 65:  ACKEN = 1;
  2525  0335  1611               	bsf	17,4	;volatile
  2526  0336                     l145:	
  2527                           ;I2c.c: 66:     while(ACKEN);
  2528                           
  2529  0336  1A11               	btfsc	17,4	;volatile
  2530  0337  2B39               	goto	u471
  2531  0338  2B3A               	goto	u470
  2532  0339                     u471:
  2533  0339  2B36               	goto	l145
  2534  033A                     u470:
  2535  033A                     l148:
  2536  033A  0008               	return
  2537  033B                     __end_of_I2C_NACK:
  2538                           
  2539                           	psect	text11
  2540  0329                     __ptext11:	
  2541 ;; *************** function _I2C_ACK *****************
  2542 ;; Defined at:
  2543 ;;		line 55 in file "I2c.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		None
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_I2C_Read
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _I2C_ACK
  2572  0329                     _I2C_ACK:
  2573  0329                     l1169:	
  2574                           ;incstack = 0
  2575                           ; Regs used in _I2C_ACK: []
  2576                           
  2577                           
  2578                           ;I2c.c: 57:  ACKDT = 0;
  2579  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2580  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2581  032B  1291               	bcf	17,5	;volatile
  2582                           
  2583                           ;I2c.c: 58:     ACKEN = 1;
  2584  032C  1611               	bsf	17,4	;volatile
  2585  032D                     l139:	
  2586                           ;I2c.c: 59:     while(ACKEN);
  2587                           
  2588  032D  1A11               	btfsc	17,4	;volatile
  2589  032E  2B30               	goto	u461
  2590  032F  2B31               	goto	u460
  2591  0330                     u461:
  2592  0330  2B2D               	goto	l139
  2593  0331                     u460:
  2594  0331                     l142:
  2595  0331  0008               	return
  2596  0332                     __end_of_I2C_ACK:
  2597                           
  2598                           	psect	text12
  2599  04E5                     __ptext12:	
  2600 ;; *************** function _MPU6050_Init *****************
  2601 ;; Defined at:
  2602 ;;		line 19 in file "MPU.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0, pclath, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2616 ;;      Params:         0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0
  2618 ;;      Temps:          3       0       0       0       0
  2619 ;;      Totals:         3       0       0       0       0
  2620 ;;Total ram usage:        3 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    3
  2623 ;; This function calls:
  2624 ;;		_I2C_Master_Init
  2625 ;;		_I2C_Master_Stop
  2626 ;;		_I2C_Master_Write
  2627 ;;		_I2C_Start
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _MPU6050_Init
  2635  04E5                     _MPU6050_Init:
  2636  04E5                     l1357:	
  2637                           ;incstack = 0
  2638                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2639                           
  2640                           
  2641                           ;MPU.c: 22:   _delay((unsigned long)((100)*(16000000/4000.0)));
  2642  04E5  3003               	movlw	3
  2643  04E6  00F4               	movwf	??_MPU6050_Init+2
  2644  04E7  3008               	movlw	8
  2645  04E8  00F3               	movwf	??_MPU6050_Init+1
  2646  04E9  3077               	movlw	119
  2647  04EA  00F2               	movwf	??_MPU6050_Init
  2648  04EB                     u847:
  2649  04EB  0BF2               	decfsz	??_MPU6050_Init,f
  2650  04EC  2CEB               	goto	u847
  2651  04ED  0BF3               	decfsz	??_MPU6050_Init+1,f
  2652  04EE  2CEB               	goto	u847
  2653  04EF  0BF4               	decfsz	??_MPU6050_Init+2,f
  2654  04F0  2CEB               	goto	u847
  2655  04F1                     l1359:
  2656                           
  2657                           ;MPU.c: 23:   I2C_Master_Init();
  2658  04F1  120A  118A  2347  120A  118A  	fcall	_I2C_Master_Init
  2659  04F6                     l1361:
  2660                           
  2661                           ;MPU.c: 26:   I2C_Start(0xD0);
  2662  04F6  30D0               	movlw	208
  2663  04F7  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2664  04FC                     l1363:
  2665                           
  2666                           ;MPU.c: 27:   I2C_Master_Write(0x19);
  2667  04FC  3019               	movlw	25
  2668  04FD  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2669  0502                     l1365:
  2670                           
  2671                           ;MPU.c: 28:   I2C_Master_Write(0x07);
  2672  0502  3007               	movlw	7
  2673  0503  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2674  0508                     l1367:
  2675                           
  2676                           ;MPU.c: 29:   I2C_Master_Stop();
  2677  0508  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2678  050D                     l1369:
  2679                           
  2680                           ;MPU.c: 32:   I2C_Start(0xD0);
  2681  050D  30D0               	movlw	208
  2682  050E  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2683  0513                     l1371:
  2684                           
  2685                           ;MPU.c: 33:   I2C_Master_Write(0x6B);
  2686  0513  306B               	movlw	107
  2687  0514  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2688  0519                     l1373:
  2689                           
  2690                           ;MPU.c: 34:   I2C_Master_Write(0x01);
  2691  0519  3001               	movlw	1
  2692  051A  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2693  051F                     l1375:
  2694                           
  2695                           ;MPU.c: 35:   I2C_Master_Stop();
  2696  051F  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2697  0524                     l1377:
  2698                           
  2699                           ;MPU.c: 38:   I2C_Start(0xD0);
  2700  0524  30D0               	movlw	208
  2701  0525  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2702  052A                     l1379:
  2703                           
  2704                           ;MPU.c: 39:   I2C_Master_Write(0x1A);
  2705  052A  301A               	movlw	26
  2706  052B  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2707  0530                     l1381:
  2708                           
  2709                           ;MPU.c: 40:   I2C_Master_Write(0x00);
  2710  0530  3000               	movlw	0
  2711  0531  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2712  0536                     l1383:
  2713                           
  2714                           ;MPU.c: 41:   I2C_Master_Stop();
  2715  0536  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2716  053B                     l1385:
  2717                           
  2718                           ;MPU.c: 44:   I2C_Start(0xD0);
  2719  053B  30D0               	movlw	208
  2720  053C  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2721  0541                     l1387:
  2722                           
  2723                           ;MPU.c: 45:   I2C_Master_Write(0x1C);
  2724  0541  301C               	movlw	28
  2725  0542  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2726  0547                     l1389:
  2727                           
  2728                           ;MPU.c: 46:   I2C_Master_Write(0x00);
  2729  0547  3000               	movlw	0
  2730  0548  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2731  054D                     l1391:
  2732                           
  2733                           ;MPU.c: 47:   I2C_Master_Stop();
  2734  054D  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2735  0552                     l1393:
  2736                           
  2737                           ;MPU.c: 50:   I2C_Start(0xD0);
  2738  0552  30D0               	movlw	208
  2739  0553  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2740  0558                     l1395:
  2741                           
  2742                           ;MPU.c: 51:   I2C_Master_Write(0x1B);
  2743  0558  301B               	movlw	27
  2744  0559  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2745  055E                     l1397:
  2746                           
  2747                           ;MPU.c: 52:   I2C_Master_Write(0x18);
  2748  055E  3018               	movlw	24
  2749  055F  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2750  0564                     l1399:
  2751                           
  2752                           ;MPU.c: 53:   I2C_Master_Stop();
  2753  0564  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2754  0569                     l1401:
  2755                           
  2756                           ;MPU.c: 56:   I2C_Start(0xD0);
  2757  0569  30D0               	movlw	208
  2758  056A  120A  118A  2380  120A  118A  	fcall	_I2C_Start
  2759  056F                     l1403:
  2760                           
  2761                           ;MPU.c: 57:   I2C_Master_Write(0x38);
  2762  056F  3038               	movlw	56
  2763  0570  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2764  0575                     l1405:
  2765                           
  2766                           ;MPU.c: 58:   I2C_Master_Write(0x01);
  2767  0575  3001               	movlw	1
  2768  0576  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2769  057B                     l1407:
  2770                           
  2771                           ;MPU.c: 59:   I2C_Master_Stop();
  2772  057B  120A  118A  2320  120A  118A  	fcall	_I2C_Master_Stop
  2773  0580                     l78:
  2774  0580  0008               	return
  2775  0581                     __end_of_MPU6050_Init:
  2776                           
  2777                           	psect	text13
  2778  0380                     __ptext13:	
  2779 ;; *************** function _I2C_Start *****************
  2780 ;; Defined at:
  2781 ;;		line 36 in file "I2c.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  add             1    wreg     unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  add             1    1[COMMON] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         1       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0
  2798 ;;      Totals:         1       0       0       0       0
  2799 ;;Total ram usage:        1 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    2
  2802 ;; This function calls:
  2803 ;;		_I2C_Master_Wait
  2804 ;;		_I2C_Master_Write
  2805 ;; This function is called by:
  2806 ;;		_MPU6050_Init
  2807 ;;		_MPU6050_Read
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _I2C_Start
  2813  0380                     _I2C_Start:
  2814                           
  2815                           ;incstack = 0
  2816                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2817                           ;I2C_Start@add stored from wreg
  2818  0380  00F1               	movwf	I2C_Start@add
  2819  0381                     l1229:
  2820                           
  2821                           ;I2c.c: 36: void I2C_Start(char add);I2c.c: 37: {;I2c.c: 38:     I2C_Master_Wait();
  2822  0381  120A  118A  2354  120A  118A  	fcall	_I2C_Master_Wait
  2823  0386                     l1231:
  2824                           
  2825                           ;I2c.c: 39:     SEN = 1;
  2826  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2827  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2828  0388  1411               	bsf	17,0	;volatile
  2829                           
  2830                           ;I2c.c: 40:     I2C_Master_Write(add);
  2831  0389  0871               	movf	I2C_Start@add,w
  2832  038A  120A  118A  2370  120A  118A  	fcall	_I2C_Master_Write
  2833  038F                     l130:
  2834  038F  0008               	return
  2835  0390                     __end_of_I2C_Start:
  2836                           
  2837                           	psect	text14
  2838  0370                     __ptext14:	
  2839 ;; *************** function _I2C_Master_Write *****************
  2840 ;; Defined at:
  2841 ;;		line 69 in file "I2c.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  data            1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  data            1    0[COMMON] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      unsigned char 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         1       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         1       0       0       0       0
  2859 ;;Total ram usage:        1 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    1
  2862 ;; This function calls:
  2863 ;;		_I2C_Master_Wait
  2864 ;; This function is called by:
  2865 ;;		_MPU6050_Init
  2866 ;;		_MPU6050_Read
  2867 ;;		_I2C_Start
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _I2C_Master_Write
  2873  0370                     _I2C_Master_Write:
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2877                           ;I2C_Master_Write@data stored from wreg
  2878  0370  00F0               	movwf	I2C_Master_Write@data
  2879  0371                     l1165:
  2880                           
  2881                           ;I2c.c: 69: unsigned char I2C_Master_Write(unsigned char data);I2c.c: 70: {;I2c.c: 71:  
      +                             I2C_Master_Wait();
  2882  0371  120A  118A  2354  120A  118A  	fcall	_I2C_Master_Wait
  2883  0376                     l1167:
  2884                           
  2885                           ;I2c.c: 72:     SSPBUF = data;
  2886  0376  0870               	movf	I2C_Master_Write@data,w
  2887  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0379  0093               	movwf	19	;volatile
  2890  037A                     l151:	
  2891                           ;I2c.c: 73:     while(!SSPIF);
  2892                           
  2893  037A  1D8C               	btfss	12,3	;volatile
  2894  037B  2B7D               	goto	u451
  2895  037C  2B7E               	goto	u450
  2896  037D                     u451:
  2897  037D  2B7A               	goto	l151
  2898  037E                     u450:
  2899  037E                     l153:
  2900                           
  2901                           ;I2c.c: 74:  SSPIF = 0;
  2902  037E  118C               	bcf	12,3	;volatile
  2903  037F                     l154:	
  2904                           ;I2c.c: 75:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2905                           
  2906  037F  0008               	return
  2907  0380                     __end_of_I2C_Master_Write:
  2908                           
  2909                           	psect	text15
  2910  0320                     __ptext15:	
  2911 ;; *************** function _I2C_Master_Stop *****************
  2912 ;; Defined at:
  2913 ;;		line 49 in file "I2c.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    1
  2934 ;; This function calls:
  2935 ;;		_I2C_Master_Wait
  2936 ;; This function is called by:
  2937 ;;		_MPU6050_Init
  2938 ;;		_MPU6050_Read
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _I2C_Master_Stop
  2944  0320                     _I2C_Master_Stop:
  2945  0320                     l1233:	
  2946                           ;incstack = 0
  2947                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2948                           
  2949                           
  2950                           ;I2c.c: 51:     I2C_Master_Wait();
  2951  0320  120A  118A  2354  120A  118A  	fcall	_I2C_Master_Wait
  2952  0325                     l1235:
  2953                           
  2954                           ;I2c.c: 52:     PEN = 1;
  2955  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2957  0327  1511               	bsf	17,2	;volatile
  2958  0328                     l136:
  2959  0328  0008               	return
  2960  0329                     __end_of_I2C_Master_Stop:
  2961                           
  2962                           	psect	text16
  2963  0354                     __ptext16:	
  2964 ;; *************** function _I2C_Master_Wait *****************
  2965 ;; Defined at:
  2966 ;;		line 25 in file "I2c.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0
  2983 ;;      Totals:         0       0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_I2C_Start
  2990 ;;		_I2C_Master_Stop
  2991 ;;		_I2C_Master_Write
  2992 ;;		_I2C_Master_Start
  2993 ;;		_I2C_Master_RepeatedStart
  2994 ;;		_I2C_Read_Byte
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _I2C_Master_Wait
  3000  0354                     _I2C_Master_Wait:
  3001  0354                     l1157:	
  3002                           ;incstack = 0
  3003                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3004                           
  3005  0354                     l121:	
  3006                           ;I2c.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3007                           
  3008  0354  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0355  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0356  1914               	btfsc	20,2	;volatile
  3011  0357  2B59               	goto	u421
  3012  0358  2B5A               	goto	u420
  3013  0359                     u421:
  3014  0359  2B54               	goto	l121
  3015  035A                     u420:
  3016  035A                     l1159:
  3017  035A  0811               	movf	17,w	;volatile
  3018  035B  391F               	andlw	31
  3019  035C  1D03               	btfss	3,2
  3020  035D  2B5F               	goto	u431
  3021  035E  2B60               	goto	u430
  3022  035F                     u431:
  3023  035F  2B54               	goto	l121
  3024  0360                     u430:
  3025  0360                     l124:
  3026  0360  0008               	return
  3027  0361                     __end_of_I2C_Master_Wait:
  3028                           
  3029                           	psect	text17
  3030  0347                     __ptext17:	
  3031 ;; *************** function _I2C_Master_Init *****************
  3032 ;; Defined at:
  3033 ;;		line 15 in file "I2c.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_MPU6050_Init
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _I2C_Master_Init
  3062  0347                     _I2C_Master_Init:
  3063  0347                     l863:	
  3064                           ;incstack = 0
  3065                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3066                           
  3067                           
  3068                           ;I2c.c: 17:   SSPCON = 0x28;
  3069  0347  3028               	movlw	40
  3070  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3072  034A  0094               	movwf	20	;volatile
  3073  034B                     l865:
  3074                           
  3075                           ;I2c.c: 18:   SSPCON2 = 0x00;
  3076  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3077  034C  1303               	bcf	3,6	;RP1=0, select bank1
  3078  034D  0191               	clrf	17	;volatile
  3079  034E                     l867:
  3080                           
  3081                           ;I2c.c: 19:   SSPSTAT = 0x00;
  3082  034E  0194               	clrf	20	;volatile
  3083                           
  3084                           ;I2c.c: 20:   SSPADD = ((16000000/4)/100000) - 1;
  3085  034F  3027               	movlw	39
  3086  0350  0093               	movwf	19	;volatile
  3087  0351                     l869:
  3088                           
  3089                           ;I2c.c: 21:   TRISC3 = 1;
  3090  0351  1587               	bsf	7,3	;volatile
  3091  0352                     l871:
  3092                           
  3093                           ;I2c.c: 22:   TRISC4 = 1;
  3094  0352  1607               	bsf	7,4	;volatile
  3095  0353                     l118:
  3096  0353  0008               	return
  3097  0354                     __end_of_I2C_Master_Init:
  3098  007E                     btemp	set	126	;btemp
  3099  007E                     wtemp0	set	126
  3100                           
  3101                           	psect	config
  3102                           
  3103                           ;Config register CONFIG1 @ 0x2007
  3104                           ;	Oscillator Selection bits
  3105                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3106                           ;	Watchdog Timer Enable bit
  3107                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3108                           ;	Power-up Timer Enable bit
  3109                           ;	PWRTE = OFF, PWRT disabled
  3110                           ;	RE3/MCLR pin function select bit
  3111                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3112                           ;	Code Protection bit
  3113                           ;	CP = OFF, Program memory code protection is disabled
  3114                           ;	Data Code Protection bit
  3115                           ;	CPD = OFF, Data memory code protection is disabled
  3116                           ;	Brown Out Reset Selection bits
  3117                           ;	BOREN = OFF, BOR disabled
  3118                           ;	Internal External Switchover bit
  3119                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3120                           ;	Fail-Safe Clock Monitor Enabled bit
  3121                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3122                           ;	Low Voltage Programming Enable bit
  3123                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3124                           ;	In-Circuit Debugger Mode bit
  3125                           ;	DEBUG = 0x1, unprogrammed default
  3126  2007                     	org	8199
  3127  2007  2CD2               	dw	11474
  3128                           
  3129                           ;Config register CONFIG2 @ 0x2008
  3130                           ;	Brown-out Reset Selection bit
  3131                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3132                           ;	Flash Program Memory Self Write Enable bits
  3133                           ;	WRT = OFF, Write protection off
  3134  2008                     	org	8200
  3135  2008  3EFF               	dw	16127

Data Sizes:
    Strings     85
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[11]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@buf	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
    _MPU6050_Read->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3338
                                             71 BANK0      2     2      0
                       _MPU6050_Init
                       _MPU6050_Read
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        58    58      0    3272
                                             13 BANK0     58    58      0
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _UART_Write_String
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     4      0     343
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _MPU6050_Read
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _UART_Write_String
       _UART_Write
     ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _UART_TX_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 01:15:20 2021

                         pc 0002          __size_of_I2C_Start 0010                          _BF 04A0  
                        l51 0346                          l45 036F                          l48 033C  
                        l57 03B0                          l81 07FB                          l78 0580  
              ___awdiv@sign 0076                          fsr 0004  __size_of_UART_Write_String 0021  
                       l121 0354                         l130 038F                         l124 0360  
                       l118 0353                         l142 0331                         l151 037A  
                       l136 0328                         l153 037E                         l145 0336  
                       l154 037F                         l170 03D5                         l139 032D  
                       l171 03D7                         l163 03B5                         l148 033A  
                       l168 03CF                         l281 0668                         l438 04E4  
                       l557 047D                         l567 0439                         l871 0352  
                       l863 0347                         l865 034B                         l867 034E  
                       l869 0351                         _RD2 0042                         u420 035A  
                       u500 0454                         u421 0359                         u501 0453  
                       u430 0360                         u431 035F                         u440 0342  
                       u520 0465                         u600 0435                         _PEN 048A  
                       u441 0341                         u521 0464                         u601 0434  
                       u450 037E                         u610 03B0                         u451 037D  
                       u611 03AF                         u515 0455                         u460 0331  
                       u620 03B9                         u540 0479                         u700 0652  
                       u461 0330                         u621 03B8                         u541 0478  
                       u525 0461                         u701 0651                         u470 033A  
                       u630 03C4                         u550 0406                         u710 0664  
                       u471 0339                         u631 03C3                         u535 046D  
                       u551 0405                         u711 0663                         u640 03D5  
                       u800 04D6                         u720 0483                         u480 0442  
                       u641 03D4                         u801 04D5                         u721 0482  
                       u481 0441                         u810 04DB                         u730 048E  
                       u570 0418                         u650 058F                         u811 04DA  
                       u731 048D                         u571 0417                         u651 058E  
                       u740 049F                         u580 0422                         u660 05C9  
                       _SEN 0488                         u741 049E                         u581 0421  
                       u565 040A                         u661 05C8                         u670 05EF  
                       u495 0446                         u671 05EE                         u760 04B1  
                       u680 05FA                         u761 04B0                         u585 041E  
                       u681 05F9                         u690 0600                         u755 04A3  
                       u595 0429                         u691 05FF                         u675 05EB  
                       u780 04C2                         u781 04C1                         u837 03F8  
                       u847 04EB                         u775 04B2                         u785 04BE  
                       u795 04CA             __end_of_I2C_ACK 0332                         fsr0 0004  
                       indf 0000          MPU6050_Read@buffer 0031                        l1001 0361  
                      l1011 036D                        l1003 0364                        l1013 036E  
                      l1005 0366                        l1007 0367                        l1201 0406  
                      l1009 036A                        l1211 0422                        l1203 0409  
                      l1221 0391                        l1213 0428                        l1205 0410  
                      l1301 0649                        l1231 0386                        l1223 0394  
                      l1215 042F                        l1207 0414                        l1303 0652  
                      l1233 0320                        l1401 0569                        l1241 03BF  
                      l1161 033C                        l1225 039F                        l1321 048A  
                      l1313 047E                        l1209 0418                        l1217 0435  
                      l1305 0664                        l1235 0325                        l1403 056F  
                      l1171 0332                        l1243 03C4                        l1163 0342  
                      l1227 03A5                        l1331 049F                        l1323 048E  
                      l1315 047F                        l1251 0584                        l1411 0680  
                      l1157 0354                        l1165 0371                        l1229 0381  
                      l1405 0575                        l1245 03CA                        l1237 03B2  
                      l1341 04C2                        l1333 04A2                        l1325 0493  
                      l1317 0483                        l1181 044C                        l1173 043A  
                      l1253 0589                        l1421 0711                        l1413 069D  
                      l1159 035A                        l1167 0376                        l1407 057B  
                      l1247 03D6                        l1239 03B9                        l1351 04DB  
                      l1343 04C8                        l1335 04A9                        l1327 0497  
                      l1319 0488                        l1191 046C                        l1183 0450  
                      l1175 043C                        l1271 05C9                        l1263 059C  
                      l1255 058F                        l1431 0777                        l1423 072E  
                      l1415 06BA                        l1361 04F6                        l1169 0329  
                      l1353 04E0                        l1345 04C9                        l1337 04AD  
                      l1329 0499                        l1193 0473                        l1185 0454  
                      l1177 0442                        l1281 05D4                        l1273 05CD  
                      l1265 05B9                        l1257 0596                        l1441 07C9  
                      l1433 0787                        l1425 074B                        l1417 06D7  
                      l1409 0669                        l1371 0513                        l1363 04FC  
                      l1347 04D0                        l1339 04B1                        l1187 0465  
                      l1179 0445                        l1195 0479                        l1291 0607  
                      l1275 05D2                        l1267 05C1                        l1259 059B  
                      l1443 07DF                        l1435 079D                        l1427 0750  
                      l1419 06F4                        l1451 03E0                        l1381 0530  
                      l1373 0519                        l1365 0502                        l1357 04E5  
                      l1349 04D6                        l1189 046B                        l1293 060B  
                      l1285 05F0                        l1269 05C5                        l1445 07E5  
                      l1437 07A3                        l1429 0763                        l1453 03E1  
                      l1391 054D                        l1383 0536                        l1375 051F  
                      l1367 0508                        l1359 04F1                        l1199 0400  
                      l1295 0610                        l1287 05FA                        l1439 07B9  
                      l1455 03E9                        l1447 03D8                        l1393 0552  
                      l1385 053B                        l1377 0524                        l1369 050D  
                      l1297 063E                        l1289 0600                        l1457 03ED  
                      l1449 03DD                        l1395 0558                        l1387 0541  
                      l1379 052A                        l1299 0645                        l1459 03F2  
                      l1397 055E                        l1389 0547                        l1399 0564  
                      l1499 05AE                        STR_1 0047                        STR_2 0020  
                      STR_3 003A                        STR_4 005E                        STR_5 0013  
                      STR_6 002D                        STR_7 0053                        _BRGH 04C2  
                      _RCEN 048B                        _SPEN 00C7                        _RSEN 0489  
                      _TRMT 04C1                        _TXEN 04C5                        _SYNC 04C4  
          __end_of_I2C_NACK 033B                        _main 03D8            __end_of_I2C_Read 03D8  
                      btemp 007E                        start 0000            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 04E5  
           ___awdiv@divisor 0070             __end_of___lwdiv 047E             __end_of___lwmod 043A  
           ___awdiv@counter 0075                       _SPBRG 0099                       _PORTB 0006  
                     _TRISB 0086                       _SSPIF 0063                       _TXREG 0019  
               ?_UART_Write 0070               ?_MPU6050_Init 0070               ?_MPU6050_Read 0070  
           __end_of_dpowers 0013           __end_of_I2C_Start 0390                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0669  
            MPU6050_Read@Ax 0059              MPU6050_Read@Ay 0065              MPU6050_Read@Az 005B  
            MPU6050_Read@Gx 005F              MPU6050_Read@Gy 0061              MPU6050_Read@Gz 0063  
           __initialization 07FC                __end_of_main 0400                   ??_I2C_ACK 0070  
                    ??_main 0067           ?_I2C_Master_Write 0070              ??_MPU6050_Init 0072  
            ??_MPU6050_Read 002D          ??_I2C_Master_Write 0070            ___awdiv@dividend 0072  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISD2 0442                      _TRISC4 043C                      _TRISC6 043E  
                    _TRISC7 043F                      _SSPCON 0014                      _SSPBUF 0013  
          I2C_Read@ACK_NACK 0071         __size_of_UART_Write 000C                   ??___awdiv 0074  
                 ??___lwdiv 0074                   ??___lwmod 007C            ___awdiv@quotient 0077  
                 ?_I2C_NACK 0070                   ?_I2C_Read 0070                   ??_sprintf 0023  
   __end_of__initialization 07FC              __pcstackCOMMON 0070                  ??_I2C_NACK 0070  
                ??_I2C_Read 0070                I2C_Read@Data 0072                  __pmaintext 03D8  
      __end_of_MPU6050_Init 0581        __end_of_MPU6050_Read 07FC                     _I2C_ACK 0329  
                   _ACKSTAT 048E                ??_UART_Write 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094               ?_UART_TX_Init 0070                  __stringtab 0003  
              I2C_Start@add 0071                   _I2C_Start 0380                     ___awdiv 047E  
        __end_of_UART_Write 0347                     ___lwdiv 043A                     ___lwmod 0400  
                   __ptext1 0361                     __ptext2 0669                     __ptext3 0581  
                   __ptext4 0400                     __ptext5 043A                     __ptext6 047E  
                   __ptext7 0390                     __ptext8 033B                     __ptext9 03B1  
                   _dpowers 0009    __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009              ??_UART_TX_Init 0070                     _sprintf 0581  
      end_of_initialization 07FC                  ?_I2C_Start 0070   __size_of_I2C_Master_Write 0010  
            UART_Write@data 0070           __size_of_I2C_NACK 0009           __size_of_I2C_Read 0027  
     __size_of_MPU6050_Init 009C       __size_of_MPU6050_Read 0193         start_initialization 07FC  
             MPU6050_Read@T 005D                _MPU6050_Init 04E5                _MPU6050_Read 0669  
         ??_I2C_Master_Init 0070           ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070  
               ??_I2C_Start 0071        __end_of_UART_TX_Init 0370                    ?_I2C_ACK 0070  
                 ___latbits 0002               __pcstackBANK0 0020                 sprintf@flag 0027  
               sprintf@prec 0028            _I2C_Master_Write 0370            ___lwdiv@dividend 0072  
                  ?___awdiv 0070                    ?___lwdiv 0070                    ?___lwmod 0078  
      I2C_Master_Write@data 0070                   __pstrings 0003                    _I2C_NACK 0332  
                  _I2C_Read 03B1            ___lwdiv@quotient 0075                    ?_sprintf 0020  
          __size_of_I2C_ACK 0009        UART_Write_String@buf 0074                 __stringbase 0008  
     __size_of_UART_TX_Init 000F            __size_of___awdiv 0067            __size_of___lwdiv 0044  
          __size_of___lwmod 003A          __end_of__stringtab 0009           _UART_Write_String 0390  
                sprintf@val 0029             _I2C_Master_Init 0347             _I2C_Master_Wait 0354  
           _I2C_Master_Stop 0320          ?_UART_Write_String 0070             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077                    __ptext10 0332                    __ptext11 0329  
                  __ptext12 04E5                    __ptext13 0380                    __ptext14 0370  
                  __ptext15 0320                    __ptext16 0354                    __ptext17 0347  
          __size_of_sprintf 00E8                _UART_TX_Init 0361         ??_UART_Write_String 0071  
             __size_of_main 0028   __end_of_UART_Write_String 03B1    __end_of_I2C_Master_Write 0380  
                 sprintf@ap 0026                   sprintf@sp 002B            ___lwmod@dividend 007A  
                 stringcode 0003          UART_Write_String@i 0072     __end_of_I2C_Master_Init 0354  
   __end_of_I2C_Master_Wait 0361     __end_of_I2C_Master_Stop 0329                    sprintf@c 002C  
                  sprintf@f 0020             ___lwmod@divisor 0078             ___lwmod@counter 007D  
                  stringdir 0003                    stringtab 0003                  _UART_Write 033B  
