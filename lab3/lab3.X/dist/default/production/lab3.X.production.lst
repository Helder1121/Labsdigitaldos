

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 15:56:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	strings
   481  0800                     __pstrings:
   482  0800                     stringtab:
   483  0800                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0800  1BFF               	btfsc	btemp+1,7
   487  0801  280A               	ljmp	stringcode
   488  0802  1383               	bcf	3,7
   489  0803  187F               	btfsc	btemp+1,0
   490  0804  1783               	bsf	3,7
   491  0805  0800               	movf	0,w
   492  0806  0A84               	incf	4,f
   493  0807  1903               	skipnz
   494  0808  0AFF               	incf	btemp+1,f
   495  0809  0008               	return
   496  080A                     stringcode:
   497  080A                     stringdir:
   498  080A  3008               	movlw	high stringdir
   499  080B  008A               	movwf	10
   500  080C  0804               	movf	4,w
   501  080D  0A84               	incf	4,f
   502  080E  0782               	addwf	2,f
   503  080F                     __stringbase:
   504  080F  3400               	retlw	0
   505  0810                     __end_of__stringtab:
   506  0810                     __powers_:
   507  0810  3400               	retlw	0
   508  0811  3400               	retlw	0
   509  0812  3480               	retlw	128
   510  0813  343F               	retlw	63
   511  0814  3400               	retlw	0
   512  0815  3400               	retlw	0
   513  0816  3420               	retlw	32
   514  0817  3441               	retlw	65
   515  0818  3400               	retlw	0
   516  0819  3400               	retlw	0
   517  081A  34C8               	retlw	200
   518  081B  3442               	retlw	66
   519  081C  3400               	retlw	0
   520  081D  3400               	retlw	0
   521  081E  347A               	retlw	122
   522  081F  3444               	retlw	68
   523  0820  3400               	retlw	0
   524  0821  3440               	retlw	64
   525  0822  341C               	retlw	28
   526  0823  3446               	retlw	70
   527  0824  3400               	retlw	0
   528  0825  3450               	retlw	80
   529  0826  34C3               	retlw	195
   530  0827  3447               	retlw	71
   531  0828  3400               	retlw	0
   532  0829  3424               	retlw	36
   533  082A  3474               	retlw	116
   534  082B  3449               	retlw	73
   535  082C  3480               	retlw	128
   536  082D  3496               	retlw	150
   537  082E  3418               	retlw	24
   538  082F  344B               	retlw	75
   539  0830  3420               	retlw	32
   540  0831  34BC               	retlw	188
   541  0832  34BE               	retlw	190
   542  0833  344C               	retlw	76
   543  0834  3428               	retlw	40
   544  0835  346B               	retlw	107
   545  0836  346E               	retlw	110
   546  0837  344E               	retlw	78
   547  0838  34F9               	retlw	249
   548  0839  3402               	retlw	2
   549  083A  3415               	retlw	21
   550  083B  3450               	retlw	80
   551  083C  34EC               	retlw	236
   552  083D  3478               	retlw	120
   553  083E  34AD               	retlw	173
   554  083F  3460               	retlw	96
   555  0840  34CA               	retlw	202
   556  0841  34F2               	retlw	242
   557  0842  3449               	retlw	73
   558  0843  3471               	retlw	113
   559  0844                     __end_of__powers_:
   560  0844                     __npowers_:
   561  0844  3400               	retlw	0
   562  0845  3400               	retlw	0
   563  0846  3480               	retlw	128
   564  0847  343F               	retlw	63
   565  0848  34CD               	retlw	205
   566  0849  34CC               	retlw	204
   567  084A  34CC               	retlw	204
   568  084B  343D               	retlw	61
   569  084C  340A               	retlw	10
   570  084D  34D7               	retlw	215
   571  084E  3423               	retlw	35
   572  084F  343C               	retlw	60
   573  0850  346F               	retlw	111
   574  0851  3412               	retlw	18
   575  0852  3483               	retlw	131
   576  0853  343A               	retlw	58
   577  0854  3417               	retlw	23
   578  0855  34B7               	retlw	183
   579  0856  34D1               	retlw	209
   580  0857  3438               	retlw	56
   581  0858  34AC               	retlw	172
   582  0859  34C5               	retlw	197
   583  085A  3427               	retlw	39
   584  085B  3437               	retlw	55
   585  085C  34BD               	retlw	189
   586  085D  3437               	retlw	55
   587  085E  3486               	retlw	134
   588  085F  3435               	retlw	53
   589  0860  3495               	retlw	149
   590  0861  34BF               	retlw	191
   591  0862  34D6               	retlw	214
   592  0863  3433               	retlw	51
   593  0864  3477               	retlw	119
   594  0865  34CC               	retlw	204
   595  0866  342B               	retlw	43
   596  0867  3432               	retlw	50
   597  0868  345F               	retlw	95
   598  0869  3470               	retlw	112
   599  086A  3489               	retlw	137
   600  086B  3430               	retlw	48
   601  086C  34FF               	retlw	255
   602  086D  34E6               	retlw	230
   603  086E  34DB               	retlw	219
   604  086F  342E               	retlw	46
   605  0870  3408               	retlw	8
   606  0871  34E5               	retlw	229
   607  0872  343C               	retlw	60
   608  0873  341E               	retlw	30
   609  0874  3460               	retlw	96
   610  0875  3442               	retlw	66
   611  0876  34A2               	retlw	162
   612  0877  340D               	retlw	13
   613  0878                     __end_of__npowers_:
   614  0878                     _dpowers:
   615  0878  3401               	retlw	1
   616  0879  3400               	retlw	0
   617  087A  3400               	retlw	0
   618  087B  3400               	retlw	0
   619  087C  340A               	retlw	10
   620  087D  3400               	retlw	0
   621  087E  3400               	retlw	0
   622  087F  3400               	retlw	0
   623  0880  3464               	retlw	100
   624  0881  3400               	retlw	0
   625  0882  3400               	retlw	0
   626  0883  3400               	retlw	0
   627  0884  34E8               	retlw	232
   628  0885  3403               	retlw	3
   629  0886  3400               	retlw	0
   630  0887  3400               	retlw	0
   631  0888  3410               	retlw	16
   632  0889  3427               	retlw	39
   633  088A  3400               	retlw	0
   634  088B  3400               	retlw	0
   635  088C  34A0               	retlw	160
   636  088D  3486               	retlw	134
   637  088E  3401               	retlw	1
   638  088F  3400               	retlw	0
   639  0890  3440               	retlw	64
   640  0891  3442               	retlw	66
   641  0892  340F               	retlw	15
   642  0893  3400               	retlw	0
   643  0894  3480               	retlw	128
   644  0895  3496               	retlw	150
   645  0896  3498               	retlw	152
   646  0897  3400               	retlw	0
   647  0898  3400               	retlw	0
   648  0899  34E1               	retlw	225
   649  089A  34F5               	retlw	245
   650  089B  3405               	retlw	5
   651  089C  3400               	retlw	0
   652  089D  34CA               	retlw	202
   653  089E  349A               	retlw	154
   654  089F  343B               	retlw	59
   655  08A0                     __end_of_dpowers:
   656  001A                     _RCREG	set	26
   657  0018                     _RCSTAbits	set	24
   658  0019                     _TXREG	set	25
   659  001E                     _ADRESH	set	30
   660  001F                     _ADCON0bits	set	31
   661  0007                     _PORTC	set	7
   662  0009                     _PORTE	set	9
   663  0008                     _PORTD	set	8
   664  0065                     _RCIF	set	101
   665  0049                     _RE1	set	73
   666  0048                     _RE0	set	72
   667  0047                     _RD7	set	71
   668  0046                     _RD6	set	70
   669  0045                     _RD5	set	69
   670  0044                     _RD4	set	68
   671  0043                     _RD3	set	67
   672  0042                     _RD2	set	66
   673  0041                     _RD1	set	65
   674  0040                     _RD0	set	64
   675  0099                     _SPBRG	set	153
   676  009F                     _ADCON1	set	159
   677  0098                     _TXSTAbits	set	152
   678  0085                     _TRISA	set	133
   679  0089                     _TRISE	set	137
   680  0088                     _TRISD	set	136
   681  04C1                     _TRMT	set	1217
   682  0189                     _ANSELH	set	393
   683  0188                     _ANSEL	set	392
   684  08A0                     STR_4:
   685  08A0  3453               	retlw	83	;'S'
   686  08A1  3431               	retlw	49	;'1'
   687  08A2  3420               	retlw	32	;' '
   688  08A3  3420               	retlw	32	;' '
   689  08A4  3420               	retlw	32	;' '
   690  08A5  3420               	retlw	32	;' '
   691  08A6  3420               	retlw	32	;' '
   692  08A7  3420               	retlw	32	;' '
   693  08A8  3420               	retlw	32	;' '
   694  08A9  3420               	retlw	32	;' '
   695  08AA  3453               	retlw	83	;'S'
   696  08AB  3432               	retlw	50	;'2'
   697  08AC  3420               	retlw	32	;' '
   698  08AD  3420               	retlw	32	;' '
   699  08AE  3420               	retlw	32	;' '
   700  08AF  3420               	retlw	32	;' '
   701  08B0  3420               	retlw	32	;' '
   702  08B1  3420               	retlw	32	;' '
   703  08B2  3420               	retlw	32	;' '
   704  08B3  3420               	retlw	32	;' '
   705  08B4  3443               	retlw	67	;'C'
   706  08B5  344F               	retlw	79	;'O'
   707  08B6  344E               	retlw	78	;'N'
   708  08B7  3454               	retlw	84	;'T'
   709  08B8  3400               	retlw	0
   710  08B9                     STR_1:
   711  08B9  3453               	retlw	83	;'S'
   712  08BA  3431               	retlw	49	;'1'
   713  08BB  3420               	retlw	32	;' '
   714  08BC  3420               	retlw	32	;' '
   715  08BD  3420               	retlw	32	;' '
   716  08BE  3453               	retlw	83	;'S'
   717  08BF  3432               	retlw	50	;'2'
   718  08C0  3420               	retlw	32	;' '
   719  08C1  3420               	retlw	32	;' '
   720  08C2  3420               	retlw	32	;' '
   721  08C3  3443               	retlw	67	;'C'
   722  08C4  344F               	retlw	79	;'O'
   723  08C5  344E               	retlw	78	;'N'
   724  08C6  3454               	retlw	84	;'T'
   725  08C7  3400               	retlw	0
   726  08C8                     STR_3:
   727  08C8  3425               	retlw	37	;'%'
   728  08C9  3431               	retlw	49	;'1'
   729  08CA  342E               	retlw	46	;'.'
   730  08CB  3432               	retlw	50	;'2'
   731  08CC  3466               	retlw	102	;'f'
   732  08CD  3420               	retlw	32	;' '
   733  08CE  3420               	retlw	32	;' '
   734  08CF  3420               	retlw	32	;' '
   735  08D0  3425               	retlw	37	;'%'
   736  08D1  3431               	retlw	49	;'1'
   737  08D2  342E               	retlw	46	;'.'
   738  08D3  3432               	retlw	50	;'2'
   739  08D4  3466               	retlw	102	;'f'
   740  08D5  3400               	retlw	0
   741  08B9                     
   742                           	psect	cinit
   743  07F3                     start_initialization:	
   744                           ; #config settings
   745                           
   746  07F3                     __initialization:
   747                           
   748                           ; Clear objects allocated to BANK1
   749  07F3  1383               	bcf	3,7	;select IRP bank0
   750  07F4  30CC               	movlw	low __pbssBANK1
   751  07F5  0084               	movwf	4
   752  07F6  30E4               	movlw	low (__pbssBANK1+24)
   753  07F7  160A  158A  2033  120A  118A  	fcall	clear_ram0
   754  07FC                     end_of_initialization:	
   755                           ;End of C runtime variable initialization code
   756                           
   757  07FC                     __end_of__initialization:
   758  07FC  0183               	clrf	3
   759  07FD  160A  118A  2815   	ljmp	_main	;jump to C main() function
   760                           
   761                           	psect	bssBANK1
   762  00CC                     __pbssBANK1:
   763  00CC                     _volt2:
   764  00CC                     	ds	4
   765  00D0                     _volt:
   766  00D0                     	ds	4
   767  00D4                     _data:
   768  00D4                     	ds	16
   769                           
   770                           	psect	clrtext
   771  1833                     clear_ram0:	
   772                           ;	Called with FSR containing the base address, and
   773                           ;	W with the last address+1
   774                           
   775  1833  0064               	clrwdt	;clear the watchdog before getting into this loop
   776  1834                     clrloop0:
   777  1834  0180               	clrf	0	;clear RAM location pointed to by FSR
   778  1835  0A84               	incf	4,f	;increment pointer
   779  1836  0604               	xorwf	4,w	;XOR with final address
   780  1837  1903               	btfsc	3,2	;have we reached the end yet?
   781  1838  3400               	retlw	0	;all done for this memory range, return
   782  1839  0604               	xorwf	4,w	;XOR again to restore value
   783  183A  2834               	goto	clrloop0	;do the next byte
   784                           
   785                           	psect	cstackBANK1
   786  00A0                     __pcstackBANK1:
   787  00A0                     ?_sprintf:
   788  00A0                     sprintf@f:	
   789                           ; 2 bytes @ 0x0
   790                           
   791                           
   792                           ; 1 bytes @ 0x0
   793  00A0                     	ds	9
   794  00A9                     ??_sprintf:
   795                           
   796                           ; 1 bytes @ 0x9
   797  00A9                     	ds	5
   798  00AE                     _sprintf$1067:
   799                           
   800                           ; 4 bytes @ 0xE
   801  00AE                     	ds	4
   802  00B2                     sprintf@ap:
   803                           
   804                           ; 1 bytes @ 0x12
   805  00B2                     	ds	1
   806  00B3                     sprintf@val:
   807                           
   808                           ; 4 bytes @ 0x13
   809  00B3                     	ds	4
   810  00B7                     sprintf@flag:
   811                           
   812                           ; 2 bytes @ 0x17
   813  00B7                     	ds	2
   814  00B9                     sprintf@width:
   815                           
   816                           ; 2 bytes @ 0x19
   817  00B9                     	ds	2
   818  00BB                     sprintf@tmpval:
   819                           
   820                           ; 4 bytes @ 0x1B
   821  00BB                     	ds	4
   822  00BF                     sprintf@eexp:
   823                           
   824                           ; 2 bytes @ 0x1F
   825  00BF                     	ds	2
   826  00C1                     sprintf@fval:
   827                           
   828                           ; 4 bytes @ 0x21
   829  00C1                     	ds	4
   830  00C5                     sprintf@sp:
   831                           
   832                           ; 1 bytes @ 0x25
   833  00C5                     	ds	1
   834  00C6                     sprintf@prec:
   835                           
   836                           ; 2 bytes @ 0x26
   837  00C6                     	ds	2
   838  00C8                     sprintf@c:
   839                           
   840                           ; 1 bytes @ 0x28
   841  00C8                     	ds	1
   842  00C9                     ??_main:
   843                           
   844                           ; 1 bytes @ 0x29
   845  00C9                     	ds	3
   846                           
   847                           	psect	cstackCOMMON
   848  0070                     __pcstackCOMMON:
   849  0070                     ?_isdigit:
   850  0070                     ?___fleq:	
   851                           ; 1 bit 
   852                           
   853  0070                     ?___flge:	
   854                           ; 1 bit 
   855                           
   856  0070                     ?_config_P:	
   857                           ; 1 bit 
   858                           
   859  0070                     ??_config_P:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_config_ADC:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ??_config_ADC:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?__baudios:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??__baudios:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_config_txsta:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ??_config_txsta:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_config_rcsta:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ??_config_rcsta:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_Lcd_Init:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_LCD_Limpia:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_Write_USART:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ??_Write_USART:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ??_isdigit:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_main:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Puerto:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ??_Puerto:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_LCD_CMD:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_datosLCD:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_Canal_ADC:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?__Umul8_16:	
   920                           ; 2 bytes @ 0x0
   921                           
   922  0070                     ?___wmul:	
   923                           ; 2 bytes @ 0x0
   924                           
   925  0070                     ?___awmod:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  0070                     ?___lwmod:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0070                     ?_ADC_1:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  0070                     ?_ADC_2:	
   935                           ; 4 bytes @ 0x0
   936                           
   937  0070                     ?__tdiv_to_l_:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  0070                     ?__div_to_l_:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0070                     ?___lldiv:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0070                     ?___flneg:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0070                     ?___llmod:	
   950                           ; 4 bytes @ 0x0
   951                           
   952  0070                     ?___xxtofl:	
   953                           ; 4 bytes @ 0x0
   954                           
   955  0070                     Puerto@x:	
   956                           ; 4 bytes @ 0x0
   957                           
   958  0070                     Write_USART@a:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     __Umul8_16@multiplicand:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     _isdigit$883:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     Canal_ADC@x:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ___wmul@multiplier:	
   971                           ; 2 bytes @ 0x0
   972                           
   973  0070                     ___awmod@divisor:	
   974                           ; 2 bytes @ 0x0
   975                           
   976  0070                     ___lwmod@divisor:	
   977                           ; 2 bytes @ 0x0
   978                           
   979  0070                     ___lldiv@divisor:	
   980                           ; 2 bytes @ 0x0
   981                           
   982  0070                     __div_to_l_@f1:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0070                     ___fleq@ff1:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0070                     ___flge@ff1:	
   989                           ; 4 bytes @ 0x0
   990                           
   991  0070                     ___flneg@f1:	
   992                           ; 4 bytes @ 0x0
   993                           
   994  0070                     __tdiv_to_l_@f1:	
   995                           ; 4 bytes @ 0x0
   996                           
   997  0070                     ___llmod@divisor:	
   998                           ; 4 bytes @ 0x0
   999                           
  1000  0070                     ___xxtofl@val:	
  1001                           ; 4 bytes @ 0x0
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x0
  1005  0070                     	ds	1
  1006  0071                     ?_Write_USART_String:
  1007  0071                     ??_LCD_CMD:	
  1008                           ; 1 bytes @ 0x1
  1009                           
  1010  0071                     ??_datosLCD:	
  1011                           ; 1 bytes @ 0x1
  1012                           
  1013  0071                     isdigit@c:	
  1014                           ; 1 bytes @ 0x1
  1015                           
  1016  0071                     Write_USART_String@a:	
  1017                           ; 1 bytes @ 0x1
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x1
  1021  0071                     	ds	1
  1022  0072                     ??_Canal_ADC:
  1023  0072                     ??__Umul8_16:	
  1024                           ; 1 bytes @ 0x2
  1025                           
  1026  0072                     LCD_CMD@a:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029  0072                     ___wmul@multiplicand:	
  1030                           ; 1 bytes @ 0x2
  1031                           
  1032  0072                     ___awmod@dividend:	
  1033                           ; 2 bytes @ 0x2
  1034                           
  1035  0072                     ___lwmod@dividend:	
  1036                           ; 2 bytes @ 0x2
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x2
  1040  0072                     	ds	1
  1041  0073                     ?_Lcd_Write_String:
  1042  0073                     ??_Write_USART_String:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     datosLCD@x:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048  0073                     Lcd_Write_String@a:	
  1049                           ; 1 bytes @ 0x3
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x3
  1053  0073                     	ds	1
  1054  0074                     ??_Lcd_Init:
  1055  0074                     ??_LCD_Limpia:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     ?_Lcd_Set_Cursor:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     ??___wmul:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064  0074                     ??___awmod:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067  0074                     ??___flneg:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     ??___lwmod:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ??___xxtofl:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     Lcd_Set_Cursor@y:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     Write_USART_String@i:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     ___wmul@product:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085  0074                     __Umul8_16@product:	
  1086                           ; 2 bytes @ 0x4
  1087                           
  1088  0074                     ___lldiv@dividend:	
  1089                           ; 2 bytes @ 0x4
  1090                           
  1091  0074                     __div_to_l_@f2:	
  1092                           ; 4 bytes @ 0x4
  1093                           
  1094  0074                     ___fleq@ff2:	
  1095                           ; 4 bytes @ 0x4
  1096                           
  1097  0074                     ___flge@ff2:	
  1098                           ; 4 bytes @ 0x4
  1099                           
  1100  0074                     __tdiv_to_l_@f2:	
  1101                           ; 4 bytes @ 0x4
  1102                           
  1103  0074                     ___llmod@dividend:	
  1104                           ; 4 bytes @ 0x4
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x4
  1108  0074                     	ds	1
  1109  0075                     ??_Lcd_Set_Cursor:
  1110  0075                     ??_Lcd_Write_String:	
  1111                           ; 1 bytes @ 0x5
  1112                           
  1113  0075                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116  0075                     ___lwmod@counter:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x5
  1121  0075                     	ds	1
  1122  0076                     ?___lwdiv:
  1123  0076                     Lcd_Set_Cursor@x:	
  1124                           ; 2 bytes @ 0x6
  1125                           
  1126  0076                     ___awmod@sign:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129  0076                     ___lwdiv@divisor:	
  1130                           ; 1 bytes @ 0x6
  1131                           
  1132  0076                     __Umul8_16@word_mpld:	
  1133                           ; 2 bytes @ 0x6
  1134                           
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  0076                     	ds	1
  1138  0077                     ?___awdiv:
  1139  0077                     Lcd_Set_Cursor@a:	
  1140                           ; 2 bytes @ 0x7
  1141                           
  1142  0077                     ___awdiv@divisor:	
  1143                           ; 1 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x7
  1147  0077                     	ds	1
  1148  0078                     ??__tdiv_to_l_:
  1149  0078                     ??__div_to_l_:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0078                     ??___lldiv:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0078                     ??___fleq:	
  1156                           ; 1 bytes @ 0x8
  1157                           
  1158  0078                     ??___flge:	
  1159                           ; 1 bytes @ 0x8
  1160                           
  1161  0078                     ??___llmod:	
  1162                           ; 1 bytes @ 0x8
  1163                           
  1164  0078                     __Umul8_16@multiplier:	
  1165                           ; 1 bytes @ 0x8
  1166                           
  1167  0078                     ___xxtofl@sign:	
  1168                           ; 1 bytes @ 0x8
  1169                           
  1170  0078                     Lcd_Write_String@i:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173  0078                     ___lwdiv@dividend:	
  1174                           ; 2 bytes @ 0x8
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x8
  1178  0078                     	ds	1
  1179  0079                     ___llmod@counter:
  1180  0079                     ___xxtofl@exp:	
  1181                           ; 1 bytes @ 0x9
  1182                           
  1183  0079                     ___awdiv@dividend:	
  1184                           ; 1 bytes @ 0x9
  1185                           
  1186  0079                     ___lldiv@quotient:	
  1187                           ; 2 bytes @ 0x9
  1188                           
  1189                           
  1190                           ; 4 bytes @ 0x9
  1191  0079                     	ds	1
  1192  007A                     ??___lwdiv:
  1193  007A                     ___xxtofl@arg:	
  1194                           ; 1 bytes @ 0xA
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0xA
  1198  007A                     	ds	1
  1199  007B                     ??___awdiv:
  1200  007B                     ___lwdiv@quotient:	
  1201                           ; 1 bytes @ 0xB
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0xB
  1205  007B                     	ds	2
  1206  007D                     ___lldiv@counter:
  1207  007D                     ___lwdiv@counter:	
  1208                           ; 1 bytes @ 0xD
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0xD
  1212  007D                     	ds	1
  1213  007E                     ??___flsub:
  1214                           
  1215                           	psect	cstackBANK0
  1216  0020                     __pcstackBANK0:	
  1217                           ; 1 bytes @ 0xE
  1218                           
  1219  0020                     ___awdiv@counter:
  1220  0020                     __div_to_l_@quot:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0020                     __tdiv_to_l_@quot:	
  1224                           ; 4 bytes @ 0x0
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x0
  1228  0020                     	ds	1
  1229  0021                     ___awdiv@sign:
  1230                           
  1231                           ; 1 bytes @ 0x1
  1232  0021                     	ds	1
  1233  0022                     ___awdiv@quotient:
  1234                           
  1235                           ; 2 bytes @ 0x2
  1236  0022                     	ds	2
  1237  0024                     ?___flmul:
  1238  0024                     __div_to_l_@cntr:	
  1239                           ; 4 bytes @ 0x4
  1240                           
  1241  0024                     __tdiv_to_l_@cntr:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244  0024                     ___flmul@b:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247                           
  1248                           ; 4 bytes @ 0x4
  1249  0024                     	ds	1
  1250  0025                     __div_to_l_@exp1:
  1251  0025                     __tdiv_to_l_@exp1:	
  1252                           ; 1 bytes @ 0x5
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x5
  1256  0025                     	ds	3
  1257  0028                     ___flmul@a:
  1258                           
  1259                           ; 4 bytes @ 0x8
  1260  0028                     	ds	4
  1261  002C                     ??___flmul:
  1262                           
  1263                           ; 1 bytes @ 0xC
  1264  002C                     	ds	5
  1265  0031                     ___flmul@sign:
  1266                           
  1267                           ; 1 bytes @ 0x11
  1268  0031                     	ds	1
  1269  0032                     ___flmul@grs:
  1270                           
  1271                           ; 4 bytes @ 0x12
  1272  0032                     	ds	4
  1273  0036                     ___flmul@aexp:
  1274                           
  1275                           ; 1 bytes @ 0x16
  1276  0036                     	ds	1
  1277  0037                     ___flmul@bexp:
  1278                           
  1279                           ; 1 bytes @ 0x17
  1280  0037                     	ds	1
  1281  0038                     ___flmul@prod:
  1282                           
  1283                           ; 4 bytes @ 0x18
  1284  0038                     	ds	4
  1285  003C                     ___flmul@temp:
  1286                           
  1287                           ; 2 bytes @ 0x1C
  1288  003C                     	ds	2
  1289  003E                     ?_fround:
  1290  003E                     ?_scale:	
  1291                           ; 4 bytes @ 0x1E
  1292                           
  1293  003E                     ?___fldiv:	
  1294                           ; 4 bytes @ 0x1E
  1295                           
  1296  003E                     ___fldiv@a:	
  1297                           ; 4 bytes @ 0x1E
  1298                           
  1299                           
  1300                           ; 4 bytes @ 0x1E
  1301  003E                     	ds	4
  1302  0042                     ??_fround:
  1303  0042                     ??_scale:	
  1304                           ; 1 bytes @ 0x22
  1305                           
  1306  0042                     ___fldiv@b:	
  1307                           ; 1 bytes @ 0x22
  1308                           
  1309                           
  1310                           ; 4 bytes @ 0x22
  1311  0042                     	ds	4
  1312  0046                     ??___fldiv:
  1313                           
  1314                           ; 1 bytes @ 0x26
  1315  0046                     	ds	3
  1316  0049                     _fround$1065:
  1317                           
  1318                           ; 4 bytes @ 0x29
  1319  0049                     	ds	2
  1320  004B                     ___fldiv@rem:
  1321                           
  1322                           ; 4 bytes @ 0x2B
  1323  004B                     	ds	1
  1324  004C                     _scale$1066:
  1325                           
  1326                           ; 4 bytes @ 0x2C
  1327  004C                     	ds	1
  1328  004D                     _fround$1064:
  1329                           
  1330                           ; 4 bytes @ 0x2D
  1331  004D                     	ds	2
  1332  004F                     ___fldiv@sign:
  1333                           
  1334                           ; 1 bytes @ 0x2F
  1335  004F                     	ds	1
  1336  0050                     scale@scl:
  1337  0050                     ___fldiv@new_exp:	
  1338                           ; 1 bytes @ 0x30
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0x30
  1342  0050                     	ds	1
  1343  0051                     ?___fltol:
  1344  0051                     fround@prec:	
  1345                           ; 4 bytes @ 0x31
  1346                           
  1347  0051                     ___fltol@f1:	
  1348                           ; 1 bytes @ 0x31
  1349                           
  1350                           
  1351                           ; 4 bytes @ 0x31
  1352  0051                     	ds	1
  1353  0052                     ?___fladd:
  1354  0052                     ___fladd@b:	
  1355                           ; 4 bytes @ 0x32
  1356                           
  1357  0052                     ___fldiv@grs:	
  1358                           ; 4 bytes @ 0x32
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x32
  1362  0052                     	ds	3
  1363  0055                     ??___fltol:
  1364                           
  1365                           ; 1 bytes @ 0x35
  1366  0055                     	ds	1
  1367  0056                     ___fldiv@bexp:
  1368  0056                     ___fladd@a:	
  1369                           ; 1 bytes @ 0x36
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x36
  1373  0056                     	ds	1
  1374  0057                     ___fldiv@aexp:
  1375                           
  1376                           ; 1 bytes @ 0x37
  1377  0057                     	ds	1
  1378  0058                     ??_ADC_1:
  1379  0058                     ??_ADC_2:	
  1380                           ; 1 bytes @ 0x38
  1381                           
  1382                           
  1383                           ; 1 bytes @ 0x38
  1384  0058                     	ds	2
  1385  005A                     ??___fladd:
  1386  005A                     ___fltol@sign1:	
  1387                           ; 1 bytes @ 0x3A
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x3A
  1391  005A                     	ds	1
  1392  005B                     ___fltol@exp1:
  1393                           
  1394                           ; 1 bytes @ 0x3B
  1395  005B                     	ds	7
  1396  0062                     ___fladd@signs:
  1397                           
  1398                           ; 1 bytes @ 0x42
  1399  0062                     	ds	1
  1400  0063                     ___fladd@aexp:
  1401                           
  1402                           ; 1 bytes @ 0x43
  1403  0063                     	ds	1
  1404  0064                     ___fladd@bexp:
  1405                           
  1406                           ; 1 bytes @ 0x44
  1407  0064                     	ds	1
  1408  0065                     ___fladd@grs:
  1409                           
  1410                           ; 1 bytes @ 0x45
  1411  0065                     	ds	1
  1412  0066                     ?___flsub:
  1413  0066                     ___flsub@a:	
  1414                           ; 4 bytes @ 0x46
  1415                           
  1416                           
  1417                           ; 4 bytes @ 0x46
  1418  0066                     	ds	4
  1419  006A                     ___flsub@b:
  1420                           
  1421                           ; 4 bytes @ 0x4A
  1422  006A                     	ds	4
  1423                           
  1424                           	psect	maintext
  1425  1015                     __pmaintext:	
  1426 ;;
  1427 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1428 ;;
  1429 ;; *************** function _main *****************
  1430 ;; Defined at:
  1431 ;;		line 67 in file "lab03.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : B00/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       0       3       0       0
  1448 ;;      Totals:         0       0       3       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		_ADC_1
  1453 ;;		_ADC_2
  1454 ;;		_LCD_Limpia
  1455 ;;		_Lcd_Init
  1456 ;;		_Lcd_Set_Cursor
  1457 ;;		_Lcd_Write_String
  1458 ;;		_Write_USART
  1459 ;;		_Write_USART_String
  1460 ;;		__baudios
  1461 ;;		_config_ADC
  1462 ;;		_config_P
  1463 ;;		_config_rcsta
  1464 ;;		_config_txsta
  1465 ;;		_sprintf
  1466 ;; This function is called by:
  1467 ;;		Startup code after reset
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _main
  1473  1015                     _main:
  1474  1015                     l3917:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1477                           
  1478                           
  1479                           ;lab03.c: 68:     config_P();
  1480  1015  160A  158A  205E  160A  118A  	fcall	_config_P
  1481  101A                     l3919:
  1482                           
  1483                           ;lab03.c: 69:     config_ADC();
  1484  101A  160A  158A  2022  160A  118A  	fcall	_config_ADC
  1485  101F                     l3921:
  1486                           
  1487                           ;lab03.c: 70:     _baudios();
  1488  101F  160A  158A  2026  160A  118A  	fcall	__baudios
  1489                           
  1490                           ;lab03.c: 71:     config_txsta();
  1491  1024  160A  158A  203B  160A  118A  	fcall	_config_txsta
  1492                           
  1493                           ;lab03.c: 72:     config_rcsta();
  1494  1029  160A  158A  202B  160A  118A  	fcall	_config_rcsta
  1495  102E                     l3923:
  1496                           
  1497                           ;lab03.c: 73:     Lcd_Init();
  1498  102E  120A  118A  200E  160A  118A  	fcall	_Lcd_Init
  1499  1033                     l3925:
  1500                           
  1501                           ;lab03.c: 74:     LCD_Limpia();
  1502  1033  160A  158A  2051  160A  118A  	fcall	_LCD_Limpia
  1503  1038                     l3927:
  1504                           
  1505                           ;lab03.c: 75:     Lcd_Set_Cursor(1, 1);
  1506  1038  01F4               	clrf	Lcd_Set_Cursor@y
  1507  1039  0AF4               	incf	Lcd_Set_Cursor@y,f
  1508  103A  3001               	movlw	1
  1509  103B  160A  158A  20AE  160A  118A  	fcall	_Lcd_Set_Cursor
  1510  1040                     l3929:
  1511                           
  1512                           ;lab03.c: 76:     Lcd_Write_String("S1   S2   CONT");
  1513  1040  30AA               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1514  1041  00F3               	movwf	Lcd_Write_String@a
  1515  1042  3080               	movlw	128
  1516  1043  00F4               	movwf	Lcd_Write_String@a+1
  1517  1044  160A  158A  21E5  160A  118A  	fcall	_Lcd_Write_String
  1518  1049                     l3931:
  1519                           
  1520                           ;lab03.c: 82:         LCD_Limpia();
  1521  1049  160A  158A  2051  160A  118A  	fcall	_LCD_Limpia
  1522  104E                     l3933:
  1523                           
  1524                           ;lab03.c: 83:         Lcd_Set_Cursor(1, 1);
  1525  104E  01F4               	clrf	Lcd_Set_Cursor@y
  1526  104F  0AF4               	incf	Lcd_Set_Cursor@y,f
  1527  1050  3001               	movlw	1
  1528  1051  160A  158A  20AE  160A  118A  	fcall	_Lcd_Set_Cursor
  1529  1056                     l3935:
  1530                           
  1531                           ;lab03.c: 84:         Lcd_Write_String("S1   S2   CONT");
  1532  1056  30AA               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1533  1057  00F3               	movwf	Lcd_Write_String@a
  1534  1058  3080               	movlw	128
  1535  1059  00F4               	movwf	Lcd_Write_String@a+1
  1536  105A  160A  158A  21E5  160A  118A  	fcall	_Lcd_Write_String
  1537  105F                     l3937:
  1538                           
  1539                           ;lab03.c: 85:         ADC_1();
  1540  105F  160A  158A  23CC  160A  118A  	fcall	_ADC_1
  1541  1064                     l3939:
  1542                           
  1543                           ;lab03.c: 86:         ADC_2();
  1544  1064  160A  158A  2443  160A  118A  	fcall	_ADC_2
  1545  1069                     l3941:
  1546                           
  1547                           ;lab03.c: 87:         sprintf(data, "%1.2f   " "%1.2f",volt,volt2);
  1548  1069  30B9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1549  106A  1683               	bsf	3,5	;RP0=1, select bank1
  1550  106B  1303               	bcf	3,6	;RP1=0, select bank1
  1551  106C  00C9               	movwf	??_main^(0+128)
  1552  106D  0849               	movf	??_main^(0+128),w
  1553  106E  00A0               	movwf	sprintf@f^(0+128)
  1554  106F  0853               	movf	(_volt+3)^(0+128),w
  1555  1070  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1556  1071  0852               	movf	(_volt+2)^(0+128),w
  1557  1072  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1558  1073  0851               	movf	(_volt+1)^(0+128),w
  1559  1074  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1560  1075  0850               	movf	_volt^(0+128),w
  1561  1076  00A1               	movwf	(?_sprintf^(0+128)+1)
  1562  1077  084F               	movf	(_volt2+3)^(0+128),w
  1563  1078  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1564  1079  084E               	movf	(_volt2+2)^(0+128),w
  1565  107A  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1566  107B  084D               	movf	(_volt2+1)^(0+128),w
  1567  107C  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1568  107D  084C               	movf	_volt2^(0+128),w
  1569  107E  00A5               	movwf	(?_sprintf^(0+128)+5)
  1570  107F  30D4               	movlw	(low (_data| 0))& (0+255)
  1571  1080  120A  118A  2078  160A  118A  	fcall	_sprintf
  1572  1085                     l3943:
  1573                           
  1574                           ;lab03.c: 88:         Lcd_Set_Cursor(2, 1);
  1575  1085  01F4               	clrf	Lcd_Set_Cursor@y
  1576  1086  0AF4               	incf	Lcd_Set_Cursor@y,f
  1577  1087  3002               	movlw	2
  1578  1088  160A  158A  20AE  160A  118A  	fcall	_Lcd_Set_Cursor
  1579  108D                     l3945:
  1580                           
  1581                           ;lab03.c: 89:         Lcd_Write_String(data);
  1582  108D  30D4               	movlw	(low (_data| 0))& (0+255)
  1583  108E  00F3               	movwf	Lcd_Write_String@a
  1584  108F  3000               	movlw	0
  1585  1090  00F4               	movwf	Lcd_Write_String@a+1
  1586  1091  160A  158A  21E5  160A  118A  	fcall	_Lcd_Write_String
  1587  1096                     l3947:
  1588                           
  1589                           ;lab03.c: 90:         Write_USART_String("S1        S2        CONT");
  1590  1096  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1591  1097  00F1               	movwf	Write_USART_String@a
  1592  1098  3080               	movlw	128
  1593  1099  00F2               	movwf	Write_USART_String@a+1
  1594  109A  160A  158A  2142  160A  118A  	fcall	_Write_USART_String
  1595  109F                     l3949:
  1596                           
  1597                           ;lab03.c: 91:         Write_USART(13);
  1598  109F  300D               	movlw	13
  1599  10A0  160A  158A  2045  160A  118A  	fcall	_Write_USART
  1600  10A5                     l3951:
  1601                           
  1602                           ;lab03.c: 92:         Write_USART(10);
  1603  10A5  300A               	movlw	10
  1604  10A6  160A  158A  2045  160A  118A  	fcall	_Write_USART
  1605  10AB                     l3953:
  1606                           
  1607                           ;lab03.c: 93:         Write_USART_String(data);
  1608  10AB  30D4               	movlw	(low (_data| 0))& (0+255)
  1609  10AC  00F1               	movwf	Write_USART_String@a
  1610  10AD  3000               	movlw	0
  1611  10AE  00F2               	movwf	Write_USART_String@a+1
  1612  10AF  160A  158A  2142  160A  118A  	fcall	_Write_USART_String
  1613  10B4                     l3955:
  1614                           
  1615                           ;lab03.c: 94:         Write_USART(13);
  1616  10B4  300D               	movlw	13
  1617  10B5  160A  158A  2045  160A  118A  	fcall	_Write_USART
  1618  10BA                     l3957:
  1619                           
  1620                           ;lab03.c: 95:         Write_USART(10);
  1621  10BA  300A               	movlw	10
  1622  10BB  160A  158A  2045  160A  118A  	fcall	_Write_USART
  1623  10C0                     l3959:
  1624                           
  1625                           ;lab03.c: 97:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1626  10C0  3006               	movlw	6
  1627  10C1  1683               	bsf	3,5	;RP0=1, select bank1
  1628  10C2  1303               	bcf	3,6	;RP1=0, select bank1
  1629  10C3  00CB               	movwf	(??_main^(0+128)+2)
  1630  10C4  3013               	movlw	19
  1631  10C5  00CA               	movwf	(??_main^(0+128)+1)
  1632  10C6  30AD               	movlw	173
  1633  10C7  00C9               	movwf	??_main^(0+128)
  1634  10C8                     u6347:
  1635  10C8  0BC9               	decfsz	??_main^(0+128),f
  1636  10C9  28C8               	goto	u6347
  1637  10CA  0BCA               	decfsz	(??_main^(0+128)+1),f
  1638  10CB  28C8               	goto	u6347
  1639  10CC  0BCB               	decfsz	(??_main^(0+128)+2),f
  1640  10CD  28C8               	goto	u6347
  1641  10CE  2849               	goto	l3931
  1642  10CF  120A  118A  2800   	ljmp	start
  1643  10D2                     __end_of_main:
  1644                           
  1645                           	psect	text1
  1646  0078                     __ptext1:	
  1647 ;; *************** function _sprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  sp              1    wreg     PTR unsigned char 
  1652 ;;		 -> data(16), 
  1653 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1654 ;;		 -> STR_3(14), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  1657 ;;		 -> data(16), 
  1658 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1659 ;;  tmpval          4   27[BANK1 ] struct .
  1660 ;;  val             4   19[BANK1 ] unsigned long 
  1661 ;;  prec            2   38[BANK1 ] int 
  1662 ;;  eexp            2   31[BANK1 ] int 
  1663 ;;  width           2   25[BANK1 ] int 
  1664 ;;  flag            2   23[BANK1 ] unsigned short 
  1665 ;;  cp              2    0        PTR const unsigned char 
  1666 ;;  len             2    0        unsigned int 
  1667 ;;  c               1   40[BANK1 ] unsigned char 
  1668 ;;  ap              1   18[BANK1 ] PTR void [1]
  1669 ;;		 -> ?_sprintf(2), 
  1670 ;;  d               1    0        unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2    0[BANK1 ] int 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       9       0       0
  1681 ;;      Locals:         0       0      27       0       0
  1682 ;;      Temps:          0       0       5       0       0
  1683 ;;      Totals:         0       0      41       0       0
  1684 ;;Total ram usage:       41 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    3
  1687 ;; This function calls:
  1688 ;;		___awdiv
  1689 ;;		___fladd
  1690 ;;		___fleq
  1691 ;;		___flge
  1692 ;;		___flmul
  1693 ;;		___flneg
  1694 ;;		___flsub
  1695 ;;		___fltol
  1696 ;;		___lldiv
  1697 ;;		___llmod
  1698 ;;		___wmul
  1699 ;;		___xxtofl
  1700 ;;		__div_to_l_
  1701 ;;		__tdiv_to_l_
  1702 ;;		_fround
  1703 ;;		_isdigit
  1704 ;;		_scale
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _sprintf
  1712  0078                     _sprintf:
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1716                           ;sprintf@sp stored from wreg
  1717  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1718  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1719  007A  00C5               	movwf	sprintf@sp^(0+128)
  1720  007B                     l3647:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1723  007B  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1724  007C  00A9               	movwf	??_sprintf^(0+128)
  1725  007D  0829               	movf	??_sprintf^(0+128),w
  1726  007E  00B2               	movwf	sprintf@ap^(0+128)
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1729  007F  2FDC               	goto	l3897
  1730  0080                     l3649:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1733  0080  3025               	movlw	37
  1734  0081  0648               	xorwf	sprintf@c^(0+128),w
  1735  0082  1903               	btfsc	3,2
  1736  0083  2885               	goto	u5861
  1737  0084  2886               	goto	u5860
  1738  0085                     u5861:
  1739  0085  2892               	goto	l3655
  1740  0086                     u5860:
  1741  0086                     l3651:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1744  0086  0848               	movf	sprintf@c^(0+128),w
  1745  0087  00A9               	movwf	??_sprintf^(0+128)
  1746  0088  0845               	movf	sprintf@sp^(0+128),w
  1747  0089  0084               	movwf	4
  1748  008A  0829               	movf	??_sprintf^(0+128),w
  1749  008B  1383               	bcf	3,7	;select IRP bank0
  1750  008C  0080               	movwf	0
  1751  008D                     l3653:
  1752  008D  3001               	movlw	1
  1753  008E  00A9               	movwf	??_sprintf^(0+128)
  1754  008F  0829               	movf	??_sprintf^(0+128),w
  1755  0090  07C5               	addwf	sprintf@sp^(0+128),f
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1758  0091  2FDC               	goto	l3897
  1759  0092                     l3655:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1762  0092  01B9               	clrf	sprintf@width^(0+128)
  1763  0093  01BA               	clrf	(sprintf@width+1)^(0+128)
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1766  0094  01B7               	clrf	sprintf@flag^(0+128)
  1767  0095  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1768  0096                     l3657:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1771  0096  0820               	movf	sprintf@f^(0+128),w
  1772  0097  0084               	movwf	4
  1773  0098  120A  158A  200A  120A  118A  	fcall	stringdir
  1774  009D  160A  118A  2003  120A  118A  	fcall	_isdigit
  1775  00A2  1C03               	btfss	3,0
  1776  00A3  28A5               	goto	u5871
  1777  00A4  28A6               	goto	u5870
  1778  00A5                     u5871:
  1779  00A5  28E6               	goto	l3669
  1780  00A6                     u5870:
  1781  00A6                     l3659:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1784  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1785  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1786  00A8  01B9               	clrf	sprintf@width^(0+128)
  1787  00A9  01BA               	clrf	(sprintf@width+1)^(0+128)
  1788  00AA                     l3661:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1791  00AA  300A               	movlw	10
  1792  00AB  00F0               	movwf	___wmul@multiplier
  1793  00AC  3000               	movlw	0
  1794  00AD  00F1               	movwf	___wmul@multiplier+1
  1795  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1796  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1797  00B0  083A               	movf	(sprintf@width+1)^(0+128),w
  1798  00B1  00F3               	movwf	___wmul@multiplicand+1
  1799  00B2  0839               	movf	sprintf@width^(0+128),w
  1800  00B3  00F2               	movwf	___wmul@multiplicand
  1801  00B4  160A  158A  20F6  120A  118A  	fcall	___wmul
  1802  00B9  0871               	movf	?___wmul+1,w
  1803  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1804  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1805  00BC  00BA               	movwf	(sprintf@width+1)^(0+128)
  1806  00BD  0870               	movf	?___wmul,w
  1807  00BE  00B9               	movwf	sprintf@width^(0+128)
  1808  00BF                     l3663:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1811  00BF  0820               	movf	sprintf@f^(0+128),w
  1812  00C0  0084               	movwf	4
  1813  00C1  120A  158A  200A  120A  118A  	fcall	stringdir
  1814  00C6  3ED0               	addlw	208
  1815  00C7  00A9               	movwf	??_sprintf^(0+128)
  1816  00C8  30FF               	movlw	255
  1817  00C9  1803               	skipnc
  1818  00CA  3000               	movlw	0
  1819  00CB  00AA               	movwf	(??_sprintf^(0+128)+1)
  1820  00CC  0829               	movf	??_sprintf^(0+128),w
  1821  00CD  07B9               	addwf	sprintf@width^(0+128),f
  1822  00CE  1803               	skipnc
  1823  00CF  0ABA               	incf	(sprintf@width+1)^(0+128),f
  1824  00D0  082A               	movf	(??_sprintf+1)^(0+128),w
  1825  00D1  07BA               	addwf	(sprintf@width+1)^(0+128),f
  1826  00D2                     l3665:
  1827  00D2  3001               	movlw	1
  1828  00D3  00A9               	movwf	??_sprintf^(0+128)
  1829  00D4  0829               	movf	??_sprintf^(0+128),w
  1830  00D5  07A0               	addwf	sprintf@f^(0+128),f
  1831  00D6                     l3667:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1834  00D6  0820               	movf	sprintf@f^(0+128),w
  1835  00D7  0084               	movwf	4
  1836  00D8  120A  158A  200A  120A  118A  	fcall	stringdir
  1837  00DD  160A  118A  2003  120A  118A  	fcall	_isdigit
  1838  00E2  1803               	btfsc	3,0
  1839  00E3  28E5               	goto	u5881
  1840  00E4  28E6               	goto	u5880
  1841  00E5                     u5881:
  1842  00E5  28AA               	goto	l3661
  1843  00E6                     u5880:
  1844  00E6                     l3669:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1847  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1848  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1849  00E8  0820               	movf	sprintf@f^(0+128),w
  1850  00E9  0084               	movwf	4
  1851  00EA  120A  158A  200A  120A  118A  	fcall	stringdir
  1852  00EF  3A2E               	xorlw	46
  1853  00F0  1D03               	skipz
  1854  00F1  28F3               	goto	u5891
  1855  00F2  28F4               	goto	u5890
  1856  00F3                     u5891:
  1857  00F3  2939               	goto	l3685
  1858  00F4                     u5890:
  1859  00F4                     l3671:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1862  00F4  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1863  00F5                     l3673:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1866  00F5  3001               	movlw	1
  1867  00F6  00A9               	movwf	??_sprintf^(0+128)
  1868  00F7  0829               	movf	??_sprintf^(0+128),w
  1869  00F8  07A0               	addwf	sprintf@f^(0+128),f
  1870  00F9                     l3675:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1873  00F9  01C6               	clrf	sprintf@prec^(0+128)
  1874  00FA  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1877  00FB  2928               	goto	l3683
  1878  00FC                     l3677:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1881  00FC  300A               	movlw	10
  1882  00FD  00F0               	movwf	___wmul@multiplier
  1883  00FE  3000               	movlw	0
  1884  00FF  00F1               	movwf	___wmul@multiplier+1
  1885  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0102  0847               	movf	(sprintf@prec+1)^(0+128),w
  1888  0103  00F3               	movwf	___wmul@multiplicand+1
  1889  0104  0846               	movf	sprintf@prec^(0+128),w
  1890  0105  00F2               	movwf	___wmul@multiplicand
  1891  0106  160A  158A  20F6  120A  118A  	fcall	___wmul
  1892  010B  0871               	movf	?___wmul+1,w
  1893  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1894  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1895  010E  00C7               	movwf	(sprintf@prec+1)^(0+128)
  1896  010F  0870               	movf	?___wmul,w
  1897  0110  00C6               	movwf	sprintf@prec^(0+128)
  1898  0111                     l3679:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1901  0111  0820               	movf	sprintf@f^(0+128),w
  1902  0112  0084               	movwf	4
  1903  0113  120A  158A  200A  120A  118A  	fcall	stringdir
  1904  0118  3ED0               	addlw	208
  1905  0119  00A9               	movwf	??_sprintf^(0+128)
  1906  011A  30FF               	movlw	255
  1907  011B  1803               	skipnc
  1908  011C  3000               	movlw	0
  1909  011D  00AA               	movwf	(??_sprintf^(0+128)+1)
  1910  011E  0829               	movf	??_sprintf^(0+128),w
  1911  011F  07C6               	addwf	sprintf@prec^(0+128),f
  1912  0120  1803               	skipnc
  1913  0121  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  1914  0122  082A               	movf	(??_sprintf+1)^(0+128),w
  1915  0123  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  1916  0124                     l3681:
  1917  0124  3001               	movlw	1
  1918  0125  00A9               	movwf	??_sprintf^(0+128)
  1919  0126  0829               	movf	??_sprintf^(0+128),w
  1920  0127  07A0               	addwf	sprintf@f^(0+128),f
  1921  0128                     l3683:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1924  0128  0820               	movf	sprintf@f^(0+128),w
  1925  0129  0084               	movwf	4
  1926  012A  120A  158A  200A  120A  118A  	fcall	stringdir
  1927  012F  160A  118A  2003  120A  118A  	fcall	_isdigit
  1928  0134  1803               	btfsc	3,0
  1929  0135  2937               	goto	u5901
  1930  0136  2938               	goto	u5900
  1931  0137                     u5901:
  1932  0137  28FC               	goto	l3677
  1933  0138                     u5900:
  1934  0138  293F               	goto	l3691
  1935  0139                     l3685:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1938  0139  01C6               	clrf	sprintf@prec^(0+128)
  1939  013A  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1940  013B                     l3687:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1943  013B  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1944  013C  293F               	goto	l3691
  1945  013D                     l363:	
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1947                           
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1950  013D  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1953  013E  295B               	goto	l3693
  1954  013F                     l3691:
  1955  013F  3001               	movlw	1
  1956  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0142  07A0               	addwf	sprintf@f^(0+128),f
  1959  0143  30FF               	movlw	-1
  1960  0144  0720               	addwf	sprintf@f^(0+128),w
  1961  0145  0084               	movwf	4
  1962  0146  120A  158A  200A  120A  118A  	fcall	stringdir
  1963  014B  00C8               	movwf	sprintf@c^(0+128)
  1964  014C  00A9               	movwf	??_sprintf^(0+128)
  1965  014D  01AA               	clrf	(??_sprintf^(0+128)+1)
  1966                           
  1967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1968                           ; Switch size 1, requested type "simple"
  1969                           ; Number of cases is 1, Range of values is 0 to 0
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; simple_byte            4     3 (average)
  1973                           ; direct_byte           11     8 (fixed)
  1974                           ; jumptable            260     6 (fixed)
  1975                           ;	Chosen strategy is simple_byte
  1976  014E  082A               	movf	(??_sprintf+1)^(0+128),w
  1977  014F  3A00               	xorlw	0	; case 0
  1978  0150  1903               	skipnz
  1979  0151  2953               	goto	l4015
  1980  0152  2FDC               	goto	l3897
  1981  0153                     l4015:
  1982                           
  1983                           ; Switch size 1, requested type "simple"
  1984                           ; Number of cases is 2, Range of values is 0 to 102
  1985                           ; switch strategies available:
  1986                           ; Name         Instructions Cycles
  1987                           ; simple_byte            7     4 (average)
  1988                           ; jumptable            260     6 (fixed)
  1989                           ;	Chosen strategy is simple_byte
  1990  0153  0829               	movf	??_sprintf^(0+128),w
  1991  0154  3A00               	xorlw	0	; case 0
  1992  0155  1903               	skipnz
  1993  0156  2FEE               	goto	l3899
  1994  0157  3A66               	xorlw	102	; case 102
  1995  0158  1903               	skipnz
  1996  0159  293D               	goto	l363
  1997  015A  2FDC               	goto	l3897
  1998  015B                     l3693:
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2001  015B  3000               	movlw	0
  2002  015C  0537               	andwf	sprintf@flag^(0+128),w
  2003  015D  00A9               	movwf	??_sprintf^(0+128)
  2004  015E  3007               	movlw	7
  2005  015F  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2006  0160  00AA               	movwf	(??_sprintf+1)^(0+128)
  2007  0161  0829               	movf	??_sprintf^(0+128),w
  2008  0162  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2009  0163  1903               	btfsc	3,2
  2010  0164  2966               	goto	u5911
  2011  0165  2967               	goto	u5910
  2012  0166                     u5911:
  2013  0166  2F19               	goto	l3851
  2014  0167                     u5910:
  2015  0167                     l3695:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2018  0167  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2019  0168  296A               	goto	u5921
  2020  0169  296B               	goto	u5920
  2021  016A                     u5921:
  2022  016A  296F               	goto	l3699
  2023  016B                     u5920:
  2024  016B                     l3697:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2027  016B  3006               	movlw	6
  2028  016C  00C6               	movwf	sprintf@prec^(0+128)
  2029  016D  3000               	movlw	0
  2030  016E  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2031  016F                     l3699:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2034  016F  0832               	movf	sprintf@ap^(0+128),w
  2035  0170  0084               	movwf	4
  2036  0171  1383               	bcf	3,7	;select IRP bank0
  2037  0172  0800               	movf	0,w
  2038  0173  00C1               	movwf	sprintf@fval^(0+128)
  2039  0174  0A84               	incf	4,f
  2040  0175  0800               	movf	0,w
  2041  0176  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2042  0177  0A84               	incf	4,f
  2043  0178  0800               	movf	0,w
  2044  0179  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2045  017A  0A84               	incf	4,f
  2046  017B  0800               	movf	0,w
  2047  017C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2048  017D                     l3701:
  2049  017D  3004               	movlw	4
  2050  017E  00A9               	movwf	??_sprintf^(0+128)
  2051  017F  0829               	movf	??_sprintf^(0+128),w
  2052  0180  07B2               	addwf	sprintf@ap^(0+128),f
  2053  0181                     l3703:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2056  0181  0844               	movf	(sprintf@fval+3)^(0+128),w
  2057  0182  00F3               	movwf	___flge@ff1+3
  2058  0183  0843               	movf	(sprintf@fval+2)^(0+128),w
  2059  0184  00F2               	movwf	___flge@ff1+2
  2060  0185  0842               	movf	(sprintf@fval+1)^(0+128),w
  2061  0186  00F1               	movwf	___flge@ff1+1
  2062  0187  0841               	movf	sprintf@fval^(0+128),w
  2063  0188  00F0               	movwf	___flge@ff1
  2064  0189  3000               	movlw	0
  2065  018A  00F7               	movwf	___flge@ff2+3
  2066  018B  3000               	movlw	0
  2067  018C  00F6               	movwf	___flge@ff2+2
  2068  018D  3000               	movlw	0
  2069  018E  00F5               	movwf	___flge@ff2+1
  2070  018F  3000               	movlw	0
  2071  0190  00F4               	movwf	___flge@ff2
  2072  0191  160A  158A  2537  120A  118A  	fcall	___flge
  2073  0196  1803               	btfsc	3,0
  2074  0197  2999               	goto	u5931
  2075  0198  299A               	goto	u5930
  2076  0199                     u5931:
  2077  0199  29B7               	goto	l3709
  2078  019A                     u5930:
  2079  019A                     l3705:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2082  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2083  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2084  019C  0844               	movf	(sprintf@fval+3)^(0+128),w
  2085  019D  00F3               	movwf	___flneg@f1+3
  2086  019E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2087  019F  00F2               	movwf	___flneg@f1+2
  2088  01A0  0842               	movf	(sprintf@fval+1)^(0+128),w
  2089  01A1  00F1               	movwf	___flneg@f1+1
  2090  01A2  0841               	movf	sprintf@fval^(0+128),w
  2091  01A3  00F0               	movwf	___flneg@f1
  2092  01A4  120A  118A  2003  120A  118A  	fcall	___flneg
  2093  01A9  0873               	movf	?___flneg+3,w
  2094  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2095  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2096  01AC  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2097  01AD  0872               	movf	?___flneg+2,w
  2098  01AE  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2099  01AF  0871               	movf	?___flneg+1,w
  2100  01B0  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2101  01B1  0870               	movf	?___flneg,w
  2102  01B2  00C1               	movwf	sprintf@fval^(0+128)
  2103  01B3                     l3707:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2106  01B3  3003               	movlw	3
  2107  01B4  04B7               	iorwf	sprintf@flag^(0+128),f
  2108  01B5  3000               	movlw	0
  2109  01B6  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2110  01B7                     l3709:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2113  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2114  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2115  01B9  01BF               	clrf	sprintf@eexp^(0+128)
  2116  01BA  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2117  01BB                     l3711:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2120  01BB  0844               	movf	(sprintf@fval+3)^(0+128),w
  2121  01BC  00F3               	movwf	___fleq@ff1+3
  2122  01BD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2123  01BE  00F2               	movwf	___fleq@ff1+2
  2124  01BF  0842               	movf	(sprintf@fval+1)^(0+128),w
  2125  01C0  00F1               	movwf	___fleq@ff1+1
  2126  01C1  0841               	movf	sprintf@fval^(0+128),w
  2127  01C2  00F0               	movwf	___fleq@ff1
  2128  01C3  3000               	movlw	0
  2129  01C4  00F7               	movwf	___fleq@ff2+3
  2130  01C5  3000               	movlw	0
  2131  01C6  00F6               	movwf	___fleq@ff2+2
  2132  01C7  3000               	movlw	0
  2133  01C8  00F5               	movwf	___fleq@ff2+1
  2134  01C9  3000               	movlw	0
  2135  01CA  00F4               	movwf	___fleq@ff2
  2136  01CB  160A  158A  226B  120A  118A  	fcall	___fleq
  2137  01D0  1803               	btfsc	3,0
  2138  01D1  29D3               	goto	u5941
  2139  01D2  29D4               	goto	u5940
  2140  01D3                     u5941:
  2141  01D3  2AC4               	goto	l3737
  2142  01D4                     u5940:
  2143  01D4                     l3713:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2146  01D4  1003               	clrc
  2147  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2148  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2149  01D7  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2150  01D8  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2151  01D9  3E82               	addlw	130
  2152  01DA  00BF               	movwf	sprintf@eexp^(0+128)
  2153  01DB  30FF               	movlw	255
  2154  01DC  1803               	skipnc
  2155  01DD  3000               	movlw	0
  2156  01DE  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  2157  01DF                     l3715:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2160  01DF  30FF               	movlw	255
  2161  01E0  07BF               	addwf	sprintf@eexp^(0+128),f
  2162  01E1  1803               	skipnc
  2163  01E2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2164  01E3  30FF               	movlw	255
  2165  01E4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2166  01E5                     l3717:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2169  01E5  3003               	movlw	3
  2170  01E6  00F0               	movwf	___wmul@multiplier
  2171  01E7  3000               	movlw	0
  2172  01E8  00F1               	movwf	___wmul@multiplier+1
  2173  01E9  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2174  01EA  00F3               	movwf	___wmul@multiplicand+1
  2175  01EB  083F               	movf	sprintf@eexp^(0+128),w
  2176  01EC  00F2               	movwf	___wmul@multiplicand
  2177  01ED  160A  158A  20F6  120A  118A  	fcall	___wmul
  2178  01F2  0871               	movf	?___wmul+1,w
  2179  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2180  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2181  01F5  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2182  01F6  0870               	movf	?___wmul,w
  2183  01F7  00BF               	movwf	sprintf@eexp^(0+128)
  2184  01F8                     l3719:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2187  01F8  300A               	movlw	10
  2188  01F9  00F7               	movwf	___awdiv@divisor
  2189  01FA  3000               	movlw	0
  2190  01FB  00F8               	movwf	___awdiv@divisor+1
  2191  01FC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2192  01FD  00FA               	movwf	___awdiv@dividend+1
  2193  01FE  083F               	movf	sprintf@eexp^(0+128),w
  2194  01FF  00F9               	movwf	___awdiv@dividend
  2195  0200  120A  158A  20D7  120A  118A  	fcall	___awdiv
  2196  0205  0878               	movf	?___awdiv+1,w
  2197  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0208  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2200  0209  0877               	movf	?___awdiv,w
  2201  020A  00BF               	movwf	sprintf@eexp^(0+128)
  2202  020B                     l3721:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2205  020B  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2206  020C  2A0E               	goto	u5951
  2207  020D  2A0F               	goto	u5950
  2208  020E                     u5951:
  2209  020E  2A15               	goto	l3725
  2210  020F                     u5950:
  2211  020F                     l3723:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2214  020F  30FF               	movlw	255
  2215  0210  07BF               	addwf	sprintf@eexp^(0+128),f
  2216  0211  1803               	skipnc
  2217  0212  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2218  0213  30FF               	movlw	255
  2219  0214  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2220  0215                     l3725:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2223  0215  033F               	decf	sprintf@eexp^(0+128),w
  2224  0216  3AFF               	xorlw	255
  2225  0217  120A  158A  2140  120A  118A  	fcall	_scale
  2226  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2227  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2228  021E  0841               	movf	?_scale+3,w
  2229  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2231  0221  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2232  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0224  0840               	movf	?_scale+2,w
  2235  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2236  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2237  0227  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2238  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2240  022A  083F               	movf	?_scale+1,w
  2241  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2242  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2243  022D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2244  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2245  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0230  083E               	movf	?_scale,w
  2247  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2249  0233  00BB               	movwf	sprintf@tmpval^(0+128)
  2250  0234                     l3727:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2253  0234  0844               	movf	(sprintf@fval+3)^(0+128),w
  2254  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0237  00A7               	movwf	___flmul@b+3
  2257  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2258  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2259  023A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2260  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2261  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2262  023D  00A6               	movwf	___flmul@b+2
  2263  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2264  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0240  0842               	movf	(sprintf@fval+1)^(0+128),w
  2266  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0243  00A5               	movwf	___flmul@b+1
  2269  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0246  0841               	movf	sprintf@fval^(0+128),w
  2272  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0249  00A4               	movwf	___flmul@b
  2275  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2276  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2277  024C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2278  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2279  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2280  024F  00AB               	movwf	___flmul@a+3
  2281  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0252  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2284  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0255  00AA               	movwf	___flmul@a+2
  2287  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2289  0258  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2290  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2291  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2292  025B  00A9               	movwf	___flmul@a+1
  2293  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2294  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2295  025E  083B               	movf	sprintf@tmpval^(0+128),w
  2296  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0261  00A8               	movwf	___flmul@a
  2299  0262  120A  158A  249F  120A  118A  	fcall	___flmul
  2300  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0269  0827               	movf	?___flmul+3,w
  2303  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2304  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2305  026C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2306  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2307  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2308  026F  0826               	movf	?___flmul+2,w
  2309  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0272  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2312  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0275  0825               	movf	?___flmul+1,w
  2315  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0278  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2318  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2319  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2320  027B  0824               	movf	?___flmul,w
  2321  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2322  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2323  027E  00BB               	movwf	sprintf@tmpval^(0+128)
  2324  027F                     l3729:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2327  027F  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2328  0280  00F3               	movwf	___flge@ff1+3
  2329  0281  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2330  0282  00F2               	movwf	___flge@ff1+2
  2331  0283  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2332  0284  00F1               	movwf	___flge@ff1+1
  2333  0285  083B               	movf	sprintf@tmpval^(0+128),w
  2334  0286  00F0               	movwf	___flge@ff1
  2335  0287  303F               	movlw	63
  2336  0288  00F7               	movwf	___flge@ff2+3
  2337  0289  3080               	movlw	128
  2338  028A  00F6               	movwf	___flge@ff2+2
  2339  028B  3000               	movlw	0
  2340  028C  00F5               	movwf	___flge@ff2+1
  2341  028D  3000               	movlw	0
  2342  028E  00F4               	movwf	___flge@ff2
  2343  028F  160A  158A  2537  120A  118A  	fcall	___flge
  2344  0294  1803               	btfsc	3,0
  2345  0295  2A97               	goto	u5961
  2346  0296  2A98               	goto	u5960
  2347  0297                     u5961:
  2348  0297  2AA1               	goto	l3733
  2349  0298                     u5960:
  2350  0298                     l3731:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2353  0298  30FF               	movlw	255
  2354  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2355  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2356  029B  07BF               	addwf	sprintf@eexp^(0+128),f
  2357  029C  1803               	skipnc
  2358  029D  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2359  029E  30FF               	movlw	255
  2360  029F  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2361  02A0  2AC4               	goto	l3737
  2362  02A1                     l3733:
  2363  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2364  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2365  02A3  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2366  02A4  00F3               	movwf	___flge@ff1+3
  2367  02A5  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2368  02A6  00F2               	movwf	___flge@ff1+2
  2369  02A7  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2370  02A8  00F1               	movwf	___flge@ff1+1
  2371  02A9  083B               	movf	sprintf@tmpval^(0+128),w
  2372  02AA  00F0               	movwf	___flge@ff1
  2373  02AB  3041               	movlw	65
  2374  02AC  00F7               	movwf	___flge@ff2+3
  2375  02AD  3020               	movlw	32
  2376  02AE  00F6               	movwf	___flge@ff2+2
  2377  02AF  3000               	movlw	0
  2378  02B0  00F5               	movwf	___flge@ff2+1
  2379  02B1  3000               	movlw	0
  2380  02B2  00F4               	movwf	___flge@ff2
  2381  02B3  160A  158A  2537  120A  118A  	fcall	___flge
  2382  02B8  1C03               	btfss	3,0
  2383  02B9  2ABB               	goto	u5971
  2384  02BA  2ABC               	goto	u5970
  2385  02BB                     u5971:
  2386  02BB  2AC4               	goto	l3737
  2387  02BC                     u5970:
  2388  02BC                     l3735:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2391  02BC  3001               	movlw	1
  2392  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2393  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2394  02BF  07BF               	addwf	sprintf@eexp^(0+128),f
  2395  02C0  1803               	skipnc
  2396  02C1  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2397  02C2  3000               	movlw	0
  2398  02C3  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2399  02C4                     l3737:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2402  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2403  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2404  02C6  0847               	movf	(sprintf@prec+1)^(0+128),w
  2405  02C7  3A80               	xorlw	128
  2406  02C8  00FF               	movwf	btemp+1
  2407  02C9  3080               	movlw	128
  2408  02CA  027F               	subwf	btemp+1,w
  2409  02CB  1D03               	skipz
  2410  02CC  2ACF               	goto	u5985
  2411  02CD  300D               	movlw	13
  2412  02CE  0246               	subwf	sprintf@prec^(0+128),w
  2413  02CF                     u5985:
  2414  02CF  1803               	skipnc
  2415  02D0  2AD2               	goto	u5981
  2416  02D1  2AD3               	goto	u5980
  2417  02D2                     u5981:
  2418  02D2  2B1A               	goto	l3741
  2419  02D3                     u5980:
  2420  02D3                     l3739:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2423  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2424  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2425  02D5  0846               	movf	sprintf@prec^(0+128),w
  2426  02D6  160A  118A  236D  120A  118A  	fcall	_fround
  2427  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2428  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2429  02DD  0841               	movf	?_fround+3,w
  2430  02DE  00D5               	movwf	___fladd@b+3
  2431  02DF  0840               	movf	?_fround+2,w
  2432  02E0  00D4               	movwf	___fladd@b+2
  2433  02E1  083F               	movf	?_fround+1,w
  2434  02E2  00D3               	movwf	___fladd@b+1
  2435  02E3  083E               	movf	?_fround,w
  2436  02E4  00D2               	movwf	___fladd@b
  2437  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2438  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2439  02E7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2440  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2441  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2442  02EA  00D9               	movwf	___fladd@a+3
  2443  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2444  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2445  02ED  0843               	movf	(sprintf@fval+2)^(0+128),w
  2446  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2447  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2448  02F0  00D8               	movwf	___fladd@a+2
  2449  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2450  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2451  02F3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2452  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2453  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2454  02F6  00D7               	movwf	___fladd@a+1
  2455  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2456  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2457  02F9  0841               	movf	sprintf@fval^(0+128),w
  2458  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2459  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2460  02FC  00D6               	movwf	___fladd@a
  2461  02FD  160A  118A  2578  120A  118A  	fcall	___fladd
  2462  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0304  0855               	movf	?___fladd+3,w
  2465  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2466  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2467  0307  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2468  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2470  030A  0854               	movf	?___fladd+2,w
  2471  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2472  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2473  030D  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2474  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2475  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0310  0853               	movf	?___fladd+1,w
  2477  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2478  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2479  0313  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2480  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0316  0852               	movf	?___fladd,w
  2483  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2484  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2485  0319  00C1               	movwf	sprintf@fval^(0+128)
  2486  031A                     l3741:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2489  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2490  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2491  031C  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2492  031D  3A80               	xorlw	128
  2493  031E  00FF               	movwf	btemp+1
  2494  031F  3080               	movlw	128
  2495  0320  027F               	subwf	btemp+1,w
  2496  0321  1D03               	skipz
  2497  0322  2B25               	goto	u5995
  2498  0323  300A               	movlw	10
  2499  0324  023F               	subwf	sprintf@eexp^(0+128),w
  2500  0325                     u5995:
  2501  0325  1803               	skipnc
  2502  0326  2B28               	goto	u5991
  2503  0327  2B29               	goto	u5990
  2504  0328                     u5991:
  2505  0328  2B7A               	goto	l3749
  2506  0329                     u5990:
  2507  0329                     l3743:
  2508  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2509  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2510  032B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2511  032C  00F3               	movwf	___fleq@ff1+3
  2512  032D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2513  032E  00F2               	movwf	___fleq@ff1+2
  2514  032F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2515  0330  00F1               	movwf	___fleq@ff1+1
  2516  0331  0841               	movf	sprintf@fval^(0+128),w
  2517  0332  00F0               	movwf	___fleq@ff1
  2518  0333  3000               	movlw	0
  2519  0334  00F7               	movwf	___fleq@ff2+3
  2520  0335  3000               	movlw	0
  2521  0336  00F6               	movwf	___fleq@ff2+2
  2522  0337  3000               	movlw	0
  2523  0338  00F5               	movwf	___fleq@ff2+1
  2524  0339  3000               	movlw	0
  2525  033A  00F4               	movwf	___fleq@ff2
  2526  033B  160A  158A  226B  120A  118A  	fcall	___fleq
  2527  0340  1803               	btfsc	3,0
  2528  0341  2B43               	goto	u6001
  2529  0342  2B44               	goto	u6000
  2530  0343                     u6001:
  2531  0343  2BEC               	goto	l3763
  2532  0344                     u6000:
  2533  0344                     l3745:
  2534  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0346  0844               	movf	(sprintf@fval+3)^(0+128),w
  2537  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0349  00D4               	movwf	___fltol@f1+3
  2540  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2541  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2542  034C  0843               	movf	(sprintf@fval+2)^(0+128),w
  2543  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2544  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2545  034F  00D3               	movwf	___fltol@f1+2
  2546  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0352  0842               	movf	(sprintf@fval+1)^(0+128),w
  2549  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0355  00D2               	movwf	___fltol@f1+1
  2552  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2554  0358  0841               	movf	sprintf@fval^(0+128),w
  2555  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2556  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2557  035B  00D1               	movwf	___fltol@f1
  2558  035C  160A  158A  24BB  120A  118A  	fcall	___fltol
  2559  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0363  0854               	movf	?___fltol+3,w
  2562  0364  0453               	iorwf	?___fltol+2,w
  2563  0365  0452               	iorwf	?___fltol+1,w
  2564  0366  0451               	iorwf	?___fltol,w
  2565  0367  1D03               	skipz
  2566  0368  2B6A               	goto	u6011
  2567  0369  2B6B               	goto	u6010
  2568  036A                     u6011:
  2569  036A  2BEC               	goto	l3763
  2570  036B                     u6010:
  2571  036B                     l3747:
  2572  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2573  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2574  036D  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2575  036E  3A80               	xorlw	128
  2576  036F  00FF               	movwf	btemp+1
  2577  0370  3080               	movlw	128
  2578  0371  027F               	subwf	btemp+1,w
  2579  0372  1D03               	skipz
  2580  0373  2B76               	goto	u6025
  2581  0374  3002               	movlw	2
  2582  0375  023F               	subwf	sprintf@eexp^(0+128),w
  2583  0376                     u6025:
  2584  0376  1C03               	skipc
  2585  0377  2B79               	goto	u6021
  2586  0378  2B7A               	goto	u6020
  2587  0379                     u6021:
  2588  0379  2BEC               	goto	l3763
  2589  037A                     u6020:
  2590  037A                     l3749:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2593  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2594  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2595  037C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2596  037D  00F3               	movwf	___flge@ff1+3
  2597  037E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2598  037F  00F2               	movwf	___flge@ff1+2
  2599  0380  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2600  0381  00F1               	movwf	___flge@ff1+1
  2601  0382  083B               	movf	sprintf@tmpval^(0+128),w
  2602  0383  00F0               	movwf	___flge@ff1
  2603  0384  3040               	movlw	64
  2604  0385  00F7               	movwf	___flge@ff2+3
  2605  0386  3089               	movlw	137
  2606  0387  00F6               	movwf	___flge@ff2+2
  2607  0388  3070               	movlw	112
  2608  0389  00F5               	movwf	___flge@ff2+1
  2609  038A  305F               	movlw	95
  2610  038B  00F4               	movwf	___flge@ff2
  2611  038C  160A  158A  2537  120A  118A  	fcall	___flge
  2612  0391  1803               	btfsc	3,0
  2613  0392  2B94               	goto	u6031
  2614  0393  2B95               	goto	u6030
  2615  0394                     u6031:
  2616  0394  2B9E               	goto	l3753
  2617  0395                     u6030:
  2618  0395                     l3751:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2621  0395  30F7               	movlw	247
  2622  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0398  07BF               	addwf	sprintf@eexp^(0+128),f
  2625  0399  1803               	skipnc
  2626  039A  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2627  039B  30FF               	movlw	255
  2628  039C  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2631  039D  2BA6               	goto	l3755
  2632  039E                     l3753:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2635  039E  30F8               	movlw	248
  2636  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2637  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2638  03A1  07BF               	addwf	sprintf@eexp^(0+128),f
  2639  03A2  1803               	skipnc
  2640  03A3  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2641  03A4  30FF               	movlw	255
  2642  03A5  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2643  03A6                     l3755:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2646  03A6  083F               	movf	sprintf@eexp^(0+128),w
  2647  03A7  120A  158A  2140  120A  118A  	fcall	_scale
  2648  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2649  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2650  03AE  0841               	movf	?_scale+3,w
  2651  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2652  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2653  03B1  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2654  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2655  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2656  03B4  0840               	movf	?_scale+2,w
  2657  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2658  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2659  03B7  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2660  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2661  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2662  03BA  083F               	movf	?_scale+1,w
  2663  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2664  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2665  03BD  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2666  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2667  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2668  03C0  083E               	movf	?_scale,w
  2669  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2670  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2671  03C3  00BB               	movwf	sprintf@tmpval^(0+128)
  2672  03C4                     l3757:
  2673  03C4  0844               	movf	(sprintf@fval+3)^(0+128),w
  2674  03C5  00F3               	movwf	__div_to_l_@f1+3
  2675  03C6  0843               	movf	(sprintf@fval+2)^(0+128),w
  2676  03C7  00F2               	movwf	__div_to_l_@f1+2
  2677  03C8  0842               	movf	(sprintf@fval+1)^(0+128),w
  2678  03C9  00F1               	movwf	__div_to_l_@f1+1
  2679  03CA  0841               	movf	sprintf@fval^(0+128),w
  2680  03CB  00F0               	movwf	__div_to_l_@f1
  2681  03CC  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2682  03CD  00F7               	movwf	__div_to_l_@f2+3
  2683  03CE  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2684  03CF  00F6               	movwf	__div_to_l_@f2+2
  2685  03D0  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2686  03D1  00F5               	movwf	__div_to_l_@f2+1
  2687  03D2  083B               	movf	sprintf@tmpval^(0+128),w
  2688  03D3  00F4               	movwf	__div_to_l_@f2
  2689  03D4  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2690  03D9  0873               	movf	?__div_to_l_+3,w
  2691  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2692  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2693  03DC  00B6               	movwf	(sprintf@val+3)^(0+128)
  2694  03DD  0872               	movf	?__div_to_l_+2,w
  2695  03DE  00B5               	movwf	(sprintf@val+2)^(0+128)
  2696  03DF  0871               	movf	?__div_to_l_+1,w
  2697  03E0  00B4               	movwf	(sprintf@val+1)^(0+128)
  2698  03E1  0870               	movf	?__div_to_l_,w
  2699  03E2  00B3               	movwf	sprintf@val^(0+128)
  2700  03E3                     l3761:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2703  03E3  3000               	movlw	0
  2704  03E4  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2705  03E5  3000               	movlw	0
  2706  03E6  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2707  03E7  3000               	movlw	0
  2708  03E8  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2709  03E9  3000               	movlw	0
  2710  03EA  00C1               	movwf	sprintf@fval^(0+128)
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2713  03EB  2C70               	goto	l3769
  2714  03EC                     l3763:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2717  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2718  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2719  03EE  0844               	movf	(sprintf@fval+3)^(0+128),w
  2720  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2721  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2722  03F1  00D4               	movwf	___fltol@f1+3
  2723  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2724  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2725  03F4  0843               	movf	(sprintf@fval+2)^(0+128),w
  2726  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2727  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2728  03F7  00D3               	movwf	___fltol@f1+2
  2729  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2730  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2731  03FA  0842               	movf	(sprintf@fval+1)^(0+128),w
  2732  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2733  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2734  03FD  00D2               	movwf	___fltol@f1+1
  2735  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2736  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2737  0400  0841               	movf	sprintf@fval^(0+128),w
  2738  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0403  00D1               	movwf	___fltol@f1
  2741  0404  160A  158A  24BB  120A  118A  	fcall	___fltol
  2742  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2743  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2744  040B  0854               	movf	?___fltol+3,w
  2745  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2746  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2747  040E  00B6               	movwf	(sprintf@val+3)^(0+128)
  2748  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0411  0853               	movf	?___fltol+2,w
  2751  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2753  0414  00B5               	movwf	(sprintf@val+2)^(0+128)
  2754  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0417  0852               	movf	?___fltol+1,w
  2757  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2759  041A  00B4               	movwf	(sprintf@val+1)^(0+128)
  2760  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2761  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2762  041D  0851               	movf	?___fltol,w
  2763  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2764  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0420  00B3               	movwf	sprintf@val^(0+128)
  2766  0421                     l3765:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2769  0421  0836               	movf	(sprintf@val+3)^(0+128),w
  2770  0422  00F3               	movwf	___xxtofl@val+3
  2771  0423  0835               	movf	(sprintf@val+2)^(0+128),w
  2772  0424  00F2               	movwf	___xxtofl@val+2
  2773  0425  0834               	movf	(sprintf@val+1)^(0+128),w
  2774  0426  00F1               	movwf	___xxtofl@val+1
  2775  0427  0833               	movf	sprintf@val^(0+128),w
  2776  0428  00F0               	movwf	___xxtofl@val
  2777  0429  3000               	movlw	0
  2778  042A  160A  158A  2689  120A  118A  	fcall	___xxtofl
  2779  042F  0873               	movf	?___xxtofl+3,w
  2780  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0432  00E9               	movwf	___flsub@a+3
  2783  0433  0872               	movf	?___xxtofl+2,w
  2784  0434  00E8               	movwf	___flsub@a+2
  2785  0435  0871               	movf	?___xxtofl+1,w
  2786  0436  00E7               	movwf	___flsub@a+1
  2787  0437  0870               	movf	?___xxtofl,w
  2788  0438  00E6               	movwf	___flsub@a
  2789  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2790  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2791  043B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2792  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2793  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2794  043E  00ED               	movwf	___flsub@b+3
  2795  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0441  0843               	movf	(sprintf@fval+2)^(0+128),w
  2798  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0444  00EC               	movwf	___flsub@b+2
  2801  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0447  0842               	movf	(sprintf@fval+1)^(0+128),w
  2804  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2806  044A  00EB               	movwf	___flsub@b+1
  2807  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2808  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2809  044D  0841               	movf	sprintf@fval^(0+128),w
  2810  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2811  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0450  00EA               	movwf	___flsub@b
  2813  0451  160A  158A  20D2  120A  118A  	fcall	___flsub
  2814  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0458  0869               	movf	?___flsub+3,w
  2817  0459  1683               	bsf	3,5	;RP0=1, select bank1
  2818  045A  1303               	bcf	3,6	;RP1=0, select bank1
  2819  045B  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2820  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2821  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2822  045E  0868               	movf	?___flsub+2,w
  2823  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2824  0460  1303               	bcf	3,6	;RP1=0, select bank1
  2825  0461  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2826  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0464  0867               	movf	?___flsub+1,w
  2829  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2831  0467  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2832  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2834  046A  0866               	movf	?___flsub,w
  2835  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2836  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2837  046D  00C1               	movwf	sprintf@fval^(0+128)
  2838  046E                     l3767:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2841  046E  01BF               	clrf	sprintf@eexp^(0+128)
  2842  046F  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2843  0470                     l3769:
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2846  0470  01C8               	clrf	sprintf@c^(0+128)
  2847  0471  0AC8               	incf	sprintf@c^(0+128),f
  2848  0472                     l3775:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2851  0472  0848               	movf	sprintf@c^(0+128),w
  2852  0473  00A9               	movwf	??_sprintf^(0+128)
  2853  0474  3001               	movlw	1
  2854  0475                     u6045:
  2855  0475  1003               	clrc
  2856  0476  0DA9               	rlf	??_sprintf^(0+128),f
  2857  0477  3EFF               	addlw	-1
  2858  0478  1D03               	skipz
  2859  0479  2C75               	goto	u6045
  2860  047A  1003               	clrc
  2861  047B  0D29               	rlf	??_sprintf^(0+128),w
  2862  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2863  047D  0084               	movwf	4
  2864  047E  120A  158A  200A  120A  118A  	fcall	stringdir
  2865  0483  00AA               	movwf	(??_sprintf+1)^(0+128)
  2866  0484  120A  158A  200A  120A  118A  	fcall	stringdir
  2867  0489  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
  2868  048A  120A  158A  200A  120A  118A  	fcall	stringdir
  2869  048F  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
  2870  0490  120A  158A  200A  120A  118A  	fcall	stringdir
  2871  0495  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
  2872  0496  082D               	movf	(??_sprintf+4)^(0+128),w
  2873  0497  0236               	subwf	(sprintf@val+3)^(0+128),w
  2874  0498  1D03               	skipz
  2875  0499  2CA4               	goto	u6055
  2876  049A  082C               	movf	(??_sprintf+3)^(0+128),w
  2877  049B  0235               	subwf	(sprintf@val+2)^(0+128),w
  2878  049C  1D03               	skipz
  2879  049D  2CA4               	goto	u6055
  2880  049E  082B               	movf	(??_sprintf+2)^(0+128),w
  2881  049F  0234               	subwf	(sprintf@val+1)^(0+128),w
  2882  04A0  1D03               	skipz
  2883  04A1  2CA4               	goto	u6055
  2884  04A2  082A               	movf	(??_sprintf+1)^(0+128),w
  2885  04A3  0233               	subwf	sprintf@val^(0+128),w
  2886  04A4                     u6055:
  2887  04A4  1803               	skipnc
  2888  04A5  2CA7               	goto	u6051
  2889  04A6  2CA8               	goto	u6050
  2890  04A7                     u6051:
  2891  04A7  2CA9               	goto	l3779
  2892  04A8                     u6050:
  2893  04A8  2CB3               	goto	l3781
  2894  04A9                     l3779:
  2895  04A9  3001               	movlw	1
  2896  04AA  00A9               	movwf	??_sprintf^(0+128)
  2897  04AB  0829               	movf	??_sprintf^(0+128),w
  2898  04AC  07C8               	addwf	sprintf@c^(0+128),f
  2899  04AD  300A               	movlw	10
  2900  04AE  0648               	xorwf	sprintf@c^(0+128),w
  2901  04AF  1D03               	btfss	3,2
  2902  04B0  2CB2               	goto	u6061
  2903  04B1  2CB3               	goto	u6060
  2904  04B2                     u6061:
  2905  04B2  2C72               	goto	l3775
  2906  04B3                     u6060:
  2907  04B3                     l3781:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2910  04B3  0848               	movf	sprintf@c^(0+128),w
  2911  04B4  0746               	addwf	sprintf@prec^(0+128),w
  2912  04B5  00A9               	movwf	??_sprintf^(0+128)
  2913  04B6  0847               	movf	(sprintf@prec+1)^(0+128),w
  2914  04B7  1803               	skipnc
  2915  04B8  0A47               	incf	(sprintf@prec+1)^(0+128),w
  2916  04B9  00AA               	movwf	(??_sprintf^(0+128)+1)
  2917  04BA  083F               	movf	sprintf@eexp^(0+128),w
  2918  04BB  0729               	addwf	??_sprintf^(0+128),w
  2919  04BC  00AB               	movwf	(??_sprintf+2)^(0+128)
  2920  04BD  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2921  04BE  1803               	skipnc
  2922  04BF  0A40               	incf	(sprintf@eexp+1)^(0+128),w
  2923  04C0  072A               	addwf	(??_sprintf+1)^(0+128),w
  2924  04C1  00AC               	movwf	(??_sprintf+3)^(0+128)
  2925  04C2  082B               	movf	(??_sprintf+2)^(0+128),w
  2926  04C3  02B9               	subwf	sprintf@width^(0+128),f
  2927  04C4  082C               	movf	(??_sprintf+3)^(0+128),w
  2928  04C5  1C03               	skipc
  2929  04C6  03BA               	decf	(sprintf@width+1)^(0+128),f
  2930  04C7  02BA               	subwf	(sprintf@width+1)^(0+128),f
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  2933  04C8  0846               	movf	sprintf@prec^(0+128),w
  2934  04C9  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  2935  04CA  1903               	btfsc	3,2
  2936  04CB  2CCD               	goto	u6071
  2937  04CC  2CCE               	goto	u6070
  2938  04CD                     u6071:
  2939  04CD  2CD4               	goto	l3785
  2940  04CE                     u6070:
  2941  04CE                     l3783:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2944  04CE  30FF               	movlw	255
  2945  04CF  07B9               	addwf	sprintf@width^(0+128),f
  2946  04D0  1803               	skipnc
  2947  04D1  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2948  04D2  30FF               	movlw	255
  2949  04D3  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2950  04D4                     l3785:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2953  04D4  3003               	movlw	3
  2954  04D5  0537               	andwf	sprintf@flag^(0+128),w
  2955  04D6  00A9               	movwf	??_sprintf^(0+128)
  2956  04D7  3000               	movlw	0
  2957  04D8  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2958  04D9  00AA               	movwf	(??_sprintf+1)^(0+128)
  2959  04DA  0829               	movf	??_sprintf^(0+128),w
  2960  04DB  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2961  04DC  1903               	btfsc	3,2
  2962  04DD  2CDF               	goto	u6081
  2963  04DE  2CE0               	goto	u6080
  2964  04DF                     u6081:
  2965  04DF  2CF5               	goto	l3795
  2966  04E0                     u6080:
  2967  04E0                     l3787:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2970  04E0  30FF               	movlw	255
  2971  04E1  07B9               	addwf	sprintf@width^(0+128),f
  2972  04E2  1803               	skipnc
  2973  04E3  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2974  04E4  30FF               	movlw	255
  2975  04E5  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2976  04E6  2CF5               	goto	l3795
  2977  04E7                     l3789:
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2980  04E7  3020               	movlw	32
  2981  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2982  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2983  04EA  00A9               	movwf	??_sprintf^(0+128)
  2984  04EB  0845               	movf	sprintf@sp^(0+128),w
  2985  04EC  0084               	movwf	4
  2986  04ED  0829               	movf	??_sprintf^(0+128),w
  2987  04EE  1383               	bcf	3,7	;select IRP bank0
  2988  04EF  0080               	movwf	0
  2989  04F0                     l3791:
  2990  04F0  3001               	movlw	1
  2991  04F1  00A9               	movwf	??_sprintf^(0+128)
  2992  04F2  0829               	movf	??_sprintf^(0+128),w
  2993  04F3  07C5               	addwf	sprintf@sp^(0+128),f
  2994  04F4  2CE0               	goto	l3787
  2995  04F5                     l3795:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2998  04F5  083A               	movf	(sprintf@width+1)^(0+128),w
  2999  04F6  3A80               	xorlw	128
  3000  04F7  00FF               	movwf	btemp+1
  3001  04F8  3080               	movlw	128
  3002  04F9  027F               	subwf	btemp+1,w
  3003  04FA  1D03               	skipz
  3004  04FB  2CFE               	goto	u6095
  3005  04FC  3001               	movlw	1
  3006  04FD  0239               	subwf	sprintf@width^(0+128),w
  3007  04FE                     u6095:
  3008  04FE  1803               	skipnc
  3009  04FF  2D01               	goto	u6091
  3010  0500  2D02               	goto	u6090
  3011  0501                     u6091:
  3012  0501  2CE7               	goto	l3789
  3013  0502                     u6090:
  3014  0502                     l3797:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3017  0502  3003               	movlw	3
  3018  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0504  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0505  0537               	andwf	sprintf@flag^(0+128),w
  3021  0506  00A9               	movwf	??_sprintf^(0+128)
  3022  0507  3000               	movlw	0
  3023  0508  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3024  0509  00AA               	movwf	(??_sprintf+1)^(0+128)
  3025  050A  0829               	movf	??_sprintf^(0+128),w
  3026  050B  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3027  050C  1903               	btfsc	3,2
  3028  050D  2D0F               	goto	u6101
  3029  050E  2D10               	goto	u6100
  3030  050F                     u6101:
  3031  050F  2D82               	goto	l394
  3032  0510                     u6100:
  3033  0510                     l3799:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3036  0510  302D               	movlw	45
  3037  0511  00A9               	movwf	??_sprintf^(0+128)
  3038  0512  0845               	movf	sprintf@sp^(0+128),w
  3039  0513  0084               	movwf	4
  3040  0514  0829               	movf	??_sprintf^(0+128),w
  3041  0515  1383               	bcf	3,7	;select IRP bank0
  3042  0516  0080               	movwf	0
  3043  0517                     l3801:
  3044  0517  3001               	movlw	1
  3045  0518  00A9               	movwf	??_sprintf^(0+128)
  3046  0519  0829               	movf	??_sprintf^(0+128),w
  3047  051A  07C5               	addwf	sprintf@sp^(0+128),f
  3048  051B  2D82               	goto	l394
  3049  051C                     l3803:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3052  051C  0848               	movf	sprintf@c^(0+128),w
  3053  051D  00A9               	movwf	??_sprintf^(0+128)
  3054  051E  3001               	movlw	1
  3055  051F                     u6115:
  3056  051F  1003               	clrc
  3057  0520  0DA9               	rlf	??_sprintf^(0+128),f
  3058  0521  3EFF               	addlw	-1
  3059  0522  1D03               	skipz
  3060  0523  2D1F               	goto	u6115
  3061  0524  1003               	clrc
  3062  0525  0D29               	rlf	??_sprintf^(0+128),w
  3063  0526  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3064  0527  0084               	movwf	4
  3065  0528  120A  158A  200A  120A  118A  	fcall	stringdir
  3066  052D  00F0               	movwf	___lldiv@divisor
  3067  052E  120A  158A  200A  120A  118A  	fcall	stringdir
  3068  0533  00F1               	movwf	___lldiv@divisor+1
  3069  0534  120A  158A  200A  120A  118A  	fcall	stringdir
  3070  0539  00F2               	movwf	___lldiv@divisor+2
  3071  053A  120A  158A  200A  120A  118A  	fcall	stringdir
  3072  053F  00F3               	movwf	___lldiv@divisor+3
  3073  0540  0836               	movf	(sprintf@val+3)^(0+128),w
  3074  0541  00F7               	movwf	___lldiv@dividend+3
  3075  0542  0835               	movf	(sprintf@val+2)^(0+128),w
  3076  0543  00F6               	movwf	___lldiv@dividend+2
  3077  0544  0834               	movf	(sprintf@val+1)^(0+128),w
  3078  0545  00F5               	movwf	___lldiv@dividend+1
  3079  0546  0833               	movf	sprintf@val^(0+128),w
  3080  0547  00F4               	movwf	___lldiv@dividend
  3081  0548  160A  158A  2366  120A  118A  	fcall	___lldiv
  3082  054D  0873               	movf	?___lldiv+3,w
  3083  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3084  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3085  0550  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3086  0551  0872               	movf	?___lldiv+2,w
  3087  0552  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3088  0553  0871               	movf	?___lldiv+1,w
  3089  0554  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3090  0555  0870               	movf	?___lldiv,w
  3091  0556  00BB               	movwf	sprintf@tmpval^(0+128)
  3092  0557                     l3805:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3095  0557  3000               	movlw	0
  3096  0558  00F3               	movwf	___llmod@divisor+3
  3097  0559  3000               	movlw	0
  3098  055A  00F2               	movwf	___llmod@divisor+2
  3099  055B  3000               	movlw	0
  3100  055C  00F1               	movwf	___llmod@divisor+1
  3101  055D  300A               	movlw	10
  3102  055E  00F0               	movwf	___llmod@divisor
  3103  055F  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3104  0560  00F7               	movwf	___llmod@dividend+3
  3105  0561  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3106  0562  00F6               	movwf	___llmod@dividend+2
  3107  0563  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3108  0564  00F5               	movwf	___llmod@dividend+1
  3109  0565  083B               	movf	sprintf@tmpval^(0+128),w
  3110  0566  00F4               	movwf	___llmod@dividend
  3111  0567  160A  158A  22B9  120A  118A  	fcall	___llmod
  3112  056C  0873               	movf	?___llmod+3,w
  3113  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3114  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3115  056F  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3116  0570  0872               	movf	?___llmod+2,w
  3117  0571  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3118  0572  0871               	movf	?___llmod+1,w
  3119  0573  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3120  0574  0870               	movf	?___llmod,w
  3121  0575  00BB               	movwf	sprintf@tmpval^(0+128)
  3122  0576                     l3807:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3125  0576  083B               	movf	sprintf@tmpval^(0+128),w
  3126  0577  3E30               	addlw	48
  3127  0578  00A9               	movwf	??_sprintf^(0+128)
  3128  0579  0845               	movf	sprintf@sp^(0+128),w
  3129  057A  0084               	movwf	4
  3130  057B  0829               	movf	??_sprintf^(0+128),w
  3131  057C  1383               	bcf	3,7	;select IRP bank0
  3132  057D  0080               	movwf	0
  3133  057E  3001               	movlw	1
  3134  057F  00A9               	movwf	??_sprintf^(0+128)
  3135  0580  0829               	movf	??_sprintf^(0+128),w
  3136  0581  07C5               	addwf	sprintf@sp^(0+128),f
  3137  0582                     l394:	
  3138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3139                           
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3142  0582  3001               	movlw	1
  3143  0583  02C8               	subwf	sprintf@c^(0+128),f
  3144  0584  0A48               	incf	sprintf@c^(0+128),w
  3145  0585  1D03               	btfss	3,2
  3146  0586  2D88               	goto	u6121
  3147  0587  2D89               	goto	u6120
  3148  0588                     u6121:
  3149  0588  2D1C               	goto	l3803
  3150  0589                     u6120:
  3151  0589  2D9D               	goto	l3815
  3152  058A                     l3809:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3155  058A  3030               	movlw	48
  3156  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3157  058C  1303               	bcf	3,6	;RP1=0, select bank1
  3158  058D  00A9               	movwf	??_sprintf^(0+128)
  3159  058E  0845               	movf	sprintf@sp^(0+128),w
  3160  058F  0084               	movwf	4
  3161  0590  0829               	movf	??_sprintf^(0+128),w
  3162  0591  1383               	bcf	3,7	;select IRP bank0
  3163  0592  0080               	movwf	0
  3164  0593                     l3811:
  3165  0593  3001               	movlw	1
  3166  0594  00A9               	movwf	??_sprintf^(0+128)
  3167  0595  0829               	movf	??_sprintf^(0+128),w
  3168  0596  07C5               	addwf	sprintf@sp^(0+128),f
  3169  0597                     l3813:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3172  0597  30FF               	movlw	255
  3173  0598  07BF               	addwf	sprintf@eexp^(0+128),f
  3174  0599  1803               	skipnc
  3175  059A  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3176  059B  30FF               	movlw	255
  3177  059C  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3178  059D                     l3815:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3181  059D  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3182  059E  3A80               	xorlw	128
  3183  059F  00FF               	movwf	btemp+1
  3184  05A0  3080               	movlw	128
  3185  05A1  027F               	subwf	btemp+1,w
  3186  05A2  1D03               	skipz
  3187  05A3  2DA6               	goto	u6135
  3188  05A4  3001               	movlw	1
  3189  05A5  023F               	subwf	sprintf@eexp^(0+128),w
  3190  05A6                     u6135:
  3191  05A6  1803               	skipnc
  3192  05A7  2DA9               	goto	u6131
  3193  05A8  2DAA               	goto	u6130
  3194  05A9                     u6131:
  3195  05A9  2D8A               	goto	l3809
  3196  05AA                     u6130:
  3197  05AA                     l3817:
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3200  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3201  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3202  05AC  0847               	movf	(sprintf@prec+1)^(0+128),w
  3203  05AD  3A80               	xorlw	128
  3204  05AE  00FF               	movwf	btemp+1
  3205  05AF  3080               	movlw	128
  3206  05B0  027F               	subwf	btemp+1,w
  3207  05B1  1D03               	skipz
  3208  05B2  2DB5               	goto	u6145
  3209  05B3  3009               	movlw	9
  3210  05B4  0246               	subwf	sprintf@prec^(0+128),w
  3211  05B5                     u6145:
  3212  05B5  1C03               	skipc
  3213  05B6  2DB8               	goto	u6141
  3214  05B7  2DB9               	goto	u6140
  3215  05B8                     u6141:
  3216  05B8  2DC0               	goto	l3821
  3217  05B9                     u6140:
  3218  05B9                     l3819:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3221  05B9  3008               	movlw	8
  3222  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  3223  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  3224  05BC  00A9               	movwf	??_sprintf^(0+128)
  3225  05BD  0829               	movf	??_sprintf^(0+128),w
  3226  05BE  00C8               	movwf	sprintf@c^(0+128)
  3227  05BF  2DC6               	goto	l401
  3228  05C0                     l3821:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3231  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3232  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3233  05C2  0846               	movf	sprintf@prec^(0+128),w
  3234  05C3  00A9               	movwf	??_sprintf^(0+128)
  3235  05C4  0829               	movf	??_sprintf^(0+128),w
  3236  05C5  00C8               	movwf	sprintf@c^(0+128)
  3237  05C6                     l401:
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3240  05C6  0848               	movf	sprintf@c^(0+128),w
  3241  05C7  00A9               	movwf	??_sprintf^(0+128)
  3242  05C8  01AA               	clrf	(??_sprintf^(0+128)+1)
  3243  05C9  0829               	movf	??_sprintf^(0+128),w
  3244  05CA  02C6               	subwf	sprintf@prec^(0+128),f
  3245  05CB  082A               	movf	(??_sprintf+1)^(0+128),w
  3246  05CC  1C03               	skipc
  3247  05CD  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3248  05CE  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3249  05CF                     l3823:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3252  05CF  0848               	movf	sprintf@c^(0+128),w
  3253  05D0  1903               	btfsc	3,2
  3254  05D1  2DD3               	goto	u6151
  3255  05D2  2DD4               	goto	u6150
  3256  05D3                     u6151:
  3257  05D3  2DDF               	goto	l3829
  3258  05D4                     u6150:
  3259  05D4                     l3825:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3262  05D4  302E               	movlw	46
  3263  05D5  00A9               	movwf	??_sprintf^(0+128)
  3264  05D6  0845               	movf	sprintf@sp^(0+128),w
  3265  05D7  0084               	movwf	4
  3266  05D8  0829               	movf	??_sprintf^(0+128),w
  3267  05D9  1383               	bcf	3,7	;select IRP bank0
  3268  05DA  0080               	movwf	0
  3269  05DB                     l3827:
  3270  05DB  3001               	movlw	1
  3271  05DC  00A9               	movwf	??_sprintf^(0+128)
  3272  05DD  0829               	movf	??_sprintf^(0+128),w
  3273  05DE  07C5               	addwf	sprintf@sp^(0+128),f
  3274  05DF                     l3829:
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3277  05DF  0848               	movf	sprintf@c^(0+128),w
  3278  05E0  120A  158A  2140  120A  118A  	fcall	_scale
  3279  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3280  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3281  05E7  0841               	movf	?_scale+3,w
  3282  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3283  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3284  05EA  00B1               	movwf	(_sprintf$1067+3)^(0+128)
  3285  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3286  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3287  05ED  0840               	movf	?_scale+2,w
  3288  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3289  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3290  05F0  00B0               	movwf	(_sprintf$1067+2)^(0+128)
  3291  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3292  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3293  05F3  083F               	movf	?_scale+1,w
  3294  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3295  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3296  05F6  00AF               	movwf	(_sprintf$1067+1)^(0+128)
  3297  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3298  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3299  05F9  083E               	movf	?_scale,w
  3300  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3301  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3302  05FC  00AE               	movwf	_sprintf$1067^(0+128)
  3303  05FD                     l3831:
  3304                           
  3305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3306  05FD  0831               	movf	(_sprintf$1067+3)^(0+128),w
  3307  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3308  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0600  00AB               	movwf	___flmul@a+3
  3310  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0603  0830               	movf	(_sprintf$1067+2)^(0+128),w
  3313  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0606  00AA               	movwf	___flmul@a+2
  3316  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0609  082F               	movf	(_sprintf$1067+1)^(0+128),w
  3319  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3320  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3321  060C  00A9               	movwf	___flmul@a+1
  3322  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3323  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3324  060F  082E               	movf	_sprintf$1067^(0+128),w
  3325  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0612  00A8               	movwf	___flmul@a
  3328  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3330  0615  0844               	movf	(sprintf@fval+3)^(0+128),w
  3331  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0618  00A7               	movwf	___flmul@b+3
  3334  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3335  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3336  061B  0843               	movf	(sprintf@fval+2)^(0+128),w
  3337  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3338  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3339  061E  00A6               	movwf	___flmul@b+2
  3340  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3342  0621  0842               	movf	(sprintf@fval+1)^(0+128),w
  3343  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3345  0624  00A5               	movwf	___flmul@b+1
  3346  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3347  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3348  0627  0841               	movf	sprintf@fval^(0+128),w
  3349  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3351  062A  00A4               	movwf	___flmul@b
  3352  062B  120A  158A  249F  120A  118A  	fcall	___flmul
  3353  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0632  0827               	movf	?___flmul+3,w
  3356  0633  00D4               	movwf	___fltol@f1+3
  3357  0634  0826               	movf	?___flmul+2,w
  3358  0635  00D3               	movwf	___fltol@f1+2
  3359  0636  0825               	movf	?___flmul+1,w
  3360  0637  00D2               	movwf	___fltol@f1+1
  3361  0638  0824               	movf	?___flmul,w
  3362  0639  00D1               	movwf	___fltol@f1
  3363  063A  160A  158A  24BB  120A  118A  	fcall	___fltol
  3364  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0641  0854               	movf	?___fltol+3,w
  3367  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3369  0644  00B6               	movwf	(sprintf@val+3)^(0+128)
  3370  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0647  0853               	movf	?___fltol+2,w
  3373  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3375  064A  00B5               	movwf	(sprintf@val+2)^(0+128)
  3376  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3377  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3378  064D  0852               	movf	?___fltol+1,w
  3379  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3380  064F  1303               	bcf	3,6	;RP1=0, select bank1
  3381  0650  00B4               	movwf	(sprintf@val+1)^(0+128)
  3382  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0653  0851               	movf	?___fltol,w
  3385  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3386  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3387  0656  00B3               	movwf	sprintf@val^(0+128)
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3390  0657  2EF9               	goto	l3841
  3391  0658                     l3833:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3394  0658  0848               	movf	sprintf@c^(0+128),w
  3395  0659  00A9               	movwf	??_sprintf^(0+128)
  3396  065A  3001               	movlw	1
  3397  065B                     u6165:
  3398  065B  1003               	clrc
  3399  065C  0DA9               	rlf	??_sprintf^(0+128),f
  3400  065D  3EFF               	addlw	-1
  3401  065E  1D03               	skipz
  3402  065F  2E5B               	goto	u6165
  3403  0660  1003               	clrc
  3404  0661  0D29               	rlf	??_sprintf^(0+128),w
  3405  0662  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3406  0663  0084               	movwf	4
  3407  0664  120A  158A  200A  120A  118A  	fcall	stringdir
  3408  0669  00F0               	movwf	___lldiv@divisor
  3409  066A  120A  158A  200A  120A  118A  	fcall	stringdir
  3410  066F  00F1               	movwf	___lldiv@divisor+1
  3411  0670  120A  158A  200A  120A  118A  	fcall	stringdir
  3412  0675  00F2               	movwf	___lldiv@divisor+2
  3413  0676  120A  158A  200A  120A  118A  	fcall	stringdir
  3414  067B  00F3               	movwf	___lldiv@divisor+3
  3415  067C  0836               	movf	(sprintf@val+3)^(0+128),w
  3416  067D  00F7               	movwf	___lldiv@dividend+3
  3417  067E  0835               	movf	(sprintf@val+2)^(0+128),w
  3418  067F  00F6               	movwf	___lldiv@dividend+2
  3419  0680  0834               	movf	(sprintf@val+1)^(0+128),w
  3420  0681  00F5               	movwf	___lldiv@dividend+1
  3421  0682  0833               	movf	sprintf@val^(0+128),w
  3422  0683  00F4               	movwf	___lldiv@dividend
  3423  0684  160A  158A  2366  120A  118A  	fcall	___lldiv
  3424  0689  0873               	movf	?___lldiv+3,w
  3425  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3426  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3427  068C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3428  068D  0872               	movf	?___lldiv+2,w
  3429  068E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3430  068F  0871               	movf	?___lldiv+1,w
  3431  0690  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3432  0691  0870               	movf	?___lldiv,w
  3433  0692  00BB               	movwf	sprintf@tmpval^(0+128)
  3434  0693                     l3835:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3437  0693  3000               	movlw	0
  3438  0694  00F3               	movwf	___llmod@divisor+3
  3439  0695  3000               	movlw	0
  3440  0696  00F2               	movwf	___llmod@divisor+2
  3441  0697  3000               	movlw	0
  3442  0698  00F1               	movwf	___llmod@divisor+1
  3443  0699  300A               	movlw	10
  3444  069A  00F0               	movwf	___llmod@divisor
  3445  069B  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3446  069C  00F7               	movwf	___llmod@dividend+3
  3447  069D  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3448  069E  00F6               	movwf	___llmod@dividend+2
  3449  069F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3450  06A0  00F5               	movwf	___llmod@dividend+1
  3451  06A1  083B               	movf	sprintf@tmpval^(0+128),w
  3452  06A2  00F4               	movwf	___llmod@dividend
  3453  06A3  160A  158A  22B9  120A  118A  	fcall	___llmod
  3454  06A8  0873               	movf	?___llmod+3,w
  3455  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3456  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  3457  06AB  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3458  06AC  0872               	movf	?___llmod+2,w
  3459  06AD  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3460  06AE  0871               	movf	?___llmod+1,w
  3461  06AF  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3462  06B0  0870               	movf	?___llmod,w
  3463  06B1  00BB               	movwf	sprintf@tmpval^(0+128)
  3464  06B2                     l3837:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3467  06B2  083B               	movf	sprintf@tmpval^(0+128),w
  3468  06B3  3E30               	addlw	48
  3469  06B4  00A9               	movwf	??_sprintf^(0+128)
  3470  06B5  0845               	movf	sprintf@sp^(0+128),w
  3471  06B6  0084               	movwf	4
  3472  06B7  0829               	movf	??_sprintf^(0+128),w
  3473  06B8  1383               	bcf	3,7	;select IRP bank0
  3474  06B9  0080               	movwf	0
  3475  06BA  3001               	movlw	1
  3476  06BB  00A9               	movwf	??_sprintf^(0+128)
  3477  06BC  0829               	movf	??_sprintf^(0+128),w
  3478  06BD  07C5               	addwf	sprintf@sp^(0+128),f
  3479  06BE                     l3839:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3482  06BE  0848               	movf	sprintf@c^(0+128),w
  3483  06BF  00A9               	movwf	??_sprintf^(0+128)
  3484  06C0  3001               	movlw	1
  3485  06C1                     u6175:
  3486  06C1  1003               	clrc
  3487  06C2  0DA9               	rlf	??_sprintf^(0+128),f
  3488  06C3  3EFF               	addlw	-1
  3489  06C4  1D03               	skipz
  3490  06C5  2EC1               	goto	u6175
  3491  06C6  1003               	clrc
  3492  06C7  0D29               	rlf	??_sprintf^(0+128),w
  3493  06C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3494  06C9  0084               	movwf	4
  3495  06CA  120A  158A  200A  120A  118A  	fcall	stringdir
  3496  06CF  00F0               	movwf	___llmod@divisor
  3497  06D0  120A  158A  200A  120A  118A  	fcall	stringdir
  3498  06D5  00F1               	movwf	___llmod@divisor+1
  3499  06D6  120A  158A  200A  120A  118A  	fcall	stringdir
  3500  06DB  00F2               	movwf	___llmod@divisor+2
  3501  06DC  120A  158A  200A  120A  118A  	fcall	stringdir
  3502  06E1  00F3               	movwf	___llmod@divisor+3
  3503  06E2  0836               	movf	(sprintf@val+3)^(0+128),w
  3504  06E3  00F7               	movwf	___llmod@dividend+3
  3505  06E4  0835               	movf	(sprintf@val+2)^(0+128),w
  3506  06E5  00F6               	movwf	___llmod@dividend+2
  3507  06E6  0834               	movf	(sprintf@val+1)^(0+128),w
  3508  06E7  00F5               	movwf	___llmod@dividend+1
  3509  06E8  0833               	movf	sprintf@val^(0+128),w
  3510  06E9  00F4               	movwf	___llmod@dividend
  3511  06EA  160A  158A  22B9  120A  118A  	fcall	___llmod
  3512  06EF  0873               	movf	?___llmod+3,w
  3513  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3514  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  3515  06F2  00B6               	movwf	(sprintf@val+3)^(0+128)
  3516  06F3  0872               	movf	?___llmod+2,w
  3517  06F4  00B5               	movwf	(sprintf@val+2)^(0+128)
  3518  06F5  0871               	movf	?___llmod+1,w
  3519  06F6  00B4               	movwf	(sprintf@val+1)^(0+128)
  3520  06F7  0870               	movf	?___llmod,w
  3521  06F8  00B3               	movwf	sprintf@val^(0+128)
  3522  06F9                     l3841:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3525  06F9  3001               	movlw	1
  3526  06FA  02C8               	subwf	sprintf@c^(0+128),f
  3527  06FB  0A48               	incf	sprintf@c^(0+128),w
  3528  06FC  1D03               	btfss	3,2
  3529  06FD  2EFF               	goto	u6181
  3530  06FE  2F00               	goto	u6180
  3531  06FF                     u6181:
  3532  06FF  2E58               	goto	l3833
  3533  0700                     u6180:
  3534  0700  2F12               	goto	l3849
  3535  0701                     l3843:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3538  0701  3030               	movlw	48
  3539  0702  00A9               	movwf	??_sprintf^(0+128)
  3540  0703  0845               	movf	sprintf@sp^(0+128),w
  3541  0704  0084               	movwf	4
  3542  0705  0829               	movf	??_sprintf^(0+128),w
  3543  0706  1383               	bcf	3,7	;select IRP bank0
  3544  0707  0080               	movwf	0
  3545  0708                     l3845:
  3546  0708  3001               	movlw	1
  3547  0709  00A9               	movwf	??_sprintf^(0+128)
  3548  070A  0829               	movf	??_sprintf^(0+128),w
  3549  070B  07C5               	addwf	sprintf@sp^(0+128),f
  3550  070C                     l3847:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3553  070C  30FF               	movlw	255
  3554  070D  07C6               	addwf	sprintf@prec^(0+128),f
  3555  070E  1803               	skipnc
  3556  070F  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3557  0710  30FF               	movlw	255
  3558  0711  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3559  0712                     l3849:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3562  0712  0846               	movf	sprintf@prec^(0+128),w
  3563  0713  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3564  0714  1D03               	btfss	3,2
  3565  0715  2F17               	goto	u6191
  3566  0716  2F18               	goto	u6190
  3567  0717                     u6191:
  3568  0717  2F01               	goto	l3843
  3569  0718                     u6190:
  3570  0718  2FDC               	goto	l3897
  3571  0719                     l3851:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3574  0719  0846               	movf	sprintf@prec^(0+128),w
  3575  071A  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3576  071B  1D03               	btfss	3,2
  3577  071C  2F1E               	goto	u6201
  3578  071D  2F1F               	goto	u6200
  3579  071E                     u6201:
  3580  071E  2F2D               	goto	l409
  3581  071F                     u6200:
  3582  071F                     l3853:
  3583  071F  0836               	movf	(sprintf@val+3)^(0+128),w
  3584  0720  0435               	iorwf	(sprintf@val+2)^(0+128),w
  3585  0721  0434               	iorwf	(sprintf@val+1)^(0+128),w
  3586  0722  0433               	iorwf	sprintf@val^(0+128),w
  3587  0723  1D03               	skipz
  3588  0724  2F26               	goto	u6211
  3589  0725  2F27               	goto	u6210
  3590  0726                     u6211:
  3591  0726  2F2D               	goto	l409
  3592  0727                     u6210:
  3593  0727                     l3855:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3596  0727  3001               	movlw	1
  3597  0728  07C6               	addwf	sprintf@prec^(0+128),f
  3598  0729  1803               	skipnc
  3599  072A  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3600  072B  3000               	movlw	0
  3601  072C  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3602  072D                     l409:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3605  072D  0847               	movf	(sprintf@prec+1)^(0+128),w
  3606  072E  3A80               	xorlw	128
  3607  072F  3C80               	sublw	128
  3608  0730  1D03               	skipz
  3609  0731  2F34               	goto	u6225
  3610  0732  0846               	movf	sprintf@prec^(0+128),w
  3611  0733  0248               	subwf	sprintf@c^(0+128),w
  3612  0734                     u6225:
  3613  0734  1803               	skipnc
  3614  0735  2F37               	goto	u6221
  3615  0736  2F38               	goto	u6220
  3616  0737                     u6221:
  3617  0737  2F3F               	goto	l3859
  3618  0738                     u6220:
  3619  0738                     l3857:
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3622  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3623  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3624  073A  0846               	movf	sprintf@prec^(0+128),w
  3625  073B  00A9               	movwf	??_sprintf^(0+128)
  3626  073C  0829               	movf	??_sprintf^(0+128),w
  3627  073D  00C8               	movwf	sprintf@c^(0+128)
  3628  073E  2F57               	goto	l3863
  3629  073F                     l3859:
  3630  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3632  0741  0847               	movf	(sprintf@prec+1)^(0+128),w
  3633  0742  3A80               	xorlw	128
  3634  0743  00A9               	movwf	??_sprintf^(0+128)
  3635  0744  3080               	movlw	128
  3636  0745  0229               	subwf	??_sprintf^(0+128),w
  3637  0746  1D03               	skipz
  3638  0747  2F4A               	goto	u6235
  3639  0748  0848               	movf	sprintf@c^(0+128),w
  3640  0749  0246               	subwf	sprintf@prec^(0+128),w
  3641  074A                     u6235:
  3642  074A  1803               	skipnc
  3643  074B  2F4D               	goto	u6231
  3644  074C  2F4E               	goto	u6230
  3645  074D                     u6231:
  3646  074D  2F57               	goto	l3863
  3647  074E                     u6230:
  3648  074E                     l3861:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3651  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3652  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3653  0750  0848               	movf	sprintf@c^(0+128),w
  3654  0751  00A9               	movwf	??_sprintf^(0+128)
  3655  0752  01AA               	clrf	(??_sprintf^(0+128)+1)
  3656  0753  0829               	movf	??_sprintf^(0+128),w
  3657  0754  00C6               	movwf	sprintf@prec^(0+128)
  3658  0755  082A               	movf	(??_sprintf+1)^(0+128),w
  3659  0756  00C7               	movwf	(sprintf@prec+1)^(0+128)
  3660  0757                     l3863:
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3663  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3664  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3665  0759  0839               	movf	sprintf@width^(0+128),w
  3666  075A  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3667  075B  1903               	btfsc	3,2
  3668  075C  2F5E               	goto	u6241
  3669  075D  2F5F               	goto	u6240
  3670  075E                     u6241:
  3671  075E  2F71               	goto	l3869
  3672  075F                     u6240:
  3673  075F                     l3865:
  3674  075F  3003               	movlw	3
  3675  0760  0537               	andwf	sprintf@flag^(0+128),w
  3676  0761  00A9               	movwf	??_sprintf^(0+128)
  3677  0762  3000               	movlw	0
  3678  0763  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3679  0764  00AA               	movwf	(??_sprintf+1)^(0+128)
  3680  0765  0829               	movf	??_sprintf^(0+128),w
  3681  0766  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3682  0767  1903               	btfsc	3,2
  3683  0768  2F6A               	goto	u6251
  3684  0769  2F6B               	goto	u6250
  3685  076A                     u6251:
  3686  076A  2F71               	goto	l3869
  3687  076B                     u6250:
  3688  076B                     l3867:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3691  076B  30FF               	movlw	255
  3692  076C  07B9               	addwf	sprintf@width^(0+128),f
  3693  076D  1803               	skipnc
  3694  076E  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3695  076F  30FF               	movlw	255
  3696  0770  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3697  0771                     l3869:
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3700  0771  1F38               	btfss	(sprintf@flag+1)^(0+128),6
  3701  0772  2F74               	goto	u6261
  3702  0773  2F75               	goto	u6260
  3703  0774                     u6261:
  3704  0774  2F90               	goto	l3877
  3705  0775                     u6260:
  3706  0775                     l3871:
  3707                           
  3708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3709  0775  0847               	movf	(sprintf@prec+1)^(0+128),w
  3710  0776  3A80               	xorlw	128
  3711  0777  00A9               	movwf	??_sprintf^(0+128)
  3712  0778  083A               	movf	(sprintf@width+1)^(0+128),w
  3713  0779  3A80               	xorlw	128
  3714  077A  0229               	subwf	??_sprintf^(0+128),w
  3715  077B  1D03               	skipz
  3716  077C  2F7F               	goto	u6275
  3717  077D  0839               	movf	sprintf@width^(0+128),w
  3718  077E  0246               	subwf	sprintf@prec^(0+128),w
  3719  077F                     u6275:
  3720  077F  1803               	skipnc
  3721  0780  2F82               	goto	u6271
  3722  0781  2F83               	goto	u6270
  3723  0782                     u6271:
  3724  0782  2F8C               	goto	l3875
  3725  0783                     u6270:
  3726  0783                     l3873:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3729  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0784  1303               	bcf	3,6	;RP1=0, select bank1
  3731  0785  0846               	movf	sprintf@prec^(0+128),w
  3732  0786  02B9               	subwf	sprintf@width^(0+128),f
  3733  0787  0847               	movf	(sprintf@prec+1)^(0+128),w
  3734  0788  1C03               	skipc
  3735  0789  03BA               	decf	(sprintf@width+1)^(0+128),f
  3736  078A  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3737  078B  2F90               	goto	l3877
  3738  078C                     l3875:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3741  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3742  078D  1303               	bcf	3,6	;RP1=0, select bank1
  3743  078E  01B9               	clrf	sprintf@width^(0+128)
  3744  078F  01BA               	clrf	(sprintf@width+1)^(0+128)
  3745  0790                     l3877:
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3748  0790  083A               	movf	(sprintf@width+1)^(0+128),w
  3749  0791  3A80               	xorlw	128
  3750  0792  3C80               	sublw	128
  3751  0793  1D03               	skipz
  3752  0794  2F97               	goto	u6285
  3753  0795  0839               	movf	sprintf@width^(0+128),w
  3754  0796  0248               	subwf	sprintf@c^(0+128),w
  3755  0797                     u6285:
  3756  0797  1803               	skipnc
  3757  0798  2F9A               	goto	u6281
  3758  0799  2F9B               	goto	u6280
  3759  079A                     u6281:
  3760  079A  2FA7               	goto	l3881
  3761  079B                     u6280:
  3762  079B                     l3879:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3765  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3766  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3767  079D  0848               	movf	sprintf@c^(0+128),w
  3768  079E  00A9               	movwf	??_sprintf^(0+128)
  3769  079F  01AA               	clrf	(??_sprintf^(0+128)+1)
  3770  07A0  0829               	movf	??_sprintf^(0+128),w
  3771  07A1  02B9               	subwf	sprintf@width^(0+128),f
  3772  07A2  082A               	movf	(??_sprintf+1)^(0+128),w
  3773  07A3  1C03               	skipc
  3774  07A4  03BA               	decf	(sprintf@width+1)^(0+128),f
  3775  07A5  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3776  07A6  2FAB               	goto	l3883
  3777  07A7                     l3881:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3780  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3781  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3782  07A9  01B9               	clrf	sprintf@width^(0+128)
  3783  07AA  01BA               	clrf	(sprintf@width+1)^(0+128)
  3784  07AB                     l3883:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3787  07AB  0839               	movf	sprintf@width^(0+128),w
  3788  07AC  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3789  07AD  1903               	btfsc	3,2
  3790  07AE  2FB0               	goto	u6291
  3791  07AF  2FB1               	goto	u6290
  3792  07B0                     u6291:
  3793  07B0  2FC8               	goto	l3891
  3794  07B1                     u6290:
  3795  07B1                     l3885:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3798  07B1  3020               	movlw	32
  3799  07B2  00A9               	movwf	??_sprintf^(0+128)
  3800  07B3  0845               	movf	sprintf@sp^(0+128),w
  3801  07B4  0084               	movwf	4
  3802  07B5  0829               	movf	??_sprintf^(0+128),w
  3803  07B6  1383               	bcf	3,7	;select IRP bank0
  3804  07B7  0080               	movwf	0
  3805  07B8                     l3887:
  3806  07B8  3001               	movlw	1
  3807  07B9  00A9               	movwf	??_sprintf^(0+128)
  3808  07BA  0829               	movf	??_sprintf^(0+128),w
  3809  07BB  07C5               	addwf	sprintf@sp^(0+128),f
  3810  07BC                     l3889:
  3811  07BC  30FF               	movlw	255
  3812  07BD  07B9               	addwf	sprintf@width^(0+128),f
  3813  07BE  1803               	skipnc
  3814  07BF  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3815  07C0  30FF               	movlw	255
  3816  07C1  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3817  07C2  0839               	movf	sprintf@width^(0+128),w
  3818  07C3  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3819  07C4  1D03               	btfss	3,2
  3820  07C5  2FC7               	goto	u6301
  3821  07C6  2FC8               	goto	u6300
  3822  07C7                     u6301:
  3823  07C7  2FB1               	goto	l3885
  3824  07C8                     u6300:
  3825  07C8                     l3891:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3828  07C8  3003               	movlw	3
  3829  07C9  0537               	andwf	sprintf@flag^(0+128),w
  3830  07CA  00A9               	movwf	??_sprintf^(0+128)
  3831  07CB  3000               	movlw	0
  3832  07CC  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3833  07CD  00AA               	movwf	(??_sprintf+1)^(0+128)
  3834  07CE  0829               	movf	??_sprintf^(0+128),w
  3835  07CF  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3836  07D0  1903               	btfsc	3,2
  3837  07D1  2FD3               	goto	u6311
  3838  07D2  2FD4               	goto	u6310
  3839  07D3                     u6311:
  3840  07D3  2FDC               	goto	l3897
  3841  07D4                     u6310:
  3842  07D4                     l3893:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3845  07D4  302D               	movlw	45
  3846  07D5  00A9               	movwf	??_sprintf^(0+128)
  3847  07D6  0845               	movf	sprintf@sp^(0+128),w
  3848  07D7  0084               	movwf	4
  3849  07D8  0829               	movf	??_sprintf^(0+128),w
  3850  07D9  1383               	bcf	3,7	;select IRP bank0
  3851  07DA  0080               	movwf	0
  3852  07DB  288D               	goto	l3653
  3853  07DC                     l3897:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3856  07DC  3001               	movlw	1
  3857  07DD  07A0               	addwf	sprintf@f^(0+128),f
  3858  07DE  30FF               	movlw	-1
  3859  07DF  0720               	addwf	sprintf@f^(0+128),w
  3860  07E0  0084               	movwf	4
  3861  07E1  120A  158A  200A  120A  118A  	fcall	stringdir
  3862  07E6  00A9               	movwf	??_sprintf^(0+128)
  3863  07E7  0829               	movf	??_sprintf^(0+128),w
  3864  07E8  00C8               	movwf	sprintf@c^(0+128)
  3865  07E9  0848               	movf	sprintf@c^(0+128),w
  3866  07EA  1D03               	btfss	3,2
  3867  07EB  2FED               	goto	u6321
  3868  07EC  2FEE               	goto	u6320
  3869  07ED                     u6321:
  3870  07ED  2880               	goto	l3649
  3871  07EE                     u6320:
  3872  07EE                     l3899:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3875  07EE  0845               	movf	sprintf@sp^(0+128),w
  3876  07EF  0084               	movwf	4
  3877  07F0  1383               	bcf	3,7	;select IRP bank0
  3878  07F1  0180               	clrf	0
  3879  07F2                     l424:
  3880  07F2  0008               	return
  3881  07F3                     __end_of_sprintf:
  3882                           
  3883                           	psect	text2
  3884  0940                     __ptext2:	
  3885 ;; *************** function _scale *****************
  3886 ;; Defined at:
  3887 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  scl             1    wreg     char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  scl             1   48[BANK0 ] char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  4   30[BANK0 ] char 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       4       0       0       0
  3902 ;;      Locals:         0       5       0       0       0
  3903 ;;      Temps:          0      10       0       0       0
  3904 ;;      Totals:         0      19       0       0       0
  3905 ;;Total ram usage:       19 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		___awdiv
  3910 ;;		___awmod
  3911 ;;		___flmul
  3912 ;; This function is called by:
  3913 ;;		_sprintf
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _scale
  3919  0940                     _scale:
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3923                           ;scale@scl stored from wreg
  3924  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0942  00D0               	movwf	scale@scl
  3927  0943                     l3071:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3930  0943  1FD0               	btfss	scale@scl,7
  3931  0944  2946               	goto	u4531
  3932  0945  2947               	goto	u4530
  3933  0946                     u4531:
  3934  0946  2AF4               	goto	l3093
  3935  0947                     u4530:
  3936  0947                     l3073:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3939  0947  09D0               	comf	scale@scl,f
  3940  0948  0AD0               	incf	scale@scl,f
  3941  0949                     l3075:
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3944  0949  0850               	movf	scale@scl,w
  3945  094A  3A80               	xorlw	128
  3946  094B  3E12               	addlw	-238
  3947  094C  1C03               	skipc
  3948  094D  294F               	goto	u4541
  3949  094E  2950               	goto	u4540
  3950  094F                     u4541:
  3951  094F  2A38               	goto	l3083
  3952  0950                     u4540:
  3953  0950                     l3077:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3956  0950  300A               	movlw	10
  3957  0951  00F7               	movwf	___awdiv@divisor
  3958  0952  3000               	movlw	0
  3959  0953  00F8               	movwf	___awdiv@divisor+1
  3960  0954  0850               	movf	scale@scl,w
  3961  0955  00F2               	movwf	___awmod@dividend
  3962  0956  01F3               	clrf	___awmod@dividend+1
  3963  0957  1BF2               	btfsc	___awmod@dividend,7
  3964  0958  03F3               	decf	___awmod@dividend+1,f
  3965  0959  3064               	movlw	100
  3966  095A  00F0               	movwf	___awmod@divisor
  3967  095B  3000               	movlw	0
  3968  095C  00F1               	movwf	___awmod@divisor+1
  3969  095D  160A  158A  230D  120A  158A  	fcall	___awmod
  3970  0962  0871               	movf	?___awmod+1,w
  3971  0963  00FA               	movwf	___awdiv@dividend+1
  3972  0964  0870               	movf	?___awmod,w
  3973  0965  00F9               	movwf	___awdiv@dividend
  3974  0966  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3975  096B  0877               	movf	?___awdiv,w
  3976  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3977  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3978  096E  00C2               	movwf	??_scale
  3979  096F  3001               	movlw	1
  3980  0970                     u4555:
  3981  0970  1003               	clrc
  3982  0971  0DC2               	rlf	??_scale,f
  3983  0972  3EFF               	addlw	-1
  3984  0973  1D03               	skipz
  3985  0974  2970               	goto	u4555
  3986  0975  1003               	clrc
  3987  0976  0D42               	rlf	??_scale,w
  3988  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3989  0978  0084               	movwf	4
  3990  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  3991  097E  00C3               	movwf	??_scale+1
  3992  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  3993  0984  00C4               	movwf	??_scale+2
  3994  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  3995  098A  00C5               	movwf	??_scale+3
  3996  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  3997  0990  00C6               	movwf	??_scale+4
  3998  0991  0846               	movf	??_scale+4,w
  3999  0992  00A7               	movwf	___flmul@b+3
  4000  0993  0845               	movf	??_scale+3,w
  4001  0994  00A6               	movwf	___flmul@b+2
  4002  0995  0844               	movf	??_scale+2,w
  4003  0996  00A5               	movwf	___flmul@b+1
  4004  0997  0843               	movf	??_scale+1,w
  4005  0998  00A4               	movwf	___flmul@b
  4006  0999  3064               	movlw	100
  4007  099A  00F7               	movwf	___awdiv@divisor
  4008  099B  3000               	movlw	0
  4009  099C  00F8               	movwf	___awdiv@divisor+1
  4010  099D  0850               	movf	scale@scl,w
  4011  099E  00F9               	movwf	___awdiv@dividend
  4012  099F  01FA               	clrf	___awdiv@dividend+1
  4013  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4014  09A1  03FA               	decf	___awdiv@dividend+1,f
  4015  09A2  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4016  09A7  0877               	movf	?___awdiv,w
  4017  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4018  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4019  09AA  00C7               	movwf	??_scale+5
  4020  09AB  3001               	movlw	1
  4021  09AC                     u4565:
  4022  09AC  1003               	clrc
  4023  09AD  0DC7               	rlf	??_scale+5,f
  4024  09AE  3EFF               	addlw	-1
  4025  09AF  1D03               	skipz
  4026  09B0  29AC               	goto	u4565
  4027  09B1  1003               	clrc
  4028  09B2  0D47               	rlf	??_scale+5,w
  4029  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4030  09B4  0084               	movwf	4
  4031  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4032  09BA  00C8               	movwf	??_scale+6
  4033  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4034  09C0  00C9               	movwf	??_scale+7
  4035  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4036  09C6  00CA               	movwf	??_scale+8
  4037  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4038  09CC  00CB               	movwf	??_scale+9
  4039  09CD  084B               	movf	??_scale+9,w
  4040  09CE  00AB               	movwf	___flmul@a+3
  4041  09CF  084A               	movf	??_scale+8,w
  4042  09D0  00AA               	movwf	___flmul@a+2
  4043  09D1  0849               	movf	??_scale+7,w
  4044  09D2  00A9               	movwf	___flmul@a+1
  4045  09D3  0848               	movf	??_scale+6,w
  4046  09D4  00A8               	movwf	___flmul@a
  4047  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4048  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4049  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4050  09DC  0827               	movf	?___flmul+3,w
  4051  09DD  00CF               	movwf	_scale$1066+3
  4052  09DE  0826               	movf	?___flmul+2,w
  4053  09DF  00CE               	movwf	_scale$1066+2
  4054  09E0  0825               	movf	?___flmul+1,w
  4055  09E1  00CD               	movwf	_scale$1066+1
  4056  09E2  0824               	movf	?___flmul,w
  4057  09E3  00CC               	movwf	_scale$1066
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4060  09E4  300A               	movlw	10
  4061  09E5  00F0               	movwf	___awmod@divisor
  4062  09E6  3000               	movlw	0
  4063  09E7  00F1               	movwf	___awmod@divisor+1
  4064  09E8  0850               	movf	scale@scl,w
  4065  09E9  00F2               	movwf	___awmod@dividend
  4066  09EA  01F3               	clrf	___awmod@dividend+1
  4067  09EB  1BF2               	btfsc	___awmod@dividend,7
  4068  09EC  03F3               	decf	___awmod@dividend+1,f
  4069  09ED  160A  158A  230D  120A  158A  	fcall	___awmod
  4070  09F2  0870               	movf	?___awmod,w
  4071  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4072  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4073  09F5  00C2               	movwf	??_scale
  4074  09F6  3001               	movlw	1
  4075  09F7                     u4575:
  4076  09F7  1003               	clrc
  4077  09F8  0DC2               	rlf	??_scale,f
  4078  09F9  3EFF               	addlw	-1
  4079  09FA  1D03               	skipz
  4080  09FB  29F7               	goto	u4575
  4081  09FC  1003               	clrc
  4082  09FD  0D42               	rlf	??_scale,w
  4083  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4084  09FF  0084               	movwf	4
  4085  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4086  0A05  00C3               	movwf	??_scale+1
  4087  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4088  0A0B  00C4               	movwf	??_scale+2
  4089  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4090  0A11  00C5               	movwf	??_scale+3
  4091  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4092  0A17  00C6               	movwf	??_scale+4
  4093  0A18  0846               	movf	??_scale+4,w
  4094  0A19  00A7               	movwf	___flmul@b+3
  4095  0A1A  0845               	movf	??_scale+3,w
  4096  0A1B  00A6               	movwf	___flmul@b+2
  4097  0A1C  0844               	movf	??_scale+2,w
  4098  0A1D  00A5               	movwf	___flmul@b+1
  4099  0A1E  0843               	movf	??_scale+1,w
  4100  0A1F  00A4               	movwf	___flmul@b
  4101  0A20  084F               	movf	_scale$1066+3,w
  4102  0A21  00AB               	movwf	___flmul@a+3
  4103  0A22  084E               	movf	_scale$1066+2,w
  4104  0A23  00AA               	movwf	___flmul@a+2
  4105  0A24  084D               	movf	_scale$1066+1,w
  4106  0A25  00A9               	movwf	___flmul@a+1
  4107  0A26  084C               	movf	_scale$1066,w
  4108  0A27  00A8               	movwf	___flmul@a
  4109  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4110  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0A2F  0827               	movf	?___flmul+3,w
  4113  0A30  00C1               	movwf	?_scale+3
  4114  0A31  0826               	movf	?___flmul+2,w
  4115  0A32  00C0               	movwf	?_scale+2
  4116  0A33  0825               	movf	?___flmul+1,w
  4117  0A34  00BF               	movwf	?_scale+1
  4118  0A35  0824               	movf	?___flmul,w
  4119  0A36  00BE               	movwf	?_scale
  4120  0A37  2C9E               	goto	l341
  4121  0A38                     l3083:
  4122  0A38  0850               	movf	scale@scl,w
  4123  0A39  3A80               	xorlw	128
  4124  0A3A  3E75               	addlw	-139
  4125  0A3B  1C03               	skipc
  4126  0A3C  2A3E               	goto	u4581
  4127  0A3D  2A3F               	goto	u4580
  4128  0A3E                     u4581:
  4129  0A3E  2AC7               	goto	l3089
  4130  0A3F                     u4580:
  4131  0A3F                     l3085:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4134  0A3F  300A               	movlw	10
  4135  0A40  00F0               	movwf	___awmod@divisor
  4136  0A41  3000               	movlw	0
  4137  0A42  00F1               	movwf	___awmod@divisor+1
  4138  0A43  0850               	movf	scale@scl,w
  4139  0A44  00F2               	movwf	___awmod@dividend
  4140  0A45  01F3               	clrf	___awmod@dividend+1
  4141  0A46  1BF2               	btfsc	___awmod@dividend,7
  4142  0A47  03F3               	decf	___awmod@dividend+1,f
  4143  0A48  160A  158A  230D  120A  158A  	fcall	___awmod
  4144  0A4D  0870               	movf	?___awmod,w
  4145  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0A50  00C2               	movwf	??_scale
  4148  0A51  3001               	movlw	1
  4149  0A52                     u4595:
  4150  0A52  1003               	clrc
  4151  0A53  0DC2               	rlf	??_scale,f
  4152  0A54  3EFF               	addlw	-1
  4153  0A55  1D03               	skipz
  4154  0A56  2A52               	goto	u4595
  4155  0A57  1003               	clrc
  4156  0A58  0D42               	rlf	??_scale,w
  4157  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4158  0A5A  0084               	movwf	4
  4159  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4160  0A60  00C3               	movwf	??_scale+1
  4161  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4162  0A66  00C4               	movwf	??_scale+2
  4163  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4164  0A6C  00C5               	movwf	??_scale+3
  4165  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4166  0A72  00C6               	movwf	??_scale+4
  4167  0A73  0846               	movf	??_scale+4,w
  4168  0A74  00A7               	movwf	___flmul@b+3
  4169  0A75  0845               	movf	??_scale+3,w
  4170  0A76  00A6               	movwf	___flmul@b+2
  4171  0A77  0844               	movf	??_scale+2,w
  4172  0A78  00A5               	movwf	___flmul@b+1
  4173  0A79  0843               	movf	??_scale+1,w
  4174  0A7A  00A4               	movwf	___flmul@b
  4175  0A7B  300A               	movlw	10
  4176  0A7C  00F7               	movwf	___awdiv@divisor
  4177  0A7D  3000               	movlw	0
  4178  0A7E  00F8               	movwf	___awdiv@divisor+1
  4179  0A7F  0850               	movf	scale@scl,w
  4180  0A80  00F9               	movwf	___awdiv@dividend
  4181  0A81  01FA               	clrf	___awdiv@dividend+1
  4182  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4183  0A83  03FA               	decf	___awdiv@dividend+1,f
  4184  0A84  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4185  0A89  0877               	movf	?___awdiv,w
  4186  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0A8C  00C7               	movwf	??_scale+5
  4189  0A8D  3001               	movlw	1
  4190  0A8E                     u4605:
  4191  0A8E  1003               	clrc
  4192  0A8F  0DC7               	rlf	??_scale+5,f
  4193  0A90  3EFF               	addlw	-1
  4194  0A91  1D03               	skipz
  4195  0A92  2A8E               	goto	u4605
  4196  0A93  1003               	clrc
  4197  0A94  0D47               	rlf	??_scale+5,w
  4198  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4199  0A96  0084               	movwf	4
  4200  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4201  0A9C  00C8               	movwf	??_scale+6
  4202  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4203  0AA2  00C9               	movwf	??_scale+7
  4204  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4205  0AA8  00CA               	movwf	??_scale+8
  4206  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4207  0AAE  00CB               	movwf	??_scale+9
  4208  0AAF  084B               	movf	??_scale+9,w
  4209  0AB0  00AB               	movwf	___flmul@a+3
  4210  0AB1  084A               	movf	??_scale+8,w
  4211  0AB2  00AA               	movwf	___flmul@a+2
  4212  0AB3  0849               	movf	??_scale+7,w
  4213  0AB4  00A9               	movwf	___flmul@a+1
  4214  0AB5  0848               	movf	??_scale+6,w
  4215  0AB6  00A8               	movwf	___flmul@a
  4216  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4217  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0ABE  0827               	movf	?___flmul+3,w
  4220  0ABF  00C1               	movwf	?_scale+3
  4221  0AC0  0826               	movf	?___flmul+2,w
  4222  0AC1  00C0               	movwf	?_scale+2
  4223  0AC2  0825               	movf	?___flmul+1,w
  4224  0AC3  00BF               	movwf	?_scale+1
  4225  0AC4  0824               	movf	?___flmul,w
  4226  0AC5  00BE               	movwf	?_scale
  4227  0AC6  2C9E               	goto	l341
  4228  0AC7                     l3089:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4231  0AC7  0850               	movf	scale@scl,w
  4232  0AC8  00C2               	movwf	??_scale
  4233  0AC9  3001               	movlw	1
  4234  0ACA                     u4615:
  4235  0ACA  1003               	clrc
  4236  0ACB  0DC2               	rlf	??_scale,f
  4237  0ACC  3EFF               	addlw	-1
  4238  0ACD  1D03               	skipz
  4239  0ACE  2ACA               	goto	u4615
  4240  0ACF  1003               	clrc
  4241  0AD0  0D42               	rlf	??_scale,w
  4242  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4243  0AD2  0084               	movwf	4
  4244  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4245  0AD8  00C3               	movwf	??_scale+1
  4246  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4247  0ADE  00C4               	movwf	??_scale+2
  4248  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4249  0AE4  00C5               	movwf	??_scale+3
  4250  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4251  0AEA  00C6               	movwf	??_scale+4
  4252  0AEB  0846               	movf	??_scale+4,w
  4253  0AEC  00C1               	movwf	?_scale+3
  4254  0AED  0845               	movf	??_scale+3,w
  4255  0AEE  00C0               	movwf	?_scale+2
  4256  0AEF  0844               	movf	??_scale+2,w
  4257  0AF0  00BF               	movwf	?_scale+1
  4258  0AF1  0843               	movf	??_scale+1,w
  4259  0AF2  00BE               	movwf	?_scale
  4260  0AF3  2C9E               	goto	l341
  4261  0AF4                     l3093:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4264  0AF4  0850               	movf	scale@scl,w
  4265  0AF5  3A80               	xorlw	128
  4266  0AF6  3E12               	addlw	-238
  4267  0AF7  1C03               	skipc
  4268  0AF8  2AFA               	goto	u4621
  4269  0AF9  2AFB               	goto	u4620
  4270  0AFA                     u4621:
  4271  0AFA  2BE3               	goto	l3101
  4272  0AFB                     u4620:
  4273  0AFB                     l3095:
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4276  0AFB  300A               	movlw	10
  4277  0AFC  00F7               	movwf	___awdiv@divisor
  4278  0AFD  3000               	movlw	0
  4279  0AFE  00F8               	movwf	___awdiv@divisor+1
  4280  0AFF  0850               	movf	scale@scl,w
  4281  0B00  00F2               	movwf	___awmod@dividend
  4282  0B01  01F3               	clrf	___awmod@dividend+1
  4283  0B02  1BF2               	btfsc	___awmod@dividend,7
  4284  0B03  03F3               	decf	___awmod@dividend+1,f
  4285  0B04  3064               	movlw	100
  4286  0B05  00F0               	movwf	___awmod@divisor
  4287  0B06  3000               	movlw	0
  4288  0B07  00F1               	movwf	___awmod@divisor+1
  4289  0B08  160A  158A  230D  120A  158A  	fcall	___awmod
  4290  0B0D  0871               	movf	?___awmod+1,w
  4291  0B0E  00FA               	movwf	___awdiv@dividend+1
  4292  0B0F  0870               	movf	?___awmod,w
  4293  0B10  00F9               	movwf	___awdiv@dividend
  4294  0B11  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4295  0B16  0877               	movf	?___awdiv,w
  4296  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0B19  00C2               	movwf	??_scale
  4299  0B1A  3001               	movlw	1
  4300  0B1B                     u4635:
  4301  0B1B  1003               	clrc
  4302  0B1C  0DC2               	rlf	??_scale,f
  4303  0B1D  3EFF               	addlw	-1
  4304  0B1E  1D03               	skipz
  4305  0B1F  2B1B               	goto	u4635
  4306  0B20  1003               	clrc
  4307  0B21  0D42               	rlf	??_scale,w
  4308  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4309  0B23  0084               	movwf	4
  4310  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4311  0B29  00C3               	movwf	??_scale+1
  4312  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4313  0B2F  00C4               	movwf	??_scale+2
  4314  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4315  0B35  00C5               	movwf	??_scale+3
  4316  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4317  0B3B  00C6               	movwf	??_scale+4
  4318  0B3C  0846               	movf	??_scale+4,w
  4319  0B3D  00A7               	movwf	___flmul@b+3
  4320  0B3E  0845               	movf	??_scale+3,w
  4321  0B3F  00A6               	movwf	___flmul@b+2
  4322  0B40  0844               	movf	??_scale+2,w
  4323  0B41  00A5               	movwf	___flmul@b+1
  4324  0B42  0843               	movf	??_scale+1,w
  4325  0B43  00A4               	movwf	___flmul@b
  4326  0B44  3064               	movlw	100
  4327  0B45  00F7               	movwf	___awdiv@divisor
  4328  0B46  3000               	movlw	0
  4329  0B47  00F8               	movwf	___awdiv@divisor+1
  4330  0B48  0850               	movf	scale@scl,w
  4331  0B49  00F9               	movwf	___awdiv@dividend
  4332  0B4A  01FA               	clrf	___awdiv@dividend+1
  4333  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4334  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4335  0B4D  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4336  0B52  0877               	movf	?___awdiv,w
  4337  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4339  0B55  00C7               	movwf	??_scale+5
  4340  0B56  3001               	movlw	1
  4341  0B57                     u4645:
  4342  0B57  1003               	clrc
  4343  0B58  0DC7               	rlf	??_scale+5,f
  4344  0B59  3EFF               	addlw	-1
  4345  0B5A  1D03               	skipz
  4346  0B5B  2B57               	goto	u4645
  4347  0B5C  1003               	clrc
  4348  0B5D  0D47               	rlf	??_scale+5,w
  4349  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4350  0B5F  0084               	movwf	4
  4351  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4352  0B65  00C8               	movwf	??_scale+6
  4353  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4354  0B6B  00C9               	movwf	??_scale+7
  4355  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4356  0B71  00CA               	movwf	??_scale+8
  4357  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4358  0B77  00CB               	movwf	??_scale+9
  4359  0B78  084B               	movf	??_scale+9,w
  4360  0B79  00AB               	movwf	___flmul@a+3
  4361  0B7A  084A               	movf	??_scale+8,w
  4362  0B7B  00AA               	movwf	___flmul@a+2
  4363  0B7C  0849               	movf	??_scale+7,w
  4364  0B7D  00A9               	movwf	___flmul@a+1
  4365  0B7E  0848               	movf	??_scale+6,w
  4366  0B7F  00A8               	movwf	___flmul@a
  4367  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4368  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0B87  0827               	movf	?___flmul+3,w
  4371  0B88  00CF               	movwf	_scale$1066+3
  4372  0B89  0826               	movf	?___flmul+2,w
  4373  0B8A  00CE               	movwf	_scale$1066+2
  4374  0B8B  0825               	movf	?___flmul+1,w
  4375  0B8C  00CD               	movwf	_scale$1066+1
  4376  0B8D  0824               	movf	?___flmul,w
  4377  0B8E  00CC               	movwf	_scale$1066
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4380  0B8F  300A               	movlw	10
  4381  0B90  00F0               	movwf	___awmod@divisor
  4382  0B91  3000               	movlw	0
  4383  0B92  00F1               	movwf	___awmod@divisor+1
  4384  0B93  0850               	movf	scale@scl,w
  4385  0B94  00F2               	movwf	___awmod@dividend
  4386  0B95  01F3               	clrf	___awmod@dividend+1
  4387  0B96  1BF2               	btfsc	___awmod@dividend,7
  4388  0B97  03F3               	decf	___awmod@dividend+1,f
  4389  0B98  160A  158A  230D  120A  158A  	fcall	___awmod
  4390  0B9D  0870               	movf	?___awmod,w
  4391  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0BA0  00C2               	movwf	??_scale
  4394  0BA1  3001               	movlw	1
  4395  0BA2                     u4655:
  4396  0BA2  1003               	clrc
  4397  0BA3  0DC2               	rlf	??_scale,f
  4398  0BA4  3EFF               	addlw	-1
  4399  0BA5  1D03               	skipz
  4400  0BA6  2BA2               	goto	u4655
  4401  0BA7  1003               	clrc
  4402  0BA8  0D42               	rlf	??_scale,w
  4403  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4404  0BAA  0084               	movwf	4
  4405  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4406  0BB0  00C3               	movwf	??_scale+1
  4407  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4408  0BB6  00C4               	movwf	??_scale+2
  4409  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4410  0BBC  00C5               	movwf	??_scale+3
  4411  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4412  0BC2  00C6               	movwf	??_scale+4
  4413  0BC3  0846               	movf	??_scale+4,w
  4414  0BC4  00A7               	movwf	___flmul@b+3
  4415  0BC5  0845               	movf	??_scale+3,w
  4416  0BC6  00A6               	movwf	___flmul@b+2
  4417  0BC7  0844               	movf	??_scale+2,w
  4418  0BC8  00A5               	movwf	___flmul@b+1
  4419  0BC9  0843               	movf	??_scale+1,w
  4420  0BCA  00A4               	movwf	___flmul@b
  4421  0BCB  084F               	movf	_scale$1066+3,w
  4422  0BCC  00AB               	movwf	___flmul@a+3
  4423  0BCD  084E               	movf	_scale$1066+2,w
  4424  0BCE  00AA               	movwf	___flmul@a+2
  4425  0BCF  084D               	movf	_scale$1066+1,w
  4426  0BD0  00A9               	movwf	___flmul@a+1
  4427  0BD1  084C               	movf	_scale$1066,w
  4428  0BD2  00A8               	movwf	___flmul@a
  4429  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4430  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0BDA  0827               	movf	?___flmul+3,w
  4433  0BDB  00C1               	movwf	?_scale+3
  4434  0BDC  0826               	movf	?___flmul+2,w
  4435  0BDD  00C0               	movwf	?_scale+2
  4436  0BDE  0825               	movf	?___flmul+1,w
  4437  0BDF  00BF               	movwf	?_scale+1
  4438  0BE0  0824               	movf	?___flmul,w
  4439  0BE1  00BE               	movwf	?_scale
  4440  0BE2  2C9E               	goto	l341
  4441  0BE3                     l3101:
  4442  0BE3  0850               	movf	scale@scl,w
  4443  0BE4  3A80               	xorlw	128
  4444  0BE5  3E75               	addlw	-139
  4445  0BE6  1C03               	skipc
  4446  0BE7  2BE9               	goto	u4661
  4447  0BE8  2BEA               	goto	u4660
  4448  0BE9                     u4661:
  4449  0BE9  2C72               	goto	l3107
  4450  0BEA                     u4660:
  4451  0BEA                     l3103:
  4452                           
  4453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4454  0BEA  300A               	movlw	10
  4455  0BEB  00F0               	movwf	___awmod@divisor
  4456  0BEC  3000               	movlw	0
  4457  0BED  00F1               	movwf	___awmod@divisor+1
  4458  0BEE  0850               	movf	scale@scl,w
  4459  0BEF  00F2               	movwf	___awmod@dividend
  4460  0BF0  01F3               	clrf	___awmod@dividend+1
  4461  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4462  0BF2  03F3               	decf	___awmod@dividend+1,f
  4463  0BF3  160A  158A  230D  120A  158A  	fcall	___awmod
  4464  0BF8  0870               	movf	?___awmod,w
  4465  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0BFB  00C2               	movwf	??_scale
  4468  0BFC  3001               	movlw	1
  4469  0BFD                     u4675:
  4470  0BFD  1003               	clrc
  4471  0BFE  0DC2               	rlf	??_scale,f
  4472  0BFF  3EFF               	addlw	-1
  4473  0C00  1D03               	skipz
  4474  0C01  2BFD               	goto	u4675
  4475  0C02  1003               	clrc
  4476  0C03  0D42               	rlf	??_scale,w
  4477  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4478  0C05  0084               	movwf	4
  4479  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4480  0C0B  00C3               	movwf	??_scale+1
  4481  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4482  0C11  00C4               	movwf	??_scale+2
  4483  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4484  0C17  00C5               	movwf	??_scale+3
  4485  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4486  0C1D  00C6               	movwf	??_scale+4
  4487  0C1E  0846               	movf	??_scale+4,w
  4488  0C1F  00A7               	movwf	___flmul@b+3
  4489  0C20  0845               	movf	??_scale+3,w
  4490  0C21  00A6               	movwf	___flmul@b+2
  4491  0C22  0844               	movf	??_scale+2,w
  4492  0C23  00A5               	movwf	___flmul@b+1
  4493  0C24  0843               	movf	??_scale+1,w
  4494  0C25  00A4               	movwf	___flmul@b
  4495  0C26  300A               	movlw	10
  4496  0C27  00F7               	movwf	___awdiv@divisor
  4497  0C28  3000               	movlw	0
  4498  0C29  00F8               	movwf	___awdiv@divisor+1
  4499  0C2A  0850               	movf	scale@scl,w
  4500  0C2B  00F9               	movwf	___awdiv@dividend
  4501  0C2C  01FA               	clrf	___awdiv@dividend+1
  4502  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4503  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4504  0C2F  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4505  0C34  0877               	movf	?___awdiv,w
  4506  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0C37  00C7               	movwf	??_scale+5
  4509  0C38  3001               	movlw	1
  4510  0C39                     u4685:
  4511  0C39  1003               	clrc
  4512  0C3A  0DC7               	rlf	??_scale+5,f
  4513  0C3B  3EFF               	addlw	-1
  4514  0C3C  1D03               	skipz
  4515  0C3D  2C39               	goto	u4685
  4516  0C3E  1003               	clrc
  4517  0C3F  0D47               	rlf	??_scale+5,w
  4518  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4519  0C41  0084               	movwf	4
  4520  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4521  0C47  00C8               	movwf	??_scale+6
  4522  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4523  0C4D  00C9               	movwf	??_scale+7
  4524  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4525  0C53  00CA               	movwf	??_scale+8
  4526  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4527  0C59  00CB               	movwf	??_scale+9
  4528  0C5A  084B               	movf	??_scale+9,w
  4529  0C5B  00AB               	movwf	___flmul@a+3
  4530  0C5C  084A               	movf	??_scale+8,w
  4531  0C5D  00AA               	movwf	___flmul@a+2
  4532  0C5E  0849               	movf	??_scale+7,w
  4533  0C5F  00A9               	movwf	___flmul@a+1
  4534  0C60  0848               	movf	??_scale+6,w
  4535  0C61  00A8               	movwf	___flmul@a
  4536  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4537  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4538  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0C69  0827               	movf	?___flmul+3,w
  4540  0C6A  00C1               	movwf	?_scale+3
  4541  0C6B  0826               	movf	?___flmul+2,w
  4542  0C6C  00C0               	movwf	?_scale+2
  4543  0C6D  0825               	movf	?___flmul+1,w
  4544  0C6E  00BF               	movwf	?_scale+1
  4545  0C6F  0824               	movf	?___flmul,w
  4546  0C70  00BE               	movwf	?_scale
  4547  0C71  2C9E               	goto	l341
  4548  0C72                     l3107:
  4549                           
  4550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4551  0C72  0850               	movf	scale@scl,w
  4552  0C73  00C2               	movwf	??_scale
  4553  0C74  3001               	movlw	1
  4554  0C75                     u4695:
  4555  0C75  1003               	clrc
  4556  0C76  0DC2               	rlf	??_scale,f
  4557  0C77  3EFF               	addlw	-1
  4558  0C78  1D03               	skipz
  4559  0C79  2C75               	goto	u4695
  4560  0C7A  1003               	clrc
  4561  0C7B  0D42               	rlf	??_scale,w
  4562  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4563  0C7D  0084               	movwf	4
  4564  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4565  0C83  00C3               	movwf	??_scale+1
  4566  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4567  0C89  00C4               	movwf	??_scale+2
  4568  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4569  0C8F  00C5               	movwf	??_scale+3
  4570  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4571  0C95  00C6               	movwf	??_scale+4
  4572  0C96  0846               	movf	??_scale+4,w
  4573  0C97  00C1               	movwf	?_scale+3
  4574  0C98  0845               	movf	??_scale+3,w
  4575  0C99  00C0               	movwf	?_scale+2
  4576  0C9A  0844               	movf	??_scale+2,w
  4577  0C9B  00BF               	movwf	?_scale+1
  4578  0C9C  0843               	movf	??_scale+1,w
  4579  0C9D  00BE               	movwf	?_scale
  4580  0C9E                     l341:
  4581  0C9E  0008               	return
  4582  0C9F                     __end_of_scale:
  4583                           
  4584                           	psect	text3
  4585  1B0D                     __ptext3:	
  4586 ;; *************** function ___awmod *****************
  4587 ;; Defined at:
  4588 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  divisor         2    0[COMMON] int 
  4591 ;;  dividend        2    2[COMMON] int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  sign            1    6[COMMON] unsigned char 
  4594 ;;  counter         1    5[COMMON] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    0[COMMON] int 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4604 ;;      Params:         4       0       0       0       0
  4605 ;;      Locals:         2       0       0       0       0
  4606 ;;      Temps:          1       0       0       0       0
  4607 ;;      Totals:         7       0       0       0       0
  4608 ;;Total ram usage:        7 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_scale
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function ___awmod
  4619  1B0D                     ___awmod:
  4620  1B0D                     l2591:	
  4621                           ;incstack = 0
  4622                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4623                           
  4624  1B0D  01F6               	clrf	___awmod@sign
  4625  1B0E                     l2593:
  4626  1B0E  1FF3               	btfss	___awmod@dividend+1,7
  4627  1B0F  2B11               	goto	u3391
  4628  1B10  2B12               	goto	u3390
  4629  1B11                     u3391:
  4630  1B11  2B19               	goto	l2599
  4631  1B12                     u3390:
  4632  1B12                     l2595:
  4633  1B12  09F2               	comf	___awmod@dividend,f
  4634  1B13  09F3               	comf	___awmod@dividend+1,f
  4635  1B14  0AF2               	incf	___awmod@dividend,f
  4636  1B15  1903               	skipnz
  4637  1B16  0AF3               	incf	___awmod@dividend+1,f
  4638  1B17                     l2597:
  4639  1B17  01F6               	clrf	___awmod@sign
  4640  1B18  0AF6               	incf	___awmod@sign,f
  4641  1B19                     l2599:
  4642  1B19  1FF1               	btfss	___awmod@divisor+1,7
  4643  1B1A  2B1C               	goto	u3401
  4644  1B1B  2B1D               	goto	u3400
  4645  1B1C                     u3401:
  4646  1B1C  2B22               	goto	l2603
  4647  1B1D                     u3400:
  4648  1B1D                     l2601:
  4649  1B1D  09F0               	comf	___awmod@divisor,f
  4650  1B1E  09F1               	comf	___awmod@divisor+1,f
  4651  1B1F  0AF0               	incf	___awmod@divisor,f
  4652  1B20  1903               	skipnz
  4653  1B21  0AF1               	incf	___awmod@divisor+1,f
  4654  1B22                     l2603:
  4655  1B22  0870               	movf	___awmod@divisor,w
  4656  1B23  0471               	iorwf	___awmod@divisor+1,w
  4657  1B24  1903               	btfsc	3,2
  4658  1B25  2B27               	goto	u3411
  4659  1B26  2B28               	goto	u3410
  4660  1B27                     u3411:
  4661  1B27  2B57               	goto	l2621
  4662  1B28                     u3410:
  4663  1B28                     l2605:
  4664  1B28  01F5               	clrf	___awmod@counter
  4665  1B29  0AF5               	incf	___awmod@counter,f
  4666  1B2A  2B36               	goto	l2611
  4667  1B2B                     l2607:
  4668  1B2B  3001               	movlw	1
  4669  1B2C                     u3425:
  4670  1B2C  1003               	clrc
  4671  1B2D  0DF0               	rlf	___awmod@divisor,f
  4672  1B2E  0DF1               	rlf	___awmod@divisor+1,f
  4673  1B2F  3EFF               	addlw	-1
  4674  1B30  1D03               	skipz
  4675  1B31  2B2C               	goto	u3425
  4676  1B32                     l2609:
  4677  1B32  3001               	movlw	1
  4678  1B33  00F4               	movwf	??___awmod
  4679  1B34  0874               	movf	??___awmod,w
  4680  1B35  07F5               	addwf	___awmod@counter,f
  4681  1B36                     l2611:
  4682  1B36  1FF1               	btfss	___awmod@divisor+1,7
  4683  1B37  2B39               	goto	u3431
  4684  1B38  2B3A               	goto	u3430
  4685  1B39                     u3431:
  4686  1B39  2B2B               	goto	l2607
  4687  1B3A                     u3430:
  4688  1B3A                     l2613:
  4689  1B3A  0871               	movf	___awmod@divisor+1,w
  4690  1B3B  0273               	subwf	___awmod@dividend+1,w
  4691  1B3C  1D03               	skipz
  4692  1B3D  2B40               	goto	u3445
  4693  1B3E  0870               	movf	___awmod@divisor,w
  4694  1B3F  0272               	subwf	___awmod@dividend,w
  4695  1B40                     u3445:
  4696  1B40  1C03               	skipc
  4697  1B41  2B43               	goto	u3441
  4698  1B42  2B44               	goto	u3440
  4699  1B43                     u3441:
  4700  1B43  2B4A               	goto	l2617
  4701  1B44                     u3440:
  4702  1B44                     l2615:
  4703  1B44  0870               	movf	___awmod@divisor,w
  4704  1B45  02F2               	subwf	___awmod@dividend,f
  4705  1B46  0871               	movf	___awmod@divisor+1,w
  4706  1B47  1C03               	skipc
  4707  1B48  03F3               	decf	___awmod@dividend+1,f
  4708  1B49  02F3               	subwf	___awmod@dividend+1,f
  4709  1B4A                     l2617:
  4710  1B4A  3001               	movlw	1
  4711  1B4B                     u3455:
  4712  1B4B  1003               	clrc
  4713  1B4C  0CF1               	rrf	___awmod@divisor+1,f
  4714  1B4D  0CF0               	rrf	___awmod@divisor,f
  4715  1B4E  3EFF               	addlw	-1
  4716  1B4F  1D03               	skipz
  4717  1B50  2B4B               	goto	u3455
  4718  1B51                     l2619:
  4719  1B51  3001               	movlw	1
  4720  1B52  02F5               	subwf	___awmod@counter,f
  4721  1B53  1D03               	btfss	3,2
  4722  1B54  2B56               	goto	u3461
  4723  1B55  2B57               	goto	u3460
  4724  1B56                     u3461:
  4725  1B56  2B3A               	goto	l2613
  4726  1B57                     u3460:
  4727  1B57                     l2621:
  4728  1B57  0876               	movf	___awmod@sign,w
  4729  1B58  1903               	btfsc	3,2
  4730  1B59  2B5B               	goto	u3471
  4731  1B5A  2B5C               	goto	u3470
  4732  1B5B                     u3471:
  4733  1B5B  2B61               	goto	l2625
  4734  1B5C                     u3470:
  4735  1B5C                     l2623:
  4736  1B5C  09F2               	comf	___awmod@dividend,f
  4737  1B5D  09F3               	comf	___awmod@dividend+1,f
  4738  1B5E  0AF2               	incf	___awmod@dividend,f
  4739  1B5F  1903               	skipnz
  4740  1B60  0AF3               	incf	___awmod@dividend+1,f
  4741  1B61                     l2625:
  4742  1B61  0873               	movf	___awmod@dividend+1,w
  4743  1B62  00F1               	movwf	?___awmod+1
  4744  1B63  0872               	movf	___awmod@dividend,w
  4745  1B64  00F0               	movwf	?___awmod
  4746  1B65                     l594:
  4747  1B65  0008               	return
  4748  1B66                     __end_of___awmod:
  4749                           
  4750                           	psect	text4
  4751  08D7                     __ptext4:	
  4752 ;; *************** function ___awdiv *****************
  4753 ;; Defined at:
  4754 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  divisor         2    7[COMMON] int 
  4757 ;;  dividend        2    9[COMMON] int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  quotient        2    2[BANK0 ] int 
  4760 ;;  sign            1    1[BANK0 ] unsigned char 
  4761 ;;  counter         1    0[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2    7[COMMON] int 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4771 ;;      Params:         4       0       0       0       0
  4772 ;;      Locals:         0       4       0       0       0
  4773 ;;      Temps:          1       0       0       0       0
  4774 ;;      Totals:         5       4       0       0       0
  4775 ;;Total ram usage:        9 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_scale
  4781 ;;		_sprintf
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function ___awdiv
  4787  08D7                     ___awdiv:
  4788  08D7                     l2547:	
  4789                           ;incstack = 0
  4790                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4791                           
  4792  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4793  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  4794  08D9  01A1               	clrf	___awdiv@sign
  4795  08DA                     l2549:
  4796  08DA  1FF8               	btfss	___awdiv@divisor+1,7
  4797  08DB  28DD               	goto	u3291
  4798  08DC  28DE               	goto	u3290
  4799  08DD                     u3291:
  4800  08DD  28E5               	goto	l2555
  4801  08DE                     u3290:
  4802  08DE                     l2551:
  4803  08DE  09F7               	comf	___awdiv@divisor,f
  4804  08DF  09F8               	comf	___awdiv@divisor+1,f
  4805  08E0  0AF7               	incf	___awdiv@divisor,f
  4806  08E1  1903               	skipnz
  4807  08E2  0AF8               	incf	___awdiv@divisor+1,f
  4808  08E3                     l2553:
  4809  08E3  01A1               	clrf	___awdiv@sign
  4810  08E4  0AA1               	incf	___awdiv@sign,f
  4811  08E5                     l2555:
  4812  08E5  1FFA               	btfss	___awdiv@dividend+1,7
  4813  08E6  28E8               	goto	u3301
  4814  08E7  28E9               	goto	u3300
  4815  08E8                     u3301:
  4816  08E8  28F2               	goto	l2561
  4817  08E9                     u3300:
  4818  08E9                     l2557:
  4819  08E9  09F9               	comf	___awdiv@dividend,f
  4820  08EA  09FA               	comf	___awdiv@dividend+1,f
  4821  08EB  0AF9               	incf	___awdiv@dividend,f
  4822  08EC  1903               	skipnz
  4823  08ED  0AFA               	incf	___awdiv@dividend+1,f
  4824  08EE                     l2559:
  4825  08EE  3001               	movlw	1
  4826  08EF  00FB               	movwf	??___awdiv
  4827  08F0  087B               	movf	??___awdiv,w
  4828  08F1  06A1               	xorwf	___awdiv@sign,f
  4829  08F2                     l2561:
  4830  08F2  01A2               	clrf	___awdiv@quotient
  4831  08F3  01A3               	clrf	___awdiv@quotient+1
  4832  08F4                     l2563:
  4833  08F4  0877               	movf	___awdiv@divisor,w
  4834  08F5  0478               	iorwf	___awdiv@divisor+1,w
  4835  08F6  1903               	btfsc	3,2
  4836  08F7  28F9               	goto	u3311
  4837  08F8  28FA               	goto	u3310
  4838  08F9                     u3311:
  4839  08F9  2931               	goto	l2583
  4840  08FA                     u3310:
  4841  08FA                     l2565:
  4842  08FA  01A0               	clrf	___awdiv@counter
  4843  08FB  0AA0               	incf	___awdiv@counter,f
  4844  08FC  2908               	goto	l2571
  4845  08FD                     l2567:
  4846  08FD  3001               	movlw	1
  4847  08FE                     u3325:
  4848  08FE  1003               	clrc
  4849  08FF  0DF7               	rlf	___awdiv@divisor,f
  4850  0900  0DF8               	rlf	___awdiv@divisor+1,f
  4851  0901  3EFF               	addlw	-1
  4852  0902  1D03               	skipz
  4853  0903  28FE               	goto	u3325
  4854  0904                     l2569:
  4855  0904  3001               	movlw	1
  4856  0905  00FB               	movwf	??___awdiv
  4857  0906  087B               	movf	??___awdiv,w
  4858  0907  07A0               	addwf	___awdiv@counter,f
  4859  0908                     l2571:
  4860  0908  1FF8               	btfss	___awdiv@divisor+1,7
  4861  0909  290B               	goto	u3331
  4862  090A  290C               	goto	u3330
  4863  090B                     u3331:
  4864  090B  28FD               	goto	l2567
  4865  090C                     u3330:
  4866  090C                     l2573:
  4867  090C  3001               	movlw	1
  4868  090D                     u3345:
  4869  090D  1003               	clrc
  4870  090E  0DA2               	rlf	___awdiv@quotient,f
  4871  090F  0DA3               	rlf	___awdiv@quotient+1,f
  4872  0910  3EFF               	addlw	-1
  4873  0911  1D03               	skipz
  4874  0912  290D               	goto	u3345
  4875  0913  0878               	movf	___awdiv@divisor+1,w
  4876  0914  027A               	subwf	___awdiv@dividend+1,w
  4877  0915  1D03               	skipz
  4878  0916  2919               	goto	u3355
  4879  0917  0877               	movf	___awdiv@divisor,w
  4880  0918  0279               	subwf	___awdiv@dividend,w
  4881  0919                     u3355:
  4882  0919  1C03               	skipc
  4883  091A  291C               	goto	u3351
  4884  091B  291D               	goto	u3350
  4885  091C                     u3351:
  4886  091C  2924               	goto	l2579
  4887  091D                     u3350:
  4888  091D                     l2575:
  4889  091D  0877               	movf	___awdiv@divisor,w
  4890  091E  02F9               	subwf	___awdiv@dividend,f
  4891  091F  0878               	movf	___awdiv@divisor+1,w
  4892  0920  1C03               	skipc
  4893  0921  03FA               	decf	___awdiv@dividend+1,f
  4894  0922  02FA               	subwf	___awdiv@dividend+1,f
  4895  0923                     l2577:
  4896  0923  1422               	bsf	___awdiv@quotient,0
  4897  0924                     l2579:
  4898  0924  3001               	movlw	1
  4899  0925                     u3365:
  4900  0925  1003               	clrc
  4901  0926  0CF8               	rrf	___awdiv@divisor+1,f
  4902  0927  0CF7               	rrf	___awdiv@divisor,f
  4903  0928  3EFF               	addlw	-1
  4904  0929  1D03               	skipz
  4905  092A  2925               	goto	u3365
  4906  092B                     l2581:
  4907  092B  3001               	movlw	1
  4908  092C  02A0               	subwf	___awdiv@counter,f
  4909  092D  1D03               	btfss	3,2
  4910  092E  2930               	goto	u3371
  4911  092F  2931               	goto	u3370
  4912  0930                     u3371:
  4913  0930  290C               	goto	l2573
  4914  0931                     u3370:
  4915  0931                     l2583:
  4916  0931  0821               	movf	___awdiv@sign,w
  4917  0932  1903               	btfsc	3,2
  4918  0933  2935               	goto	u3381
  4919  0934  2936               	goto	u3380
  4920  0935                     u3381:
  4921  0935  293B               	goto	l2587
  4922  0936                     u3380:
  4923  0936                     l2585:
  4924  0936  09A2               	comf	___awdiv@quotient,f
  4925  0937  09A3               	comf	___awdiv@quotient+1,f
  4926  0938  0AA2               	incf	___awdiv@quotient,f
  4927  0939  1903               	skipnz
  4928  093A  0AA3               	incf	___awdiv@quotient+1,f
  4929  093B                     l2587:
  4930  093B  0823               	movf	___awdiv@quotient+1,w
  4931  093C  00F8               	movwf	?___awdiv+1
  4932  093D  0822               	movf	___awdiv@quotient,w
  4933  093E  00F7               	movwf	?___awdiv
  4934  093F                     l581:
  4935  093F  0008               	return
  4936  0940                     __end_of___awdiv:
  4937                           
  4938                           	psect	text5
  4939  1003                     __ptext5:	
  4940 ;; *************** function _isdigit *****************
  4941 ;; Defined at:
  4942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  c               1    wreg     unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  c               1    1[COMMON] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;		None               void
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         0       0       0       0       0
  4957 ;;      Locals:         2       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0
  4959 ;;      Totals:         2       0       0       0       0
  4960 ;;Total ram usage:        2 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_sprintf
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _isdigit
  4971  1003                     _isdigit:
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4975                           ;isdigit@c stored from wreg
  4976  1003  00F1               	movwf	isdigit@c
  4977  1004                     l3111:
  4978  1004  01F0               	clrf	_isdigit$883
  4979  1005                     l3113:
  4980  1005  303A               	movlw	58
  4981  1006  0271               	subwf	isdigit@c,w
  4982  1007  1803               	skipnc
  4983  1008  280A               	goto	u4701
  4984  1009  280B               	goto	u4700
  4985  100A                     u4701:
  4986  100A  2813               	goto	l3119
  4987  100B                     u4700:
  4988  100B                     l3115:
  4989  100B  3030               	movlw	48
  4990  100C  0271               	subwf	isdigit@c,w
  4991  100D  1C03               	skipc
  4992  100E  2810               	goto	u4711
  4993  100F  2811               	goto	u4710
  4994  1010                     u4711:
  4995  1010  2813               	goto	l3119
  4996  1011                     u4710:
  4997  1011                     l3117:
  4998  1011  01F0               	clrf	_isdigit$883
  4999  1012  0AF0               	incf	_isdigit$883,f
  5000  1013                     l3119:
  5001  1013  0C70               	rrf	_isdigit$883,w
  5002  1014                     l915:
  5003  1014  0008               	return
  5004  1015                     __end_of_isdigit:
  5005                           
  5006                           	psect	text6
  5007  136D                     __ptext6:	
  5008 ;; *************** function _fround *****************
  5009 ;; Defined at:
  5010 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  prec            1    wreg     unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  prec            1   49[BANK0 ] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  4   30[BANK0 ] unsigned char 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5024 ;;      Params:         0       4       0       0       0
  5025 ;;      Locals:         0       9       0       0       0
  5026 ;;      Temps:          0       7       0       0       0
  5027 ;;      Totals:         0      20       0       0       0
  5028 ;;Total ram usage:       20 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    2
  5031 ;; This function calls:
  5032 ;;		___flmul
  5033 ;;		___lwdiv
  5034 ;;		___lwmod
  5035 ;; This function is called by:
  5036 ;;		_sprintf
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _fround
  5042  136D                     _fround:
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5046                           ;fround@prec stored from wreg
  5047  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5048  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5049  136F  00D1               	movwf	fround@prec
  5050  1370                     l3053:
  5051                           
  5052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5053  1370  306E               	movlw	110
  5054  1371  0251               	subwf	fround@prec,w
  5055  1372  1C03               	skipc
  5056  1373  2B75               	goto	u4451
  5057  1374  2B76               	goto	u4450
  5058  1375                     u4451:
  5059  1375  2C83               	goto	l3061
  5060  1376                     u4450:
  5061  1376                     l3055:
  5062                           
  5063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5064  1376  303F               	movlw	63
  5065  1377  00A7               	movwf	___flmul@b+3
  5066  1378  3000               	movlw	0
  5067  1379  00A6               	movwf	___flmul@b+2
  5068  137A  3000               	movlw	0
  5069  137B  00A5               	movwf	___flmul@b+1
  5070  137C  3000               	movlw	0
  5071  137D  00A4               	movwf	___flmul@b
  5072  137E  3064               	movlw	100
  5073  137F  00F6               	movwf	___lwdiv@divisor
  5074  1380  3000               	movlw	0
  5075  1381  00F7               	movwf	___lwdiv@divisor+1
  5076  1382  0851               	movf	fround@prec,w
  5077  1383  00C2               	movwf	??_fround
  5078  1384  01C3               	clrf	??_fround+1
  5079  1385  0842               	movf	??_fround,w
  5080  1386  00F8               	movwf	___lwdiv@dividend
  5081  1387  0843               	movf	??_fround+1,w
  5082  1388  00F9               	movwf	___lwdiv@dividend+1
  5083  1389  160A  158A  2227  160A  118A  	fcall	___lwdiv
  5084  138E  0876               	movf	?___lwdiv,w
  5085  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5086  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5087  1391  00C4               	movwf	??_fround+2
  5088  1392  3001               	movlw	1
  5089  1393                     u4465:
  5090  1393  1003               	clrc
  5091  1394  0DC4               	rlf	??_fround+2,f
  5092  1395  3EFF               	addlw	-1
  5093  1396  1D03               	skipz
  5094  1397  2B93               	goto	u4465
  5095  1398  1003               	clrc
  5096  1399  0D44               	rlf	??_fround+2,w
  5097  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5098  139B  0084               	movwf	4
  5099  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5100  13A1  00C5               	movwf	??_fround+3
  5101  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5102  13A7  00C6               	movwf	??_fround+4
  5103  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5104  13AD  00C7               	movwf	??_fround+5
  5105  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5106  13B3  00C8               	movwf	??_fround+6
  5107  13B4  0848               	movf	??_fround+6,w
  5108  13B5  00AB               	movwf	___flmul@a+3
  5109  13B6  0847               	movf	??_fround+5,w
  5110  13B7  00AA               	movwf	___flmul@a+2
  5111  13B8  0846               	movf	??_fround+4,w
  5112  13B9  00A9               	movwf	___flmul@a+1
  5113  13BA  0845               	movf	??_fround+3,w
  5114  13BB  00A8               	movwf	___flmul@a
  5115  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5116  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5117  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5118  13C3  0827               	movf	?___flmul+3,w
  5119  13C4  00D0               	movwf	_fround$1064+3
  5120  13C5  0826               	movf	?___flmul+2,w
  5121  13C6  00CF               	movwf	_fround$1064+2
  5122  13C7  0825               	movf	?___flmul+1,w
  5123  13C8  00CE               	movwf	_fround$1064+1
  5124  13C9  0824               	movf	?___flmul,w
  5125  13CA  00CD               	movwf	_fround$1064
  5126                           
  5127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5128  13CB  300A               	movlw	10
  5129  13CC  00F6               	movwf	___lwdiv@divisor
  5130  13CD  3000               	movlw	0
  5131  13CE  00F7               	movwf	___lwdiv@divisor+1
  5132  13CF  0851               	movf	fround@prec,w
  5133  13D0  00C2               	movwf	??_fround
  5134  13D1  01C3               	clrf	??_fround+1
  5135  13D2  0842               	movf	??_fround,w
  5136  13D3  00F2               	movwf	___lwmod@dividend
  5137  13D4  0843               	movf	??_fround+1,w
  5138  13D5  00F3               	movwf	___lwmod@dividend+1
  5139  13D6  3064               	movlw	100
  5140  13D7  00F0               	movwf	___lwmod@divisor
  5141  13D8  3000               	movlw	0
  5142  13D9  00F1               	movwf	___lwmod@divisor+1
  5143  13DA  160A  158A  216D  160A  118A  	fcall	___lwmod
  5144  13DF  0871               	movf	?___lwmod+1,w
  5145  13E0  00F9               	movwf	___lwdiv@dividend+1
  5146  13E1  0870               	movf	?___lwmod,w
  5147  13E2  00F8               	movwf	___lwdiv@dividend
  5148  13E3  160A  158A  2227  160A  118A  	fcall	___lwdiv
  5149  13E8  0876               	movf	?___lwdiv,w
  5150  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5151  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5152  13EB  00C4               	movwf	??_fround+2
  5153  13EC  3001               	movlw	1
  5154  13ED                     u4475:
  5155  13ED  1003               	clrc
  5156  13EE  0DC4               	rlf	??_fround+2,f
  5157  13EF  3EFF               	addlw	-1
  5158  13F0  1D03               	skipz
  5159  13F1  2BED               	goto	u4475
  5160  13F2  1003               	clrc
  5161  13F3  0D44               	rlf	??_fround+2,w
  5162  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5163  13F5  0084               	movwf	4
  5164  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5165  13FB  00C5               	movwf	??_fround+3
  5166  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5167  1401  00C6               	movwf	??_fround+4
  5168  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5169  1407  00C7               	movwf	??_fround+5
  5170  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5171  140D  00C8               	movwf	??_fround+6
  5172  140E  0848               	movf	??_fround+6,w
  5173  140F  00A7               	movwf	___flmul@b+3
  5174  1410  0847               	movf	??_fround+5,w
  5175  1411  00A6               	movwf	___flmul@b+2
  5176  1412  0846               	movf	??_fround+4,w
  5177  1413  00A5               	movwf	___flmul@b+1
  5178  1414  0845               	movf	??_fround+3,w
  5179  1415  00A4               	movwf	___flmul@b
  5180  1416  0850               	movf	_fround$1064+3,w
  5181  1417  00AB               	movwf	___flmul@a+3
  5182  1418  084F               	movf	_fround$1064+2,w
  5183  1419  00AA               	movwf	___flmul@a+2
  5184  141A  084E               	movf	_fround$1064+1,w
  5185  141B  00A9               	movwf	___flmul@a+1
  5186  141C  084D               	movf	_fround$1064,w
  5187  141D  00A8               	movwf	___flmul@a
  5188  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5189  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5190  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5191  1425  0827               	movf	?___flmul+3,w
  5192  1426  00CC               	movwf	_fround$1065+3
  5193  1427  0826               	movf	?___flmul+2,w
  5194  1428  00CB               	movwf	_fround$1065+2
  5195  1429  0825               	movf	?___flmul+1,w
  5196  142A  00CA               	movwf	_fround$1065+1
  5197  142B  0824               	movf	?___flmul,w
  5198  142C  00C9               	movwf	_fround$1065
  5199                           
  5200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5201  142D  300A               	movlw	10
  5202  142E  00F0               	movwf	___lwmod@divisor
  5203  142F  3000               	movlw	0
  5204  1430  00F1               	movwf	___lwmod@divisor+1
  5205  1431  0851               	movf	fround@prec,w
  5206  1432  00C2               	movwf	??_fround
  5207  1433  01C3               	clrf	??_fround+1
  5208  1434  0842               	movf	??_fround,w
  5209  1435  00F2               	movwf	___lwmod@dividend
  5210  1436  0843               	movf	??_fround+1,w
  5211  1437  00F3               	movwf	___lwmod@dividend+1
  5212  1438  160A  158A  216D  160A  118A  	fcall	___lwmod
  5213  143D  0870               	movf	?___lwmod,w
  5214  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5215  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5216  1440  00C4               	movwf	??_fround+2
  5217  1441  3001               	movlw	1
  5218  1442                     u4485:
  5219  1442  1003               	clrc
  5220  1443  0DC4               	rlf	??_fround+2,f
  5221  1444  3EFF               	addlw	-1
  5222  1445  1D03               	skipz
  5223  1446  2C42               	goto	u4485
  5224  1447  1003               	clrc
  5225  1448  0D44               	rlf	??_fround+2,w
  5226  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5227  144A  0084               	movwf	4
  5228  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5229  1450  00C5               	movwf	??_fround+3
  5230  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5231  1456  00C6               	movwf	??_fround+4
  5232  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5233  145C  00C7               	movwf	??_fround+5
  5234  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5235  1462  00C8               	movwf	??_fround+6
  5236  1463  0848               	movf	??_fround+6,w
  5237  1464  00A7               	movwf	___flmul@b+3
  5238  1465  0847               	movf	??_fround+5,w
  5239  1466  00A6               	movwf	___flmul@b+2
  5240  1467  0846               	movf	??_fround+4,w
  5241  1468  00A5               	movwf	___flmul@b+1
  5242  1469  0845               	movf	??_fround+3,w
  5243  146A  00A4               	movwf	___flmul@b
  5244  146B  084C               	movf	_fround$1065+3,w
  5245  146C  00AB               	movwf	___flmul@a+3
  5246  146D  084B               	movf	_fround$1065+2,w
  5247  146E  00AA               	movwf	___flmul@a+2
  5248  146F  084A               	movf	_fround$1065+1,w
  5249  1470  00A9               	movwf	___flmul@a+1
  5250  1471  0849               	movf	_fround$1065,w
  5251  1472  00A8               	movwf	___flmul@a
  5252  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5253  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5254  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5255  147A  0827               	movf	?___flmul+3,w
  5256  147B  00C1               	movwf	?_fround+3
  5257  147C  0826               	movf	?___flmul+2,w
  5258  147D  00C0               	movwf	?_fround+2
  5259  147E  0825               	movf	?___flmul+1,w
  5260  147F  00BF               	movwf	?_fround+1
  5261  1480  0824               	movf	?___flmul,w
  5262  1481  00BE               	movwf	?_fround
  5263  1482  2D77               	goto	l334
  5264  1483                     l3061:
  5265  1483  300B               	movlw	11
  5266  1484  0251               	subwf	fround@prec,w
  5267  1485  1C03               	skipc
  5268  1486  2C88               	goto	u4491
  5269  1487  2C89               	goto	u4490
  5270  1488                     u4491:
  5271  1488  2D34               	goto	l3067
  5272  1489                     u4490:
  5273  1489                     l3063:
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5276  1489  303F               	movlw	63
  5277  148A  00A7               	movwf	___flmul@b+3
  5278  148B  3000               	movlw	0
  5279  148C  00A6               	movwf	___flmul@b+2
  5280  148D  3000               	movlw	0
  5281  148E  00A5               	movwf	___flmul@b+1
  5282  148F  3000               	movlw	0
  5283  1490  00A4               	movwf	___flmul@b
  5284  1491  300A               	movlw	10
  5285  1492  00F6               	movwf	___lwdiv@divisor
  5286  1493  3000               	movlw	0
  5287  1494  00F7               	movwf	___lwdiv@divisor+1
  5288  1495  0851               	movf	fround@prec,w
  5289  1496  00C2               	movwf	??_fround
  5290  1497  01C3               	clrf	??_fround+1
  5291  1498  0842               	movf	??_fround,w
  5292  1499  00F8               	movwf	___lwdiv@dividend
  5293  149A  0843               	movf	??_fround+1,w
  5294  149B  00F9               	movwf	___lwdiv@dividend+1
  5295  149C  160A  158A  2227  160A  118A  	fcall	___lwdiv
  5296  14A1  0876               	movf	?___lwdiv,w
  5297  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5298  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5299  14A4  00C4               	movwf	??_fround+2
  5300  14A5  3001               	movlw	1
  5301  14A6                     u4505:
  5302  14A6  1003               	clrc
  5303  14A7  0DC4               	rlf	??_fround+2,f
  5304  14A8  3EFF               	addlw	-1
  5305  14A9  1D03               	skipz
  5306  14AA  2CA6               	goto	u4505
  5307  14AB  1003               	clrc
  5308  14AC  0D44               	rlf	??_fround+2,w
  5309  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5310  14AE  0084               	movwf	4
  5311  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5312  14B4  00C5               	movwf	??_fround+3
  5313  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5314  14BA  00C6               	movwf	??_fround+4
  5315  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5316  14C0  00C7               	movwf	??_fround+5
  5317  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5318  14C6  00C8               	movwf	??_fround+6
  5319  14C7  0848               	movf	??_fround+6,w
  5320  14C8  00AB               	movwf	___flmul@a+3
  5321  14C9  0847               	movf	??_fround+5,w
  5322  14CA  00AA               	movwf	___flmul@a+2
  5323  14CB  0846               	movf	??_fround+4,w
  5324  14CC  00A9               	movwf	___flmul@a+1
  5325  14CD  0845               	movf	??_fround+3,w
  5326  14CE  00A8               	movwf	___flmul@a
  5327  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5328  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5329  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5330  14D6  0827               	movf	?___flmul+3,w
  5331  14D7  00D0               	movwf	_fround$1064+3
  5332  14D8  0826               	movf	?___flmul+2,w
  5333  14D9  00CF               	movwf	_fround$1064+2
  5334  14DA  0825               	movf	?___flmul+1,w
  5335  14DB  00CE               	movwf	_fround$1064+1
  5336  14DC  0824               	movf	?___flmul,w
  5337  14DD  00CD               	movwf	_fround$1064
  5338                           
  5339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5340  14DE  300A               	movlw	10
  5341  14DF  00F0               	movwf	___lwmod@divisor
  5342  14E0  3000               	movlw	0
  5343  14E1  00F1               	movwf	___lwmod@divisor+1
  5344  14E2  0851               	movf	fround@prec,w
  5345  14E3  00C2               	movwf	??_fround
  5346  14E4  01C3               	clrf	??_fround+1
  5347  14E5  0842               	movf	??_fround,w
  5348  14E6  00F2               	movwf	___lwmod@dividend
  5349  14E7  0843               	movf	??_fround+1,w
  5350  14E8  00F3               	movwf	___lwmod@dividend+1
  5351  14E9  160A  158A  216D  160A  118A  	fcall	___lwmod
  5352  14EE  0870               	movf	?___lwmod,w
  5353  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5354  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5355  14F1  00C4               	movwf	??_fround+2
  5356  14F2  3001               	movlw	1
  5357  14F3                     u4515:
  5358  14F3  1003               	clrc
  5359  14F4  0DC4               	rlf	??_fround+2,f
  5360  14F5  3EFF               	addlw	-1
  5361  14F6  1D03               	skipz
  5362  14F7  2CF3               	goto	u4515
  5363  14F8  1003               	clrc
  5364  14F9  0D44               	rlf	??_fround+2,w
  5365  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5366  14FB  0084               	movwf	4
  5367  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5368  1501  00C5               	movwf	??_fround+3
  5369  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5370  1507  00C6               	movwf	??_fround+4
  5371  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5372  150D  00C7               	movwf	??_fround+5
  5373  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5374  1513  00C8               	movwf	??_fround+6
  5375  1514  0848               	movf	??_fround+6,w
  5376  1515  00A7               	movwf	___flmul@b+3
  5377  1516  0847               	movf	??_fround+5,w
  5378  1517  00A6               	movwf	___flmul@b+2
  5379  1518  0846               	movf	??_fround+4,w
  5380  1519  00A5               	movwf	___flmul@b+1
  5381  151A  0845               	movf	??_fround+3,w
  5382  151B  00A4               	movwf	___flmul@b
  5383  151C  0850               	movf	_fround$1064+3,w
  5384  151D  00AB               	movwf	___flmul@a+3
  5385  151E  084F               	movf	_fround$1064+2,w
  5386  151F  00AA               	movwf	___flmul@a+2
  5387  1520  084E               	movf	_fround$1064+1,w
  5388  1521  00A9               	movwf	___flmul@a+1
  5389  1522  084D               	movf	_fround$1064,w
  5390  1523  00A8               	movwf	___flmul@a
  5391  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5392  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5393  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5394  152B  0827               	movf	?___flmul+3,w
  5395  152C  00C1               	movwf	?_fround+3
  5396  152D  0826               	movf	?___flmul+2,w
  5397  152E  00C0               	movwf	?_fround+2
  5398  152F  0825               	movf	?___flmul+1,w
  5399  1530  00BF               	movwf	?_fround+1
  5400  1531  0824               	movf	?___flmul,w
  5401  1532  00BE               	movwf	?_fround
  5402  1533  2D77               	goto	l334
  5403  1534                     l3067:
  5404                           
  5405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5406  1534  303F               	movlw	63
  5407  1535  00A7               	movwf	___flmul@b+3
  5408  1536  3000               	movlw	0
  5409  1537  00A6               	movwf	___flmul@b+2
  5410  1538  3000               	movlw	0
  5411  1539  00A5               	movwf	___flmul@b+1
  5412  153A  3000               	movlw	0
  5413  153B  00A4               	movwf	___flmul@b
  5414  153C  0851               	movf	fround@prec,w
  5415  153D  00C2               	movwf	??_fround
  5416  153E  3001               	movlw	1
  5417  153F                     u4525:
  5418  153F  1003               	clrc
  5419  1540  0DC2               	rlf	??_fround,f
  5420  1541  3EFF               	addlw	-1
  5421  1542  1D03               	skipz
  5422  1543  2D3F               	goto	u4525
  5423  1544  1003               	clrc
  5424  1545  0D42               	rlf	??_fround,w
  5425  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5426  1547  0084               	movwf	4
  5427  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5428  154D  00C3               	movwf	??_fround+1
  5429  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5430  1553  00C4               	movwf	??_fround+2
  5431  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5432  1559  00C5               	movwf	??_fround+3
  5433  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5434  155F  00C6               	movwf	??_fround+4
  5435  1560  0846               	movf	??_fround+4,w
  5436  1561  00AB               	movwf	___flmul@a+3
  5437  1562  0845               	movf	??_fround+3,w
  5438  1563  00AA               	movwf	___flmul@a+2
  5439  1564  0844               	movf	??_fround+2,w
  5440  1565  00A9               	movwf	___flmul@a+1
  5441  1566  0843               	movf	??_fround+1,w
  5442  1567  00A8               	movwf	___flmul@a
  5443  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5444  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5445  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5446  156F  0827               	movf	?___flmul+3,w
  5447  1570  00C1               	movwf	?_fround+3
  5448  1571  0826               	movf	?___flmul+2,w
  5449  1572  00C0               	movwf	?_fround+2
  5450  1573  0825               	movf	?___flmul+1,w
  5451  1574  00BF               	movwf	?_fround+1
  5452  1575  0824               	movf	?___flmul,w
  5453  1576  00BE               	movwf	?_fround
  5454  1577                     l334:
  5455  1577  0008               	return
  5456  1578                     __end_of_fround:
  5457                           
  5458                           	psect	text7
  5459  196D                     __ptext7:	
  5460 ;; *************** function ___lwmod *****************
  5461 ;; Defined at:
  5462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  divisor         2    0[COMMON] unsigned int 
  5465 ;;  dividend        2    2[COMMON] unsigned int 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  counter         1    5[COMMON] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  2    0[COMMON] unsigned int 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5477 ;;      Params:         4       0       0       0       0
  5478 ;;      Locals:         1       0       0       0       0
  5479 ;;      Temps:          1       0       0       0       0
  5480 ;;      Totals:         6       0       0       0       0
  5481 ;;Total ram usage:        6 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_fround
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function ___lwmod
  5492  196D                     ___lwmod:
  5493  196D                     l2655:	
  5494                           ;incstack = 0
  5495                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5496                           
  5497  196D  0870               	movf	___lwmod@divisor,w
  5498  196E  0471               	iorwf	___lwmod@divisor+1,w
  5499  196F  1903               	btfsc	3,2
  5500  1970  2972               	goto	u3551
  5501  1971  2973               	goto	u3550
  5502  1972                     u3551:
  5503  1972  29A2               	goto	l2673
  5504  1973                     u3550:
  5505  1973                     l2657:
  5506  1973  01F5               	clrf	___lwmod@counter
  5507  1974  0AF5               	incf	___lwmod@counter,f
  5508  1975  2981               	goto	l2663
  5509  1976                     l2659:
  5510  1976  3001               	movlw	1
  5511  1977                     u3565:
  5512  1977  1003               	clrc
  5513  1978  0DF0               	rlf	___lwmod@divisor,f
  5514  1979  0DF1               	rlf	___lwmod@divisor+1,f
  5515  197A  3EFF               	addlw	-1
  5516  197B  1D03               	skipz
  5517  197C  2977               	goto	u3565
  5518  197D                     l2661:
  5519  197D  3001               	movlw	1
  5520  197E  00F4               	movwf	??___lwmod
  5521  197F  0874               	movf	??___lwmod,w
  5522  1980  07F5               	addwf	___lwmod@counter,f
  5523  1981                     l2663:
  5524  1981  1FF1               	btfss	___lwmod@divisor+1,7
  5525  1982  2984               	goto	u3571
  5526  1983  2985               	goto	u3570
  5527  1984                     u3571:
  5528  1984  2976               	goto	l2659
  5529  1985                     u3570:
  5530  1985                     l2665:
  5531  1985  0871               	movf	___lwmod@divisor+1,w
  5532  1986  0273               	subwf	___lwmod@dividend+1,w
  5533  1987  1D03               	skipz
  5534  1988  298B               	goto	u3585
  5535  1989  0870               	movf	___lwmod@divisor,w
  5536  198A  0272               	subwf	___lwmod@dividend,w
  5537  198B                     u3585:
  5538  198B  1C03               	skipc
  5539  198C  298E               	goto	u3581
  5540  198D  298F               	goto	u3580
  5541  198E                     u3581:
  5542  198E  2995               	goto	l2669
  5543  198F                     u3580:
  5544  198F                     l2667:
  5545  198F  0870               	movf	___lwmod@divisor,w
  5546  1990  02F2               	subwf	___lwmod@dividend,f
  5547  1991  0871               	movf	___lwmod@divisor+1,w
  5548  1992  1C03               	skipc
  5549  1993  03F3               	decf	___lwmod@dividend+1,f
  5550  1994  02F3               	subwf	___lwmod@dividend+1,f
  5551  1995                     l2669:
  5552  1995  3001               	movlw	1
  5553  1996                     u3595:
  5554  1996  1003               	clrc
  5555  1997  0CF1               	rrf	___lwmod@divisor+1,f
  5556  1998  0CF0               	rrf	___lwmod@divisor,f
  5557  1999  3EFF               	addlw	-1
  5558  199A  1D03               	skipz
  5559  199B  2996               	goto	u3595
  5560  199C                     l2671:
  5561  199C  3001               	movlw	1
  5562  199D  02F5               	subwf	___lwmod@counter,f
  5563  199E  1D03               	btfss	3,2
  5564  199F  29A1               	goto	u3601
  5565  19A0  29A2               	goto	u3600
  5566  19A1                     u3601:
  5567  19A1  2985               	goto	l2665
  5568  19A2                     u3600:
  5569  19A2                     l2673:
  5570  19A2  0873               	movf	___lwmod@dividend+1,w
  5571  19A3  00F1               	movwf	?___lwmod+1
  5572  19A4  0872               	movf	___lwmod@dividend,w
  5573  19A5  00F0               	movwf	?___lwmod
  5574  19A6                     l744:
  5575  19A6  0008               	return
  5576  19A7                     __end_of___lwmod:
  5577                           
  5578                           	psect	text8
  5579  1A27                     __ptext8:	
  5580 ;; *************** function ___lwdiv *****************
  5581 ;; Defined at:
  5582 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  divisor         2    6[COMMON] unsigned int 
  5585 ;;  dividend        2    8[COMMON] unsigned int 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  quotient        2   11[COMMON] unsigned int 
  5588 ;;  counter         1   13[COMMON] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2    6[COMMON] unsigned int 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2, status,0
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5598 ;;      Params:         4       0       0       0       0
  5599 ;;      Locals:         3       0       0       0       0
  5600 ;;      Temps:          1       0       0       0       0
  5601 ;;      Totals:         8       0       0       0       0
  5602 ;;Total ram usage:        8 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_fround
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function ___lwdiv
  5613  1A27                     ___lwdiv:
  5614  1A27                     l2629:	
  5615                           ;incstack = 0
  5616                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5617                           
  5618  1A27  01FB               	clrf	___lwdiv@quotient
  5619  1A28  01FC               	clrf	___lwdiv@quotient+1
  5620  1A29                     l2631:
  5621  1A29  0876               	movf	___lwdiv@divisor,w
  5622  1A2A  0477               	iorwf	___lwdiv@divisor+1,w
  5623  1A2B  1903               	btfsc	3,2
  5624  1A2C  2A2E               	goto	u3481
  5625  1A2D  2A2F               	goto	u3480
  5626  1A2E                     u3481:
  5627  1A2E  2A66               	goto	l2651
  5628  1A2F                     u3480:
  5629  1A2F                     l2633:
  5630  1A2F  01FD               	clrf	___lwdiv@counter
  5631  1A30  0AFD               	incf	___lwdiv@counter,f
  5632  1A31  2A3D               	goto	l2639
  5633  1A32                     l2635:
  5634  1A32  3001               	movlw	1
  5635  1A33                     u3495:
  5636  1A33  1003               	clrc
  5637  1A34  0DF6               	rlf	___lwdiv@divisor,f
  5638  1A35  0DF7               	rlf	___lwdiv@divisor+1,f
  5639  1A36  3EFF               	addlw	-1
  5640  1A37  1D03               	skipz
  5641  1A38  2A33               	goto	u3495
  5642  1A39                     l2637:
  5643  1A39  3001               	movlw	1
  5644  1A3A  00FA               	movwf	??___lwdiv
  5645  1A3B  087A               	movf	??___lwdiv,w
  5646  1A3C  07FD               	addwf	___lwdiv@counter,f
  5647  1A3D                     l2639:
  5648  1A3D  1FF7               	btfss	___lwdiv@divisor+1,7
  5649  1A3E  2A40               	goto	u3501
  5650  1A3F  2A41               	goto	u3500
  5651  1A40                     u3501:
  5652  1A40  2A32               	goto	l2635
  5653  1A41                     u3500:
  5654  1A41                     l2641:
  5655  1A41  3001               	movlw	1
  5656  1A42                     u3515:
  5657  1A42  1003               	clrc
  5658  1A43  0DFB               	rlf	___lwdiv@quotient,f
  5659  1A44  0DFC               	rlf	___lwdiv@quotient+1,f
  5660  1A45  3EFF               	addlw	-1
  5661  1A46  1D03               	skipz
  5662  1A47  2A42               	goto	u3515
  5663  1A48  0877               	movf	___lwdiv@divisor+1,w
  5664  1A49  0279               	subwf	___lwdiv@dividend+1,w
  5665  1A4A  1D03               	skipz
  5666  1A4B  2A4E               	goto	u3525
  5667  1A4C  0876               	movf	___lwdiv@divisor,w
  5668  1A4D  0278               	subwf	___lwdiv@dividend,w
  5669  1A4E                     u3525:
  5670  1A4E  1C03               	skipc
  5671  1A4F  2A51               	goto	u3521
  5672  1A50  2A52               	goto	u3520
  5673  1A51                     u3521:
  5674  1A51  2A59               	goto	l2647
  5675  1A52                     u3520:
  5676  1A52                     l2643:
  5677  1A52  0876               	movf	___lwdiv@divisor,w
  5678  1A53  02F8               	subwf	___lwdiv@dividend,f
  5679  1A54  0877               	movf	___lwdiv@divisor+1,w
  5680  1A55  1C03               	skipc
  5681  1A56  03F9               	decf	___lwdiv@dividend+1,f
  5682  1A57  02F9               	subwf	___lwdiv@dividend+1,f
  5683  1A58                     l2645:
  5684  1A58  147B               	bsf	___lwdiv@quotient,0
  5685  1A59                     l2647:
  5686  1A59  3001               	movlw	1
  5687  1A5A                     u3535:
  5688  1A5A  1003               	clrc
  5689  1A5B  0CF7               	rrf	___lwdiv@divisor+1,f
  5690  1A5C  0CF6               	rrf	___lwdiv@divisor,f
  5691  1A5D  3EFF               	addlw	-1
  5692  1A5E  1D03               	skipz
  5693  1A5F  2A5A               	goto	u3535
  5694  1A60                     l2649:
  5695  1A60  3001               	movlw	1
  5696  1A61  02FD               	subwf	___lwdiv@counter,f
  5697  1A62  1D03               	btfss	3,2
  5698  1A63  2A65               	goto	u3541
  5699  1A64  2A66               	goto	u3540
  5700  1A65                     u3541:
  5701  1A65  2A41               	goto	l2641
  5702  1A66                     u3540:
  5703  1A66                     l2651:
  5704  1A66  087C               	movf	___lwdiv@quotient+1,w
  5705  1A67  00F7               	movwf	?___lwdiv+1
  5706  1A68  087B               	movf	___lwdiv@quotient,w
  5707  1A69  00F6               	movwf	?___lwdiv
  5708  1A6A                     l734:
  5709  1A6A  0008               	return
  5710  1A6B                     __end_of___lwdiv:
  5711                           
  5712                           	psect	text9
  5713  1F43                     __ptext9:	
  5714 ;; *************** function __tdiv_to_l_ *****************
  5715 ;; Defined at:
  5716 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  f1              4    0[COMMON] float 
  5719 ;;  f2              4    4[COMMON] float 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  quot            4    0[BANK0 ] unsigned long 
  5722 ;;  exp1            1    5[BANK0 ] unsigned char 
  5723 ;;  cntr            1    4[BANK0 ] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  4    0[COMMON] unsigned long 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         8       0       0       0       0
  5734 ;;      Locals:         0       6       0       0       0
  5735 ;;      Temps:          4       0       0       0       0
  5736 ;;      Totals:        12       6       0       0       0
  5737 ;;Total ram usage:       18 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_sprintf
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function __tdiv_to_l_
  5748  1F43                     __tdiv_to_l_:
  5749  1F43                     l3123:	
  5750                           ;incstack = 0
  5751                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5752                           
  5753  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5754  1F44  00F8               	movwf	??__tdiv_to_l_
  5755  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5756  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5757  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5758  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5759  1F49  1003               	clrc
  5760  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5761  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5762  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5763  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5764  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5765  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5766  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5767  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5768  1F52  1D03               	btfss	3,2
  5769  1F53  2F55               	goto	u4721
  5770  1F54  2F56               	goto	u4720
  5771  1F55                     u4721:
  5772  1F55  2F5F               	goto	l3129
  5773  1F56                     u4720:
  5774  1F56                     l3125:
  5775  1F56  3000               	movlw	0
  5776  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5777  1F58  3000               	movlw	0
  5778  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5779  1F5A  3000               	movlw	0
  5780  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5781  1F5C  3000               	movlw	0
  5782  1F5D  00F0               	movwf	?__tdiv_to_l_
  5783  1F5E  2FFF               	goto	l645
  5784  1F5F                     l3129:
  5785  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5786  1F60  00F8               	movwf	??__tdiv_to_l_
  5787  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5788  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5789  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5790  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5791  1F65  1003               	clrc
  5792  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5793  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5794  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5795  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5796  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5797  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5798  1F6C  1D03               	btfss	3,2
  5799  1F6D  2F6F               	goto	u4731
  5800  1F6E  2F70               	goto	u4730
  5801  1F6F                     u4731:
  5802  1F6F  2F71               	goto	l646
  5803  1F70                     u4730:
  5804  1F70  2F56               	goto	l3125
  5805  1F71                     l646:
  5806  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5807  1F72                     l3135:
  5808  1F72  30FF               	movlw	255
  5809  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5810  1F74  30FF               	movlw	255
  5811  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5812  1F76  3000               	movlw	0
  5813  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5814  1F78                     l3137:
  5815  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5816  1F79  30FF               	movlw	255
  5817  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5818  1F7B  30FF               	movlw	255
  5819  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5820  1F7D  3000               	movlw	0
  5821  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5822  1F7F  3000               	movlw	0
  5823  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5824  1F81  3000               	movlw	0
  5825  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5826  1F83  3000               	movlw	0
  5827  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5828  1F85  3000               	movlw	0
  5829  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5830  1F87                     l3139:
  5831  1F87  307F               	movlw	127
  5832  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5833  1F89                     l3141:
  5834  1F89  3098               	movlw	152
  5835  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5836  1F8B  00F8               	movwf	??__tdiv_to_l_
  5837  1F8C  0878               	movf	??__tdiv_to_l_,w
  5838  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5839  1F8E  3018               	movlw	24
  5840  1F8F  00F8               	movwf	??__tdiv_to_l_
  5841  1F90  0878               	movf	??__tdiv_to_l_,w
  5842  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5843  1F92                     l3143:
  5844  1F92  3001               	movlw	1
  5845  1F93  00F8               	movwf	??__tdiv_to_l_
  5846  1F94                     u4745:
  5847  1F94  1003               	clrc
  5848  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5849  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5850  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5851  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5852  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5853  1F9A  2F94               	goto	u4745
  5854  1F9B                     l3145:
  5855  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5856  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5857  1F9D  1D03               	skipz
  5858  1F9E  2FA5               	goto	u4755
  5859  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5860  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5861  1FA1  1D03               	skipz
  5862  1FA2  2FA5               	goto	u4755
  5863  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5864  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5865  1FA5                     u4755:
  5866  1FA5  1C03               	skipc
  5867  1FA6  2FA8               	goto	u4751
  5868  1FA7  2FA9               	goto	u4750
  5869  1FA8                     u4751:
  5870  1FA8  2FB4               	goto	l3151
  5871  1FA9                     u4750:
  5872  1FA9                     l3147:
  5873  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5874  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5875  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5876  1FAC  1C03               	skipc
  5877  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5878  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5879  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5880  1FB0  1C03               	skipc
  5881  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5882  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5883  1FB3                     l3149:
  5884  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5885  1FB4                     l3151:
  5886  1FB4  3001               	movlw	1
  5887  1FB5                     u4765:
  5888  1FB5  1003               	clrc
  5889  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5890  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5891  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5892  1FB9  3EFF               	addlw	-1
  5893  1FBA  1D03               	skipz
  5894  1FBB  2FB5               	goto	u4765
  5895  1FBC                     l3153:
  5896  1FBC  3001               	movlw	1
  5897  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5898  1FBE  1D03               	btfss	3,2
  5899  1FBF  2FC1               	goto	u4771
  5900  1FC0  2FC2               	goto	u4770
  5901  1FC1                     u4771:
  5902  1FC1  2F92               	goto	l3143
  5903  1FC2                     u4770:
  5904  1FC2                     l649:
  5905  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5906  1FC3  2FC5               	goto	u4781
  5907  1FC4  2FC6               	goto	u4780
  5908  1FC5                     u4781:
  5909  1FC5  2FE0               	goto	l3163
  5910  1FC6                     u4780:
  5911  1FC6                     l3155:
  5912  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5913  1FC7  3A80               	xorlw	128
  5914  1FC8  3E97               	addlw	151
  5915  1FC9  1803               	skipnc
  5916  1FCA  2FCC               	goto	u4791
  5917  1FCB  2FCD               	goto	u4790
  5918  1FCC                     u4791:
  5919  1FCC  2FCE               	goto	l3161
  5920  1FCD                     u4790:
  5921  1FCD  2F56               	goto	l3125
  5922  1FCE                     l3161:
  5923  1FCE  3001               	movlw	1
  5924  1FCF                     u4805:
  5925  1FCF  1003               	clrc
  5926  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5927  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5928  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5929  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5930  1FD4  3EFF               	addlw	-1
  5931  1FD5  1D03               	skipz
  5932  1FD6  2FCF               	goto	u4805
  5933  1FD7  3001               	movlw	1
  5934  1FD8  00F8               	movwf	??__tdiv_to_l_
  5935  1FD9  0878               	movf	??__tdiv_to_l_,w
  5936  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5937  1FDB  1D03               	btfss	3,2
  5938  1FDC  2FDE               	goto	u4811
  5939  1FDD  2FDF               	goto	u4810
  5940  1FDE                     u4811:
  5941  1FDE  2FCE               	goto	l3161
  5942  1FDF                     u4810:
  5943  1FDF  2FF7               	goto	l3171
  5944  1FE0                     l3163:
  5945  1FE0  3018               	movlw	24
  5946  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5947  1FE2  1C03               	skipc
  5948  1FE3  2FE5               	goto	u4821
  5949  1FE4  2FE6               	goto	u4820
  5950  1FE5                     u4821:
  5951  1FE5  2FF2               	goto	l656
  5952  1FE6                     u4820:
  5953  1FE6  2F56               	goto	l3125
  5954  1FE7                     l3169:
  5955  1FE7  3001               	movlw	1
  5956  1FE8  00F8               	movwf	??__tdiv_to_l_
  5957  1FE9                     u4835:
  5958  1FE9  1003               	clrc
  5959  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5960  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5961  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5962  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5963  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5964  1FEF  2FE9               	goto	u4835
  5965  1FF0  3001               	movlw	1
  5966  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5967  1FF2                     l656:
  5968  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5969  1FF3  1D03               	btfss	3,2
  5970  1FF4  2FF6               	goto	u4841
  5971  1FF5  2FF7               	goto	u4840
  5972  1FF6                     u4841:
  5973  1FF6  2FE7               	goto	l3169
  5974  1FF7                     u4840:
  5975  1FF7                     l3171:
  5976  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5977  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5978  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5979  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5980  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5981  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5982  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5983  1FFE  00F0               	movwf	?__tdiv_to_l_
  5984  1FFF                     l645:
  5985  1FFF  0008               	return
  5986  2000                     __end_of__tdiv_to_l_:
  5987                           
  5988                           	psect	text10
  5989  10D2                     __ptext10:	
  5990 ;; *************** function __div_to_l_ *****************
  5991 ;; Defined at:
  5992 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  f1              4    0[COMMON] unsigned long 
  5995 ;;  f2              4    4[COMMON] unsigned long 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  quot            4    0[BANK0 ] unsigned long 
  5998 ;;  exp1            1    5[BANK0 ] unsigned char 
  5999 ;;  cntr            1    4[BANK0 ] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  4    0[COMMON] unsigned long 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6009 ;;      Params:         8       0       0       0       0
  6010 ;;      Locals:         0       6       0       0       0
  6011 ;;      Temps:          1       0       0       0       0
  6012 ;;      Totals:         9       6       0       0       0
  6013 ;;Total ram usage:       15 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_sprintf
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           
  6023                           ;psect for function __div_to_l_
  6024  10D2                     __div_to_l_:
  6025  10D2                     l3175:	
  6026                           ;incstack = 0
  6027                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6028                           
  6029  10D2  1003               	clrc
  6030  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  6031  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  6032  10D5  00F8               	movwf	??__div_to_l_
  6033  10D6  0878               	movf	??__div_to_l_,w
  6034  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  6035  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  6036  10D9  00A5               	movwf	__div_to_l_@exp1
  6037  10DA  0825               	movf	__div_to_l_@exp1,w
  6038  10DB  1D03               	btfss	3,2
  6039  10DC  28DE               	goto	u4851
  6040  10DD  28DF               	goto	u4850
  6041  10DE                     u4851:
  6042  10DE  28E8               	goto	l3181
  6043  10DF                     u4850:
  6044  10DF                     l3177:
  6045  10DF  3000               	movlw	0
  6046  10E0  00F3               	movwf	?__div_to_l_+3
  6047  10E1  3000               	movlw	0
  6048  10E2  00F2               	movwf	?__div_to_l_+2
  6049  10E3  3000               	movlw	0
  6050  10E4  00F1               	movwf	?__div_to_l_+1
  6051  10E5  3000               	movlw	0
  6052  10E6  00F0               	movwf	?__div_to_l_
  6053  10E7  298F               	goto	l598
  6054  10E8                     l3181:
  6055  10E8  1003               	clrc
  6056  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  6057  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  6058  10EB  00F8               	movwf	??__div_to_l_
  6059  10EC  0878               	movf	??__div_to_l_,w
  6060  10ED  00A4               	movwf	__div_to_l_@cntr
  6061  10EE  0824               	movf	__div_to_l_@cntr,w
  6062  10EF  1D03               	btfss	3,2
  6063  10F0  28F2               	goto	u4861
  6064  10F1  28F3               	goto	u4860
  6065  10F2                     u4861:
  6066  10F2  28F4               	goto	l599
  6067  10F3                     u4860:
  6068  10F3  28DF               	goto	l3177
  6069  10F4                     l599:
  6070  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  6071  10F5                     l3187:
  6072  10F5  30FF               	movlw	255
  6073  10F6  05F0               	andwf	__div_to_l_@f1,f
  6074  10F7  30FF               	movlw	255
  6075  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  6076  10F9  30FF               	movlw	255
  6077  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  6078  10FB  3000               	movlw	0
  6079  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  6080  10FD                     l3189:
  6081  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  6082  10FE  30FF               	movlw	255
  6083  10FF  05F4               	andwf	__div_to_l_@f2,f
  6084  1100  30FF               	movlw	255
  6085  1101  05F5               	andwf	__div_to_l_@f2+1,f
  6086  1102  30FF               	movlw	255
  6087  1103  05F6               	andwf	__div_to_l_@f2+2,f
  6088  1104  3000               	movlw	0
  6089  1105  05F7               	andwf	__div_to_l_@f2+3,f
  6090  1106  3000               	movlw	0
  6091  1107  00A3               	movwf	__div_to_l_@quot+3
  6092  1108  3000               	movlw	0
  6093  1109  00A2               	movwf	__div_to_l_@quot+2
  6094  110A  3000               	movlw	0
  6095  110B  00A1               	movwf	__div_to_l_@quot+1
  6096  110C  3000               	movlw	0
  6097  110D  00A0               	movwf	__div_to_l_@quot
  6098  110E                     l3191:
  6099  110E  307F               	movlw	127
  6100  110F  02A5               	subwf	__div_to_l_@exp1,f
  6101  1110                     l3193:
  6102  1110  30A0               	movlw	160
  6103  1111  0724               	addwf	__div_to_l_@cntr,w
  6104  1112  00F8               	movwf	??__div_to_l_
  6105  1113  0878               	movf	??__div_to_l_,w
  6106  1114  02A5               	subwf	__div_to_l_@exp1,f
  6107  1115  3020               	movlw	32
  6108  1116  00F8               	movwf	??__div_to_l_
  6109  1117  0878               	movf	??__div_to_l_,w
  6110  1118  00A4               	movwf	__div_to_l_@cntr
  6111  1119                     l3195:
  6112  1119  3001               	movlw	1
  6113  111A  00F8               	movwf	??__div_to_l_
  6114  111B                     u4875:
  6115  111B  1003               	clrc
  6116  111C  0DA0               	rlf	__div_to_l_@quot,f
  6117  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  6118  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  6119  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  6120  1120  0BF8               	decfsz	??__div_to_l_,f
  6121  1121  291B               	goto	u4875
  6122  1122                     l3197:
  6123  1122  0877               	movf	__div_to_l_@f2+3,w
  6124  1123  0273               	subwf	__div_to_l_@f1+3,w
  6125  1124  1D03               	skipz
  6126  1125  2930               	goto	u4885
  6127  1126  0876               	movf	__div_to_l_@f2+2,w
  6128  1127  0272               	subwf	__div_to_l_@f1+2,w
  6129  1128  1D03               	skipz
  6130  1129  2930               	goto	u4885
  6131  112A  0875               	movf	__div_to_l_@f2+1,w
  6132  112B  0271               	subwf	__div_to_l_@f1+1,w
  6133  112C  1D03               	skipz
  6134  112D  2930               	goto	u4885
  6135  112E  0874               	movf	__div_to_l_@f2,w
  6136  112F  0270               	subwf	__div_to_l_@f1,w
  6137  1130                     u4885:
  6138  1130  1C03               	skipc
  6139  1131  2933               	goto	u4881
  6140  1132  2934               	goto	u4880
  6141  1133                     u4881:
  6142  1133  2943               	goto	l3203
  6143  1134                     u4880:
  6144  1134                     l3199:
  6145  1134  0874               	movf	__div_to_l_@f2,w
  6146  1135  02F0               	subwf	__div_to_l_@f1,f
  6147  1136  0875               	movf	__div_to_l_@f2+1,w
  6148  1137  1C03               	skipc
  6149  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  6150  1139  02F1               	subwf	__div_to_l_@f1+1,f
  6151  113A  0876               	movf	__div_to_l_@f2+2,w
  6152  113B  1C03               	skipc
  6153  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  6154  113D  02F2               	subwf	__div_to_l_@f1+2,f
  6155  113E  0877               	movf	__div_to_l_@f2+3,w
  6156  113F  1C03               	skipc
  6157  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  6158  1141  02F3               	subwf	__div_to_l_@f1+3,f
  6159  1142                     l3201:
  6160  1142  1420               	bsf	__div_to_l_@quot,0
  6161  1143                     l3203:
  6162  1143  3001               	movlw	1
  6163  1144  00F8               	movwf	??__div_to_l_
  6164  1145                     u4895:
  6165  1145  1003               	clrc
  6166  1146  0DF0               	rlf	__div_to_l_@f1,f
  6167  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  6168  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  6169  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  6170  114A  0BF8               	decfsz	??__div_to_l_,f
  6171  114B  2945               	goto	u4895
  6172  114C                     l3205:
  6173  114C  3001               	movlw	1
  6174  114D  02A4               	subwf	__div_to_l_@cntr,f
  6175  114E  1D03               	btfss	3,2
  6176  114F  2951               	goto	u4901
  6177  1150  2952               	goto	u4900
  6178  1151                     u4901:
  6179  1151  2919               	goto	l3195
  6180  1152                     u4900:
  6181  1152                     l602:
  6182  1152  1FA5               	btfss	__div_to_l_@exp1,7
  6183  1153  2955               	goto	u4911
  6184  1154  2956               	goto	u4910
  6185  1155                     u4911:
  6186  1155  2970               	goto	l3215
  6187  1156                     u4910:
  6188  1156                     l3207:
  6189  1156  0825               	movf	__div_to_l_@exp1,w
  6190  1157  3A80               	xorlw	128
  6191  1158  3E9F               	addlw	159
  6192  1159  1803               	skipnc
  6193  115A  295C               	goto	u4921
  6194  115B  295D               	goto	u4920
  6195  115C                     u4921:
  6196  115C  295E               	goto	l3213
  6197  115D                     u4920:
  6198  115D  28DF               	goto	l3177
  6199  115E                     l3213:
  6200  115E  3001               	movlw	1
  6201  115F                     u4935:
  6202  115F  1003               	clrc
  6203  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  6204  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  6205  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  6206  1163  0CA0               	rrf	__div_to_l_@quot,f
  6207  1164  3EFF               	addlw	-1
  6208  1165  1D03               	skipz
  6209  1166  295F               	goto	u4935
  6210  1167  3001               	movlw	1
  6211  1168  00F8               	movwf	??__div_to_l_
  6212  1169  0878               	movf	??__div_to_l_,w
  6213  116A  07A5               	addwf	__div_to_l_@exp1,f
  6214  116B  1D03               	btfss	3,2
  6215  116C  296E               	goto	u4941
  6216  116D  296F               	goto	u4940
  6217  116E                     u4941:
  6218  116E  295E               	goto	l3213
  6219  116F                     u4940:
  6220  116F  2987               	goto	l3223
  6221  1170                     l3215:
  6222  1170  3020               	movlw	32
  6223  1171  0225               	subwf	__div_to_l_@exp1,w
  6224  1172  1C03               	skipc
  6225  1173  2975               	goto	u4951
  6226  1174  2976               	goto	u4950
  6227  1175                     u4951:
  6228  1175  2982               	goto	l609
  6229  1176                     u4950:
  6230  1176  28DF               	goto	l3177
  6231  1177                     l3221:
  6232  1177  3001               	movlw	1
  6233  1178  00F8               	movwf	??__div_to_l_
  6234  1179                     u4965:
  6235  1179  1003               	clrc
  6236  117A  0DA0               	rlf	__div_to_l_@quot,f
  6237  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  6238  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  6239  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  6240  117E  0BF8               	decfsz	??__div_to_l_,f
  6241  117F  2979               	goto	u4965
  6242  1180  3001               	movlw	1
  6243  1181  02A5               	subwf	__div_to_l_@exp1,f
  6244  1182                     l609:
  6245  1182  0825               	movf	__div_to_l_@exp1,w
  6246  1183  1D03               	btfss	3,2
  6247  1184  2986               	goto	u4971
  6248  1185  2987               	goto	u4970
  6249  1186                     u4971:
  6250  1186  2977               	goto	l3221
  6251  1187                     u4970:
  6252  1187                     l3223:
  6253  1187  0823               	movf	__div_to_l_@quot+3,w
  6254  1188  00F3               	movwf	?__div_to_l_+3
  6255  1189  0822               	movf	__div_to_l_@quot+2,w
  6256  118A  00F2               	movwf	?__div_to_l_+2
  6257  118B  0821               	movf	__div_to_l_@quot+1,w
  6258  118C  00F1               	movwf	?__div_to_l_+1
  6259  118D  0820               	movf	__div_to_l_@quot,w
  6260  118E  00F0               	movwf	?__div_to_l_
  6261  118F                     l598:
  6262  118F  0008               	return
  6263  1190                     __end_of__div_to_l_:
  6264                           
  6265                           	psect	text11
  6266  18F6                     __ptext11:	
  6267 ;; *************** function ___wmul *****************
  6268 ;; Defined at:
  6269 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  multiplier      2    0[COMMON] unsigned int 
  6272 ;;  multiplicand    2    2[COMMON] unsigned int 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  product         2    4[COMMON] unsigned int 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  2    0[COMMON] unsigned int 
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6284 ;;      Params:         4       0       0       0       0
  6285 ;;      Locals:         2       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0
  6287 ;;      Totals:         6       0       0       0       0
  6288 ;;Total ram usage:        6 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_sprintf
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function ___wmul
  6299  18F6                     ___wmul:
  6300  18F6                     l3227:	
  6301                           ;incstack = 0
  6302                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6303                           
  6304  18F6  01F4               	clrf	___wmul@product
  6305  18F7  01F5               	clrf	___wmul@product+1
  6306  18F8                     l3229:
  6307  18F8  1C70               	btfss	___wmul@multiplier,0
  6308  18F9  28FB               	goto	u4981
  6309  18FA  28FC               	goto	u4980
  6310  18FB                     u4981:
  6311  18FB  2902               	goto	l428
  6312  18FC                     u4980:
  6313  18FC                     l3231:
  6314  18FC  0872               	movf	___wmul@multiplicand,w
  6315  18FD  07F4               	addwf	___wmul@product,f
  6316  18FE  1803               	skipnc
  6317  18FF  0AF5               	incf	___wmul@product+1,f
  6318  1900  0873               	movf	___wmul@multiplicand+1,w
  6319  1901  07F5               	addwf	___wmul@product+1,f
  6320  1902                     l428:
  6321  1902  3001               	movlw	1
  6322  1903                     u4995:
  6323  1903  1003               	clrc
  6324  1904  0DF2               	rlf	___wmul@multiplicand,f
  6325  1905  0DF3               	rlf	___wmul@multiplicand+1,f
  6326  1906  3EFF               	addlw	-1
  6327  1907  1D03               	skipz
  6328  1908  2903               	goto	u4995
  6329  1909                     l3233:
  6330  1909  3001               	movlw	1
  6331  190A                     u5005:
  6332  190A  1003               	clrc
  6333  190B  0CF1               	rrf	___wmul@multiplier+1,f
  6334  190C  0CF0               	rrf	___wmul@multiplier,f
  6335  190D  3EFF               	addlw	-1
  6336  190E  1D03               	skipz
  6337  190F  290A               	goto	u5005
  6338  1910                     l3235:
  6339  1910  0870               	movf	___wmul@multiplier,w
  6340  1911  0471               	iorwf	___wmul@multiplier+1,w
  6341  1912  1D03               	btfss	3,2
  6342  1913  2915               	goto	u5011
  6343  1914  2916               	goto	u5010
  6344  1915                     u5011:
  6345  1915  28F8               	goto	l3229
  6346  1916                     u5010:
  6347  1916                     l3237:
  6348  1916  0875               	movf	___wmul@product+1,w
  6349  1917  00F1               	movwf	?___wmul+1
  6350  1918  0874               	movf	___wmul@product,w
  6351  1919  00F0               	movwf	?___wmul
  6352  191A                     l430:
  6353  191A  0008               	return
  6354  191B                     __end_of___wmul:
  6355                           
  6356                           	psect	text12
  6357  1AB9                     __ptext12:	
  6358 ;; *************** function ___llmod *****************
  6359 ;; Defined at:
  6360 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  divisor         4    0[COMMON] unsigned long 
  6363 ;;  dividend        4    4[COMMON] unsigned long 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  counter         1    9[COMMON] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  4    0[COMMON] unsigned long 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6375 ;;      Params:         8       0       0       0       0
  6376 ;;      Locals:         1       0       0       0       0
  6377 ;;      Temps:          1       0       0       0       0
  6378 ;;      Totals:        10       0       0       0       0
  6379 ;;Total ram usage:       10 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_sprintf
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function ___llmod
  6390  1AB9                     ___llmod:
  6391  1AB9                     l3341:	
  6392                           ;incstack = 0
  6393                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6394                           
  6395  1AB9  0873               	movf	___llmod@divisor+3,w
  6396  1ABA  0472               	iorwf	___llmod@divisor+2,w
  6397  1ABB  0471               	iorwf	___llmod@divisor+1,w
  6398  1ABC  0470               	iorwf	___llmod@divisor,w
  6399  1ABD  1903               	skipnz
  6400  1ABE  2AC0               	goto	u5301
  6401  1ABF  2AC1               	goto	u5300
  6402  1AC0                     u5301:
  6403  1AC0  2B04               	goto	l3357
  6404  1AC1                     u5300:
  6405  1AC1                     l3343:
  6406  1AC1  01F9               	clrf	___llmod@counter
  6407  1AC2  0AF9               	incf	___llmod@counter,f
  6408  1AC3  2AD1               	goto	l3347
  6409  1AC4                     l3345:
  6410  1AC4  3001               	movlw	1
  6411  1AC5  00F8               	movwf	??___llmod
  6412  1AC6                     u5315:
  6413  1AC6  1003               	clrc
  6414  1AC7  0DF0               	rlf	___llmod@divisor,f
  6415  1AC8  0DF1               	rlf	___llmod@divisor+1,f
  6416  1AC9  0DF2               	rlf	___llmod@divisor+2,f
  6417  1ACA  0DF3               	rlf	___llmod@divisor+3,f
  6418  1ACB  0BF8               	decfsz	??___llmod,f
  6419  1ACC  2AC6               	goto	u5315
  6420  1ACD  3001               	movlw	1
  6421  1ACE  00F8               	movwf	??___llmod
  6422  1ACF  0878               	movf	??___llmod,w
  6423  1AD0  07F9               	addwf	___llmod@counter,f
  6424  1AD1                     l3347:
  6425  1AD1  1FF3               	btfss	___llmod@divisor+3,7
  6426  1AD2  2AD4               	goto	u5321
  6427  1AD3  2AD5               	goto	u5320
  6428  1AD4                     u5321:
  6429  1AD4  2AC4               	goto	l3345
  6430  1AD5                     u5320:
  6431  1AD5                     l3349:
  6432  1AD5  0873               	movf	___llmod@divisor+3,w
  6433  1AD6  0277               	subwf	___llmod@dividend+3,w
  6434  1AD7  1D03               	skipz
  6435  1AD8  2AE3               	goto	u5335
  6436  1AD9  0872               	movf	___llmod@divisor+2,w
  6437  1ADA  0276               	subwf	___llmod@dividend+2,w
  6438  1ADB  1D03               	skipz
  6439  1ADC  2AE3               	goto	u5335
  6440  1ADD  0871               	movf	___llmod@divisor+1,w
  6441  1ADE  0275               	subwf	___llmod@dividend+1,w
  6442  1ADF  1D03               	skipz
  6443  1AE0  2AE3               	goto	u5335
  6444  1AE1  0870               	movf	___llmod@divisor,w
  6445  1AE2  0274               	subwf	___llmod@dividend,w
  6446  1AE3                     u5335:
  6447  1AE3  1C03               	skipc
  6448  1AE4  2AE6               	goto	u5331
  6449  1AE5  2AE7               	goto	u5330
  6450  1AE6                     u5331:
  6451  1AE6  2AF5               	goto	l3353
  6452  1AE7                     u5330:
  6453  1AE7                     l3351:
  6454  1AE7  0870               	movf	___llmod@divisor,w
  6455  1AE8  02F4               	subwf	___llmod@dividend,f
  6456  1AE9  0871               	movf	___llmod@divisor+1,w
  6457  1AEA  1C03               	skipc
  6458  1AEB  0F71               	incfsz	___llmod@divisor+1,w
  6459  1AEC  02F5               	subwf	___llmod@dividend+1,f
  6460  1AED  0872               	movf	___llmod@divisor+2,w
  6461  1AEE  1C03               	skipc
  6462  1AEF  0F72               	incfsz	___llmod@divisor+2,w
  6463  1AF0  02F6               	subwf	___llmod@dividend+2,f
  6464  1AF1  0873               	movf	___llmod@divisor+3,w
  6465  1AF2  1C03               	skipc
  6466  1AF3  0F73               	incfsz	___llmod@divisor+3,w
  6467  1AF4  02F7               	subwf	___llmod@dividend+3,f
  6468  1AF5                     l3353:
  6469  1AF5  3001               	movlw	1
  6470  1AF6                     u5345:
  6471  1AF6  1003               	clrc
  6472  1AF7  0CF3               	rrf	___llmod@divisor+3,f
  6473  1AF8  0CF2               	rrf	___llmod@divisor+2,f
  6474  1AF9  0CF1               	rrf	___llmod@divisor+1,f
  6475  1AFA  0CF0               	rrf	___llmod@divisor,f
  6476  1AFB  3EFF               	addlw	-1
  6477  1AFC  1D03               	skipz
  6478  1AFD  2AF6               	goto	u5345
  6479  1AFE                     l3355:
  6480  1AFE  3001               	movlw	1
  6481  1AFF  02F9               	subwf	___llmod@counter,f
  6482  1B00  1D03               	btfss	3,2
  6483  1B01  2B03               	goto	u5351
  6484  1B02  2B04               	goto	u5350
  6485  1B03                     u5351:
  6486  1B03  2AD5               	goto	l3349
  6487  1B04                     u5350:
  6488  1B04                     l3357:
  6489  1B04  0877               	movf	___llmod@dividend+3,w
  6490  1B05  00F3               	movwf	?___llmod+3
  6491  1B06  0876               	movf	___llmod@dividend+2,w
  6492  1B07  00F2               	movwf	?___llmod+2
  6493  1B08  0875               	movf	___llmod@dividend+1,w
  6494  1B09  00F1               	movwf	?___llmod+1
  6495  1B0A  0874               	movf	___llmod@dividend,w
  6496  1B0B  00F0               	movwf	?___llmod
  6497  1B0C                     l684:
  6498  1B0C  0008               	return
  6499  1B0D                     __end_of___llmod:
  6500                           
  6501                           	psect	text13
  6502  1B66                     __ptext13:	
  6503 ;; *************** function ___lldiv *****************
  6504 ;; Defined at:
  6505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  divisor         4    0[COMMON] unsigned long 
  6508 ;;  dividend        4    4[COMMON] unsigned long 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  quotient        4    9[COMMON] unsigned long 
  6511 ;;  counter         1   13[COMMON] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  4    0[COMMON] unsigned long 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6521 ;;      Params:         8       0       0       0       0
  6522 ;;      Locals:         5       0       0       0       0
  6523 ;;      Temps:          1       0       0       0       0
  6524 ;;      Totals:        14       0       0       0       0
  6525 ;;Total ram usage:       14 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_sprintf
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function ___lldiv
  6536  1B66                     ___lldiv:
  6537  1B66                     l3241:	
  6538                           ;incstack = 0
  6539                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6540                           
  6541  1B66  3000               	movlw	0
  6542  1B67  00FC               	movwf	___lldiv@quotient+3
  6543  1B68  3000               	movlw	0
  6544  1B69  00FB               	movwf	___lldiv@quotient+2
  6545  1B6A  3000               	movlw	0
  6546  1B6B  00FA               	movwf	___lldiv@quotient+1
  6547  1B6C  3000               	movlw	0
  6548  1B6D  00F9               	movwf	___lldiv@quotient
  6549  1B6E  0873               	movf	___lldiv@divisor+3,w
  6550  1B6F  0472               	iorwf	___lldiv@divisor+2,w
  6551  1B70  0471               	iorwf	___lldiv@divisor+1,w
  6552  1B71  0470               	iorwf	___lldiv@divisor,w
  6553  1B72  1903               	skipnz
  6554  1B73  2B75               	goto	u5021
  6555  1B74  2B76               	goto	u5020
  6556  1B75                     u5021:
  6557  1B75  2BC3               	goto	l3261
  6558  1B76                     u5020:
  6559  1B76                     l3243:
  6560  1B76  01FD               	clrf	___lldiv@counter
  6561  1B77  0AFD               	incf	___lldiv@counter,f
  6562  1B78  2B86               	goto	l3247
  6563  1B79                     l3245:
  6564  1B79  3001               	movlw	1
  6565  1B7A  00F8               	movwf	??___lldiv
  6566  1B7B                     u5035:
  6567  1B7B  1003               	clrc
  6568  1B7C  0DF0               	rlf	___lldiv@divisor,f
  6569  1B7D  0DF1               	rlf	___lldiv@divisor+1,f
  6570  1B7E  0DF2               	rlf	___lldiv@divisor+2,f
  6571  1B7F  0DF3               	rlf	___lldiv@divisor+3,f
  6572  1B80  0BF8               	decfsz	??___lldiv,f
  6573  1B81  2B7B               	goto	u5035
  6574  1B82  3001               	movlw	1
  6575  1B83  00F8               	movwf	??___lldiv
  6576  1B84  0878               	movf	??___lldiv,w
  6577  1B85  07FD               	addwf	___lldiv@counter,f
  6578  1B86                     l3247:
  6579  1B86  1FF3               	btfss	___lldiv@divisor+3,7
  6580  1B87  2B89               	goto	u5041
  6581  1B88  2B8A               	goto	u5040
  6582  1B89                     u5041:
  6583  1B89  2B79               	goto	l3245
  6584  1B8A                     u5040:
  6585  1B8A                     l3249:
  6586  1B8A  3001               	movlw	1
  6587  1B8B  00F8               	movwf	??___lldiv
  6588  1B8C                     u5055:
  6589  1B8C  1003               	clrc
  6590  1B8D  0DF9               	rlf	___lldiv@quotient,f
  6591  1B8E  0DFA               	rlf	___lldiv@quotient+1,f
  6592  1B8F  0DFB               	rlf	___lldiv@quotient+2,f
  6593  1B90  0DFC               	rlf	___lldiv@quotient+3,f
  6594  1B91  0BF8               	decfsz	??___lldiv,f
  6595  1B92  2B8C               	goto	u5055
  6596  1B93                     l3251:
  6597  1B93  0873               	movf	___lldiv@divisor+3,w
  6598  1B94  0277               	subwf	___lldiv@dividend+3,w
  6599  1B95  1D03               	skipz
  6600  1B96  2BA1               	goto	u5065
  6601  1B97  0872               	movf	___lldiv@divisor+2,w
  6602  1B98  0276               	subwf	___lldiv@dividend+2,w
  6603  1B99  1D03               	skipz
  6604  1B9A  2BA1               	goto	u5065
  6605  1B9B  0871               	movf	___lldiv@divisor+1,w
  6606  1B9C  0275               	subwf	___lldiv@dividend+1,w
  6607  1B9D  1D03               	skipz
  6608  1B9E  2BA1               	goto	u5065
  6609  1B9F  0870               	movf	___lldiv@divisor,w
  6610  1BA0  0274               	subwf	___lldiv@dividend,w
  6611  1BA1                     u5065:
  6612  1BA1  1C03               	skipc
  6613  1BA2  2BA4               	goto	u5061
  6614  1BA3  2BA5               	goto	u5060
  6615  1BA4                     u5061:
  6616  1BA4  2BB4               	goto	l3257
  6617  1BA5                     u5060:
  6618  1BA5                     l3253:
  6619  1BA5  0870               	movf	___lldiv@divisor,w
  6620  1BA6  02F4               	subwf	___lldiv@dividend,f
  6621  1BA7  0871               	movf	___lldiv@divisor+1,w
  6622  1BA8  1C03               	skipc
  6623  1BA9  0F71               	incfsz	___lldiv@divisor+1,w
  6624  1BAA  02F5               	subwf	___lldiv@dividend+1,f
  6625  1BAB  0872               	movf	___lldiv@divisor+2,w
  6626  1BAC  1C03               	skipc
  6627  1BAD  0F72               	incfsz	___lldiv@divisor+2,w
  6628  1BAE  02F6               	subwf	___lldiv@dividend+2,f
  6629  1BAF  0873               	movf	___lldiv@divisor+3,w
  6630  1BB0  1C03               	skipc
  6631  1BB1  0F73               	incfsz	___lldiv@divisor+3,w
  6632  1BB2  02F7               	subwf	___lldiv@dividend+3,f
  6633  1BB3                     l3255:
  6634  1BB3  1479               	bsf	___lldiv@quotient,0
  6635  1BB4                     l3257:
  6636  1BB4  3001               	movlw	1
  6637  1BB5                     u5075:
  6638  1BB5  1003               	clrc
  6639  1BB6  0CF3               	rrf	___lldiv@divisor+3,f
  6640  1BB7  0CF2               	rrf	___lldiv@divisor+2,f
  6641  1BB8  0CF1               	rrf	___lldiv@divisor+1,f
  6642  1BB9  0CF0               	rrf	___lldiv@divisor,f
  6643  1BBA  3EFF               	addlw	-1
  6644  1BBB  1D03               	skipz
  6645  1BBC  2BB5               	goto	u5075
  6646  1BBD                     l3259:
  6647  1BBD  3001               	movlw	1
  6648  1BBE  02FD               	subwf	___lldiv@counter,f
  6649  1BBF  1D03               	btfss	3,2
  6650  1BC0  2BC2               	goto	u5081
  6651  1BC1  2BC3               	goto	u5080
  6652  1BC2                     u5081:
  6653  1BC2  2B8A               	goto	l3249
  6654  1BC3                     u5080:
  6655  1BC3                     l3261:
  6656  1BC3  087C               	movf	___lldiv@quotient+3,w
  6657  1BC4  00F3               	movwf	?___lldiv+3
  6658  1BC5  087B               	movf	___lldiv@quotient+2,w
  6659  1BC6  00F2               	movwf	?___lldiv+2
  6660  1BC7  087A               	movf	___lldiv@quotient+1,w
  6661  1BC8  00F1               	movwf	?___lldiv+1
  6662  1BC9  0879               	movf	___lldiv@quotient,w
  6663  1BCA  00F0               	movwf	?___lldiv
  6664  1BCB                     l464:
  6665  1BCB  0008               	return
  6666  1BCC                     __end_of___lldiv:
  6667                           
  6668                           	psect	text14
  6669  1CBB                     __ptext14:	
  6670 ;; *************** function ___fltol *****************
  6671 ;; Defined at:
  6672 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  f1              4   49[BANK0 ] unsigned long 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  exp1            1   59[BANK0 ] unsigned char 
  6677 ;;  sign1           1   58[BANK0 ] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  4   49[BANK0 ] long 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6687 ;;      Params:         0       4       0       0       0
  6688 ;;      Locals:         0       2       0       0       0
  6689 ;;      Temps:          0       5       0       0       0
  6690 ;;      Totals:         0      11       0       0       0
  6691 ;;Total ram usage:       11 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_sprintf
  6697 ;;		_Enviar_1
  6698 ;;		_Enviar_2
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           
  6703                           ;psect for function ___fltol
  6704  1CBB                     ___fltol:
  6705  1CBB                     l3305:	
  6706                           ;incstack = 0
  6707                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6708                           
  6709  1CBB  1003               	clrc
  6710  1CBC  1283               	bcf	3,5	;RP0=0, select bank0
  6711  1CBD  1303               	bcf	3,6	;RP1=0, select bank0
  6712  1CBE  0D53               	rlf	___fltol@f1+2,w
  6713  1CBF  0D54               	rlf	___fltol@f1+3,w
  6714  1CC0  00D5               	movwf	??___fltol
  6715  1CC1  0855               	movf	??___fltol,w
  6716  1CC2  00DB               	movwf	___fltol@exp1
  6717  1CC3  085B               	movf	___fltol@exp1,w
  6718  1CC4  1D03               	btfss	3,2
  6719  1CC5  2CC7               	goto	u5201
  6720  1CC6  2CC8               	goto	u5200
  6721  1CC7                     u5201:
  6722  1CC7  2CD1               	goto	l3311
  6723  1CC8                     u5200:
  6724  1CC8                     l3307:
  6725  1CC8  3000               	movlw	0
  6726  1CC9  00D4               	movwf	?___fltol+3
  6727  1CCA  3000               	movlw	0
  6728  1CCB  00D3               	movwf	?___fltol+2
  6729  1CCC  3000               	movlw	0
  6730  1CCD  00D2               	movwf	?___fltol+1
  6731  1CCE  3000               	movlw	0
  6732  1CCF  00D1               	movwf	?___fltol
  6733  1CD0  2D36               	goto	l631
  6734  1CD1                     l3311:
  6735  1CD1  0851               	movf	___fltol@f1,w
  6736  1CD2  00D5               	movwf	??___fltol
  6737  1CD3  0852               	movf	___fltol@f1+1,w
  6738  1CD4  00D6               	movwf	??___fltol+1
  6739  1CD5  0853               	movf	___fltol@f1+2,w
  6740  1CD6  00D7               	movwf	??___fltol+2
  6741  1CD7  0854               	movf	___fltol@f1+3,w
  6742  1CD8  00D8               	movwf	??___fltol+3
  6743  1CD9  301F               	movlw	31
  6744  1CDA                     u5215:
  6745  1CDA  1003               	clrc
  6746  1CDB  0CD8               	rrf	??___fltol+3,f
  6747  1CDC  0CD7               	rrf	??___fltol+2,f
  6748  1CDD  0CD6               	rrf	??___fltol+1,f
  6749  1CDE  0CD5               	rrf	??___fltol,f
  6750  1CDF                     u5210:
  6751  1CDF  3EFF               	addlw	-1
  6752  1CE0  1D03               	skipz
  6753  1CE1  2CDA               	goto	u5215
  6754  1CE2  0855               	movf	??___fltol,w
  6755  1CE3  00D9               	movwf	??___fltol+4
  6756  1CE4  0859               	movf	??___fltol+4,w
  6757  1CE5  00DA               	movwf	___fltol@sign1
  6758  1CE6                     l3313:
  6759  1CE6  17D3               	bsf	___fltol@f1+2,7
  6760  1CE7                     l3315:
  6761  1CE7  30FF               	movlw	255
  6762  1CE8  05D1               	andwf	___fltol@f1,f
  6763  1CE9  30FF               	movlw	255
  6764  1CEA  05D2               	andwf	___fltol@f1+1,f
  6765  1CEB  30FF               	movlw	255
  6766  1CEC  05D3               	andwf	___fltol@f1+2,f
  6767  1CED  3000               	movlw	0
  6768  1CEE  05D4               	andwf	___fltol@f1+3,f
  6769  1CEF                     l3317:
  6770  1CEF  3096               	movlw	150
  6771  1CF0  02DB               	subwf	___fltol@exp1,f
  6772  1CF1                     l3319:
  6773  1CF1  1FDB               	btfss	___fltol@exp1,7
  6774  1CF2  2CF4               	goto	u5221
  6775  1CF3  2CF5               	goto	u5220
  6776  1CF4                     u5221:
  6777  1CF4  2D0F               	goto	l3329
  6778  1CF5                     u5220:
  6779  1CF5                     l3321:
  6780  1CF5  085B               	movf	___fltol@exp1,w
  6781  1CF6  3A80               	xorlw	128
  6782  1CF7  3E97               	addlw	151
  6783  1CF8  1803               	skipnc
  6784  1CF9  2CFB               	goto	u5231
  6785  1CFA  2CFC               	goto	u5230
  6786  1CFB                     u5231:
  6787  1CFB  2CFD               	goto	l3327
  6788  1CFC                     u5230:
  6789  1CFC  2CC8               	goto	l3307
  6790  1CFD                     l3327:
  6791  1CFD  3001               	movlw	1
  6792  1CFE                     u5245:
  6793  1CFE  1003               	clrc
  6794  1CFF  0CD4               	rrf	___fltol@f1+3,f
  6795  1D00  0CD3               	rrf	___fltol@f1+2,f
  6796  1D01  0CD2               	rrf	___fltol@f1+1,f
  6797  1D02  0CD1               	rrf	___fltol@f1,f
  6798  1D03  3EFF               	addlw	-1
  6799  1D04  1D03               	skipz
  6800  1D05  2CFE               	goto	u5245
  6801  1D06  3001               	movlw	1
  6802  1D07  00D5               	movwf	??___fltol
  6803  1D08  0855               	movf	??___fltol,w
  6804  1D09  07DB               	addwf	___fltol@exp1,f
  6805  1D0A  1D03               	btfss	3,2
  6806  1D0B  2D0D               	goto	u5251
  6807  1D0C  2D0E               	goto	u5250
  6808  1D0D                     u5251:
  6809  1D0D  2CFD               	goto	l3327
  6810  1D0E                     u5250:
  6811  1D0E  2D26               	goto	l3337
  6812  1D0F                     l3329:
  6813  1D0F  3020               	movlw	32
  6814  1D10  025B               	subwf	___fltol@exp1,w
  6815  1D11  1C03               	skipc
  6816  1D12  2D14               	goto	u5261
  6817  1D13  2D15               	goto	u5260
  6818  1D14                     u5261:
  6819  1D14  2D21               	goto	l638
  6820  1D15                     u5260:
  6821  1D15  2CC8               	goto	l3307
  6822  1D16                     l3335:
  6823  1D16  3001               	movlw	1
  6824  1D17  00D5               	movwf	??___fltol
  6825  1D18                     u5275:
  6826  1D18  1003               	clrc
  6827  1D19  0DD1               	rlf	___fltol@f1,f
  6828  1D1A  0DD2               	rlf	___fltol@f1+1,f
  6829  1D1B  0DD3               	rlf	___fltol@f1+2,f
  6830  1D1C  0DD4               	rlf	___fltol@f1+3,f
  6831  1D1D  0BD5               	decfsz	??___fltol,f
  6832  1D1E  2D18               	goto	u5275
  6833  1D1F  3001               	movlw	1
  6834  1D20  02DB               	subwf	___fltol@exp1,f
  6835  1D21                     l638:
  6836  1D21  085B               	movf	___fltol@exp1,w
  6837  1D22  1D03               	btfss	3,2
  6838  1D23  2D25               	goto	u5281
  6839  1D24  2D26               	goto	u5280
  6840  1D25                     u5281:
  6841  1D25  2D16               	goto	l3335
  6842  1D26                     u5280:
  6843  1D26                     l3337:
  6844  1D26  085A               	movf	___fltol@sign1,w
  6845  1D27  1903               	btfsc	3,2
  6846  1D28  2D2A               	goto	u5291
  6847  1D29  2D2B               	goto	u5290
  6848  1D2A                     u5291:
  6849  1D2A  2D36               	goto	l641
  6850  1D2B                     u5290:
  6851  1D2B                     l3339:
  6852  1D2B  09D1               	comf	___fltol@f1,f
  6853  1D2C  09D2               	comf	___fltol@f1+1,f
  6854  1D2D  09D3               	comf	___fltol@f1+2,f
  6855  1D2E  09D4               	comf	___fltol@f1+3,f
  6856  1D2F  0AD1               	incf	___fltol@f1,f
  6857  1D30  1903               	skipnz
  6858  1D31  0AD2               	incf	___fltol@f1+1,f
  6859  1D32  1903               	skipnz
  6860  1D33  0AD3               	incf	___fltol@f1+2,f
  6861  1D34  1903               	skipnz
  6862  1D35  0AD4               	incf	___fltol@f1+3,f
  6863  1D36                     l641:
  6864  1D36                     l631:
  6865  1D36  0008               	return
  6866  1D37                     __end_of___fltol:
  6867                           
  6868                           	psect	text15
  6869  18D2                     __ptext15:	
  6870 ;; *************** function ___flsub *****************
  6871 ;; Defined at:
  6872 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  a               4   70[BANK0 ] long 
  6875 ;;  b               4   74[BANK0 ] long 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  4   70[BANK0 ] long 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6887 ;;      Params:         0       8       0       0       0
  6888 ;;      Locals:         0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0
  6890 ;;      Totals:         0       8       0       0       0
  6891 ;;Total ram usage:        8 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    1
  6894 ;; This function calls:
  6895 ;;		___fladd
  6896 ;; This function is called by:
  6897 ;;		_sprintf
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           
  6902                           ;psect for function ___flsub
  6903  18D2                     ___flsub:
  6904  18D2                     l3361:	
  6905                           ;incstack = 0
  6906                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6907                           
  6908  18D2  3080               	movlw	128
  6909  18D3  1283               	bcf	3,5	;RP0=0, select bank0
  6910  18D4  1303               	bcf	3,6	;RP1=0, select bank0
  6911  18D5  06E9               	xorwf	___flsub@a+3,f
  6912  18D6                     l3363:
  6913  18D6  086D               	movf	___flsub@b+3,w
  6914  18D7  00D5               	movwf	___fladd@b+3
  6915  18D8  086C               	movf	___flsub@b+2,w
  6916  18D9  00D4               	movwf	___fladd@b+2
  6917  18DA  086B               	movf	___flsub@b+1,w
  6918  18DB  00D3               	movwf	___fladd@b+1
  6919  18DC  086A               	movf	___flsub@b,w
  6920  18DD  00D2               	movwf	___fladd@b
  6921  18DE  0869               	movf	___flsub@a+3,w
  6922  18DF  00D9               	movwf	___fladd@a+3
  6923  18E0  0868               	movf	___flsub@a+2,w
  6924  18E1  00D8               	movwf	___fladd@a+2
  6925  18E2  0867               	movf	___flsub@a+1,w
  6926  18E3  00D7               	movwf	___fladd@a+1
  6927  18E4  0866               	movf	___flsub@a,w
  6928  18E5  00D6               	movwf	___fladd@a
  6929  18E6  160A  118A  2578  160A  158A  	fcall	___fladd
  6930  18EB  1283               	bcf	3,5	;RP0=0, select bank0
  6931  18EC  1303               	bcf	3,6	;RP1=0, select bank0
  6932  18ED  0855               	movf	?___fladd+3,w
  6933  18EE  00E9               	movwf	?___flsub+3
  6934  18EF  0854               	movf	?___fladd+2,w
  6935  18F0  00E8               	movwf	?___flsub+2
  6936  18F1  0853               	movf	?___fladd+1,w
  6937  18F2  00E7               	movwf	?___flsub+1
  6938  18F3  0852               	movf	?___fladd,w
  6939  18F4  00E6               	movwf	?___flsub
  6940  18F5                     l801:
  6941  18F5  0008               	return
  6942  18F6                     __end_of___flsub:
  6943                           
  6944                           	psect	text16
  6945  1578                     __ptext16:	
  6946 ;; *************** function ___fladd *****************
  6947 ;; Defined at:
  6948 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  b               4   50[BANK0 ] long 
  6951 ;;  a               4   54[BANK0 ] long 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  grs             1   69[BANK0 ] unsigned char 
  6954 ;;  bexp            1   68[BANK0 ] unsigned char 
  6955 ;;  aexp            1   67[BANK0 ] unsigned char 
  6956 ;;  signs           1   66[BANK0 ] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  4   50[BANK0 ] unsigned char 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0, btemp+1
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6966 ;;      Params:         0       8       0       0       0
  6967 ;;      Locals:         0       4       0       0       0
  6968 ;;      Temps:          0       8       0       0       0
  6969 ;;      Totals:         0      20       0       0       0
  6970 ;;Total ram usage:       20 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_sprintf
  6976 ;;		___flsub
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           
  6981                           ;psect for function ___fladd
  6982  1578                     ___fladd:
  6983  1578                     l2677:	
  6984                           ;incstack = 0
  6985                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6986                           
  6987  1578  1283               	bcf	3,5	;RP0=0, select bank0
  6988  1579  1303               	bcf	3,6	;RP1=0, select bank0
  6989  157A  0855               	movf	___fladd@b+3,w
  6990  157B  3980               	andlw	128
  6991  157C  00DA               	movwf	??___fladd
  6992  157D  085A               	movf	??___fladd,w
  6993  157E  00E2               	movwf	___fladd@signs
  6994  157F                     l2679:
  6995  157F  0855               	movf	___fladd@b+3,w
  6996  1580  00DA               	movwf	??___fladd
  6997  1581  075A               	addwf	??___fladd,w
  6998  1582  00DB               	movwf	??___fladd+1
  6999  1583  085B               	movf	??___fladd+1,w
  7000  1584  00E4               	movwf	___fladd@bexp
  7001  1585                     l2681:
  7002  1585  1FD4               	btfss	___fladd@b+2,7
  7003  1586  2D88               	goto	u3611
  7004  1587  2D89               	goto	u3610
  7005  1588                     u3611:
  7006  1588  2D8A               	goto	l2685
  7007  1589                     u3610:
  7008  1589                     l2683:
  7009  1589  1464               	bsf	___fladd@bexp,0
  7010  158A                     l2685:
  7011  158A  0864               	movf	___fladd@bexp,w
  7012  158B  1903               	btfsc	3,2
  7013  158C  2D8E               	goto	u3621
  7014  158D  2D8F               	goto	u3620
  7015  158E                     u3621:
  7016  158E  2D9F               	goto	l2695
  7017  158F                     u3620:
  7018  158F                     l2687:
  7019  158F  0A64               	incf	___fladd@bexp,w
  7020  1590  1D03               	btfss	3,2
  7021  1591  2D93               	goto	u3631
  7022  1592  2D94               	goto	u3630
  7023  1593                     u3631:
  7024  1593  2D9C               	goto	l2691
  7025  1594                     u3630:
  7026  1594                     l2689:
  7027  1594  3000               	movlw	0
  7028  1595  00D5               	movwf	___fladd@b+3
  7029  1596  3000               	movlw	0
  7030  1597  00D4               	movwf	___fladd@b+2
  7031  1598  3000               	movlw	0
  7032  1599  00D3               	movwf	___fladd@b+1
  7033  159A  3000               	movlw	0
  7034  159B  00D2               	movwf	___fladd@b
  7035  159C                     l2691:
  7036  159C  17D4               	bsf	___fladd@b+2,7
  7037  159D                     l2693:
  7038  159D  01D5               	clrf	___fladd@b+3
  7039  159E  2DA7               	goto	l2697
  7040  159F                     l2695:
  7041  159F  3000               	movlw	0
  7042  15A0  00D5               	movwf	___fladd@b+3
  7043  15A1  3000               	movlw	0
  7044  15A2  00D4               	movwf	___fladd@b+2
  7045  15A3  3000               	movlw	0
  7046  15A4  00D3               	movwf	___fladd@b+1
  7047  15A5  3000               	movlw	0
  7048  15A6  00D2               	movwf	___fladd@b
  7049  15A7                     l2697:
  7050  15A7  0859               	movf	___fladd@a+3,w
  7051  15A8  3980               	andlw	128
  7052  15A9  00DA               	movwf	??___fladd
  7053  15AA  085A               	movf	??___fladd,w
  7054  15AB  00E3               	movwf	___fladd@aexp
  7055  15AC                     l2699:
  7056  15AC  0863               	movf	___fladd@aexp,w
  7057  15AD  0662               	xorwf	___fladd@signs,w
  7058  15AE  1903               	skipnz
  7059  15AF  2DB1               	goto	u3641
  7060  15B0  2DB2               	goto	u3640
  7061  15B1                     u3641:
  7062  15B1  2DB3               	goto	l2703
  7063  15B2                     u3640:
  7064  15B2                     l2701:
  7065  15B2  1762               	bsf	___fladd@signs,6
  7066  15B3                     l2703:
  7067  15B3  0859               	movf	___fladd@a+3,w
  7068  15B4  00DA               	movwf	??___fladd
  7069  15B5  075A               	addwf	??___fladd,w
  7070  15B6  00DB               	movwf	??___fladd+1
  7071  15B7  085B               	movf	??___fladd+1,w
  7072  15B8  00E3               	movwf	___fladd@aexp
  7073  15B9                     l2705:
  7074  15B9  1FD8               	btfss	___fladd@a+2,7
  7075  15BA  2DBC               	goto	u3651
  7076  15BB  2DBD               	goto	u3650
  7077  15BC                     u3651:
  7078  15BC  2DBE               	goto	l2709
  7079  15BD                     u3650:
  7080  15BD                     l2707:
  7081  15BD  1463               	bsf	___fladd@aexp,0
  7082  15BE                     l2709:
  7083  15BE  0863               	movf	___fladd@aexp,w
  7084  15BF  1903               	btfsc	3,2
  7085  15C0  2DC2               	goto	u3661
  7086  15C1  2DC3               	goto	u3660
  7087  15C2                     u3661:
  7088  15C2  2DD3               	goto	l2719
  7089  15C3                     u3660:
  7090  15C3                     l2711:
  7091  15C3  0A63               	incf	___fladd@aexp,w
  7092  15C4  1D03               	btfss	3,2
  7093  15C5  2DC7               	goto	u3671
  7094  15C6  2DC8               	goto	u3670
  7095  15C7                     u3671:
  7096  15C7  2DD0               	goto	l2715
  7097  15C8                     u3670:
  7098  15C8                     l2713:
  7099  15C8  3000               	movlw	0
  7100  15C9  00D9               	movwf	___fladd@a+3
  7101  15CA  3000               	movlw	0
  7102  15CB  00D8               	movwf	___fladd@a+2
  7103  15CC  3000               	movlw	0
  7104  15CD  00D7               	movwf	___fladd@a+1
  7105  15CE  3000               	movlw	0
  7106  15CF  00D6               	movwf	___fladd@a
  7107  15D0                     l2715:
  7108  15D0  17D8               	bsf	___fladd@a+2,7
  7109  15D1                     l2717:
  7110  15D1  01D9               	clrf	___fladd@a+3
  7111  15D2  2DDB               	goto	l755
  7112  15D3                     l2719:
  7113  15D3  3000               	movlw	0
  7114  15D4  00D9               	movwf	___fladd@a+3
  7115  15D5  3000               	movlw	0
  7116  15D6  00D8               	movwf	___fladd@a+2
  7117  15D7  3000               	movlw	0
  7118  15D8  00D7               	movwf	___fladd@a+1
  7119  15D9  3000               	movlw	0
  7120  15DA  00D6               	movwf	___fladd@a
  7121  15DB                     l755:
  7122  15DB  0864               	movf	___fladd@bexp,w
  7123  15DC  0263               	subwf	___fladd@aexp,w
  7124  15DD  1803               	skipnc
  7125  15DE  2DE0               	goto	u3681
  7126  15DF  2DE1               	goto	u3680
  7127  15E0                     u3681:
  7128  15E0  2E25               	goto	l2755
  7129  15E1                     u3680:
  7130  15E1                     l2721:
  7131  15E1  1F62               	btfss	___fladd@signs,6
  7132  15E2  2DE4               	goto	u3691
  7133  15E3  2DE5               	goto	u3690
  7134  15E4                     u3691:
  7135  15E4  2DE9               	goto	l2725
  7136  15E5                     u3690:
  7137  15E5                     l2723:
  7138  15E5  3080               	movlw	128
  7139  15E6  00DA               	movwf	??___fladd
  7140  15E7  085A               	movf	??___fladd,w
  7141  15E8  06E2               	xorwf	___fladd@signs,f
  7142  15E9                     l2725:
  7143  15E9  0864               	movf	___fladd@bexp,w
  7144  15EA  00DA               	movwf	??___fladd
  7145  15EB  085A               	movf	??___fladd,w
  7146  15EC  00E5               	movwf	___fladd@grs
  7147  15ED                     l2727:
  7148  15ED  0863               	movf	___fladd@aexp,w
  7149  15EE  00DA               	movwf	??___fladd
  7150  15EF  085A               	movf	??___fladd,w
  7151  15F0  00E4               	movwf	___fladd@bexp
  7152  15F1                     l2729:
  7153  15F1  0865               	movf	___fladd@grs,w
  7154  15F2  00DA               	movwf	??___fladd
  7155  15F3  085A               	movf	??___fladd,w
  7156  15F4  00E3               	movwf	___fladd@aexp
  7157  15F5                     l2731:
  7158  15F5  0852               	movf	___fladd@b,w
  7159  15F6  00DA               	movwf	??___fladd
  7160  15F7  085A               	movf	??___fladd,w
  7161  15F8  00E5               	movwf	___fladd@grs
  7162  15F9                     l2733:
  7163  15F9  0856               	movf	___fladd@a,w
  7164  15FA  00DA               	movwf	??___fladd
  7165  15FB  085A               	movf	??___fladd,w
  7166  15FC  00D2               	movwf	___fladd@b
  7167  15FD                     l2735:
  7168  15FD  0865               	movf	___fladd@grs,w
  7169  15FE  00DA               	movwf	??___fladd
  7170  15FF  085A               	movf	??___fladd,w
  7171  1600  00D6               	movwf	___fladd@a
  7172  1601                     l2737:
  7173  1601  0853               	movf	___fladd@b+1,w
  7174  1602  00DA               	movwf	??___fladd
  7175  1603  085A               	movf	??___fladd,w
  7176  1604  00E5               	movwf	___fladd@grs
  7177  1605                     l2739:
  7178  1605  0857               	movf	___fladd@a+1,w
  7179  1606  00DA               	movwf	??___fladd
  7180  1607  085A               	movf	??___fladd,w
  7181  1608  00D3               	movwf	___fladd@b+1
  7182  1609                     l2741:
  7183  1609  0865               	movf	___fladd@grs,w
  7184  160A  00DA               	movwf	??___fladd
  7185  160B  085A               	movf	??___fladd,w
  7186  160C  00D7               	movwf	___fladd@a+1
  7187  160D                     l2743:
  7188  160D  0854               	movf	___fladd@b+2,w
  7189  160E  00DA               	movwf	??___fladd
  7190  160F  085A               	movf	??___fladd,w
  7191  1610  00E5               	movwf	___fladd@grs
  7192  1611                     l2745:
  7193  1611  0858               	movf	___fladd@a+2,w
  7194  1612  00DA               	movwf	??___fladd
  7195  1613  085A               	movf	??___fladd,w
  7196  1614  00D4               	movwf	___fladd@b+2
  7197  1615                     l2747:
  7198  1615  0865               	movf	___fladd@grs,w
  7199  1616  00DA               	movwf	??___fladd
  7200  1617  085A               	movf	??___fladd,w
  7201  1618  00D8               	movwf	___fladd@a+2
  7202  1619                     l2749:
  7203  1619  0855               	movf	___fladd@b+3,w
  7204  161A  00DA               	movwf	??___fladd
  7205  161B  085A               	movf	??___fladd,w
  7206  161C  00E5               	movwf	___fladd@grs
  7207  161D                     l2751:
  7208  161D  0859               	movf	___fladd@a+3,w
  7209  161E  00DA               	movwf	??___fladd
  7210  161F  085A               	movf	??___fladd,w
  7211  1620  00D5               	movwf	___fladd@b+3
  7212  1621                     l2753:
  7213  1621  0865               	movf	___fladd@grs,w
  7214  1622  00DA               	movwf	??___fladd
  7215  1623  085A               	movf	??___fladd,w
  7216  1624  00D9               	movwf	___fladd@a+3
  7217  1625                     l2755:
  7218  1625  01E5               	clrf	___fladd@grs
  7219  1626                     l2757:
  7220  1626  0863               	movf	___fladd@aexp,w
  7221  1627  00DA               	movwf	??___fladd
  7222  1628  01DB               	clrf	??___fladd+1
  7223  1629  085B               	movf	??___fladd+1,w
  7224  162A  00DD               	movwf	??___fladd+3
  7225  162B  0864               	movf	___fladd@bexp,w
  7226  162C  025A               	subwf	??___fladd,w
  7227  162D  00DC               	movwf	??___fladd+2
  7228  162E  1C03               	skipc
  7229  162F  03DD               	decf	??___fladd+3,f
  7230  1630  085D               	movf	??___fladd+3,w
  7231  1631  3A80               	xorlw	128
  7232  1632  00FF               	movwf	btemp+1
  7233  1633  3080               	movlw	128
  7234  1634  027F               	subwf	btemp+1,w
  7235  1635  1D03               	skipz
  7236  1636  2E39               	goto	u3705
  7237  1637  301A               	movlw	26
  7238  1638  025C               	subwf	??___fladd+2,w
  7239  1639                     u3705:
  7240  1639  1C03               	skipc
  7241  163A  2E3C               	goto	u3701
  7242  163B  2E3D               	goto	u3700
  7243  163C                     u3701:
  7244  163C  2E7A               	goto	l2773
  7245  163D                     u3700:
  7246  163D                     l2759:
  7247  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7248  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7249  163F  0855               	movf	___fladd@b+3,w
  7250  1640  0454               	iorwf	___fladd@b+2,w
  7251  1641  0453               	iorwf	___fladd@b+1,w
  7252  1642  0452               	iorwf	___fladd@b,w
  7253  1643  1D03               	skipz
  7254  1644  2E46               	goto	u3711
  7255  1645  2E48               	goto	u3710
  7256  1646                     u3711:
  7257  1646  3001               	movlw	1
  7258  1647  2E49               	goto	u3720
  7259  1648                     u3710:
  7260  1648  3000               	movlw	0
  7261  1649                     u3720:
  7262  1649  00DA               	movwf	??___fladd
  7263  164A  085A               	movf	??___fladd,w
  7264  164B  00E5               	movwf	___fladd@grs
  7265  164C  3000               	movlw	0
  7266  164D  00D5               	movwf	___fladd@b+3
  7267  164E  3000               	movlw	0
  7268  164F  00D4               	movwf	___fladd@b+2
  7269  1650  3000               	movlw	0
  7270  1651  00D3               	movwf	___fladd@b+1
  7271  1652  3000               	movlw	0
  7272  1653  00D2               	movwf	___fladd@b
  7273  1654  0863               	movf	___fladd@aexp,w
  7274  1655  00DA               	movwf	??___fladd
  7275  1656  085A               	movf	??___fladd,w
  7276  1657  00E4               	movwf	___fladd@bexp
  7277  1658  2E82               	goto	l759
  7278  1659                     l761:
  7279  1659  1C65               	btfss	___fladd@grs,0
  7280  165A  2E5C               	goto	u3731
  7281  165B  2E5D               	goto	u3730
  7282  165C                     u3731:
  7283  165C  2E66               	goto	l2763
  7284  165D                     u3730:
  7285  165D                     l2761:
  7286  165D  0865               	movf	___fladd@grs,w
  7287  165E  00DA               	movwf	??___fladd
  7288  165F  1003               	clrc
  7289  1660  0C5A               	rrf	??___fladd,w
  7290  1661  3801               	iorlw	1
  7291  1662  00DB               	movwf	??___fladd+1
  7292  1663  085B               	movf	??___fladd+1,w
  7293  1664  00E5               	movwf	___fladd@grs
  7294  1665  2E68               	goto	l2765
  7295  1666                     l2763:
  7296  1666  1003               	clrc
  7297  1667  0CE5               	rrf	___fladd@grs,f
  7298  1668                     l2765:
  7299  1668  1C52               	btfss	___fladd@b,0
  7300  1669  2E6B               	goto	u3741
  7301  166A  2E6C               	goto	u3740
  7302  166B                     u3741:
  7303  166B  2E6D               	goto	l2769
  7304  166C                     u3740:
  7305  166C                     l2767:
  7306  166C  17E5               	bsf	___fladd@grs,7
  7307  166D                     l2769:
  7308  166D  3001               	movlw	1
  7309  166E  00DA               	movwf	??___fladd
  7310  166F                     u3755:
  7311  166F  0D55               	rlf	___fladd@b+3,w
  7312  1670  0CD5               	rrf	___fladd@b+3,f
  7313  1671  0CD4               	rrf	___fladd@b+2,f
  7314  1672  0CD3               	rrf	___fladd@b+1,f
  7315  1673  0CD2               	rrf	___fladd@b,f
  7316  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7317  1675  2E6F               	goto	u3755
  7318  1676                     l2771:
  7319  1676  3001               	movlw	1
  7320  1677  00DA               	movwf	??___fladd
  7321  1678  085A               	movf	??___fladd,w
  7322  1679  07E4               	addwf	___fladd@bexp,f
  7323  167A                     l2773:
  7324  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7325  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7326  167C  0863               	movf	___fladd@aexp,w
  7327  167D  0264               	subwf	___fladd@bexp,w
  7328  167E  1C03               	skipc
  7329  167F  2E81               	goto	u3761
  7330  1680  2E82               	goto	u3760
  7331  1681                     u3761:
  7332  1681  2E59               	goto	l761
  7333  1682                     u3760:
  7334  1682                     l759:
  7335  1682  1B62               	btfsc	___fladd@signs,6
  7336  1683  2E85               	goto	u3771
  7337  1684  2E86               	goto	u3770
  7338  1685                     u3771:
  7339  1685  2ED1               	goto	l2799
  7340  1686                     u3770:
  7341  1686                     l2775:
  7342  1686  0864               	movf	___fladd@bexp,w
  7343  1687  1D03               	btfss	3,2
  7344  1688  2E8A               	goto	u3781
  7345  1689  2E8B               	goto	u3780
  7346  168A                     u3781:
  7347  168A  2E94               	goto	l2781
  7348  168B                     u3780:
  7349  168B                     l2777:
  7350  168B  3000               	movlw	0
  7351  168C  00D5               	movwf	?___fladd+3
  7352  168D  3000               	movlw	0
  7353  168E  00D4               	movwf	?___fladd+2
  7354  168F  3000               	movlw	0
  7355  1690  00D3               	movwf	?___fladd+1
  7356  1691  3000               	movlw	0
  7357  1692  00D2               	movwf	?___fladd
  7358  1693  2FFF               	goto	l768
  7359  1694                     l2781:
  7360  1694  0856               	movf	___fladd@a,w
  7361  1695  07D2               	addwf	___fladd@b,f
  7362  1696  0857               	movf	___fladd@a+1,w
  7363  1697  1103               	clrz
  7364  1698  1803               	skipnc
  7365  1699  3E01               	addlw	1
  7366  169A  1903               	skipnz
  7367  169B  2E9D               	goto	u3791
  7368  169C  07D3               	addwf	___fladd@b+1,f
  7369  169D                     u3791:
  7370  169D  0858               	movf	___fladd@a+2,w
  7371  169E  1103               	clrz
  7372  169F  1803               	skipnc
  7373  16A0  3E01               	addlw	1
  7374  16A1  1903               	skipnz
  7375  16A2  2EA4               	goto	u3792
  7376  16A3  07D4               	addwf	___fladd@b+2,f
  7377  16A4                     u3792:
  7378  16A4  0859               	movf	___fladd@a+3,w
  7379  16A5  1103               	clrz
  7380  16A6  1803               	skipnc
  7381  16A7  3E01               	addlw	1
  7382  16A8  1903               	skipnz
  7383  16A9  2EAB               	goto	u3793
  7384  16AA  07D5               	addwf	___fladd@b+3,f
  7385  16AB                     u3793:
  7386  16AB                     l2783:
  7387  16AB  1C55               	btfss	___fladd@b+3,0
  7388  16AC  2EAE               	goto	u3801
  7389  16AD  2EAF               	goto	u3800
  7390  16AE                     u3801:
  7391  16AE  2F85               	goto	l2833
  7392  16AF                     u3800:
  7393  16AF                     l2785:
  7394  16AF  1C65               	btfss	___fladd@grs,0
  7395  16B0  2EB2               	goto	u3811
  7396  16B1  2EB3               	goto	u3810
  7397  16B2                     u3811:
  7398  16B2  2EBC               	goto	l2789
  7399  16B3                     u3810:
  7400  16B3                     l2787:
  7401  16B3  0865               	movf	___fladd@grs,w
  7402  16B4  00DA               	movwf	??___fladd
  7403  16B5  1003               	clrc
  7404  16B6  0C5A               	rrf	??___fladd,w
  7405  16B7  3801               	iorlw	1
  7406  16B8  00DB               	movwf	??___fladd+1
  7407  16B9  085B               	movf	??___fladd+1,w
  7408  16BA  00E5               	movwf	___fladd@grs
  7409  16BB  2EBE               	goto	l2791
  7410  16BC                     l2789:
  7411  16BC  1003               	clrc
  7412  16BD  0CE5               	rrf	___fladd@grs,f
  7413  16BE                     l2791:
  7414  16BE  1C52               	btfss	___fladd@b,0
  7415  16BF  2EC1               	goto	u3821
  7416  16C0  2EC2               	goto	u3820
  7417  16C1                     u3821:
  7418  16C1  2EC3               	goto	l2795
  7419  16C2                     u3820:
  7420  16C2                     l2793:
  7421  16C2  17E5               	bsf	___fladd@grs,7
  7422  16C3                     l2795:
  7423  16C3  3001               	movlw	1
  7424  16C4  00DA               	movwf	??___fladd
  7425  16C5                     u3835:
  7426  16C5  0D55               	rlf	___fladd@b+3,w
  7427  16C6  0CD5               	rrf	___fladd@b+3,f
  7428  16C7  0CD4               	rrf	___fladd@b+2,f
  7429  16C8  0CD3               	rrf	___fladd@b+1,f
  7430  16C9  0CD2               	rrf	___fladd@b,f
  7431  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  7432  16CB  2EC5               	goto	u3835
  7433  16CC                     l2797:
  7434  16CC  3001               	movlw	1
  7435  16CD  00DA               	movwf	??___fladd
  7436  16CE  085A               	movf	??___fladd,w
  7437  16CF  07E4               	addwf	___fladd@bexp,f
  7438  16D0  2F85               	goto	l2833
  7439  16D1                     l2799:
  7440  16D1  0855               	movf	___fladd@b+3,w
  7441  16D2  3A80               	xorlw	128
  7442  16D3  00FF               	movwf	btemp+1
  7443  16D4  0859               	movf	___fladd@a+3,w
  7444  16D5  3A80               	xorlw	128
  7445  16D6  027F               	subwf	btemp+1,w
  7446  16D7  1D03               	skipz
  7447  16D8  2EE3               	goto	u3843
  7448  16D9  0858               	movf	___fladd@a+2,w
  7449  16DA  0254               	subwf	___fladd@b+2,w
  7450  16DB  1D03               	skipz
  7451  16DC  2EE3               	goto	u3843
  7452  16DD  0857               	movf	___fladd@a+1,w
  7453  16DE  0253               	subwf	___fladd@b+1,w
  7454  16DF  1D03               	skipz
  7455  16E0  2EE3               	goto	u3843
  7456  16E1  0856               	movf	___fladd@a,w
  7457  16E2  0252               	subwf	___fladd@b,w
  7458  16E3                     u3843:
  7459  16E3  1803               	skipnc
  7460  16E4  2EE6               	goto	u3841
  7461  16E5  2EE7               	goto	u3840
  7462  16E6                     u3841:
  7463  16E6  2F3F               	goto	l2809
  7464  16E7                     u3840:
  7465  16E7                     l2801:
  7466  16E7  30FF               	movlw	255
  7467  16E8  00DA               	movwf	??___fladd
  7468  16E9  30FF               	movlw	255
  7469  16EA  00DB               	movwf	??___fladd+1
  7470  16EB  30FF               	movlw	255
  7471  16EC  00DC               	movwf	??___fladd+2
  7472  16ED  30FF               	movlw	255
  7473  16EE  00DD               	movwf	??___fladd+3
  7474  16EF  0856               	movf	___fladd@a,w
  7475  16F0  00DE               	movwf	??___fladd+4
  7476  16F1  0857               	movf	___fladd@a+1,w
  7477  16F2  00DF               	movwf	??___fladd+5
  7478  16F3  0858               	movf	___fladd@a+2,w
  7479  16F4  00E0               	movwf	??___fladd+6
  7480  16F5  0859               	movf	___fladd@a+3,w
  7481  16F6  00E1               	movwf	??___fladd+7
  7482  16F7  0852               	movf	___fladd@b,w
  7483  16F8  02DE               	subwf	??___fladd+4,f
  7484  16F9  0853               	movf	___fladd@b+1,w
  7485  16FA  1C03               	skipc
  7486  16FB  0F53               	incfsz	___fladd@b+1,w
  7487  16FC  2EFE               	goto	u3851
  7488  16FD  2EFF               	goto	u3852
  7489  16FE                     u3851:
  7490  16FE  02DF               	subwf	??___fladd+5,f
  7491  16FF                     u3852:
  7492  16FF  0854               	movf	___fladd@b+2,w
  7493  1700  1C03               	skipc
  7494  1701  0F54               	incfsz	___fladd@b+2,w
  7495  1702  2F04               	goto	u3853
  7496  1703  2F05               	goto	u3854
  7497  1704                     u3853:
  7498  1704  02E0               	subwf	??___fladd+6,f
  7499  1705                     u3854:
  7500  1705  0855               	movf	___fladd@b+3,w
  7501  1706  1C03               	skipc
  7502  1707  0F55               	incfsz	___fladd@b+3,w
  7503  1708  2F0A               	goto	u3855
  7504  1709  2F0B               	goto	u3856
  7505  170A                     u3855:
  7506  170A  02E1               	subwf	??___fladd+7,f
  7507  170B                     u3856:
  7508  170B  085E               	movf	??___fladd+4,w
  7509  170C  07DA               	addwf	??___fladd,f
  7510  170D  085F               	movf	??___fladd+5,w
  7511  170E  1803               	skipnc
  7512  170F  0F5F               	incfsz	??___fladd+5,w
  7513  1710  2F12               	goto	u3860
  7514  1711  2F13               	goto	u3861
  7515  1712                     u3860:
  7516  1712  07DB               	addwf	??___fladd+1,f
  7517  1713                     u3861:
  7518  1713  0860               	movf	??___fladd+6,w
  7519  1714  1803               	skipnc
  7520  1715  0F60               	incfsz	??___fladd+6,w
  7521  1716  2F18               	goto	u3862
  7522  1717  2F19               	goto	u3863
  7523  1718                     u3862:
  7524  1718  07DC               	addwf	??___fladd+2,f
  7525  1719                     u3863:
  7526  1719  0861               	movf	??___fladd+7,w
  7527  171A  1803               	skipnc
  7528  171B  0A61               	incf	??___fladd+7,w
  7529  171C  07DD               	addwf	??___fladd+3,f
  7530  171D  085D               	movf	??___fladd+3,w
  7531  171E  00D5               	movwf	___fladd@b+3
  7532  171F  085C               	movf	??___fladd+2,w
  7533  1720  00D4               	movwf	___fladd@b+2
  7534  1721  085B               	movf	??___fladd+1,w
  7535  1722  00D3               	movwf	___fladd@b+1
  7536  1723  085A               	movf	??___fladd,w
  7537  1724  00D2               	movwf	___fladd@b
  7538  1725                     l2803:
  7539  1725  3080               	movlw	128
  7540  1726  00DA               	movwf	??___fladd
  7541  1727  085A               	movf	??___fladd,w
  7542  1728  06E2               	xorwf	___fladd@signs,f
  7543  1729  09E5               	comf	___fladd@grs,f
  7544  172A  0AE5               	incf	___fladd@grs,f
  7545  172B                     l2805:
  7546  172B  0865               	movf	___fladd@grs,w
  7547  172C  1D03               	btfss	3,2
  7548  172D  2F2F               	goto	u3871
  7549  172E  2F30               	goto	u3870
  7550  172F                     u3871:
  7551  172F  2F4D               	goto	l776
  7552  1730                     u3870:
  7553  1730                     l2807:
  7554  1730  3001               	movlw	1
  7555  1731  07D2               	addwf	___fladd@b,f
  7556  1732  3000               	movlw	0
  7557  1733  1803               	skipnc
  7558  1734  3001               	movlw	1
  7559  1735  07D3               	addwf	___fladd@b+1,f
  7560  1736  3000               	movlw	0
  7561  1737  1803               	skipnc
  7562  1738  3001               	movlw	1
  7563  1739  07D4               	addwf	___fladd@b+2,f
  7564  173A  3000               	movlw	0
  7565  173B  1803               	skipnc
  7566  173C  3001               	movlw	1
  7567  173D  07D5               	addwf	___fladd@b+3,f
  7568  173E  2F4D               	goto	l776
  7569  173F                     l2809:
  7570  173F  0856               	movf	___fladd@a,w
  7571  1740  02D2               	subwf	___fladd@b,f
  7572  1741  0857               	movf	___fladd@a+1,w
  7573  1742  1C03               	skipc
  7574  1743  0F57               	incfsz	___fladd@a+1,w
  7575  1744  02D3               	subwf	___fladd@b+1,f
  7576  1745  0858               	movf	___fladd@a+2,w
  7577  1746  1C03               	skipc
  7578  1747  0F58               	incfsz	___fladd@a+2,w
  7579  1748  02D4               	subwf	___fladd@b+2,f
  7580  1749  0859               	movf	___fladd@a+3,w
  7581  174A  1C03               	skipc
  7582  174B  0F59               	incfsz	___fladd@a+3,w
  7583  174C  02D5               	subwf	___fladd@b+3,f
  7584  174D                     l776:
  7585  174D  0855               	movf	___fladd@b+3,w
  7586  174E  0454               	iorwf	___fladd@b+2,w
  7587  174F  0453               	iorwf	___fladd@b+1,w
  7588  1750  0452               	iorwf	___fladd@b,w
  7589  1751  1D03               	skipz
  7590  1752  2F54               	goto	u3881
  7591  1753  2F55               	goto	u3880
  7592  1754                     u3881:
  7593  1754  2F81               	goto	l2831
  7594  1755                     u3880:
  7595  1755                     l2811:
  7596  1755  0865               	movf	___fladd@grs,w
  7597  1756  1D03               	btfss	3,2
  7598  1757  2F59               	goto	u3891
  7599  1758  2F5A               	goto	u3890
  7600  1759                     u3891:
  7601  1759  2F81               	goto	l2831
  7602  175A                     u3890:
  7603  175A                     l2813:
  7604  175A  3000               	movlw	0
  7605  175B  00D5               	movwf	?___fladd+3
  7606  175C  3000               	movlw	0
  7607  175D  00D4               	movwf	?___fladd+2
  7608  175E  3000               	movlw	0
  7609  175F  00D3               	movwf	?___fladd+1
  7610  1760  3000               	movlw	0
  7611  1761  00D2               	movwf	?___fladd
  7612  1762  2FFF               	goto	l768
  7613  1763                     l2817:
  7614  1763  3001               	movlw	1
  7615  1764  00DA               	movwf	??___fladd
  7616  1765                     u3905:
  7617  1765  1003               	clrc
  7618  1766  0DD2               	rlf	___fladd@b,f
  7619  1767  0DD3               	rlf	___fladd@b+1,f
  7620  1768  0DD4               	rlf	___fladd@b+2,f
  7621  1769  0DD5               	rlf	___fladd@b+3,f
  7622  176A  0BDA               	decfsz	??___fladd,f
  7623  176B  2F65               	goto	u3905
  7624  176C                     l2819:
  7625  176C  1FE5               	btfss	___fladd@grs,7
  7626  176D  2F6F               	goto	u3911
  7627  176E  2F70               	goto	u3910
  7628  176F                     u3911:
  7629  176F  2F71               	goto	l780
  7630  1770                     u3910:
  7631  1770                     l2821:
  7632  1770  1452               	bsf	___fladd@b,0
  7633  1771                     l780:
  7634  1771  1C65               	btfss	___fladd@grs,0
  7635  1772  2F74               	goto	u3921
  7636  1773  2F75               	goto	u3920
  7637  1774                     u3921:
  7638  1774  2F78               	goto	l2825
  7639  1775                     u3920:
  7640  1775                     l2823:
  7641  1775  1403               	setc
  7642  1776  0DE5               	rlf	___fladd@grs,f
  7643  1777  2F7A               	goto	l2827
  7644  1778                     l2825:
  7645  1778  1003               	clrc
  7646  1779  0DE5               	rlf	___fladd@grs,f
  7647  177A                     l2827:
  7648  177A  0864               	movf	___fladd@bexp,w
  7649  177B  1903               	btfsc	3,2
  7650  177C  2F7E               	goto	u3931
  7651  177D  2F7F               	goto	u3930
  7652  177E                     u3931:
  7653  177E  2F81               	goto	l2831
  7654  177F                     u3930:
  7655  177F                     l2829:
  7656  177F  3001               	movlw	1
  7657  1780  02E4               	subwf	___fladd@bexp,f
  7658  1781                     l2831:
  7659  1781  1FD4               	btfss	___fladd@b+2,7
  7660  1782  2F84               	goto	u3941
  7661  1783  2F85               	goto	u3940
  7662  1784                     u3941:
  7663  1784  2F63               	goto	l2817
  7664  1785                     u3940:
  7665  1785                     l2833:
  7666  1785  01E3               	clrf	___fladd@aexp
  7667  1786                     l2835:
  7668  1786  1FE5               	btfss	___fladd@grs,7
  7669  1787  2F89               	goto	u3951
  7670  1788  2F8A               	goto	u3950
  7671  1789                     u3951:
  7672  1789  2F98               	goto	l2843
  7673  178A                     u3950:
  7674  178A                     l2837:
  7675  178A  0865               	movf	___fladd@grs,w
  7676  178B  397F               	andlw	127
  7677  178C  1903               	btfsc	3,2
  7678  178D  2F8F               	goto	u3961
  7679  178E  2F90               	goto	u3960
  7680  178F                     u3961:
  7681  178F  2F93               	goto	l786
  7682  1790                     u3960:
  7683  1790                     l2839:
  7684  1790  01E3               	clrf	___fladd@aexp
  7685  1791  0AE3               	incf	___fladd@aexp,f
  7686  1792  2F98               	goto	l2843
  7687  1793                     l786:
  7688  1793  1C52               	btfss	___fladd@b,0
  7689  1794  2F96               	goto	u3971
  7690  1795  2F97               	goto	u3970
  7691  1796                     u3971:
  7692  1796  2F98               	goto	l2843
  7693  1797                     u3970:
  7694  1797  2F90               	goto	l2839
  7695  1798                     l2843:
  7696  1798  0863               	movf	___fladd@aexp,w
  7697  1799  1903               	btfsc	3,2
  7698  179A  2F9C               	goto	u3981
  7699  179B  2F9D               	goto	u3980
  7700  179C                     u3981:
  7701  179C  2FD1               	goto	l789
  7702  179D                     u3980:
  7703  179D                     l2845:
  7704  179D  3001               	movlw	1
  7705  179E  07D2               	addwf	___fladd@b,f
  7706  179F  3000               	movlw	0
  7707  17A0  1803               	skipnc
  7708  17A1  3001               	movlw	1
  7709  17A2  07D3               	addwf	___fladd@b+1,f
  7710  17A3  3000               	movlw	0
  7711  17A4  1803               	skipnc
  7712  17A5  3001               	movlw	1
  7713  17A6  07D4               	addwf	___fladd@b+2,f
  7714  17A7  3000               	movlw	0
  7715  17A8  1803               	skipnc
  7716  17A9  3001               	movlw	1
  7717  17AA  07D5               	addwf	___fladd@b+3,f
  7718  17AB                     l2847:
  7719  17AB  1C55               	btfss	___fladd@b+3,0
  7720  17AC  2FAE               	goto	u3991
  7721  17AD  2FAF               	goto	u3990
  7722  17AE                     u3991:
  7723  17AE  2FD1               	goto	l789
  7724  17AF                     u3990:
  7725  17AF                     l2849:
  7726  17AF  0852               	movf	___fladd@b,w
  7727  17B0  00DA               	movwf	??___fladd
  7728  17B1  0853               	movf	___fladd@b+1,w
  7729  17B2  00DB               	movwf	??___fladd+1
  7730  17B3  0854               	movf	___fladd@b+2,w
  7731  17B4  00DC               	movwf	??___fladd+2
  7732  17B5  0855               	movf	___fladd@b+3,w
  7733  17B6  00DD               	movwf	??___fladd+3
  7734  17B7  3001               	movlw	1
  7735  17B8  00DE               	movwf	??___fladd+4
  7736  17B9                     u4005:
  7737  17B9  0D5D               	rlf	??___fladd+3,w
  7738  17BA  0CDD               	rrf	??___fladd+3,f
  7739  17BB  0CDC               	rrf	??___fladd+2,f
  7740  17BC  0CDB               	rrf	??___fladd+1,f
  7741  17BD  0CDA               	rrf	??___fladd,f
  7742  17BE                     u4000:
  7743  17BE  0BDE               	decfsz	??___fladd+4,f
  7744  17BF  2FB9               	goto	u4005
  7745  17C0  085D               	movf	??___fladd+3,w
  7746  17C1  00D5               	movwf	___fladd@b+3
  7747  17C2  085C               	movf	??___fladd+2,w
  7748  17C3  00D4               	movwf	___fladd@b+2
  7749  17C4  085B               	movf	??___fladd+1,w
  7750  17C5  00D3               	movwf	___fladd@b+1
  7751  17C6  085A               	movf	??___fladd,w
  7752  17C7  00D2               	movwf	___fladd@b
  7753  17C8  0A64               	incf	___fladd@bexp,w
  7754  17C9  1903               	btfsc	3,2
  7755  17CA  2FCC               	goto	u4011
  7756  17CB  2FCD               	goto	u4010
  7757  17CC                     u4011:
  7758  17CC  2FD1               	goto	l789
  7759  17CD                     u4010:
  7760  17CD                     l2851:
  7761  17CD  3001               	movlw	1
  7762  17CE  00DA               	movwf	??___fladd
  7763  17CF  085A               	movf	??___fladd,w
  7764  17D0  07E4               	addwf	___fladd@bexp,f
  7765  17D1                     l789:
  7766  17D1  0A64               	incf	___fladd@bexp,w
  7767  17D2  1903               	btfsc	3,2
  7768  17D3  2FD5               	goto	u4021
  7769  17D4  2FD6               	goto	u4020
  7770  17D5                     u4021:
  7771  17D5  2FDB               	goto	l2855
  7772  17D6                     u4020:
  7773  17D6                     l2853:
  7774  17D6  0864               	movf	___fladd@bexp,w
  7775  17D7  1D03               	btfss	3,2
  7776  17D8  2FDA               	goto	u4031
  7777  17D9  2FDB               	goto	u4030
  7778  17DA                     u4031:
  7779  17DA  2FE9               	goto	l2861
  7780  17DB                     u4030:
  7781  17DB                     l2855:
  7782  17DB  3000               	movlw	0
  7783  17DC  00D5               	movwf	___fladd@b+3
  7784  17DD  3000               	movlw	0
  7785  17DE  00D4               	movwf	___fladd@b+2
  7786  17DF  3000               	movlw	0
  7787  17E0  00D3               	movwf	___fladd@b+1
  7788  17E1  3000               	movlw	0
  7789  17E2  00D2               	movwf	___fladd@b
  7790  17E3                     l2857:
  7791  17E3  0864               	movf	___fladd@bexp,w
  7792  17E4  1D03               	btfss	3,2
  7793  17E5  2FE7               	goto	u4041
  7794  17E6  2FE8               	goto	u4040
  7795  17E7                     u4041:
  7796  17E7  2FE9               	goto	l2861
  7797  17E8                     u4040:
  7798  17E8                     l2859:
  7799  17E8  01E2               	clrf	___fladd@signs
  7800  17E9                     l2861:
  7801  17E9  1C64               	btfss	___fladd@bexp,0
  7802  17EA  2FEC               	goto	u4051
  7803  17EB  2FED               	goto	u4050
  7804  17EC                     u4051:
  7805  17EC  2FEF               	goto	l2865
  7806  17ED                     u4050:
  7807  17ED                     l2863:
  7808  17ED  17D4               	bsf	___fladd@b+2,7
  7809  17EE  2FF3               	goto	l797
  7810  17EF                     l2865:
  7811  17EF  307F               	movlw	127
  7812  17F0  00DA               	movwf	??___fladd
  7813  17F1  085A               	movf	??___fladd,w
  7814  17F2  05D4               	andwf	___fladd@b+2,f
  7815  17F3                     l797:
  7816  17F3  0864               	movf	___fladd@bexp,w
  7817  17F4  00DA               	movwf	??___fladd
  7818  17F5  1003               	clrc
  7819  17F6  0C5A               	rrf	??___fladd,w
  7820  17F7  00DB               	movwf	??___fladd+1
  7821  17F8  085B               	movf	??___fladd+1,w
  7822  17F9  00D5               	movwf	___fladd@b+3
  7823  17FA                     l2867:
  7824  17FA  1FE2               	btfss	___fladd@signs,7
  7825  17FB  2FFD               	goto	u4061
  7826  17FC  2FFE               	goto	u4060
  7827  17FD                     u4061:
  7828  17FD  2FFF               	goto	l798
  7829  17FE                     u4060:
  7830  17FE                     l2869:
  7831  17FE  17D5               	bsf	___fladd@b+3,7
  7832  17FF                     l798:
  7833  17FF                     l768:
  7834  17FF  0008               	return
  7835  1800                     __end_of___fladd:
  7836                           
  7837                           	psect	text17
  7838  0003                     __ptext17:	
  7839 ;; *************** function ___flneg *****************
  7840 ;; Defined at:
  7841 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  f1              4    0[COMMON] unsigned char 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;		None
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  4    0[COMMON] unsigned char 
  7848 ;; Registers used:
  7849 ;;		wreg
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7855 ;;      Params:         4       0       0       0       0
  7856 ;;      Locals:         0       0       0       0       0
  7857 ;;      Temps:          0       0       0       0       0
  7858 ;;      Totals:         4       0       0       0       0
  7859 ;;Total ram usage:        4 bytes
  7860 ;; Hardware stack levels used:    1
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_sprintf
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           
  7869                           ;psect for function ___flneg
  7870  0003                     ___flneg:
  7871  0003                     l3297:	
  7872                           ;incstack = 0
  7873                           ; Regs used in ___flneg: [wreg]
  7874                           
  7875  0003  0873               	movf	___flneg@f1+3,w
  7876  0004  0472               	iorwf	___flneg@f1+2,w
  7877  0005  0471               	iorwf	___flneg@f1+1,w
  7878  0006  0470               	iorwf	___flneg@f1,w
  7879  0007  1903               	skipnz
  7880  0008  280A               	goto	u5191
  7881  0009  280B               	goto	u5190
  7882  000A                     u5191:
  7883  000A  280D               	goto	l3301
  7884  000B                     u5190:
  7885  000B                     l3299:
  7886  000B  3080               	movlw	128
  7887  000C  06F3               	xorwf	___flneg@f1+3,f
  7888  000D                     l3301:
  7889  000D                     l627:
  7890  000D  0008               	return
  7891  000E                     __end_of___flneg:
  7892                           
  7893                           	psect	text18
  7894  1D37                     __ptext18:	
  7895 ;; *************** function ___flge *****************
  7896 ;; Defined at:
  7897 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  ff1             4    0[COMMON] unsigned char 
  7900 ;;  ff2             4    4[COMMON] unsigned char 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;		None               void
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7912 ;;      Params:         8       0       0       0       0
  7913 ;;      Locals:         0       0       0       0       0
  7914 ;;      Temps:          4       0       0       0       0
  7915 ;;      Totals:        12       0       0       0       0
  7916 ;;Total ram usage:       12 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_sprintf
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function ___flge
  7927  1D37                     ___flge:
  7928  1D37                     l3277:	
  7929                           ;incstack = 0
  7930                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7931                           
  7932  1D37  3000               	movlw	0
  7933  1D38  0570               	andwf	___flge@ff1,w
  7934  1D39  00F8               	movwf	??___flge
  7935  1D3A  3000               	movlw	0
  7936  1D3B  0571               	andwf	___flge@ff1+1,w
  7937  1D3C  00F9               	movwf	??___flge+1
  7938  1D3D  3080               	movlw	128
  7939  1D3E  0572               	andwf	___flge@ff1+2,w
  7940  1D3F  00FA               	movwf	??___flge+2
  7941  1D40  307F               	movlw	127
  7942  1D41  0573               	andwf	___flge@ff1+3,w
  7943  1D42  00FB               	movwf	??___flge+3
  7944  1D43  087B               	movf	??___flge+3,w
  7945  1D44  047A               	iorwf	??___flge+2,w
  7946  1D45  0479               	iorwf	??___flge+1,w
  7947  1D46  0478               	iorwf	??___flge,w
  7948  1D47  1D03               	skipz
  7949  1D48  2D4A               	goto	u5121
  7950  1D49  2D4B               	goto	u5120
  7951  1D4A                     u5121:
  7952  1D4A  2D53               	goto	l619
  7953  1D4B                     u5120:
  7954  1D4B                     l3279:
  7955  1D4B  3000               	movlw	0
  7956  1D4C  00F3               	movwf	___flge@ff1+3
  7957  1D4D  3000               	movlw	0
  7958  1D4E  00F2               	movwf	___flge@ff1+2
  7959  1D4F  3000               	movlw	0
  7960  1D50  00F1               	movwf	___flge@ff1+1
  7961  1D51  3000               	movlw	0
  7962  1D52  00F0               	movwf	___flge@ff1
  7963  1D53                     l619:
  7964  1D53  3000               	movlw	0
  7965  1D54  0574               	andwf	___flge@ff2,w
  7966  1D55  00F8               	movwf	??___flge
  7967  1D56  3000               	movlw	0
  7968  1D57  0575               	andwf	___flge@ff2+1,w
  7969  1D58  00F9               	movwf	??___flge+1
  7970  1D59  3080               	movlw	128
  7971  1D5A  0576               	andwf	___flge@ff2+2,w
  7972  1D5B  00FA               	movwf	??___flge+2
  7973  1D5C  307F               	movlw	127
  7974  1D5D  0577               	andwf	___flge@ff2+3,w
  7975  1D5E  00FB               	movwf	??___flge+3
  7976  1D5F  087B               	movf	??___flge+3,w
  7977  1D60  047A               	iorwf	??___flge+2,w
  7978  1D61  0479               	iorwf	??___flge+1,w
  7979  1D62  0478               	iorwf	??___flge,w
  7980  1D63  1D03               	skipz
  7981  1D64  2D66               	goto	u5131
  7982  1D65  2D67               	goto	u5130
  7983  1D66                     u5131:
  7984  1D66  2D6F               	goto	l3283
  7985  1D67                     u5130:
  7986  1D67                     l3281:
  7987  1D67  3000               	movlw	0
  7988  1D68  00F7               	movwf	___flge@ff2+3
  7989  1D69  3000               	movlw	0
  7990  1D6A  00F6               	movwf	___flge@ff2+2
  7991  1D6B  3000               	movlw	0
  7992  1D6C  00F5               	movwf	___flge@ff2+1
  7993  1D6D  3000               	movlw	0
  7994  1D6E  00F4               	movwf	___flge@ff2
  7995  1D6F                     l3283:
  7996  1D6F  1FF3               	btfss	___flge@ff1+3,7
  7997  1D70  2D72               	goto	u5141
  7998  1D71  2D73               	goto	u5140
  7999  1D72                     u5141:
  8000  1D72  2D97               	goto	l3287
  8001  1D73                     u5140:
  8002  1D73                     l3285:
  8003  1D73  3000               	movlw	0
  8004  1D74  00F8               	movwf	??___flge
  8005  1D75  3000               	movlw	0
  8006  1D76  00F9               	movwf	??___flge+1
  8007  1D77  3000               	movlw	0
  8008  1D78  00FA               	movwf	??___flge+2
  8009  1D79  3080               	movlw	128
  8010  1D7A  00FB               	movwf	??___flge+3
  8011  1D7B  0870               	movf	___flge@ff1,w
  8012  1D7C  02F8               	subwf	??___flge,f
  8013  1D7D  0871               	movf	___flge@ff1+1,w
  8014  1D7E  1C03               	skipc
  8015  1D7F  0F71               	incfsz	___flge@ff1+1,w
  8016  1D80  2D82               	goto	u5151
  8017  1D81  2D83               	goto	u5152
  8018  1D82                     u5151:
  8019  1D82  02F9               	subwf	??___flge+1,f
  8020  1D83                     u5152:
  8021  1D83  0872               	movf	___flge@ff1+2,w
  8022  1D84  1C03               	skipc
  8023  1D85  0F72               	incfsz	___flge@ff1+2,w
  8024  1D86  2D88               	goto	u5153
  8025  1D87  2D89               	goto	u5154
  8026  1D88                     u5153:
  8027  1D88  02FA               	subwf	??___flge+2,f
  8028  1D89                     u5154:
  8029  1D89  0873               	movf	___flge@ff1+3,w
  8030  1D8A  1C03               	skipc
  8031  1D8B  0F73               	incfsz	___flge@ff1+3,w
  8032  1D8C  2D8E               	goto	u5155
  8033  1D8D  2D8F               	goto	u5156
  8034  1D8E                     u5155:
  8035  1D8E  02FB               	subwf	??___flge+3,f
  8036  1D8F                     u5156:
  8037  1D8F  087B               	movf	??___flge+3,w
  8038  1D90  00F3               	movwf	___flge@ff1+3
  8039  1D91  087A               	movf	??___flge+2,w
  8040  1D92  00F2               	movwf	___flge@ff1+2
  8041  1D93  0879               	movf	??___flge+1,w
  8042  1D94  00F1               	movwf	___flge@ff1+1
  8043  1D95  0878               	movf	??___flge,w
  8044  1D96  00F0               	movwf	___flge@ff1
  8045  1D97                     l3287:
  8046  1D97  1FF7               	btfss	___flge@ff2+3,7
  8047  1D98  2D9A               	goto	u5161
  8048  1D99  2D9B               	goto	u5160
  8049  1D9A                     u5161:
  8050  1D9A  2DBF               	goto	l622
  8051  1D9B                     u5160:
  8052  1D9B                     l3289:
  8053  1D9B  3000               	movlw	0
  8054  1D9C  00F8               	movwf	??___flge
  8055  1D9D  3000               	movlw	0
  8056  1D9E  00F9               	movwf	??___flge+1
  8057  1D9F  3000               	movlw	0
  8058  1DA0  00FA               	movwf	??___flge+2
  8059  1DA1  3080               	movlw	128
  8060  1DA2  00FB               	movwf	??___flge+3
  8061  1DA3  0874               	movf	___flge@ff2,w
  8062  1DA4  02F8               	subwf	??___flge,f
  8063  1DA5  0875               	movf	___flge@ff2+1,w
  8064  1DA6  1C03               	skipc
  8065  1DA7  0F75               	incfsz	___flge@ff2+1,w
  8066  1DA8  2DAA               	goto	u5171
  8067  1DA9  2DAB               	goto	u5172
  8068  1DAA                     u5171:
  8069  1DAA  02F9               	subwf	??___flge+1,f
  8070  1DAB                     u5172:
  8071  1DAB  0876               	movf	___flge@ff2+2,w
  8072  1DAC  1C03               	skipc
  8073  1DAD  0F76               	incfsz	___flge@ff2+2,w
  8074  1DAE  2DB0               	goto	u5173
  8075  1DAF  2DB1               	goto	u5174
  8076  1DB0                     u5173:
  8077  1DB0  02FA               	subwf	??___flge+2,f
  8078  1DB1                     u5174:
  8079  1DB1  0877               	movf	___flge@ff2+3,w
  8080  1DB2  1C03               	skipc
  8081  1DB3  0F77               	incfsz	___flge@ff2+3,w
  8082  1DB4  2DB6               	goto	u5175
  8083  1DB5  2DB7               	goto	u5176
  8084  1DB6                     u5175:
  8085  1DB6  02FB               	subwf	??___flge+3,f
  8086  1DB7                     u5176:
  8087  1DB7  087B               	movf	??___flge+3,w
  8088  1DB8  00F7               	movwf	___flge@ff2+3
  8089  1DB9  087A               	movf	??___flge+2,w
  8090  1DBA  00F6               	movwf	___flge@ff2+2
  8091  1DBB  0879               	movf	??___flge+1,w
  8092  1DBC  00F5               	movwf	___flge@ff2+1
  8093  1DBD  0878               	movf	??___flge,w
  8094  1DBE  00F4               	movwf	___flge@ff2
  8095  1DBF                     l622:
  8096  1DBF  3080               	movlw	128
  8097  1DC0  06F3               	xorwf	___flge@ff1+3,f
  8098  1DC1  3080               	movlw	128
  8099  1DC2  06F7               	xorwf	___flge@ff2+3,f
  8100  1DC3  0877               	movf	___flge@ff2+3,w
  8101  1DC4  0273               	subwf	___flge@ff1+3,w
  8102  1DC5  1D03               	skipz
  8103  1DC6  2DD1               	goto	u5185
  8104  1DC7  0876               	movf	___flge@ff2+2,w
  8105  1DC8  0272               	subwf	___flge@ff1+2,w
  8106  1DC9  1D03               	skipz
  8107  1DCA  2DD1               	goto	u5185
  8108  1DCB  0875               	movf	___flge@ff2+1,w
  8109  1DCC  0271               	subwf	___flge@ff1+1,w
  8110  1DCD  1D03               	skipz
  8111  1DCE  2DD1               	goto	u5185
  8112  1DCF  0874               	movf	___flge@ff2,w
  8113  1DD0  0270               	subwf	___flge@ff1,w
  8114  1DD1                     u5185:
  8115  1DD1  1803               	skipnc
  8116  1DD2  2DD4               	goto	u5181
  8117  1DD3  2DD5               	goto	u5180
  8118  1DD4                     u5181:
  8119  1DD4  2DD7               	goto	l3293
  8120  1DD5                     u5180:
  8121  1DD5                     l3291:
  8122  1DD5  1003               	clrc
  8123  1DD6  2DD8               	goto	l623
  8124  1DD7                     l3293:
  8125  1DD7  1403               	setc
  8126  1DD8                     l623:
  8127  1DD8  0008               	return
  8128  1DD9                     __end_of___flge:
  8129                           
  8130                           	psect	text19
  8131  1A6B                     __ptext19:	
  8132 ;; *************** function ___fleq *****************
  8133 ;; Defined at:
  8134 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  ff1             4    0[COMMON] unsigned char 
  8137 ;;  ff2             4    4[COMMON] unsigned char 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;		None               void
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8149 ;;      Params:         8       0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0
  8151 ;;      Temps:          4       0       0       0       0
  8152 ;;      Totals:        12       0       0       0       0
  8153 ;;Total ram usage:       12 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_sprintf
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function ___fleq
  8164  1A6B                     ___fleq:
  8165  1A6B                     l3265:	
  8166                           ;incstack = 0
  8167                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8168                           
  8169  1A6B  3000               	movlw	0
  8170  1A6C  0570               	andwf	___fleq@ff1,w
  8171  1A6D  00F8               	movwf	??___fleq
  8172  1A6E  3000               	movlw	0
  8173  1A6F  0571               	andwf	___fleq@ff1+1,w
  8174  1A70  00F9               	movwf	??___fleq+1
  8175  1A71  3080               	movlw	128
  8176  1A72  0572               	andwf	___fleq@ff1+2,w
  8177  1A73  00FA               	movwf	??___fleq+2
  8178  1A74  307F               	movlw	127
  8179  1A75  0573               	andwf	___fleq@ff1+3,w
  8180  1A76  00FB               	movwf	??___fleq+3
  8181  1A77  087B               	movf	??___fleq+3,w
  8182  1A78  047A               	iorwf	??___fleq+2,w
  8183  1A79  0479               	iorwf	??___fleq+1,w
  8184  1A7A  0478               	iorwf	??___fleq,w
  8185  1A7B  1D03               	skipz
  8186  1A7C  2A7E               	goto	u5091
  8187  1A7D  2A7F               	goto	u5090
  8188  1A7E                     u5091:
  8189  1A7E  2A87               	goto	l614
  8190  1A7F                     u5090:
  8191  1A7F                     l3267:
  8192  1A7F  3000               	movlw	0
  8193  1A80  00F3               	movwf	___fleq@ff1+3
  8194  1A81  3000               	movlw	0
  8195  1A82  00F2               	movwf	___fleq@ff1+2
  8196  1A83  3000               	movlw	0
  8197  1A84  00F1               	movwf	___fleq@ff1+1
  8198  1A85  3000               	movlw	0
  8199  1A86  00F0               	movwf	___fleq@ff1
  8200  1A87                     l614:
  8201  1A87  3000               	movlw	0
  8202  1A88  0574               	andwf	___fleq@ff2,w
  8203  1A89  00F8               	movwf	??___fleq
  8204  1A8A  3000               	movlw	0
  8205  1A8B  0575               	andwf	___fleq@ff2+1,w
  8206  1A8C  00F9               	movwf	??___fleq+1
  8207  1A8D  3080               	movlw	128
  8208  1A8E  0576               	andwf	___fleq@ff2+2,w
  8209  1A8F  00FA               	movwf	??___fleq+2
  8210  1A90  307F               	movlw	127
  8211  1A91  0577               	andwf	___fleq@ff2+3,w
  8212  1A92  00FB               	movwf	??___fleq+3
  8213  1A93  087B               	movf	??___fleq+3,w
  8214  1A94  047A               	iorwf	??___fleq+2,w
  8215  1A95  0479               	iorwf	??___fleq+1,w
  8216  1A96  0478               	iorwf	??___fleq,w
  8217  1A97  1D03               	skipz
  8218  1A98  2A9A               	goto	u5101
  8219  1A99  2A9B               	goto	u5100
  8220  1A9A                     u5101:
  8221  1A9A  2AA3               	goto	l615
  8222  1A9B                     u5100:
  8223  1A9B                     l3269:
  8224  1A9B  3000               	movlw	0
  8225  1A9C  00F7               	movwf	___fleq@ff2+3
  8226  1A9D  3000               	movlw	0
  8227  1A9E  00F6               	movwf	___fleq@ff2+2
  8228  1A9F  3000               	movlw	0
  8229  1AA0  00F5               	movwf	___fleq@ff2+1
  8230  1AA1  3000               	movlw	0
  8231  1AA2  00F4               	movwf	___fleq@ff2
  8232  1AA3                     l615:
  8233  1AA3  0877               	movf	___fleq@ff2+3,w
  8234  1AA4  0673               	xorwf	___fleq@ff1+3,w
  8235  1AA5  1D03               	skipz
  8236  1AA6  2AB1               	goto	u5115
  8237  1AA7  0876               	movf	___fleq@ff2+2,w
  8238  1AA8  0672               	xorwf	___fleq@ff1+2,w
  8239  1AA9  1D03               	skipz
  8240  1AAA  2AB1               	goto	u5115
  8241  1AAB  0875               	movf	___fleq@ff2+1,w
  8242  1AAC  0671               	xorwf	___fleq@ff1+1,w
  8243  1AAD  1D03               	skipz
  8244  1AAE  2AB1               	goto	u5115
  8245  1AAF  0874               	movf	___fleq@ff2,w
  8246  1AB0  0670               	xorwf	___fleq@ff1,w
  8247  1AB1                     u5115:
  8248  1AB1  1903               	skipnz
  8249  1AB2  2AB4               	goto	u5111
  8250  1AB3  2AB5               	goto	u5110
  8251  1AB4                     u5111:
  8252  1AB4  2AB7               	goto	l3273
  8253  1AB5                     u5110:
  8254  1AB5                     l3271:
  8255  1AB5  1003               	clrc
  8256  1AB6  2AB8               	goto	l616
  8257  1AB7                     l3273:
  8258  1AB7  1403               	setc
  8259  1AB8                     l616:
  8260  1AB8  0008               	return
  8261  1AB9                     __end_of___fleq:
  8262                           
  8263                           	psect	text20
  8264  183B                     __ptext20:	
  8265 ;; *************** function _config_txsta *****************
  8266 ;; Defined at:
  8267 ;;		line 8 in file "USART.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		None
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8281 ;;      Params:         0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0
  8284 ;;      Totals:         0       0       0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           
  8295                           ;psect for function _config_txsta
  8296  183B                     _config_txsta:
  8297  183B                     l3563:	
  8298                           ;incstack = 0
  8299                           ; Regs used in _config_txsta: []
  8300                           
  8301                           
  8302                           ;USART.c: 9:     TXSTAbits.CSRC = 0;
  8303  183B  1683               	bsf	3,5	;RP0=1, select bank1
  8304  183C  1303               	bcf	3,6	;RP1=0, select bank1
  8305  183D  1398               	bcf	24,7	;volatile
  8306                           
  8307                           ;USART.c: 10:     TXSTAbits.TX9 = 0;
  8308  183E  1318               	bcf	24,6	;volatile
  8309                           
  8310                           ;USART.c: 11:     TXSTAbits.TXEN = 1;
  8311  183F  1698               	bsf	24,5	;volatile
  8312                           
  8313                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
  8314  1840  1218               	bcf	24,4	;volatile
  8315                           
  8316                           ;USART.c: 13:     TXSTAbits.BRGH = 0;
  8317  1841  1118               	bcf	24,2	;volatile
  8318                           
  8319                           ;USART.c: 14:     TXSTAbits.TRMT = 0;
  8320  1842  1098               	bcf	24,1	;volatile
  8321                           
  8322                           ;USART.c: 15:     TXSTAbits.TX9D = 0;
  8323  1843  1018               	bcf	24,0	;volatile
  8324  1844                     l211:
  8325  1844  0008               	return
  8326  1845                     __end_of_config_txsta:
  8327                           
  8328                           	psect	text21
  8329  182B                     __ptext21:	
  8330 ;; *************** function _config_rcsta *****************
  8331 ;; Defined at:
  8332 ;;		line 17 in file "USART.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		status,2
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8346 ;;      Params:         0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0
  8349 ;;      Totals:         0       0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_main
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _config_rcsta
  8361  182B                     _config_rcsta:
  8362  182B                     l3565:	
  8363                           ;incstack = 0
  8364                           ; Regs used in _config_rcsta: [status,2]
  8365                           
  8366                           
  8367                           ;USART.c: 18:     RCSTAbits.SPEN = 1;
  8368  182B  1283               	bcf	3,5	;RP0=0, select bank0
  8369  182C  1303               	bcf	3,6	;RP1=0, select bank0
  8370  182D  1798               	bsf	24,7	;volatile
  8371                           
  8372                           ;USART.c: 19:     RCSTAbits.RX9 = 0;
  8373  182E  1318               	bcf	24,6	;volatile
  8374                           
  8375                           ;USART.c: 20:     RCSTAbits.SREN = 0;
  8376  182F  1298               	bcf	24,5	;volatile
  8377                           
  8378                           ;USART.c: 21:     RCSTAbits.CREN = 1;
  8379  1830  1618               	bsf	24,4	;volatile
  8380  1831                     l3567:
  8381                           
  8382                           ;USART.c: 22:     RCREG = 0;
  8383  1831  019A               	clrf	26	;volatile
  8384  1832                     l214:
  8385  1832  0008               	return
  8386  1833                     __end_of_config_rcsta:
  8387                           
  8388                           	psect	text22
  8389  185E                     __ptext22:	
  8390 ;; *************** function _config_P *****************
  8391 ;; Defined at:
  8392 ;;		line 103 in file "lab03.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8406 ;;      Params:         0       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0
  8409 ;;      Totals:         0       0       0       0       0
  8410 ;;Total ram usage:        0 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_main
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function _config_P
  8421  185E                     _config_P:
  8422  185E                     l3553:	
  8423                           ;incstack = 0
  8424                           ; Regs used in _config_P: [wreg+status,2]
  8425                           
  8426                           
  8427                           ;lab03.c: 104:     TRISD = 0;
  8428  185E  1683               	bsf	3,5	;RP0=1, select bank1
  8429  185F  1303               	bcf	3,6	;RP1=0, select bank1
  8430  1860  0188               	clrf	8	;volatile
  8431                           
  8432                           ;lab03.c: 105:     TRISE = 0;
  8433  1861  0189               	clrf	9	;volatile
  8434  1862                     l3555:
  8435                           
  8436                           ;lab03.c: 106:     TRISA = 3;
  8437  1862  3003               	movlw	3
  8438  1863  0085               	movwf	5	;volatile
  8439  1864                     l3557:
  8440                           
  8441                           ;lab03.c: 109:     ANSEL = 3;
  8442  1864  3003               	movlw	3
  8443  1865  1683               	bsf	3,5	;RP0=1, select bank3
  8444  1866  1703               	bsf	3,6	;RP1=1, select bank3
  8445  1867  0088               	movwf	8	;volatile
  8446                           
  8447                           ;lab03.c: 110:     ANSELH = 0;
  8448  1868  0189               	clrf	9	;volatile
  8449                           
  8450                           ;lab03.c: 111:     PORTD = 0;
  8451  1869  1283               	bcf	3,5	;RP0=0, select bank0
  8452  186A  1303               	bcf	3,6	;RP1=0, select bank0
  8453  186B  0188               	clrf	8	;volatile
  8454                           
  8455                           ;lab03.c: 112:     PORTE = 0;
  8456  186C  0189               	clrf	9	;volatile
  8457                           
  8458                           ;lab03.c: 113:     PORTC = 0;
  8459  186D  0187               	clrf	7	;volatile
  8460  186E                     l73:
  8461  186E  0008               	return
  8462  186F                     __end_of_config_P:
  8463                           
  8464                           	psect	text23
  8465  1822                     __ptext23:	
  8466 ;; *************** function _config_ADC *****************
  8467 ;; Defined at:
  8468 ;;		line 6 in file "ADC.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		status,2
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8482 ;;      Params:         0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0
  8484 ;;      Temps:          0       0       0       0       0
  8485 ;;      Totals:         0       0       0       0       0
  8486 ;;Total ram usage:        0 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_main
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           
  8496                           ;psect for function _config_ADC
  8497  1822                     _config_ADC:
  8498  1822                     l3559:	
  8499                           ;incstack = 0
  8500                           ; Regs used in _config_ADC: [status,2]
  8501                           
  8502                           
  8503                           ;ADC.c: 7:     ADCON1 = 0b00000000;
  8504  1822  1683               	bsf	3,5	;RP0=1, select bank1
  8505  1823  1303               	bcf	3,6	;RP1=0, select bank1
  8506  1824  019F               	clrf	31	;volatile
  8507  1825                     l169:
  8508  1825  0008               	return
  8509  1826                     __end_of_config_ADC:
  8510                           
  8511                           	psect	text24
  8512  1826                     __ptext24:	
  8513 ;; *************** function __baudios *****************
  8514 ;; Defined at:
  8515 ;;		line 5 in file "USART.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8529 ;;      Params:         0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0
  8532 ;;      Totals:         0       0       0       0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		_main
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           
  8543                           ;psect for function __baudios
  8544  1826                     __baudios:
  8545  1826                     l3561:	
  8546                           ;incstack = 0
  8547                           ; Regs used in __baudios: [wreg]
  8548                           
  8549                           
  8550                           ;USART.c: 6:     SPBRG = 12;
  8551  1826  300C               	movlw	12
  8552  1827  1683               	bsf	3,5	;RP0=1, select bank1
  8553  1828  1303               	bcf	3,6	;RP1=0, select bank1
  8554  1829  0099               	movwf	25	;volatile
  8555  182A                     l208:
  8556  182A  0008               	return
  8557  182B                     __end_of__baudios:
  8558                           
  8559                           	psect	text25
  8560  1942                     __ptext25:	
  8561 ;; *************** function _Write_USART_String *****************
  8562 ;; Defined at:
  8563 ;;		line 29 in file "USART.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  a               2    1[COMMON] PTR unsigned char 
  8566 ;;		 -> STR_4(25), data(16), 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  i               1    4[COMMON] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8578 ;;      Params:         2       0       0       0       0
  8579 ;;      Locals:         1       0       0       0       0
  8580 ;;      Temps:          1       0       0       0       0
  8581 ;;      Totals:         4       0       0       0       0
  8582 ;;Total ram usage:        4 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    1
  8585 ;; This function calls:
  8586 ;;		_Write_USART
  8587 ;; This function is called by:
  8588 ;;		_main
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           
  8593                           ;psect for function _Write_USART_String
  8594  1942                     _Write_USART_String:
  8595  1942                     l3909:	
  8596                           ;incstack = 0
  8597                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8598                           
  8599                           
  8600                           ;USART.c: 30:     uint8_t i;;USART.c: 31:     for(i=0;a[i]!='\0';i++){
  8601  1942  01F4               	clrf	Write_USART_String@i
  8602  1943  2959               	goto	l3915
  8603  1944                     l3911:
  8604                           
  8605                           ;USART.c: 32:         Write_USART(a[i]);
  8606  1944  0874               	movf	Write_USART_String@i,w
  8607  1945  0771               	addwf	Write_USART_String@a,w
  8608  1946  0084               	movwf	4
  8609  1947  0872               	movf	Write_USART_String@a+1,w
  8610  1948  1803               	skipnc
  8611  1949  0A72               	incf	Write_USART_String@a+1,w
  8612  194A  00FF               	movwf	btemp+1
  8613  194B  120A  158A  2000  160A  158A  	fcall	stringtab
  8614  1950  160A  158A  2045  160A  158A  	fcall	_Write_USART
  8615  1955                     l3913:
  8616                           
  8617                           ;USART.c: 33:     }
  8618  1955  3001               	movlw	1
  8619  1956  00F3               	movwf	??_Write_USART_String
  8620  1957  0873               	movf	??_Write_USART_String,w
  8621  1958  07F4               	addwf	Write_USART_String@i,f
  8622  1959                     l3915:
  8623  1959  0874               	movf	Write_USART_String@i,w
  8624  195A  0771               	addwf	Write_USART_String@a,w
  8625  195B  0084               	movwf	4
  8626  195C  0872               	movf	Write_USART_String@a+1,w
  8627  195D  1803               	skipnc
  8628  195E  0A72               	incf	Write_USART_String@a+1,w
  8629  195F  1283               	bcf	3,5	;RP0=0, select bank0
  8630  1960  1303               	bcf	3,6	;RP1=0, select bank0
  8631  1961  00FF               	movwf	btemp+1
  8632  1962  120A  158A  2000  160A  158A  	fcall	stringtab
  8633  1967  3A00               	xorlw	0
  8634  1968  1D03               	skipz
  8635  1969  296B               	goto	u6331
  8636  196A  296C               	goto	u6330
  8637  196B                     u6331:
  8638  196B  2944               	goto	l3911
  8639  196C                     u6330:
  8640  196C                     l226:
  8641  196C  0008               	return
  8642  196D                     __end_of_Write_USART_String:
  8643                           
  8644                           	psect	text26
  8645  1845                     __ptext26:	
  8646 ;; *************** function _Write_USART *****************
  8647 ;; Defined at:
  8648 ;;		line 25 in file "USART.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  a               1    wreg     unsigned char 
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;  a               1    0[COMMON] unsigned char 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8662 ;;      Params:         0       0       0       0       0
  8663 ;;      Locals:         1       0       0       0       0
  8664 ;;      Temps:          0       0       0       0       0
  8665 ;;      Totals:         1       0       0       0       0
  8666 ;;Total ram usage:        1 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;;		_Write_USART_String
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           
  8677                           ;psect for function _Write_USART
  8678  1845                     _Write_USART:
  8679                           
  8680                           ;incstack = 0
  8681                           ; Regs used in _Write_USART: [wreg]
  8682                           ;Write_USART@a stored from wreg
  8683  1845  00F0               	movwf	Write_USART@a
  8684  1846                     l3011:
  8685  1846                     l217:	
  8686                           ;USART.c: 26:     while(!TRMT);
  8687                           
  8688  1846  1683               	bsf	3,5	;RP0=1, select bank1
  8689  1847  1303               	bcf	3,6	;RP1=0, select bank1
  8690  1848  1C98               	btfss	24,1	;volatile
  8691  1849  284B               	goto	u4441
  8692  184A  284C               	goto	u4440
  8693  184B                     u4441:
  8694  184B  2846               	goto	l217
  8695  184C                     u4440:
  8696  184C                     l3013:
  8697                           
  8698                           ;USART.c: 27:     TXREG=a;
  8699  184C  0870               	movf	Write_USART@a,w
  8700  184D  1283               	bcf	3,5	;RP0=0, select bank0
  8701  184E  1303               	bcf	3,6	;RP1=0, select bank0
  8702  184F  0099               	movwf	25	;volatile
  8703  1850                     l220:
  8704  1850  0008               	return
  8705  1851                     __end_of_Write_USART:
  8706                           
  8707                           	psect	text27
  8708  19E5                     __ptext27:	
  8709 ;; *************** function _Lcd_Write_String *****************
  8710 ;; Defined at:
  8711 ;;		line 79 in file "LCD.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  a               2    3[COMMON] PTR unsigned char 
  8714 ;;		 -> data(16), STR_2(15), STR_1(15), 
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;  i               2    8[COMMON] int 
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8726 ;;      Params:         2       0       0       0       0
  8727 ;;      Locals:         2       0       0       0       0
  8728 ;;      Temps:          3       0       0       0       0
  8729 ;;      Totals:         7       0       0       0       0
  8730 ;;Total ram usage:        7 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:    2
  8733 ;; This function calls:
  8734 ;;		_LCD_CMD
  8735 ;; This function is called by:
  8736 ;;		_main
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           
  8741                           ;psect for function _Lcd_Write_String
  8742  19E5                     _Lcd_Write_String:
  8743  19E5                     l3607:	
  8744                           ;incstack = 0
  8745                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8746                           
  8747                           
  8748                           ;LCD.c: 80:  int i;;LCD.c: 81:  for(i=0;a[i]!='\0';i++)
  8749  19E5  01F8               	clrf	Lcd_Write_String@i
  8750  19E6  01F9               	clrf	Lcd_Write_String@i+1
  8751  19E7  2A0A               	goto	l3613
  8752  19E8                     l3609:
  8753                           
  8754                           ;LCD.c: 82:     LCD_CMD(a[i]);
  8755  19E8  0878               	movf	Lcd_Write_String@i,w
  8756  19E9  0773               	addwf	Lcd_Write_String@a,w
  8757  19EA  00F6               	movwf	??_Lcd_Write_String+1
  8758  19EB  0874               	movf	Lcd_Write_String@a+1,w
  8759  19EC  00F5               	movwf	??_Lcd_Write_String
  8760  19ED  1803               	skipnc
  8761  19EE  0AF5               	incf	??_Lcd_Write_String,f
  8762  19EF  1FF8               	btfss	Lcd_Write_String@i,7
  8763  19F0  29F2               	goto	u5810
  8764  19F1  03F5               	decf	??_Lcd_Write_String,f
  8765  19F2                     u5810:
  8766  19F2  0875               	movf	??_Lcd_Write_String,w
  8767  19F3  00F7               	movwf	??_Lcd_Write_String+2
  8768  19F4  0877               	movf	??_Lcd_Write_String+2,w
  8769  19F5  1283               	bcf	3,5	;RP0=0, select bank0
  8770  19F6  1303               	bcf	3,6	;RP1=0, select bank0
  8771  19F7  00FF               	movwf	btemp+1
  8772  19F8  0876               	movf	??_Lcd_Write_String+1,w
  8773  19F9  0084               	movwf	4
  8774  19FA  120A  158A  2000  160A  158A  	fcall	stringtab
  8775  19FF  160A  158A  206F  160A  158A  	fcall	_LCD_CMD
  8776  1A04                     l3611:
  8777  1A04  3001               	movlw	1
  8778  1A05  07F8               	addwf	Lcd_Write_String@i,f
  8779  1A06  1803               	skipnc
  8780  1A07  0AF9               	incf	Lcd_Write_String@i+1,f
  8781  1A08  3000               	movlw	0
  8782  1A09  07F9               	addwf	Lcd_Write_String@i+1,f
  8783  1A0A                     l3613:
  8784  1A0A  0878               	movf	Lcd_Write_String@i,w
  8785  1A0B  0773               	addwf	Lcd_Write_String@a,w
  8786  1A0C  00F6               	movwf	??_Lcd_Write_String+1
  8787  1A0D  0874               	movf	Lcd_Write_String@a+1,w
  8788  1A0E  00F5               	movwf	??_Lcd_Write_String
  8789  1A0F  1803               	skipnc
  8790  1A10  0AF5               	incf	??_Lcd_Write_String,f
  8791  1A11  1FF8               	btfss	Lcd_Write_String@i,7
  8792  1A12  2A14               	goto	u5820
  8793  1A13  03F5               	decf	??_Lcd_Write_String,f
  8794  1A14                     u5820:
  8795  1A14  0875               	movf	??_Lcd_Write_String,w
  8796  1A15  00F7               	movwf	??_Lcd_Write_String+2
  8797  1A16  0877               	movf	??_Lcd_Write_String+2,w
  8798  1A17  1283               	bcf	3,5	;RP0=0, select bank0
  8799  1A18  1303               	bcf	3,6	;RP1=0, select bank0
  8800  1A19  00FF               	movwf	btemp+1
  8801  1A1A  0876               	movf	??_Lcd_Write_String+1,w
  8802  1A1B  0084               	movwf	4
  8803  1A1C  120A  158A  2000  160A  158A  	fcall	stringtab
  8804  1A21  3A00               	xorlw	0
  8805  1A22  1D03               	skipz
  8806  1A23  2A25               	goto	u5831
  8807  1A24  2A26               	goto	u5830
  8808  1A25                     u5831:
  8809  1A25  29E8               	goto	l3609
  8810  1A26                     u5830:
  8811  1A26                     l162:
  8812  1A26  0008               	return
  8813  1A27                     __end_of_Lcd_Write_String:
  8814                           
  8815                           	psect	text28
  8816  186F                     __ptext28:	
  8817 ;; *************** function _LCD_CMD *****************
  8818 ;; Defined at:
  8819 ;;		line 21 in file "LCD.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  a               1    wreg     unsigned char 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  a               1    2[COMMON] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, pclath, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8833 ;;      Params:         0       0       0       0       0
  8834 ;;      Locals:         1       0       0       0       0
  8835 ;;      Temps:          1       0       0       0       0
  8836 ;;      Totals:         2       0       0       0       0
  8837 ;;Total ram usage:        2 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    1
  8840 ;; This function calls:
  8841 ;;		_Puerto
  8842 ;; This function is called by:
  8843 ;;		_Lcd_Write_String
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           
  8848                           ;psect for function _LCD_CMD
  8849  186F                     _LCD_CMD:
  8850                           
  8851                           ;incstack = 0
  8852                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  8853                           ;LCD_CMD@a stored from wreg
  8854  186F  00F2               	movwf	LCD_CMD@a
  8855  1870                     l3025:
  8856                           
  8857                           ;LCD.c: 22:     RE0 = 1;
  8858  1870  1283               	bcf	3,5	;RP0=0, select bank0
  8859  1871  1303               	bcf	3,6	;RP1=0, select bank0
  8860  1872  1409               	bsf	9,0	;volatile
  8861  1873                     l3027:
  8862                           
  8863                           ;LCD.c: 23:     Puerto(a);
  8864  1873  0872               	movf	LCD_CMD@a,w
  8865  1874  160A  158A  21A7  160A  158A  	fcall	_Puerto
  8866  1879                     l3029:
  8867                           
  8868                           ;LCD.c: 24:     RE1 = 1;
  8869  1879  1283               	bcf	3,5	;RP0=0, select bank0
  8870  187A  1303               	bcf	3,6	;RP1=0, select bank0
  8871  187B  1489               	bsf	9,1	;volatile
  8872  187C                     l3031:
  8873                           
  8874                           ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8875  187C  3003               	movlw	3
  8876  187D  00F1               	movwf	??_LCD_CMD
  8877  187E                     u6357:
  8878  187E  0BF1               	decfsz	??_LCD_CMD,f
  8879  187F  287E               	goto	u6357
  8880  1880                     l3033:
  8881                           
  8882                           ;LCD.c: 26:     RE1 = 0;
  8883  1880  1283               	bcf	3,5	;RP0=0, select bank0
  8884  1881  1303               	bcf	3,6	;RP1=0, select bank0
  8885  1882  1089               	bcf	9,1	;volatile
  8886  1883                     l3035:
  8887                           
  8888                           ;LCD.c: 27:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8889  1883  3003               	movlw	3
  8890  1884  00F1               	movwf	??_LCD_CMD
  8891  1885                     u6367:
  8892  1885  0BF1               	decfsz	??_LCD_CMD,f
  8893  1886  2885               	goto	u6367
  8894  1887                     l3037:
  8895                           
  8896                           ;LCD.c: 28:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  8897  1887  3021               	movlw	33
  8898  1888  00F1               	movwf	??_LCD_CMD
  8899  1889                     u6377:
  8900  1889  0BF1               	decfsz	??_LCD_CMD,f
  8901  188A  2889               	goto	u6377
  8902  188B                     l141:
  8903  188B  0008               	return
  8904  188C                     __end_of_LCD_CMD:
  8905                           
  8906                           	psect	text29
  8907  18AE                     __ptext29:	
  8908 ;; *************** function _Lcd_Set_Cursor *****************
  8909 ;; Defined at:
  8910 ;;		line 67 in file "LCD.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  x               1    wreg     unsigned char 
  8913 ;;  y               1    4[COMMON] unsigned char 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  x               1    6[COMMON] unsigned char 
  8916 ;;  a               1    7[COMMON] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, pclath, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8926 ;;      Params:         1       0       0       0       0
  8927 ;;      Locals:         2       0       0       0       0
  8928 ;;      Temps:          1       0       0       0       0
  8929 ;;      Totals:         4       0       0       0       0
  8930 ;;Total ram usage:        4 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    2
  8933 ;; This function calls:
  8934 ;;		_datosLCD
  8935 ;; This function is called by:
  8936 ;;		_main
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           
  8941                           ;psect for function _Lcd_Set_Cursor
  8942  18AE                     _Lcd_Set_Cursor:
  8943                           
  8944                           ;incstack = 0
  8945                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8946                           ;Lcd_Set_Cursor@x stored from wreg
  8947  18AE  00F6               	movwf	Lcd_Set_Cursor@x
  8948  18AF                     l3595:
  8949                           
  8950                           ;LCD.c: 68:  uint8_t a;;LCD.c: 69:  if(x == 1){
  8951  18AF  0376               	decf	Lcd_Set_Cursor@x,w
  8952  18B0  1D03               	btfss	3,2
  8953  18B1  28B3               	goto	u5791
  8954  18B2  28B4               	goto	u5790
  8955  18B3                     u5791:
  8956  18B3  28C0               	goto	l3601
  8957  18B4                     u5790:
  8958  18B4                     l3597:
  8959                           
  8960                           ;LCD.c: 70:    a = 0x80 + y;
  8961  18B4  0874               	movf	Lcd_Set_Cursor@y,w
  8962  18B5  3E80               	addlw	128
  8963  18B6  00F5               	movwf	??_Lcd_Set_Cursor
  8964  18B7  0875               	movf	??_Lcd_Set_Cursor,w
  8965  18B8  00F7               	movwf	Lcd_Set_Cursor@a
  8966  18B9                     l3599:
  8967                           
  8968                           ;LCD.c: 71:   datosLCD(a);
  8969  18B9  0877               	movf	Lcd_Set_Cursor@a,w
  8970  18BA  160A  158A  208C  160A  158A  	fcall	_datosLCD
  8971                           
  8972                           ;LCD.c: 72:     }
  8973  18BF  28D1               	goto	l156
  8974  18C0                     l3601:
  8975  18C0  3002               	movlw	2
  8976  18C1  0676               	xorwf	Lcd_Set_Cursor@x,w
  8977  18C2  1D03               	btfss	3,2
  8978  18C3  28C5               	goto	u5801
  8979  18C4  28C6               	goto	u5800
  8980  18C5                     u5801:
  8981  18C5  28D1               	goto	l156
  8982  18C6                     u5800:
  8983  18C6                     l3603:
  8984                           
  8985                           ;LCD.c: 74:    a = 0xC0 + y;
  8986  18C6  0874               	movf	Lcd_Set_Cursor@y,w
  8987  18C7  3EC0               	addlw	192
  8988  18C8  00F5               	movwf	??_Lcd_Set_Cursor
  8989  18C9  0875               	movf	??_Lcd_Set_Cursor,w
  8990  18CA  00F7               	movwf	Lcd_Set_Cursor@a
  8991  18CB                     l3605:
  8992                           
  8993                           ;LCD.c: 75:   datosLCD(a);
  8994  18CB  0877               	movf	Lcd_Set_Cursor@a,w
  8995  18CC  160A  158A  208C  160A  158A  	fcall	_datosLCD
  8996  18D1                     l156:
  8997  18D1  0008               	return
  8998  18D2                     __end_of_Lcd_Set_Cursor:
  8999                           
  9000                           	psect	text30
  9001  000E                     __ptext30:	
  9002 ;; *************** function _Lcd_Init *****************
  9003 ;; Defined at:
  9004 ;;		line 47 in file "LCD.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0, pclath, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9018 ;;      Params:         0       0       0       0       0
  9019 ;;      Locals:         0       0       0       0       0
  9020 ;;      Temps:          2       0       0       0       0
  9021 ;;      Totals:         2       0       0       0       0
  9022 ;;Total ram usage:        2 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:    2
  9025 ;; This function calls:
  9026 ;;		_datosLCD
  9027 ;; This function is called by:
  9028 ;;		_main
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           
  9033                           ;psect for function _Lcd_Init
  9034  000E                     _Lcd_Init:
  9035  000E                     l3569:	
  9036                           ;incstack = 0
  9037                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9038                           
  9039                           
  9040                           ;LCD.c: 48:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9041  000E  3034               	movlw	52
  9042  000F  00F5               	movwf	??_Lcd_Init+1
  9043  0010  30F1               	movlw	241
  9044  0011  00F4               	movwf	??_Lcd_Init
  9045  0012                     u6387:
  9046  0012  0BF4               	decfsz	??_Lcd_Init,f
  9047  0013  2812               	goto	u6387
  9048  0014  0BF5               	decfsz	??_Lcd_Init+1,f
  9049  0015  2812               	goto	u6387
  9050  0016  2817               	nop2
  9051  0017                     l3571:
  9052                           
  9053                           ;LCD.c: 49:     datosLCD (0x30);
  9054  0017  3030               	movlw	48
  9055  0018  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9056  001D                     l3573:
  9057                           
  9058                           ;LCD.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9059  001D  300D               	movlw	13
  9060  001E  00F5               	movwf	??_Lcd_Init+1
  9061  001F  30FB               	movlw	251
  9062  0020  00F4               	movwf	??_Lcd_Init
  9063  0021                     u6397:
  9064  0021  0BF4               	decfsz	??_Lcd_Init,f
  9065  0022  2821               	goto	u6397
  9066  0023  0BF5               	decfsz	??_Lcd_Init+1,f
  9067  0024  2821               	goto	u6397
  9068  0025  2826               	nop2
  9069                           
  9070                           ;LCD.c: 51:     datosLCD (0x30);
  9071  0026  3030               	movlw	48
  9072  0027  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9073  002C                     l3575:
  9074                           
  9075                           ;LCD.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9076  002C  3042               	movlw	66
  9077  002D  00F4               	movwf	??_Lcd_Init
  9078  002E                     u6407:
  9079  002E  0BF4               	decfsz	??_Lcd_Init,f
  9080  002F  282E               	goto	u6407
  9081  0030  0000               	nop
  9082  0031                     l3577:
  9083                           
  9084                           ;LCD.c: 53:     datosLCD (0x30);
  9085  0031  3030               	movlw	48
  9086  0032  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9087                           
  9088                           ;LCD.c: 54:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9089  0037  3042               	movlw	66
  9090  0038  00F4               	movwf	??_Lcd_Init
  9091  0039                     u6417:
  9092  0039  0BF4               	decfsz	??_Lcd_Init,f
  9093  003A  2839               	goto	u6417
  9094  003B  0000               	nop
  9095  003C                     l3579:
  9096                           
  9097                           ;LCD.c: 55:     datosLCD (0x38);
  9098  003C  3038               	movlw	56
  9099  003D  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9100  0042                     l3581:
  9101                           
  9102                           ;LCD.c: 56:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9103  0042  3027               	movlw	39
  9104  0043  00F4               	movwf	??_Lcd_Init
  9105  0044                     u6427:
  9106  0044  0BF4               	decfsz	??_Lcd_Init,f
  9107  0045  2844               	goto	u6427
  9108  0046  2847               	nop2
  9109                           
  9110                           ;LCD.c: 57:     datosLCD (0x08);
  9111  0047  3008               	movlw	8
  9112  0048  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9113  004D                     l3583:
  9114                           
  9115                           ;LCD.c: 58:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9116  004D  3027               	movlw	39
  9117  004E  00F4               	movwf	??_Lcd_Init
  9118  004F                     u6437:
  9119  004F  0BF4               	decfsz	??_Lcd_Init,f
  9120  0050  284F               	goto	u6437
  9121  0051  2852               	nop2
  9122  0052                     l3585:
  9123                           
  9124                           ;LCD.c: 59:     datosLCD (0x01);
  9125  0052  3001               	movlw	1
  9126  0053  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9127                           
  9128                           ;LCD.c: 60:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9129  0058  300D               	movlw	13
  9130  0059  00F5               	movwf	??_Lcd_Init+1
  9131  005A  30FB               	movlw	251
  9132  005B  00F4               	movwf	??_Lcd_Init
  9133  005C                     u6447:
  9134  005C  0BF4               	decfsz	??_Lcd_Init,f
  9135  005D  285C               	goto	u6447
  9136  005E  0BF5               	decfsz	??_Lcd_Init+1,f
  9137  005F  285C               	goto	u6447
  9138  0060  2861               	nop2
  9139  0061                     l3587:
  9140                           
  9141                           ;LCD.c: 61:     datosLCD (0x06);
  9142  0061  3006               	movlw	6
  9143  0062  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9144  0067                     l3589:
  9145                           
  9146                           ;LCD.c: 62:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9147  0067  3027               	movlw	39
  9148  0068  00F4               	movwf	??_Lcd_Init
  9149  0069                     u6457:
  9150  0069  0BF4               	decfsz	??_Lcd_Init,f
  9151  006A  2869               	goto	u6457
  9152  006B  286C               	nop2
  9153                           
  9154                           ;LCD.c: 63:     datosLCD (0x0C);
  9155  006C  300C               	movlw	12
  9156  006D  160A  158A  208C  120A  118A  	fcall	_datosLCD
  9157  0072                     l3591:
  9158                           
  9159                           ;LCD.c: 64:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9160  0072  3027               	movlw	39
  9161  0073  00F4               	movwf	??_Lcd_Init
  9162  0074                     u6467:
  9163  0074  0BF4               	decfsz	??_Lcd_Init,f
  9164  0075  2874               	goto	u6467
  9165  0076  2877               	nop2
  9166  0077                     l150:
  9167  0077  0008               	return
  9168  0078                     __end_of_Lcd_Init:
  9169                           
  9170                           	psect	text31
  9171  1851                     __ptext31:	
  9172 ;; *************** function _LCD_Limpia *****************
  9173 ;; Defined at:
  9174 ;;		line 41 in file "LCD.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0, pclath, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9188 ;;      Params:         0       0       0       0       0
  9189 ;;      Locals:         0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0
  9191 ;;      Totals:         0       0       0       0       0
  9192 ;;Total ram usage:        0 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    2
  9195 ;; This function calls:
  9196 ;;		_datosLCD
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           
  9203                           ;psect for function _LCD_Limpia
  9204  1851                     _LCD_Limpia:
  9205  1851                     l3593:	
  9206                           ;incstack = 0
  9207                           ; Regs used in _LCD_Limpia: [wreg+status,2+status,0+pclath+cstack]
  9208                           
  9209                           
  9210                           ;LCD.c: 42:     datosLCD(0);
  9211  1851  3000               	movlw	0
  9212  1852  160A  158A  208C  160A  158A  	fcall	_datosLCD
  9213                           
  9214                           ;LCD.c: 43:     datosLCD(1);
  9215  1857  3001               	movlw	1
  9216  1858  160A  158A  208C  160A  158A  	fcall	_datosLCD
  9217  185D                     l147:
  9218  185D  0008               	return
  9219  185E                     __end_of_LCD_Limpia:
  9220                           
  9221                           	psect	text32
  9222  188C                     __ptext32:	
  9223 ;; *************** function _datosLCD *****************
  9224 ;; Defined at:
  9225 ;;		line 31 in file "LCD.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  x               1    wreg     unsigned char 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  x               1    3[COMMON] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0, pclath, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9239 ;;      Params:         0       0       0       0       0
  9240 ;;      Locals:         1       0       0       0       0
  9241 ;;      Temps:          2       0       0       0       0
  9242 ;;      Totals:         3       0       0       0       0
  9243 ;;Total ram usage:        3 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    1
  9246 ;; This function calls:
  9247 ;;		_Puerto
  9248 ;; This function is called by:
  9249 ;;		_LCD_Limpia
  9250 ;;		_Lcd_Init
  9251 ;;		_Lcd_Set_Cursor
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           
  9256                           ;psect for function _datosLCD
  9257  188C                     _datosLCD:
  9258                           
  9259                           ;incstack = 0
  9260                           ; Regs used in _datosLCD: [wreg+status,2+status,0+pclath+cstack]
  9261                           ;datosLCD@x stored from wreg
  9262  188C  00F3               	movwf	datosLCD@x
  9263  188D                     l3039:
  9264                           
  9265                           ;LCD.c: 32:     RE0 = 0;
  9266  188D  1283               	bcf	3,5	;RP0=0, select bank0
  9267  188E  1303               	bcf	3,6	;RP1=0, select bank0
  9268  188F  1009               	bcf	9,0	;volatile
  9269  1890                     l3041:
  9270                           
  9271                           ;LCD.c: 33:     Puerto(x);
  9272  1890  0873               	movf	datosLCD@x,w
  9273  1891  160A  158A  21A7  160A  158A  	fcall	_Puerto
  9274  1896                     l3043:
  9275                           
  9276                           ;LCD.c: 34:     RE1 = 1;
  9277  1896  1283               	bcf	3,5	;RP0=0, select bank0
  9278  1897  1303               	bcf	3,6	;RP1=0, select bank0
  9279  1898  1489               	bsf	9,1	;volatile
  9280  1899                     l3045:
  9281                           
  9282                           ;LCD.c: 35:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9283  1899  3003               	movlw	3
  9284  189A  00F1               	movwf	??_datosLCD
  9285  189B                     u6477:
  9286  189B  0BF1               	decfsz	??_datosLCD,f
  9287  189C  289B               	goto	u6477
  9288  189D                     l3047:
  9289                           
  9290                           ;LCD.c: 36:     RE1 = 0;
  9291  189D  1283               	bcf	3,5	;RP0=0, select bank0
  9292  189E  1303               	bcf	3,6	;RP1=0, select bank0
  9293  189F  1089               	bcf	9,1	;volatile
  9294  18A0                     l3049:
  9295                           
  9296                           ;LCD.c: 37:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9297  18A0  3003               	movlw	3
  9298  18A1  00F1               	movwf	??_datosLCD
  9299  18A2                     u6487:
  9300  18A2  0BF1               	decfsz	??_datosLCD,f
  9301  18A3  28A2               	goto	u6487
  9302  18A4                     l3051:
  9303                           
  9304                           ;LCD.c: 38:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9305  18A4  3006               	movlw	6
  9306  18A5  00F2               	movwf	??_datosLCD+1
  9307  18A6  3030               	movlw	48
  9308  18A7  00F1               	movwf	??_datosLCD
  9309  18A8                     u6497:
  9310  18A8  0BF1               	decfsz	??_datosLCD,f
  9311  18A9  28A8               	goto	u6497
  9312  18AA  0BF2               	decfsz	??_datosLCD+1,f
  9313  18AB  28A8               	goto	u6497
  9314  18AC  0000               	nop
  9315  18AD                     l144:
  9316  18AD  0008               	return
  9317  18AE                     __end_of_datosLCD:
  9318                           
  9319                           	psect	text33
  9320  19A7                     __ptext33:	
  9321 ;; *************** function _Puerto *****************
  9322 ;; Defined at:
  9323 ;;		line 9 in file "LCD.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;  x               1    wreg     unsigned char 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  x               1    0[COMMON] unsigned char 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      void 
  9330 ;; Registers used:
  9331 ;;		wreg
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9337 ;;      Params:         0       0       0       0       0
  9338 ;;      Locals:         1       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0
  9340 ;;      Totals:         1       0       0       0       0
  9341 ;;Total ram usage:        1 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_LCD_CMD
  9347 ;;		_datosLCD
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           
  9352                           ;psect for function _Puerto
  9353  19A7                     _Puerto:
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _Puerto: [wreg]
  9357                           ;Puerto@x stored from wreg
  9358  19A7  00F0               	movwf	Puerto@x
  9359  19A8                     l2529:
  9360                           
  9361                           ;LCD.c: 10:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  9362  19A8  1C70               	btfss	Puerto@x,0
  9363  19A9  29AB               	goto	u3211
  9364  19AA  29AC               	goto	u3210
  9365  19AB                     u3211:
  9366  19AB  29B0               	goto	l122
  9367  19AC                     u3210:
  9368  19AC                     l2531:
  9369  19AC  1283               	bcf	3,5	;RP0=0, select bank0
  9370  19AD  1303               	bcf	3,6	;RP1=0, select bank0
  9371  19AE  1408               	bsf	8,0	;volatile
  9372  19AF  29B3               	goto	l123
  9373  19B0                     l122:
  9374  19B0  1283               	bcf	3,5	;RP0=0, select bank0
  9375  19B1  1303               	bcf	3,6	;RP1=0, select bank0
  9376  19B2  1008               	bcf	8,0	;volatile
  9377  19B3                     l123:
  9378                           
  9379                           ;LCD.c: 11:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  9380  19B3  1CF0               	btfss	Puerto@x,1
  9381  19B4  29B6               	goto	u3221
  9382  19B5  29B7               	goto	u3220
  9383  19B6                     u3221:
  9384  19B6  29B9               	goto	l124
  9385  19B7                     u3220:
  9386  19B7                     l2533:
  9387  19B7  1488               	bsf	8,1	;volatile
  9388  19B8  29BA               	goto	l125
  9389  19B9                     l124:
  9390  19B9  1088               	bcf	8,1	;volatile
  9391  19BA                     l125:
  9392                           
  9393                           ;LCD.c: 12:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  9394  19BA  1D70               	btfss	Puerto@x,2
  9395  19BB  29BD               	goto	u3231
  9396  19BC  29BE               	goto	u3230
  9397  19BD                     u3231:
  9398  19BD  29C0               	goto	l126
  9399  19BE                     u3230:
  9400  19BE                     l2535:
  9401  19BE  1508               	bsf	8,2	;volatile
  9402  19BF  29C1               	goto	l127
  9403  19C0                     l126:
  9404  19C0  1108               	bcf	8,2	;volatile
  9405  19C1                     l127:
  9406                           
  9407                           ;LCD.c: 13:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  9408  19C1  1DF0               	btfss	Puerto@x,3
  9409  19C2  29C4               	goto	u3241
  9410  19C3  29C5               	goto	u3240
  9411  19C4                     u3241:
  9412  19C4  29C7               	goto	l128
  9413  19C5                     u3240:
  9414  19C5                     l2537:
  9415  19C5  1588               	bsf	8,3	;volatile
  9416  19C6  29C8               	goto	l129
  9417  19C7                     l128:
  9418  19C7  1188               	bcf	8,3	;volatile
  9419  19C8                     l129:
  9420                           
  9421                           ;LCD.c: 14:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  9422  19C8  1E70               	btfss	Puerto@x,4
  9423  19C9  29CB               	goto	u3251
  9424  19CA  29CC               	goto	u3250
  9425  19CB                     u3251:
  9426  19CB  29CE               	goto	l130
  9427  19CC                     u3250:
  9428  19CC                     l2539:
  9429  19CC  1608               	bsf	8,4	;volatile
  9430  19CD  29CF               	goto	l131
  9431  19CE                     l130:
  9432  19CE  1208               	bcf	8,4	;volatile
  9433  19CF                     l131:
  9434                           
  9435                           ;LCD.c: 15:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  9436  19CF  1EF0               	btfss	Puerto@x,5
  9437  19D0  29D2               	goto	u3261
  9438  19D1  29D3               	goto	u3260
  9439  19D2                     u3261:
  9440  19D2  29D5               	goto	l132
  9441  19D3                     u3260:
  9442  19D3                     l2541:
  9443  19D3  1688               	bsf	8,5	;volatile
  9444  19D4  29D6               	goto	l133
  9445  19D5                     l132:
  9446  19D5  1288               	bcf	8,5	;volatile
  9447  19D6                     l133:
  9448                           
  9449                           ;LCD.c: 16:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  9450  19D6  1F70               	btfss	Puerto@x,6
  9451  19D7  29D9               	goto	u3271
  9452  19D8  29DA               	goto	u3270
  9453  19D9                     u3271:
  9454  19D9  29DC               	goto	l134
  9455  19DA                     u3270:
  9456  19DA                     l2543:
  9457  19DA  1708               	bsf	8,6	;volatile
  9458  19DB  29DD               	goto	l135
  9459  19DC                     l134:
  9460  19DC  1308               	bcf	8,6	;volatile
  9461  19DD                     l135:
  9462                           
  9463                           ;LCD.c: 17:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  9464  19DD  1FF0               	btfss	Puerto@x,7
  9465  19DE  29E0               	goto	u3281
  9466  19DF  29E1               	goto	u3280
  9467  19E0                     u3281:
  9468  19E0  29E3               	goto	l136
  9469  19E1                     u3280:
  9470  19E1                     l2545:
  9471  19E1  1788               	bsf	8,7	;volatile
  9472  19E2  29E4               	goto	l138
  9473  19E3                     l136:
  9474  19E3  1388               	bcf	8,7	;volatile
  9475  19E4                     l138:
  9476  19E4  0008               	return
  9477  19E5                     __end_of_Puerto:
  9478                           
  9479                           	psect	text34
  9480  1C43                     __ptext34:	
  9481 ;; *************** function _ADC_2 *****************
  9482 ;; Defined at:
  9483 ;;		line 129 in file "lab03.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;		None
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  4   22[None  ] float 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9497 ;;      Params:         0       0       0       0       0
  9498 ;;      Locals:         0       0       0       0       0
  9499 ;;      Temps:          0       4       0       0       0
  9500 ;;      Totals:         0       4       0       0       0
  9501 ;;Total ram usage:        4 bytes
  9502 ;; Hardware stack levels used:    1
  9503 ;; Hardware stack levels required when called:    2
  9504 ;; This function calls:
  9505 ;;		_Canal_ADC
  9506 ;;		___fldiv
  9507 ;;		___flmul
  9508 ;;		___xxtofl
  9509 ;; This function is called by:
  9510 ;;		_main
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _ADC_2
  9516  1C43                     _ADC_2:
  9517  1C43                     l3631:	
  9518                           ;incstack = 0
  9519                           ; Regs used in _ADC_2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9520                           
  9521                           
  9522                           ;lab03.c: 130:     Canal_ADC(1);
  9523  1C43  3001               	movlw	1
  9524  1C44  00F0               	movwf	Canal_ADC@x
  9525  1C45  3000               	movlw	0
  9526  1C46  00F1               	movwf	Canal_ADC@x+1
  9527  1C47  160A  158A  25D9  160A  158A  	fcall	_Canal_ADC
  9528  1C4C                     l3633:
  9529                           
  9530                           ;lab03.c: 131:     ADCON0bits.ADCS0 = 1;
  9531  1C4C  1283               	bcf	3,5	;RP0=0, select bank0
  9532  1C4D  1303               	bcf	3,6	;RP1=0, select bank0
  9533  1C4E  171F               	bsf	31,6	;volatile
  9534  1C4F                     l3635:
  9535                           
  9536                           ;lab03.c: 132:     ADCON0bits.ADCS1 = 0;
  9537  1C4F  139F               	bcf	31,7	;volatile
  9538  1C50                     l3637:
  9539                           
  9540                           ;lab03.c: 133:     ADCON0bits.ADON = 1;
  9541  1C50  141F               	bsf	31,0	;volatile
  9542  1C51                     l3639:
  9543                           
  9544                           ;lab03.c: 134:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  9545  1C51  30A5               	movlw	165
  9546  1C52  1283               	bcf	3,5	;RP0=0, select bank0
  9547  1C53  1303               	bcf	3,6	;RP1=0, select bank0
  9548  1C54  00D8               	movwf	??_ADC_2
  9549  1C55                     u6507:
  9550  1C55  0BD8               	decfsz	??_ADC_2,f
  9551  1C56  2C55               	goto	u6507
  9552  1C57  2C58               	nop2
  9553  1C58                     l3641:
  9554                           
  9555                           ;lab03.c: 135:     ADCON0bits.GO = 1;
  9556  1C58  1283               	bcf	3,5	;RP0=0, select bank0
  9557  1C59  1303               	bcf	3,6	;RP1=0, select bank0
  9558  1C5A  149F               	bsf	31,1	;volatile
  9559                           
  9560                           ;lab03.c: 136:     while (ADCON0bits.GO == 1){
  9561  1C5B  2CB5               	goto	l3645
  9562  1C5C                     l3643:
  9563                           
  9564                           ;lab03.c: 137:         volt2 = ((ADRESH * 5.0)/255);
  9565  1C5C  3043               	movlw	67
  9566  1C5D  00C1               	movwf	___fldiv@a+3
  9567  1C5E  307F               	movlw	127
  9568  1C5F  00C0               	movwf	___fldiv@a+2
  9569  1C60  3000               	movlw	0
  9570  1C61  00BF               	movwf	___fldiv@a+1
  9571  1C62  3000               	movlw	0
  9572  1C63  00BE               	movwf	___fldiv@a
  9573  1C64  3040               	movlw	64
  9574  1C65  00A7               	movwf	___flmul@b+3
  9575  1C66  30A0               	movlw	160
  9576  1C67  00A6               	movwf	___flmul@b+2
  9577  1C68  3000               	movlw	0
  9578  1C69  00A5               	movwf	___flmul@b+1
  9579  1C6A  3000               	movlw	0
  9580  1C6B  00A4               	movwf	___flmul@b
  9581  1C6C  081E               	movf	30,w	;volatile
  9582  1C6D  00D8               	movwf	??_ADC_2
  9583  1C6E  01D9               	clrf	??_ADC_2+1
  9584  1C6F  01DA               	clrf	??_ADC_2+2
  9585  1C70  01DB               	clrf	??_ADC_2+3
  9586  1C71  085B               	movf	??_ADC_2+3,w
  9587  1C72  00F3               	movwf	___xxtofl@val+3
  9588  1C73  085A               	movf	??_ADC_2+2,w
  9589  1C74  00F2               	movwf	___xxtofl@val+2
  9590  1C75  0859               	movf	??_ADC_2+1,w
  9591  1C76  00F1               	movwf	___xxtofl@val+1
  9592  1C77  0858               	movf	??_ADC_2,w
  9593  1C78  00F0               	movwf	___xxtofl@val
  9594  1C79  3001               	movlw	1
  9595  1C7A  160A  158A  2689  160A  158A  	fcall	___xxtofl
  9596  1C7F  0873               	movf	?___xxtofl+3,w
  9597  1C80  1283               	bcf	3,5	;RP0=0, select bank0
  9598  1C81  1303               	bcf	3,6	;RP1=0, select bank0
  9599  1C82  00AB               	movwf	___flmul@a+3
  9600  1C83  0872               	movf	?___xxtofl+2,w
  9601  1C84  00AA               	movwf	___flmul@a+2
  9602  1C85  0871               	movf	?___xxtofl+1,w
  9603  1C86  00A9               	movwf	___flmul@a+1
  9604  1C87  0870               	movf	?___xxtofl,w
  9605  1C88  00A8               	movwf	___flmul@a
  9606  1C89  120A  158A  249F  160A  158A  	fcall	___flmul
  9607  1C8E  1283               	bcf	3,5	;RP0=0, select bank0
  9608  1C8F  1303               	bcf	3,6	;RP1=0, select bank0
  9609  1C90  0827               	movf	?___flmul+3,w
  9610  1C91  00C5               	movwf	___fldiv@b+3
  9611  1C92  0826               	movf	?___flmul+2,w
  9612  1C93  00C4               	movwf	___fldiv@b+2
  9613  1C94  0825               	movf	?___flmul+1,w
  9614  1C95  00C3               	movwf	___fldiv@b+1
  9615  1C96  0824               	movf	?___flmul,w
  9616  1C97  00C2               	movwf	___fldiv@b
  9617  1C98  160A  118A  2190  160A  158A  	fcall	___fldiv
  9618  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  9619  1C9E  1303               	bcf	3,6	;RP1=0, select bank0
  9620  1C9F  0841               	movf	?___fldiv+3,w
  9621  1CA0  1683               	bsf	3,5	;RP0=1, select bank1
  9622  1CA1  1303               	bcf	3,6	;RP1=0, select bank1
  9623  1CA2  00CF               	movwf	(_volt2+3)^(0+128)
  9624  1CA3  1283               	bcf	3,5	;RP0=0, select bank0
  9625  1CA4  1303               	bcf	3,6	;RP1=0, select bank0
  9626  1CA5  0840               	movf	?___fldiv+2,w
  9627  1CA6  1683               	bsf	3,5	;RP0=1, select bank1
  9628  1CA7  1303               	bcf	3,6	;RP1=0, select bank1
  9629  1CA8  00CE               	movwf	(_volt2+2)^(0+128)
  9630  1CA9  1283               	bcf	3,5	;RP0=0, select bank0
  9631  1CAA  1303               	bcf	3,6	;RP1=0, select bank0
  9632  1CAB  083F               	movf	?___fldiv+1,w
  9633  1CAC  1683               	bsf	3,5	;RP0=1, select bank1
  9634  1CAD  1303               	bcf	3,6	;RP1=0, select bank1
  9635  1CAE  00CD               	movwf	(_volt2+1)^(0+128)
  9636  1CAF  1283               	bcf	3,5	;RP0=0, select bank0
  9637  1CB0  1303               	bcf	3,6	;RP1=0, select bank0
  9638  1CB1  083E               	movf	?___fldiv,w
  9639  1CB2  1683               	bsf	3,5	;RP0=1, select bank1
  9640  1CB3  1303               	bcf	3,6	;RP1=0, select bank1
  9641  1CB4  00CC               	movwf	_volt2^(0+128)
  9642  1CB5                     l3645:
  9643                           
  9644                           ;lab03.c: 136:     while (ADCON0bits.GO == 1){
  9645  1CB5  1283               	bcf	3,5	;RP0=0, select bank0
  9646  1CB6  189F               	btfsc	31,1	;volatile
  9647  1CB7  2CB9               	goto	u5851
  9648  1CB8  2CBA               	goto	u5850
  9649  1CB9                     u5851:
  9650  1CB9  2C5C               	goto	l3643
  9651  1CBA                     u5850:
  9652  1CBA                     l85:
  9653  1CBA  0008               	return
  9654  1CBB                     __end_of_ADC_2:
  9655                           
  9656                           	psect	text35
  9657  1BCC                     __ptext35:	
  9658 ;; *************** function _ADC_1 *****************
  9659 ;; Defined at:
  9660 ;;		line 118 in file "lab03.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;		None
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;		None
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  4   20[None  ] float 
  9667 ;; Registers used:
  9668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9674 ;;      Params:         0       0       0       0       0
  9675 ;;      Locals:         0       0       0       0       0
  9676 ;;      Temps:          0       4       0       0       0
  9677 ;;      Totals:         0       4       0       0       0
  9678 ;;Total ram usage:        4 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:    2
  9681 ;; This function calls:
  9682 ;;		_Canal_ADC
  9683 ;;		___fldiv
  9684 ;;		___flmul
  9685 ;;		___xxtofl
  9686 ;; This function is called by:
  9687 ;;		_main
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           
  9692                           ;psect for function _ADC_1
  9693  1BCC                     _ADC_1:
  9694  1BCC                     l3615:	
  9695                           ;incstack = 0
  9696                           ; Regs used in _ADC_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9697                           
  9698                           
  9699                           ;lab03.c: 119:     Canal_ADC(0);
  9700  1BCC  3000               	movlw	0
  9701  1BCD  00F0               	movwf	Canal_ADC@x
  9702  1BCE  00F1               	movwf	Canal_ADC@x+1
  9703  1BCF  160A  158A  25D9  160A  158A  	fcall	_Canal_ADC
  9704  1BD4                     l3617:
  9705                           
  9706                           ;lab03.c: 120:     ADCON0bits.ADCS0 = 1;
  9707  1BD4  1283               	bcf	3,5	;RP0=0, select bank0
  9708  1BD5  1303               	bcf	3,6	;RP1=0, select bank0
  9709  1BD6  171F               	bsf	31,6	;volatile
  9710  1BD7                     l3619:
  9711                           
  9712                           ;lab03.c: 121:     ADCON0bits.ADCS1 = 0;
  9713  1BD7  139F               	bcf	31,7	;volatile
  9714  1BD8                     l3621:
  9715                           
  9716                           ;lab03.c: 122:     ADCON0bits.ADON = 1;
  9717  1BD8  141F               	bsf	31,0	;volatile
  9718  1BD9                     l3623:
  9719                           
  9720                           ;lab03.c: 123:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  9721  1BD9  30A5               	movlw	165
  9722  1BDA  1283               	bcf	3,5	;RP0=0, select bank0
  9723  1BDB  1303               	bcf	3,6	;RP1=0, select bank0
  9724  1BDC  00D8               	movwf	??_ADC_1
  9725  1BDD                     u6517:
  9726  1BDD  0BD8               	decfsz	??_ADC_1,f
  9727  1BDE  2BDD               	goto	u6517
  9728  1BDF  2BE0               	nop2
  9729  1BE0                     l3625:
  9730                           
  9731                           ;lab03.c: 124:     ADCON0bits.GO = 1;
  9732  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  9733  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  9734  1BE2  149F               	bsf	31,1	;volatile
  9735                           
  9736                           ;lab03.c: 125:     while (ADCON0bits.GO == 1){
  9737  1BE3  2C3D               	goto	l3629
  9738  1BE4                     l3627:
  9739                           
  9740                           ;lab03.c: 126:         volt = ((ADRESH * 5.0)/255);
  9741  1BE4  3043               	movlw	67
  9742  1BE5  00C1               	movwf	___fldiv@a+3
  9743  1BE6  307F               	movlw	127
  9744  1BE7  00C0               	movwf	___fldiv@a+2
  9745  1BE8  3000               	movlw	0
  9746  1BE9  00BF               	movwf	___fldiv@a+1
  9747  1BEA  3000               	movlw	0
  9748  1BEB  00BE               	movwf	___fldiv@a
  9749  1BEC  3040               	movlw	64
  9750  1BED  00A7               	movwf	___flmul@b+3
  9751  1BEE  30A0               	movlw	160
  9752  1BEF  00A6               	movwf	___flmul@b+2
  9753  1BF0  3000               	movlw	0
  9754  1BF1  00A5               	movwf	___flmul@b+1
  9755  1BF2  3000               	movlw	0
  9756  1BF3  00A4               	movwf	___flmul@b
  9757  1BF4  081E               	movf	30,w	;volatile
  9758  1BF5  00D8               	movwf	??_ADC_1
  9759  1BF6  01D9               	clrf	??_ADC_1+1
  9760  1BF7  01DA               	clrf	??_ADC_1+2
  9761  1BF8  01DB               	clrf	??_ADC_1+3
  9762  1BF9  085B               	movf	??_ADC_1+3,w
  9763  1BFA  00F3               	movwf	___xxtofl@val+3
  9764  1BFB  085A               	movf	??_ADC_1+2,w
  9765  1BFC  00F2               	movwf	___xxtofl@val+2
  9766  1BFD  0859               	movf	??_ADC_1+1,w
  9767  1BFE  00F1               	movwf	___xxtofl@val+1
  9768  1BFF  0858               	movf	??_ADC_1,w
  9769  1C00  00F0               	movwf	___xxtofl@val
  9770  1C01  3001               	movlw	1
  9771  1C02  160A  158A  2689  160A  158A  	fcall	___xxtofl
  9772  1C07  0873               	movf	?___xxtofl+3,w
  9773  1C08  1283               	bcf	3,5	;RP0=0, select bank0
  9774  1C09  1303               	bcf	3,6	;RP1=0, select bank0
  9775  1C0A  00AB               	movwf	___flmul@a+3
  9776  1C0B  0872               	movf	?___xxtofl+2,w
  9777  1C0C  00AA               	movwf	___flmul@a+2
  9778  1C0D  0871               	movf	?___xxtofl+1,w
  9779  1C0E  00A9               	movwf	___flmul@a+1
  9780  1C0F  0870               	movf	?___xxtofl,w
  9781  1C10  00A8               	movwf	___flmul@a
  9782  1C11  120A  158A  249F  160A  158A  	fcall	___flmul
  9783  1C16  1283               	bcf	3,5	;RP0=0, select bank0
  9784  1C17  1303               	bcf	3,6	;RP1=0, select bank0
  9785  1C18  0827               	movf	?___flmul+3,w
  9786  1C19  00C5               	movwf	___fldiv@b+3
  9787  1C1A  0826               	movf	?___flmul+2,w
  9788  1C1B  00C4               	movwf	___fldiv@b+2
  9789  1C1C  0825               	movf	?___flmul+1,w
  9790  1C1D  00C3               	movwf	___fldiv@b+1
  9791  1C1E  0824               	movf	?___flmul,w
  9792  1C1F  00C2               	movwf	___fldiv@b
  9793  1C20  160A  118A  2190  160A  158A  	fcall	___fldiv
  9794  1C25  1283               	bcf	3,5	;RP0=0, select bank0
  9795  1C26  1303               	bcf	3,6	;RP1=0, select bank0
  9796  1C27  0841               	movf	?___fldiv+3,w
  9797  1C28  1683               	bsf	3,5	;RP0=1, select bank1
  9798  1C29  1303               	bcf	3,6	;RP1=0, select bank1
  9799  1C2A  00D3               	movwf	(_volt+3)^(0+128)
  9800  1C2B  1283               	bcf	3,5	;RP0=0, select bank0
  9801  1C2C  1303               	bcf	3,6	;RP1=0, select bank0
  9802  1C2D  0840               	movf	?___fldiv+2,w
  9803  1C2E  1683               	bsf	3,5	;RP0=1, select bank1
  9804  1C2F  1303               	bcf	3,6	;RP1=0, select bank1
  9805  1C30  00D2               	movwf	(_volt+2)^(0+128)
  9806  1C31  1283               	bcf	3,5	;RP0=0, select bank0
  9807  1C32  1303               	bcf	3,6	;RP1=0, select bank0
  9808  1C33  083F               	movf	?___fldiv+1,w
  9809  1C34  1683               	bsf	3,5	;RP0=1, select bank1
  9810  1C35  1303               	bcf	3,6	;RP1=0, select bank1
  9811  1C36  00D1               	movwf	(_volt+1)^(0+128)
  9812  1C37  1283               	bcf	3,5	;RP0=0, select bank0
  9813  1C38  1303               	bcf	3,6	;RP1=0, select bank0
  9814  1C39  083E               	movf	?___fldiv,w
  9815  1C3A  1683               	bsf	3,5	;RP0=1, select bank1
  9816  1C3B  1303               	bcf	3,6	;RP1=0, select bank1
  9817  1C3C  00D0               	movwf	_volt^(0+128)
  9818  1C3D                     l3629:
  9819                           
  9820                           ;lab03.c: 125:     while (ADCON0bits.GO == 1){
  9821  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
  9822  1C3E  189F               	btfsc	31,1	;volatile
  9823  1C3F  2C41               	goto	u5841
  9824  1C40  2C42               	goto	u5840
  9825  1C41                     u5841:
  9826  1C41  2BE4               	goto	l3627
  9827  1C42                     u5840:
  9828  1C42                     l79:
  9829  1C42  0008               	return
  9830  1C43                     __end_of_ADC_1:
  9831                           
  9832                           	psect	text36
  9833  1E89                     __ptext36:	
  9834 ;; *************** function ___xxtofl *****************
  9835 ;; Defined at:
  9836 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  sign            1    wreg     unsigned char 
  9839 ;;  val             4    0[COMMON] long 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;  sign            1    8[COMMON] unsigned char 
  9842 ;;  arg             4   10[COMMON] unsigned long 
  9843 ;;  exp             1    9[COMMON] unsigned char 
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  4    0[COMMON] unsigned char 
  9846 ;; Registers used:
  9847 ;;		wreg, status,2, status,0
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9853 ;;      Params:         4       0       0       0       0
  9854 ;;      Locals:         6       0       0       0       0
  9855 ;;      Temps:          4       0       0       0       0
  9856 ;;      Totals:        14       0       0       0       0
  9857 ;;Total ram usage:       14 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; This function calls:
  9860 ;;		Nothing
  9861 ;; This function is called by:
  9862 ;;		_ADC_1
  9863 ;;		_ADC_2
  9864 ;;		_sprintf
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           
  9869                           ;psect for function ___xxtofl
  9870  1E89                     ___xxtofl:
  9871                           
  9872                           ;incstack = 0
  9873                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9874                           ;___xxtofl@sign stored from wreg
  9875  1E89  00F8               	movwf	___xxtofl@sign
  9876  1E8A                     l3509:
  9877  1E8A  0878               	movf	___xxtofl@sign,w
  9878  1E8B  1903               	btfsc	3,2
  9879  1E8C  2E8E               	goto	u5651
  9880  1E8D  2E8F               	goto	u5650
  9881  1E8E                     u5651:
  9882  1E8E  2EA3               	goto	l3515
  9883  1E8F                     u5650:
  9884  1E8F                     l3511:
  9885  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  9886  1E90  2E92               	goto	u5661
  9887  1E91  2E93               	goto	u5660
  9888  1E92                     u5661:
  9889  1E92  2EA3               	goto	l3515
  9890  1E93                     u5660:
  9891  1E93                     l3513:
  9892  1E93  0970               	comf	___xxtofl@val,w
  9893  1E94  00FA               	movwf	___xxtofl@arg
  9894  1E95  0971               	comf	___xxtofl@val+1,w
  9895  1E96  00FB               	movwf	___xxtofl@arg+1
  9896  1E97  0972               	comf	___xxtofl@val+2,w
  9897  1E98  00FC               	movwf	___xxtofl@arg+2
  9898  1E99  0973               	comf	___xxtofl@val+3,w
  9899  1E9A  00FD               	movwf	___xxtofl@arg+3
  9900  1E9B  0AFA               	incf	___xxtofl@arg,f
  9901  1E9C  1903               	skipnz
  9902  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  9903  1E9E  1903               	skipnz
  9904  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  9905  1EA0  1903               	skipnz
  9906  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  9907  1EA2  2EAB               	goto	l895
  9908  1EA3                     l3515:
  9909  1EA3  0873               	movf	___xxtofl@val+3,w
  9910  1EA4  00FD               	movwf	___xxtofl@arg+3
  9911  1EA5  0872               	movf	___xxtofl@val+2,w
  9912  1EA6  00FC               	movwf	___xxtofl@arg+2
  9913  1EA7  0871               	movf	___xxtofl@val+1,w
  9914  1EA8  00FB               	movwf	___xxtofl@arg+1
  9915  1EA9  0870               	movf	___xxtofl@val,w
  9916  1EAA  00FA               	movwf	___xxtofl@arg
  9917  1EAB                     l895:
  9918  1EAB  0873               	movf	___xxtofl@val+3,w
  9919  1EAC  0472               	iorwf	___xxtofl@val+2,w
  9920  1EAD  0471               	iorwf	___xxtofl@val+1,w
  9921  1EAE  0470               	iorwf	___xxtofl@val,w
  9922  1EAF  1D03               	skipz
  9923  1EB0  2EB2               	goto	u5671
  9924  1EB1  2EB3               	goto	u5670
  9925  1EB2                     u5671:
  9926  1EB2  2EBC               	goto	l3521
  9927  1EB3                     u5670:
  9928  1EB3                     l3517:
  9929  1EB3  3000               	movlw	0
  9930  1EB4  00F3               	movwf	?___xxtofl+3
  9931  1EB5  3000               	movlw	0
  9932  1EB6  00F2               	movwf	?___xxtofl+2
  9933  1EB7  3000               	movlw	0
  9934  1EB8  00F1               	movwf	?___xxtofl+1
  9935  1EB9  3000               	movlw	0
  9936  1EBA  00F0               	movwf	?___xxtofl
  9937  1EBB  2F42               	goto	l897
  9938  1EBC                     l3521:
  9939  1EBC  3096               	movlw	150
  9940  1EBD  00F4               	movwf	??___xxtofl
  9941  1EBE  0874               	movf	??___xxtofl,w
  9942  1EBF  00F9               	movwf	___xxtofl@exp
  9943  1EC0  2ECE               	goto	l3525
  9944  1EC1                     l3523:
  9945  1EC1  3001               	movlw	1
  9946  1EC2  00F4               	movwf	??___xxtofl
  9947  1EC3  0874               	movf	??___xxtofl,w
  9948  1EC4  07F9               	addwf	___xxtofl@exp,f
  9949  1EC5  3001               	movlw	1
  9950  1EC6                     u5685:
  9951  1EC6  1003               	clrc
  9952  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  9953  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  9954  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  9955  1ECA  0CFA               	rrf	___xxtofl@arg,f
  9956  1ECB  3EFF               	addlw	-1
  9957  1ECC  1D03               	skipz
  9958  1ECD  2EC6               	goto	u5685
  9959  1ECE                     l3525:
  9960  1ECE  30FE               	movlw	254
  9961  1ECF  057D               	andwf	___xxtofl@arg+3,w
  9962  1ED0  1D03               	btfss	3,2
  9963  1ED1  2ED3               	goto	u5691
  9964  1ED2  2ED4               	goto	u5690
  9965  1ED3                     u5691:
  9966  1ED3  2EC1               	goto	l3523
  9967  1ED4                     u5690:
  9968  1ED4  2EF0               	goto	l901
  9969  1ED5                     l3527:
  9970  1ED5  3001               	movlw	1
  9971  1ED6  00F4               	movwf	??___xxtofl
  9972  1ED7  0874               	movf	??___xxtofl,w
  9973  1ED8  07F9               	addwf	___xxtofl@exp,f
  9974  1ED9                     l3529:
  9975  1ED9  3001               	movlw	1
  9976  1EDA  07FA               	addwf	___xxtofl@arg,f
  9977  1EDB  3000               	movlw	0
  9978  1EDC  1803               	skipnc
  9979  1EDD  3001               	movlw	1
  9980  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  9981  1EDF  3000               	movlw	0
  9982  1EE0  1803               	skipnc
  9983  1EE1  3001               	movlw	1
  9984  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  9985  1EE3  3000               	movlw	0
  9986  1EE4  1803               	skipnc
  9987  1EE5  3001               	movlw	1
  9988  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  9989  1EE7                     l3531:
  9990  1EE7  3001               	movlw	1
  9991  1EE8                     u5705:
  9992  1EE8  1003               	clrc
  9993  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  9994  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  9995  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  9996  1EEC  0CFA               	rrf	___xxtofl@arg,f
  9997  1EED  3EFF               	addlw	-1
  9998  1EEE  1D03               	skipz
  9999  1EEF  2EE8               	goto	u5705
 10000  1EF0                     l901:
 10001  1EF0  30FF               	movlw	255
 10002  1EF1  057D               	andwf	___xxtofl@arg+3,w
 10003  1EF2  1D03               	btfss	3,2
 10004  1EF3  2EF5               	goto	u5711
 10005  1EF4  2EF6               	goto	u5710
 10006  1EF5                     u5711:
 10007  1EF5  2ED5               	goto	l3527
 10008  1EF6                     u5710:
 10009  1EF6  2F02               	goto	l3535
 10010  1EF7                     l3533:
 10011  1EF7  3001               	movlw	1
 10012  1EF8  02F9               	subwf	___xxtofl@exp,f
 10013  1EF9  3001               	movlw	1
 10014  1EFA  00F4               	movwf	??___xxtofl
 10015  1EFB                     u5725:
 10016  1EFB  1003               	clrc
 10017  1EFC  0DFA               	rlf	___xxtofl@arg,f
 10018  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
 10019  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
 10020  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
 10021  1F00  0BF4               	decfsz	??___xxtofl,f
 10022  1F01  2EFB               	goto	u5725
 10023  1F02                     l3535:
 10024  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
 10025  1F03  2F05               	goto	u5731
 10026  1F04  2F06               	goto	u5730
 10027  1F05                     u5731:
 10028  1F05  2F0C               	goto	l908
 10029  1F06                     u5730:
 10030  1F06                     l3537:
 10031  1F06  3002               	movlw	2
 10032  1F07  0279               	subwf	___xxtofl@exp,w
 10033  1F08  1803               	skipnc
 10034  1F09  2F0B               	goto	u5741
 10035  1F0A  2F0C               	goto	u5740
 10036  1F0B                     u5741:
 10037  1F0B  2EF7               	goto	l3533
 10038  1F0C                     u5740:
 10039  1F0C                     l908:
 10040  1F0C  1879               	btfsc	___xxtofl@exp,0
 10041  1F0D  2F0F               	goto	u5751
 10042  1F0E  2F10               	goto	u5750
 10043  1F0F                     u5751:
 10044  1F0F  2F18               	goto	l909
 10045  1F10                     u5750:
 10046  1F10                     l3539:
 10047  1F10  30FF               	movlw	255
 10048  1F11  05FA               	andwf	___xxtofl@arg,f
 10049  1F12  30FF               	movlw	255
 10050  1F13  05FB               	andwf	___xxtofl@arg+1,f
 10051  1F14  307F               	movlw	127
 10052  1F15  05FC               	andwf	___xxtofl@arg+2,f
 10053  1F16  30FF               	movlw	255
 10054  1F17  05FD               	andwf	___xxtofl@arg+3,f
 10055  1F18                     l909:
 10056  1F18  1003               	clrc
 10057  1F19  0CF9               	rrf	___xxtofl@exp,f
 10058  1F1A                     l3541:
 10059  1F1A  0879               	movf	___xxtofl@exp,w
 10060  1F1B  00F4               	movwf	??___xxtofl
 10061  1F1C  01F5               	clrf	??___xxtofl+1
 10062  1F1D  01F6               	clrf	??___xxtofl+2
 10063  1F1E  01F7               	clrf	??___xxtofl+3
 10064  1F1F  3018               	movlw	24
 10065  1F20                     u5765:
 10066  1F20  1003               	clrc
 10067  1F21  0DF4               	rlf	??___xxtofl,f
 10068  1F22  0DF5               	rlf	??___xxtofl+1,f
 10069  1F23  0DF6               	rlf	??___xxtofl+2,f
 10070  1F24  0DF7               	rlf	??___xxtofl+3,f
 10071  1F25                     u5760:
 10072  1F25  3EFF               	addlw	-1
 10073  1F26  1D03               	skipz
 10074  1F27  2F20               	goto	u5765
 10075  1F28  0874               	movf	??___xxtofl,w
 10076  1F29  04FA               	iorwf	___xxtofl@arg,f
 10077  1F2A  0875               	movf	??___xxtofl+1,w
 10078  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
 10079  1F2C  0876               	movf	??___xxtofl+2,w
 10080  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
 10081  1F2E  0877               	movf	??___xxtofl+3,w
 10082  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
 10083  1F30                     l3543:
 10084  1F30  0878               	movf	___xxtofl@sign,w
 10085  1F31  1903               	btfsc	3,2
 10086  1F32  2F34               	goto	u5771
 10087  1F33  2F35               	goto	u5770
 10088  1F34                     u5771:
 10089  1F34  2F3A               	goto	l3549
 10090  1F35                     u5770:
 10091  1F35                     l3545:
 10092  1F35  1FF3               	btfss	___xxtofl@val+3,7
 10093  1F36  2F38               	goto	u5781
 10094  1F37  2F39               	goto	u5780
 10095  1F38                     u5781:
 10096  1F38  2F3A               	goto	l3549
 10097  1F39                     u5780:
 10098  1F39                     l3547:
 10099  1F39  17FD               	bsf	___xxtofl@arg+3,7
 10100  1F3A                     l3549:
 10101  1F3A  087D               	movf	___xxtofl@arg+3,w
 10102  1F3B  00F3               	movwf	?___xxtofl+3
 10103  1F3C  087C               	movf	___xxtofl@arg+2,w
 10104  1F3D  00F2               	movwf	?___xxtofl+2
 10105  1F3E  087B               	movf	___xxtofl@arg+1,w
 10106  1F3F  00F1               	movwf	?___xxtofl+1
 10107  1F40  087A               	movf	___xxtofl@arg,w
 10108  1F41  00F0               	movwf	?___xxtofl
 10109  1F42                     l897:
 10110  1F42  0008               	return
 10111  1F43                     __end_of___xxtofl:
 10112                           
 10113                           	psect	text37
 10114  0C9F                     __ptext37:	
 10115 ;; *************** function ___flmul *****************
 10116 ;; Defined at:
 10117 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;  b               4    4[BANK0 ] unsigned char 
 10120 ;;  a               4    8[BANK0 ] unsigned char 
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  prod            4   24[BANK0 ] struct .
 10123 ;;  grs             4   18[BANK0 ] unsigned long 
 10124 ;;  temp            2   28[BANK0 ] struct .
 10125 ;;  bexp            1   23[BANK0 ] unsigned char 
 10126 ;;  aexp            1   22[BANK0 ] unsigned char 
 10127 ;;  sign            1   17[BANK0 ] unsigned char 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  4    4[BANK0 ] unsigned char 
 10130 ;; Registers used:
 10131 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10137 ;;      Params:         0       8       0       0       0
 10138 ;;      Locals:         0      13       0       0       0
 10139 ;;      Temps:          0       5       0       0       0
 10140 ;;      Totals:         0      26       0       0       0
 10141 ;;Total ram usage:       26 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    1
 10144 ;; This function calls:
 10145 ;;		__Umul8_16
 10146 ;; This function is called by:
 10147 ;;		_ADC_1
 10148 ;;		_ADC_2
 10149 ;;		_fround
 10150 ;;		_scale
 10151 ;;		_sprintf
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function ___flmul
 10157  0C9F                     ___flmul:
 10158  0C9F                     l2871:	
 10159                           ;incstack = 0
 10160                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10161                           
 10162  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
 10163  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
 10164  0CA1  0827               	movf	___flmul@b+3,w
 10165  0CA2  3980               	andlw	128
 10166  0CA3  00AC               	movwf	??___flmul
 10167  0CA4  082C               	movf	??___flmul,w
 10168  0CA5  00B1               	movwf	___flmul@sign
 10169  0CA6                     l2873:
 10170  0CA6  0827               	movf	___flmul@b+3,w
 10171  0CA7  00AC               	movwf	??___flmul
 10172  0CA8  072C               	addwf	??___flmul,w
 10173  0CA9  00AD               	movwf	??___flmul+1
 10174  0CAA  082D               	movf	??___flmul+1,w
 10175  0CAB  00B7               	movwf	___flmul@bexp
 10176  0CAC                     l2875:
 10177  0CAC  1FA6               	btfss	___flmul@b+2,7
 10178  0CAD  2CAF               	goto	u4071
 10179  0CAE  2CB0               	goto	u4070
 10180  0CAF                     u4071:
 10181  0CAF  2CB1               	goto	l2879
 10182  0CB0                     u4070:
 10183  0CB0                     l2877:
 10184  0CB0  1437               	bsf	___flmul@bexp,0
 10185  0CB1                     l2879:
 10186  0CB1  0837               	movf	___flmul@bexp,w
 10187  0CB2  1903               	btfsc	3,2
 10188  0CB3  2CB5               	goto	u4081
 10189  0CB4  2CB6               	goto	u4080
 10190  0CB5                     u4081:
 10191  0CB5  2CC5               	goto	l2887
 10192  0CB6                     u4080:
 10193  0CB6                     l2881:
 10194  0CB6  0A37               	incf	___flmul@bexp,w
 10195  0CB7  1D03               	btfss	3,2
 10196  0CB8  2CBA               	goto	u4091
 10197  0CB9  2CBB               	goto	u4090
 10198  0CBA                     u4091:
 10199  0CBA  2CC3               	goto	l2885
 10200  0CBB                     u4090:
 10201  0CBB                     l2883:
 10202  0CBB  3000               	movlw	0
 10203  0CBC  00A7               	movwf	___flmul@b+3
 10204  0CBD  3000               	movlw	0
 10205  0CBE  00A6               	movwf	___flmul@b+2
 10206  0CBF  3000               	movlw	0
 10207  0CC0  00A5               	movwf	___flmul@b+1
 10208  0CC1  3000               	movlw	0
 10209  0CC2  00A4               	movwf	___flmul@b
 10210  0CC3                     l2885:
 10211  0CC3  17A6               	bsf	___flmul@b+2,7
 10212  0CC4  2CCD               	goto	l2889
 10213  0CC5                     l2887:
 10214  0CC5  3000               	movlw	0
 10215  0CC6  00A7               	movwf	___flmul@b+3
 10216  0CC7  3000               	movlw	0
 10217  0CC8  00A6               	movwf	___flmul@b+2
 10218  0CC9  3000               	movlw	0
 10219  0CCA  00A5               	movwf	___flmul@b+1
 10220  0CCB  3000               	movlw	0
 10221  0CCC  00A4               	movwf	___flmul@b
 10222  0CCD                     l2889:
 10223  0CCD  082B               	movf	___flmul@a+3,w
 10224  0CCE  3980               	andlw	128
 10225  0CCF  00AC               	movwf	??___flmul
 10226  0CD0  082C               	movf	??___flmul,w
 10227  0CD1  06B1               	xorwf	___flmul@sign,f
 10228  0CD2                     l2891:
 10229  0CD2  082B               	movf	___flmul@a+3,w
 10230  0CD3  00AC               	movwf	??___flmul
 10231  0CD4  072C               	addwf	??___flmul,w
 10232  0CD5  00AD               	movwf	??___flmul+1
 10233  0CD6  082D               	movf	??___flmul+1,w
 10234  0CD7  00B6               	movwf	___flmul@aexp
 10235  0CD8                     l2893:
 10236  0CD8  1FAA               	btfss	___flmul@a+2,7
 10237  0CD9  2CDB               	goto	u4101
 10238  0CDA  2CDC               	goto	u4100
 10239  0CDB                     u4101:
 10240  0CDB  2CDD               	goto	l2897
 10241  0CDC                     u4100:
 10242  0CDC                     l2895:
 10243  0CDC  1436               	bsf	___flmul@aexp,0
 10244  0CDD                     l2897:
 10245  0CDD  0836               	movf	___flmul@aexp,w
 10246  0CDE  1903               	btfsc	3,2
 10247  0CDF  2CE1               	goto	u4111
 10248  0CE0  2CE2               	goto	u4110
 10249  0CE1                     u4111:
 10250  0CE1  2CF1               	goto	l2905
 10251  0CE2                     u4110:
 10252  0CE2                     l2899:
 10253  0CE2  0A36               	incf	___flmul@aexp,w
 10254  0CE3  1D03               	btfss	3,2
 10255  0CE4  2CE6               	goto	u4121
 10256  0CE5  2CE7               	goto	u4120
 10257  0CE6                     u4121:
 10258  0CE6  2CEF               	goto	l2903
 10259  0CE7                     u4120:
 10260  0CE7                     l2901:
 10261  0CE7  3000               	movlw	0
 10262  0CE8  00AB               	movwf	___flmul@a+3
 10263  0CE9  3000               	movlw	0
 10264  0CEA  00AA               	movwf	___flmul@a+2
 10265  0CEB  3000               	movlw	0
 10266  0CEC  00A9               	movwf	___flmul@a+1
 10267  0CED  3000               	movlw	0
 10268  0CEE  00A8               	movwf	___flmul@a
 10269  0CEF                     l2903:
 10270  0CEF  17AA               	bsf	___flmul@a+2,7
 10271  0CF0  2CF9               	goto	l2907
 10272  0CF1                     l2905:
 10273  0CF1  3000               	movlw	0
 10274  0CF2  00AB               	movwf	___flmul@a+3
 10275  0CF3  3000               	movlw	0
 10276  0CF4  00AA               	movwf	___flmul@a+2
 10277  0CF5  3000               	movlw	0
 10278  0CF6  00A9               	movwf	___flmul@a+1
 10279  0CF7  3000               	movlw	0
 10280  0CF8  00A8               	movwf	___flmul@a
 10281  0CF9                     l2907:
 10282  0CF9  0836               	movf	___flmul@aexp,w
 10283  0CFA  1903               	btfsc	3,2
 10284  0CFB  2CFD               	goto	u4131
 10285  0CFC  2CFE               	goto	u4130
 10286  0CFD                     u4131:
 10287  0CFD  2D03               	goto	l2911
 10288  0CFE                     u4130:
 10289  0CFE                     l2909:
 10290  0CFE  0837               	movf	___flmul@bexp,w
 10291  0CFF  1D03               	btfss	3,2
 10292  0D00  2D02               	goto	u4141
 10293  0D01  2D03               	goto	u4140
 10294  0D02                     u4141:
 10295  0D02  2D0C               	goto	l2915
 10296  0D03                     u4140:
 10297  0D03                     l2911:
 10298  0D03  3000               	movlw	0
 10299  0D04  00A7               	movwf	?___flmul+3
 10300  0D05  3000               	movlw	0
 10301  0D06  00A6               	movwf	?___flmul+2
 10302  0D07  3000               	movlw	0
 10303  0D08  00A5               	movwf	?___flmul+1
 10304  0D09  3000               	movlw	0
 10305  0D0A  00A4               	movwf	?___flmul
 10306  0D0B  2FFF               	goto	l851
 10307  0D0C                     l2915:
 10308  0D0C  0824               	movf	___flmul@b,w
 10309  0D0D  00AC               	movwf	??___flmul
 10310  0D0E  082C               	movf	??___flmul,w
 10311  0D0F  00F0               	movwf	__Umul8_16@multiplicand
 10312  0D10  082A               	movf	___flmul@a+2,w
 10313  0D11  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10314  0D16  0871               	movf	?__Umul8_16+1,w
 10315  0D17  1283               	bcf	3,5	;RP0=0, select bank0
 10316  0D18  1303               	bcf	3,6	;RP1=0, select bank0
 10317  0D19  00BD               	movwf	___flmul@temp+1
 10318  0D1A  0870               	movf	?__Umul8_16,w
 10319  0D1B  00BC               	movwf	___flmul@temp
 10320  0D1C                     l2917:
 10321  0D1C  083C               	movf	___flmul@temp,w
 10322  0D1D  00AC               	movwf	??___flmul
 10323  0D1E  01AD               	clrf	??___flmul+1
 10324  0D1F  01AE               	clrf	??___flmul+2
 10325  0D20  01AF               	clrf	??___flmul+3
 10326  0D21  082F               	movf	??___flmul+3,w
 10327  0D22  00B5               	movwf	___flmul@grs+3
 10328  0D23  082E               	movf	??___flmul+2,w
 10329  0D24  00B4               	movwf	___flmul@grs+2
 10330  0D25  082D               	movf	??___flmul+1,w
 10331  0D26  00B3               	movwf	___flmul@grs+1
 10332  0D27  082C               	movf	??___flmul,w
 10333  0D28  00B2               	movwf	___flmul@grs
 10334  0D29                     l2919:
 10335  0D29  083D               	movf	___flmul@temp+1,w
 10336  0D2A  00AC               	movwf	??___flmul
 10337  0D2B  01AD               	clrf	??___flmul+1
 10338  0D2C  01AE               	clrf	??___flmul+2
 10339  0D2D  01AF               	clrf	??___flmul+3
 10340  0D2E  082F               	movf	??___flmul+3,w
 10341  0D2F  00BB               	movwf	___flmul@prod+3
 10342  0D30  082E               	movf	??___flmul+2,w
 10343  0D31  00BA               	movwf	___flmul@prod+2
 10344  0D32  082D               	movf	??___flmul+1,w
 10345  0D33  00B9               	movwf	___flmul@prod+1
 10346  0D34  082C               	movf	??___flmul,w
 10347  0D35  00B8               	movwf	___flmul@prod
 10348  0D36  0825               	movf	___flmul@b+1,w
 10349  0D37  00AC               	movwf	??___flmul
 10350  0D38  082C               	movf	??___flmul,w
 10351  0D39  00F0               	movwf	__Umul8_16@multiplicand
 10352  0D3A  0829               	movf	___flmul@a+1,w
 10353  0D3B  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10354  0D40  0871               	movf	?__Umul8_16+1,w
 10355  0D41  1283               	bcf	3,5	;RP0=0, select bank0
 10356  0D42  1303               	bcf	3,6	;RP1=0, select bank0
 10357  0D43  00BD               	movwf	___flmul@temp+1
 10358  0D44  0870               	movf	?__Umul8_16,w
 10359  0D45  00BC               	movwf	___flmul@temp
 10360  0D46                     l2921:
 10361  0D46  083C               	movf	___flmul@temp,w
 10362  0D47  00AC               	movwf	??___flmul
 10363  0D48  01AD               	clrf	??___flmul+1
 10364  0D49  01AE               	clrf	??___flmul+2
 10365  0D4A  01AF               	clrf	??___flmul+3
 10366  0D4B  082C               	movf	??___flmul,w
 10367  0D4C  07B2               	addwf	___flmul@grs,f
 10368  0D4D  082D               	movf	??___flmul+1,w
 10369  0D4E  1103               	clrz
 10370  0D4F  1803               	skipnc
 10371  0D50  3E01               	addlw	1
 10372  0D51  1903               	skipnz
 10373  0D52  2D54               	goto	u4151
 10374  0D53  07B3               	addwf	___flmul@grs+1,f
 10375  0D54                     u4151:
 10376  0D54  082E               	movf	??___flmul+2,w
 10377  0D55  1103               	clrz
 10378  0D56  1803               	skipnc
 10379  0D57  3E01               	addlw	1
 10380  0D58  1903               	skipnz
 10381  0D59  2D5B               	goto	u4152
 10382  0D5A  07B4               	addwf	___flmul@grs+2,f
 10383  0D5B                     u4152:
 10384  0D5B  082F               	movf	??___flmul+3,w
 10385  0D5C  1103               	clrz
 10386  0D5D  1803               	skipnc
 10387  0D5E  3E01               	addlw	1
 10388  0D5F  1903               	skipnz
 10389  0D60  2D62               	goto	u4153
 10390  0D61  07B5               	addwf	___flmul@grs+3,f
 10391  0D62                     u4153:
 10392  0D62                     l2923:
 10393  0D62  083D               	movf	___flmul@temp+1,w
 10394  0D63  00AC               	movwf	??___flmul
 10395  0D64  01AD               	clrf	??___flmul+1
 10396  0D65  01AE               	clrf	??___flmul+2
 10397  0D66  01AF               	clrf	??___flmul+3
 10398  0D67  082C               	movf	??___flmul,w
 10399  0D68  07B8               	addwf	___flmul@prod,f
 10400  0D69  082D               	movf	??___flmul+1,w
 10401  0D6A  1103               	clrz
 10402  0D6B  1803               	skipnc
 10403  0D6C  3E01               	addlw	1
 10404  0D6D  1903               	skipnz
 10405  0D6E  2D70               	goto	u4161
 10406  0D6F  07B9               	addwf	___flmul@prod+1,f
 10407  0D70                     u4161:
 10408  0D70  082E               	movf	??___flmul+2,w
 10409  0D71  1103               	clrz
 10410  0D72  1803               	skipnc
 10411  0D73  3E01               	addlw	1
 10412  0D74  1903               	skipnz
 10413  0D75  2D77               	goto	u4162
 10414  0D76  07BA               	addwf	___flmul@prod+2,f
 10415  0D77                     u4162:
 10416  0D77  082F               	movf	??___flmul+3,w
 10417  0D78  1103               	clrz
 10418  0D79  1803               	skipnc
 10419  0D7A  3E01               	addlw	1
 10420  0D7B  1903               	skipnz
 10421  0D7C  2D7E               	goto	u4163
 10422  0D7D  07BB               	addwf	___flmul@prod+3,f
 10423  0D7E                     u4163:
 10424  0D7E  0826               	movf	___flmul@b+2,w
 10425  0D7F  00AC               	movwf	??___flmul
 10426  0D80  082C               	movf	??___flmul,w
 10427  0D81  00F0               	movwf	__Umul8_16@multiplicand
 10428  0D82  0828               	movf	___flmul@a,w
 10429  0D83  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10430  0D88  0871               	movf	?__Umul8_16+1,w
 10431  0D89  1283               	bcf	3,5	;RP0=0, select bank0
 10432  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10433  0D8B  00BD               	movwf	___flmul@temp+1
 10434  0D8C  0870               	movf	?__Umul8_16,w
 10435  0D8D  00BC               	movwf	___flmul@temp
 10436  0D8E                     l2925:
 10437  0D8E  083C               	movf	___flmul@temp,w
 10438  0D8F  00AC               	movwf	??___flmul
 10439  0D90  01AD               	clrf	??___flmul+1
 10440  0D91  01AE               	clrf	??___flmul+2
 10441  0D92  01AF               	clrf	??___flmul+3
 10442  0D93  082C               	movf	??___flmul,w
 10443  0D94  07B2               	addwf	___flmul@grs,f
 10444  0D95  082D               	movf	??___flmul+1,w
 10445  0D96  1103               	clrz
 10446  0D97  1803               	skipnc
 10447  0D98  3E01               	addlw	1
 10448  0D99  1903               	skipnz
 10449  0D9A  2D9C               	goto	u4171
 10450  0D9B  07B3               	addwf	___flmul@grs+1,f
 10451  0D9C                     u4171:
 10452  0D9C  082E               	movf	??___flmul+2,w
 10453  0D9D  1103               	clrz
 10454  0D9E  1803               	skipnc
 10455  0D9F  3E01               	addlw	1
 10456  0DA0  1903               	skipnz
 10457  0DA1  2DA3               	goto	u4172
 10458  0DA2  07B4               	addwf	___flmul@grs+2,f
 10459  0DA3                     u4172:
 10460  0DA3  082F               	movf	??___flmul+3,w
 10461  0DA4  1103               	clrz
 10462  0DA5  1803               	skipnc
 10463  0DA6  3E01               	addlw	1
 10464  0DA7  1903               	skipnz
 10465  0DA8  2DAA               	goto	u4173
 10466  0DA9  07B5               	addwf	___flmul@grs+3,f
 10467  0DAA                     u4173:
 10468  0DAA                     l2927:
 10469  0DAA  083D               	movf	___flmul@temp+1,w
 10470  0DAB  00AC               	movwf	??___flmul
 10471  0DAC  01AD               	clrf	??___flmul+1
 10472  0DAD  01AE               	clrf	??___flmul+2
 10473  0DAE  01AF               	clrf	??___flmul+3
 10474  0DAF  082C               	movf	??___flmul,w
 10475  0DB0  07B8               	addwf	___flmul@prod,f
 10476  0DB1  082D               	movf	??___flmul+1,w
 10477  0DB2  1103               	clrz
 10478  0DB3  1803               	skipnc
 10479  0DB4  3E01               	addlw	1
 10480  0DB5  1903               	skipnz
 10481  0DB6  2DB8               	goto	u4181
 10482  0DB7  07B9               	addwf	___flmul@prod+1,f
 10483  0DB8                     u4181:
 10484  0DB8  082E               	movf	??___flmul+2,w
 10485  0DB9  1103               	clrz
 10486  0DBA  1803               	skipnc
 10487  0DBB  3E01               	addlw	1
 10488  0DBC  1903               	skipnz
 10489  0DBD  2DBF               	goto	u4182
 10490  0DBE  07BA               	addwf	___flmul@prod+2,f
 10491  0DBF                     u4182:
 10492  0DBF  082F               	movf	??___flmul+3,w
 10493  0DC0  1103               	clrz
 10494  0DC1  1803               	skipnc
 10495  0DC2  3E01               	addlw	1
 10496  0DC3  1903               	skipnz
 10497  0DC4  2DC6               	goto	u4183
 10498  0DC5  07BB               	addwf	___flmul@prod+3,f
 10499  0DC6                     u4183:
 10500  0DC6                     l2929:
 10501  0DC6  3008               	movlw	8
 10502  0DC7  00AC               	movwf	??___flmul
 10503  0DC8                     u4195:
 10504  0DC8  1003               	clrc
 10505  0DC9  0DB2               	rlf	___flmul@grs,f
 10506  0DCA  0DB3               	rlf	___flmul@grs+1,f
 10507  0DCB  0DB4               	rlf	___flmul@grs+2,f
 10508  0DCC  0DB5               	rlf	___flmul@grs+3,f
 10509  0DCD  0BAC               	decfsz	??___flmul,f
 10510  0DCE  2DC8               	goto	u4195
 10511  0DCF                     l2931:
 10512  0DCF  0825               	movf	___flmul@b+1,w
 10513  0DD0  00AC               	movwf	??___flmul
 10514  0DD1  082C               	movf	??___flmul,w
 10515  0DD2  00F0               	movwf	__Umul8_16@multiplicand
 10516  0DD3  0828               	movf	___flmul@a,w
 10517  0DD4  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10518  0DD9  0871               	movf	?__Umul8_16+1,w
 10519  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
 10520  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10521  0DDC  00BD               	movwf	___flmul@temp+1
 10522  0DDD  0870               	movf	?__Umul8_16,w
 10523  0DDE  00BC               	movwf	___flmul@temp
 10524  0DDF                     l2933:
 10525  0DDF  083C               	movf	___flmul@temp,w
 10526  0DE0  00AC               	movwf	??___flmul
 10527  0DE1  083D               	movf	___flmul@temp+1,w
 10528  0DE2  00AD               	movwf	??___flmul+1
 10529  0DE3  01AE               	clrf	??___flmul+2
 10530  0DE4  01AF               	clrf	??___flmul+3
 10531  0DE5  082C               	movf	??___flmul,w
 10532  0DE6  07B2               	addwf	___flmul@grs,f
 10533  0DE7  082D               	movf	??___flmul+1,w
 10534  0DE8  1103               	clrz
 10535  0DE9  1803               	skipnc
 10536  0DEA  3E01               	addlw	1
 10537  0DEB  1903               	skipnz
 10538  0DEC  2DEE               	goto	u4201
 10539  0DED  07B3               	addwf	___flmul@grs+1,f
 10540  0DEE                     u4201:
 10541  0DEE  082E               	movf	??___flmul+2,w
 10542  0DEF  1103               	clrz
 10543  0DF0  1803               	skipnc
 10544  0DF1  3E01               	addlw	1
 10545  0DF2  1903               	skipnz
 10546  0DF3  2DF5               	goto	u4202
 10547  0DF4  07B4               	addwf	___flmul@grs+2,f
 10548  0DF5                     u4202:
 10549  0DF5  082F               	movf	??___flmul+3,w
 10550  0DF6  1103               	clrz
 10551  0DF7  1803               	skipnc
 10552  0DF8  3E01               	addlw	1
 10553  0DF9  1903               	skipnz
 10554  0DFA  2DFC               	goto	u4203
 10555  0DFB  07B5               	addwf	___flmul@grs+3,f
 10556  0DFC                     u4203:
 10557  0DFC                     l2935:
 10558  0DFC  0824               	movf	___flmul@b,w
 10559  0DFD  00AC               	movwf	??___flmul
 10560  0DFE  082C               	movf	??___flmul,w
 10561  0DFF  00F0               	movwf	__Umul8_16@multiplicand
 10562  0E00  0829               	movf	___flmul@a+1,w
 10563  0E01  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10564  0E06  0871               	movf	?__Umul8_16+1,w
 10565  0E07  1283               	bcf	3,5	;RP0=0, select bank0
 10566  0E08  1303               	bcf	3,6	;RP1=0, select bank0
 10567  0E09  00BD               	movwf	___flmul@temp+1
 10568  0E0A  0870               	movf	?__Umul8_16,w
 10569  0E0B  00BC               	movwf	___flmul@temp
 10570  0E0C                     l2937:
 10571  0E0C  083C               	movf	___flmul@temp,w
 10572  0E0D  00AC               	movwf	??___flmul
 10573  0E0E  083D               	movf	___flmul@temp+1,w
 10574  0E0F  00AD               	movwf	??___flmul+1
 10575  0E10  01AE               	clrf	??___flmul+2
 10576  0E11  01AF               	clrf	??___flmul+3
 10577  0E12  082C               	movf	??___flmul,w
 10578  0E13  07B2               	addwf	___flmul@grs,f
 10579  0E14  082D               	movf	??___flmul+1,w
 10580  0E15  1103               	clrz
 10581  0E16  1803               	skipnc
 10582  0E17  3E01               	addlw	1
 10583  0E18  1903               	skipnz
 10584  0E19  2E1B               	goto	u4211
 10585  0E1A  07B3               	addwf	___flmul@grs+1,f
 10586  0E1B                     u4211:
 10587  0E1B  082E               	movf	??___flmul+2,w
 10588  0E1C  1103               	clrz
 10589  0E1D  1803               	skipnc
 10590  0E1E  3E01               	addlw	1
 10591  0E1F  1903               	skipnz
 10592  0E20  2E22               	goto	u4212
 10593  0E21  07B4               	addwf	___flmul@grs+2,f
 10594  0E22                     u4212:
 10595  0E22  082F               	movf	??___flmul+3,w
 10596  0E23  1103               	clrz
 10597  0E24  1803               	skipnc
 10598  0E25  3E01               	addlw	1
 10599  0E26  1903               	skipnz
 10600  0E27  2E29               	goto	u4213
 10601  0E28  07B5               	addwf	___flmul@grs+3,f
 10602  0E29                     u4213:
 10603  0E29                     l2939:
 10604  0E29  3008               	movlw	8
 10605  0E2A  00AC               	movwf	??___flmul
 10606  0E2B                     u4225:
 10607  0E2B  1003               	clrc
 10608  0E2C  0DB2               	rlf	___flmul@grs,f
 10609  0E2D  0DB3               	rlf	___flmul@grs+1,f
 10610  0E2E  0DB4               	rlf	___flmul@grs+2,f
 10611  0E2F  0DB5               	rlf	___flmul@grs+3,f
 10612  0E30  0BAC               	decfsz	??___flmul,f
 10613  0E31  2E2B               	goto	u4225
 10614  0E32  0824               	movf	___flmul@b,w
 10615  0E33  00AC               	movwf	??___flmul
 10616  0E34  082C               	movf	??___flmul,w
 10617  0E35  00F0               	movwf	__Umul8_16@multiplicand
 10618  0E36  0828               	movf	___flmul@a,w
 10619  0E37  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10620  0E3C  0871               	movf	?__Umul8_16+1,w
 10621  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
 10622  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
 10623  0E3F  00BD               	movwf	___flmul@temp+1
 10624  0E40  0870               	movf	?__Umul8_16,w
 10625  0E41  00BC               	movwf	___flmul@temp
 10626  0E42                     l2941:
 10627  0E42  083C               	movf	___flmul@temp,w
 10628  0E43  00AC               	movwf	??___flmul
 10629  0E44  083D               	movf	___flmul@temp+1,w
 10630  0E45  00AD               	movwf	??___flmul+1
 10631  0E46  01AE               	clrf	??___flmul+2
 10632  0E47  01AF               	clrf	??___flmul+3
 10633  0E48  082C               	movf	??___flmul,w
 10634  0E49  07B2               	addwf	___flmul@grs,f
 10635  0E4A  082D               	movf	??___flmul+1,w
 10636  0E4B  1103               	clrz
 10637  0E4C  1803               	skipnc
 10638  0E4D  3E01               	addlw	1
 10639  0E4E  1903               	skipnz
 10640  0E4F  2E51               	goto	u4231
 10641  0E50  07B3               	addwf	___flmul@grs+1,f
 10642  0E51                     u4231:
 10643  0E51  082E               	movf	??___flmul+2,w
 10644  0E52  1103               	clrz
 10645  0E53  1803               	skipnc
 10646  0E54  3E01               	addlw	1
 10647  0E55  1903               	skipnz
 10648  0E56  2E58               	goto	u4232
 10649  0E57  07B4               	addwf	___flmul@grs+2,f
 10650  0E58                     u4232:
 10651  0E58  082F               	movf	??___flmul+3,w
 10652  0E59  1103               	clrz
 10653  0E5A  1803               	skipnc
 10654  0E5B  3E01               	addlw	1
 10655  0E5C  1903               	skipnz
 10656  0E5D  2E5F               	goto	u4233
 10657  0E5E  07B5               	addwf	___flmul@grs+3,f
 10658  0E5F                     u4233:
 10659  0E5F                     l2943:
 10660  0E5F  0825               	movf	___flmul@b+1,w
 10661  0E60  00AC               	movwf	??___flmul
 10662  0E61  082C               	movf	??___flmul,w
 10663  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10664  0E63  082A               	movf	___flmul@a+2,w
 10665  0E64  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10666  0E69  0871               	movf	?__Umul8_16+1,w
 10667  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10668  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10669  0E6C  00BD               	movwf	___flmul@temp+1
 10670  0E6D  0870               	movf	?__Umul8_16,w
 10671  0E6E  00BC               	movwf	___flmul@temp
 10672  0E6F  083C               	movf	___flmul@temp,w
 10673  0E70  00AC               	movwf	??___flmul
 10674  0E71  083D               	movf	___flmul@temp+1,w
 10675  0E72  00AD               	movwf	??___flmul+1
 10676  0E73  01AE               	clrf	??___flmul+2
 10677  0E74  01AF               	clrf	??___flmul+3
 10678  0E75  082C               	movf	??___flmul,w
 10679  0E76  07B8               	addwf	___flmul@prod,f
 10680  0E77  082D               	movf	??___flmul+1,w
 10681  0E78  1103               	clrz
 10682  0E79  1803               	skipnc
 10683  0E7A  3E01               	addlw	1
 10684  0E7B  1903               	skipnz
 10685  0E7C  2E7E               	goto	u4241
 10686  0E7D  07B9               	addwf	___flmul@prod+1,f
 10687  0E7E                     u4241:
 10688  0E7E  082E               	movf	??___flmul+2,w
 10689  0E7F  1103               	clrz
 10690  0E80  1803               	skipnc
 10691  0E81  3E01               	addlw	1
 10692  0E82  1903               	skipnz
 10693  0E83  2E85               	goto	u4242
 10694  0E84  07BA               	addwf	___flmul@prod+2,f
 10695  0E85                     u4242:
 10696  0E85  082F               	movf	??___flmul+3,w
 10697  0E86  1103               	clrz
 10698  0E87  1803               	skipnc
 10699  0E88  3E01               	addlw	1
 10700  0E89  1903               	skipnz
 10701  0E8A  2E8C               	goto	u4243
 10702  0E8B  07BB               	addwf	___flmul@prod+3,f
 10703  0E8C                     u4243:
 10704  0E8C                     l2945:
 10705  0E8C  0826               	movf	___flmul@b+2,w
 10706  0E8D  00AC               	movwf	??___flmul
 10707  0E8E  082C               	movf	??___flmul,w
 10708  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10709  0E90  0829               	movf	___flmul@a+1,w
 10710  0E91  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10711  0E96  0871               	movf	?__Umul8_16+1,w
 10712  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10713  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10714  0E99  00BD               	movwf	___flmul@temp+1
 10715  0E9A  0870               	movf	?__Umul8_16,w
 10716  0E9B  00BC               	movwf	___flmul@temp
 10717  0E9C                     l2947:
 10718  0E9C  083C               	movf	___flmul@temp,w
 10719  0E9D  00AC               	movwf	??___flmul
 10720  0E9E  083D               	movf	___flmul@temp+1,w
 10721  0E9F  00AD               	movwf	??___flmul+1
 10722  0EA0  01AE               	clrf	??___flmul+2
 10723  0EA1  01AF               	clrf	??___flmul+3
 10724  0EA2  082C               	movf	??___flmul,w
 10725  0EA3  07B8               	addwf	___flmul@prod,f
 10726  0EA4  082D               	movf	??___flmul+1,w
 10727  0EA5  1103               	clrz
 10728  0EA6  1803               	skipnc
 10729  0EA7  3E01               	addlw	1
 10730  0EA8  1903               	skipnz
 10731  0EA9  2EAB               	goto	u4251
 10732  0EAA  07B9               	addwf	___flmul@prod+1,f
 10733  0EAB                     u4251:
 10734  0EAB  082E               	movf	??___flmul+2,w
 10735  0EAC  1103               	clrz
 10736  0EAD  1803               	skipnc
 10737  0EAE  3E01               	addlw	1
 10738  0EAF  1903               	skipnz
 10739  0EB0  2EB2               	goto	u4252
 10740  0EB1  07BA               	addwf	___flmul@prod+2,f
 10741  0EB2                     u4252:
 10742  0EB2  082F               	movf	??___flmul+3,w
 10743  0EB3  1103               	clrz
 10744  0EB4  1803               	skipnc
 10745  0EB5  3E01               	addlw	1
 10746  0EB6  1903               	skipnz
 10747  0EB7  2EB9               	goto	u4253
 10748  0EB8  07BB               	addwf	___flmul@prod+3,f
 10749  0EB9                     u4253:
 10750  0EB9  0826               	movf	___flmul@b+2,w
 10751  0EBA  00AC               	movwf	??___flmul
 10752  0EBB  082C               	movf	??___flmul,w
 10753  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10754  0EBD  082A               	movf	___flmul@a+2,w
 10755  0EBE  160A  158A  211B  120A  158A  	fcall	__Umul8_16
 10756  0EC3  0871               	movf	?__Umul8_16+1,w
 10757  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10758  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10759  0EC6  00BD               	movwf	___flmul@temp+1
 10760  0EC7  0870               	movf	?__Umul8_16,w
 10761  0EC8  00BC               	movwf	___flmul@temp
 10762  0EC9                     l2949:
 10763  0EC9  083C               	movf	___flmul@temp,w
 10764  0ECA  00AC               	movwf	??___flmul
 10765  0ECB  083D               	movf	___flmul@temp+1,w
 10766  0ECC  00AD               	movwf	??___flmul+1
 10767  0ECD  01AE               	clrf	??___flmul+2
 10768  0ECE  01AF               	clrf	??___flmul+3
 10769  0ECF  3008               	movlw	8
 10770  0ED0                     u4265:
 10771  0ED0  1003               	clrc
 10772  0ED1  0DAC               	rlf	??___flmul,f
 10773  0ED2  0DAD               	rlf	??___flmul+1,f
 10774  0ED3  0DAE               	rlf	??___flmul+2,f
 10775  0ED4  0DAF               	rlf	??___flmul+3,f
 10776  0ED5                     u4260:
 10777  0ED5  3EFF               	addlw	-1
 10778  0ED6  1D03               	skipz
 10779  0ED7  2ED0               	goto	u4265
 10780  0ED8  082C               	movf	??___flmul,w
 10781  0ED9  07B8               	addwf	___flmul@prod,f
 10782  0EDA  082D               	movf	??___flmul+1,w
 10783  0EDB  1103               	clrz
 10784  0EDC  1803               	skipnc
 10785  0EDD  3E01               	addlw	1
 10786  0EDE  1903               	skipnz
 10787  0EDF  2EE1               	goto	u4271
 10788  0EE0  07B9               	addwf	___flmul@prod+1,f
 10789  0EE1                     u4271:
 10790  0EE1  082E               	movf	??___flmul+2,w
 10791  0EE2  1103               	clrz
 10792  0EE3  1803               	skipnc
 10793  0EE4  3E01               	addlw	1
 10794  0EE5  1903               	skipnz
 10795  0EE6  2EE8               	goto	u4272
 10796  0EE7  07BA               	addwf	___flmul@prod+2,f
 10797  0EE8                     u4272:
 10798  0EE8  082F               	movf	??___flmul+3,w
 10799  0EE9  1103               	clrz
 10800  0EEA  1803               	skipnc
 10801  0EEB  3E01               	addlw	1
 10802  0EEC  1903               	skipnz
 10803  0EED  2EEF               	goto	u4273
 10804  0EEE  07BB               	addwf	___flmul@prod+3,f
 10805  0EEF                     u4273:
 10806  0EEF                     l2951:
 10807  0EEF  0832               	movf	___flmul@grs,w
 10808  0EF0  00AC               	movwf	??___flmul
 10809  0EF1  0833               	movf	___flmul@grs+1,w
 10810  0EF2  00AD               	movwf	??___flmul+1
 10811  0EF3  0834               	movf	___flmul@grs+2,w
 10812  0EF4  00AE               	movwf	??___flmul+2
 10813  0EF5  0835               	movf	___flmul@grs+3,w
 10814  0EF6  00AF               	movwf	??___flmul+3
 10815  0EF7  3018               	movlw	24
 10816  0EF8                     u4285:
 10817  0EF8  1003               	clrc
 10818  0EF9  0CAF               	rrf	??___flmul+3,f
 10819  0EFA  0CAE               	rrf	??___flmul+2,f
 10820  0EFB  0CAD               	rrf	??___flmul+1,f
 10821  0EFC  0CAC               	rrf	??___flmul,f
 10822  0EFD                     u4280:
 10823  0EFD  3EFF               	addlw	-1
 10824  0EFE  1D03               	skipz
 10825  0EFF  2EF8               	goto	u4285
 10826  0F00  082C               	movf	??___flmul,w
 10827  0F01  07B8               	addwf	___flmul@prod,f
 10828  0F02  082D               	movf	??___flmul+1,w
 10829  0F03  1103               	clrz
 10830  0F04  1803               	skipnc
 10831  0F05  3E01               	addlw	1
 10832  0F06  1903               	skipnz
 10833  0F07  2F09               	goto	u4291
 10834  0F08  07B9               	addwf	___flmul@prod+1,f
 10835  0F09                     u4291:
 10836  0F09  082E               	movf	??___flmul+2,w
 10837  0F0A  1103               	clrz
 10838  0F0B  1803               	skipnc
 10839  0F0C  3E01               	addlw	1
 10840  0F0D  1903               	skipnz
 10841  0F0E  2F10               	goto	u4292
 10842  0F0F  07BA               	addwf	___flmul@prod+2,f
 10843  0F10                     u4292:
 10844  0F10  082F               	movf	??___flmul+3,w
 10845  0F11  1103               	clrz
 10846  0F12  1803               	skipnc
 10847  0F13  3E01               	addlw	1
 10848  0F14  1903               	skipnz
 10849  0F15  2F17               	goto	u4293
 10850  0F16  07BB               	addwf	___flmul@prod+3,f
 10851  0F17                     u4293:
 10852  0F17                     l2953:
 10853  0F17  3008               	movlw	8
 10854  0F18  00AC               	movwf	??___flmul
 10855  0F19                     u4305:
 10856  0F19  1003               	clrc
 10857  0F1A  0DB2               	rlf	___flmul@grs,f
 10858  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10859  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10860  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10861  0F1E  0BAC               	decfsz	??___flmul,f
 10862  0F1F  2F19               	goto	u4305
 10863  0F20                     l2955:
 10864  0F20  0837               	movf	___flmul@bexp,w
 10865  0F21  0736               	addwf	___flmul@aexp,w
 10866  0F22  00AC               	movwf	??___flmul
 10867  0F23  01AD               	clrf	??___flmul+1
 10868  0F24  0DAD               	rlf	??___flmul+1,f
 10869  0F25  082C               	movf	??___flmul,w
 10870  0F26  3E82               	addlw	130
 10871  0F27  00BC               	movwf	___flmul@temp
 10872  0F28  082D               	movf	??___flmul+1,w
 10873  0F29  1803               	skipnc
 10874  0F2A  3E01               	addlw	1
 10875  0F2B  3EFF               	addlw	255
 10876  0F2C  00BD               	movwf	___flmul@temp+1
 10877  0F2D  2F4B               	goto	l2967
 10878  0F2E                     l2957:
 10879  0F2E  3001               	movlw	1
 10880  0F2F  00AC               	movwf	??___flmul
 10881  0F30                     u4315:
 10882  0F30  1003               	clrc
 10883  0F31  0DB8               	rlf	___flmul@prod,f
 10884  0F32  0DB9               	rlf	___flmul@prod+1,f
 10885  0F33  0DBA               	rlf	___flmul@prod+2,f
 10886  0F34  0DBB               	rlf	___flmul@prod+3,f
 10887  0F35  0BAC               	decfsz	??___flmul,f
 10888  0F36  2F30               	goto	u4315
 10889  0F37                     l2959:
 10890  0F37  1FB5               	btfss	___flmul@grs+3,7
 10891  0F38  2F3A               	goto	u4321
 10892  0F39  2F3B               	goto	u4320
 10893  0F3A                     u4321:
 10894  0F3A  2F3C               	goto	l2963
 10895  0F3B                     u4320:
 10896  0F3B                     l2961:
 10897  0F3B  1438               	bsf	___flmul@prod,0
 10898  0F3C                     l2963:
 10899  0F3C  3001               	movlw	1
 10900  0F3D  00AC               	movwf	??___flmul
 10901  0F3E                     u4335:
 10902  0F3E  1003               	clrc
 10903  0F3F  0DB2               	rlf	___flmul@grs,f
 10904  0F40  0DB3               	rlf	___flmul@grs+1,f
 10905  0F41  0DB4               	rlf	___flmul@grs+2,f
 10906  0F42  0DB5               	rlf	___flmul@grs+3,f
 10907  0F43  0BAC               	decfsz	??___flmul,f
 10908  0F44  2F3E               	goto	u4335
 10909  0F45                     l2965:
 10910  0F45  30FF               	movlw	255
 10911  0F46  07BC               	addwf	___flmul@temp,f
 10912  0F47  1803               	skipnc
 10913  0F48  0ABD               	incf	___flmul@temp+1,f
 10914  0F49  30FF               	movlw	255
 10915  0F4A  07BD               	addwf	___flmul@temp+1,f
 10916  0F4B                     l2967:
 10917  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10918  0F4C  2F4E               	goto	u4341
 10919  0F4D  2F4F               	goto	u4340
 10920  0F4E                     u4341:
 10921  0F4E  2F2E               	goto	l2957
 10922  0F4F                     u4340:
 10923  0F4F                     l2969:
 10924  0F4F  01B6               	clrf	___flmul@aexp
 10925  0F50                     l2971:
 10926  0F50  1FB5               	btfss	___flmul@grs+3,7
 10927  0F51  2F53               	goto	u4351
 10928  0F52  2F54               	goto	u4350
 10929  0F53                     u4351:
 10930  0F53  2F70               	goto	l2979
 10931  0F54                     u4350:
 10932  0F54                     l2973:
 10933  0F54  30FF               	movlw	255
 10934  0F55  0532               	andwf	___flmul@grs,w
 10935  0F56  00AC               	movwf	??___flmul
 10936  0F57  30FF               	movlw	255
 10937  0F58  0533               	andwf	___flmul@grs+1,w
 10938  0F59  00AD               	movwf	??___flmul+1
 10939  0F5A  30FF               	movlw	255
 10940  0F5B  0534               	andwf	___flmul@grs+2,w
 10941  0F5C  00AE               	movwf	??___flmul+2
 10942  0F5D  307F               	movlw	127
 10943  0F5E  0535               	andwf	___flmul@grs+3,w
 10944  0F5F  00AF               	movwf	??___flmul+3
 10945  0F60  082F               	movf	??___flmul+3,w
 10946  0F61  042E               	iorwf	??___flmul+2,w
 10947  0F62  042D               	iorwf	??___flmul+1,w
 10948  0F63  042C               	iorwf	??___flmul,w
 10949  0F64  1903               	skipnz
 10950  0F65  2F67               	goto	u4361
 10951  0F66  2F68               	goto	u4360
 10952  0F67                     u4361:
 10953  0F67  2F6B               	goto	l857
 10954  0F68                     u4360:
 10955  0F68                     l2975:
 10956  0F68  01B6               	clrf	___flmul@aexp
 10957  0F69  0AB6               	incf	___flmul@aexp,f
 10958  0F6A  2F70               	goto	l2979
 10959  0F6B                     l857:
 10960  0F6B  1C38               	btfss	___flmul@prod,0
 10961  0F6C  2F6E               	goto	u4371
 10962  0F6D  2F6F               	goto	u4370
 10963  0F6E                     u4371:
 10964  0F6E  2F70               	goto	l2979
 10965  0F6F                     u4370:
 10966  0F6F  2F68               	goto	l2975
 10967  0F70                     l2979:
 10968  0F70  0836               	movf	___flmul@aexp,w
 10969  0F71  1903               	btfsc	3,2
 10970  0F72  2F74               	goto	u4381
 10971  0F73  2F75               	goto	u4380
 10972  0F74                     u4381:
 10973  0F74  2FA6               	goto	l2989
 10974  0F75                     u4380:
 10975  0F75                     l2981:
 10976  0F75  3001               	movlw	1
 10977  0F76  07B8               	addwf	___flmul@prod,f
 10978  0F77  3000               	movlw	0
 10979  0F78  1803               	skipnc
 10980  0F79  3001               	movlw	1
 10981  0F7A  07B9               	addwf	___flmul@prod+1,f
 10982  0F7B  3000               	movlw	0
 10983  0F7C  1803               	skipnc
 10984  0F7D  3001               	movlw	1
 10985  0F7E  07BA               	addwf	___flmul@prod+2,f
 10986  0F7F  3000               	movlw	0
 10987  0F80  1803               	skipnc
 10988  0F81  3001               	movlw	1
 10989  0F82  07BB               	addwf	___flmul@prod+3,f
 10990  0F83                     l2983:
 10991  0F83  1C3B               	btfss	___flmul@prod+3,0
 10992  0F84  2F86               	goto	u4391
 10993  0F85  2F87               	goto	u4390
 10994  0F86                     u4391:
 10995  0F86  2FA6               	goto	l2989
 10996  0F87                     u4390:
 10997  0F87                     l2985:
 10998  0F87  0838               	movf	___flmul@prod,w
 10999  0F88  00AC               	movwf	??___flmul
 11000  0F89  0839               	movf	___flmul@prod+1,w
 11001  0F8A  00AD               	movwf	??___flmul+1
 11002  0F8B  083A               	movf	___flmul@prod+2,w
 11003  0F8C  00AE               	movwf	??___flmul+2
 11004  0F8D  083B               	movf	___flmul@prod+3,w
 11005  0F8E  00AF               	movwf	??___flmul+3
 11006  0F8F  3001               	movlw	1
 11007  0F90  00B0               	movwf	??___flmul+4
 11008  0F91                     u4405:
 11009  0F91  0D2F               	rlf	??___flmul+3,w
 11010  0F92  0CAF               	rrf	??___flmul+3,f
 11011  0F93  0CAE               	rrf	??___flmul+2,f
 11012  0F94  0CAD               	rrf	??___flmul+1,f
 11013  0F95  0CAC               	rrf	??___flmul,f
 11014  0F96                     u4400:
 11015  0F96  0BB0               	decfsz	??___flmul+4,f
 11016  0F97  2F91               	goto	u4405
 11017  0F98  082F               	movf	??___flmul+3,w
 11018  0F99  00BB               	movwf	___flmul@prod+3
 11019  0F9A  082E               	movf	??___flmul+2,w
 11020  0F9B  00BA               	movwf	___flmul@prod+2
 11021  0F9C  082D               	movf	??___flmul+1,w
 11022  0F9D  00B9               	movwf	___flmul@prod+1
 11023  0F9E  082C               	movf	??___flmul,w
 11024  0F9F  00B8               	movwf	___flmul@prod
 11025  0FA0                     l2987:
 11026  0FA0  3001               	movlw	1
 11027  0FA1  07BC               	addwf	___flmul@temp,f
 11028  0FA2  1803               	skipnc
 11029  0FA3  0ABD               	incf	___flmul@temp+1,f
 11030  0FA4  3000               	movlw	0
 11031  0FA5  07BD               	addwf	___flmul@temp+1,f
 11032  0FA6                     l2989:
 11033  0FA6  083D               	movf	___flmul@temp+1,w
 11034  0FA7  3A80               	xorlw	128
 11035  0FA8  00FF               	movwf	btemp+1
 11036  0FA9  3080               	movlw	128
 11037  0FAA  027F               	subwf	btemp+1,w
 11038  0FAB  1D03               	skipz
 11039  0FAC  2FAF               	goto	u4415
 11040  0FAD  30FF               	movlw	255
 11041  0FAE  023C               	subwf	___flmul@temp,w
 11042  0FAF                     u4415:
 11043  0FAF  1C03               	skipc
 11044  0FB0  2FB2               	goto	u4411
 11045  0FB1  2FB3               	goto	u4410
 11046  0FB2                     u4411:
 11047  0FB2  2FBE               	goto	l2993
 11048  0FB3                     u4410:
 11049  0FB3                     l2991:
 11050  0FB3  307F               	movlw	127
 11051  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 11052  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 11053  0FB6  00BB               	movwf	___flmul@prod+3
 11054  0FB7  3080               	movlw	128
 11055  0FB8  00BA               	movwf	___flmul@prod+2
 11056  0FB9  3000               	movlw	0
 11057  0FBA  00B9               	movwf	___flmul@prod+1
 11058  0FBB  3000               	movlw	0
 11059  0FBC  00B8               	movwf	___flmul@prod
 11060  0FBD  2FF3               	goto	l863
 11061  0FBE                     l2993:
 11062  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 11063  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 11064  0FC0  083D               	movf	___flmul@temp+1,w
 11065  0FC1  3A80               	xorlw	128
 11066  0FC2  00FF               	movwf	btemp+1
 11067  0FC3  3080               	movlw	128
 11068  0FC4  027F               	subwf	btemp+1,w
 11069  0FC5  1D03               	skipz
 11070  0FC6  2FC9               	goto	u4425
 11071  0FC7  3001               	movlw	1
 11072  0FC8  023C               	subwf	___flmul@temp,w
 11073  0FC9                     u4425:
 11074  0FC9  1803               	skipnc
 11075  0FCA  2FCC               	goto	u4421
 11076  0FCB  2FCD               	goto	u4420
 11077  0FCC                     u4421:
 11078  0FCC  2FD9               	goto	l2999
 11079  0FCD                     u4420:
 11080  0FCD                     l2995:
 11081  0FCD  3000               	movlw	0
 11082  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 11083  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 11084  0FD0  00BB               	movwf	___flmul@prod+3
 11085  0FD1  3000               	movlw	0
 11086  0FD2  00BA               	movwf	___flmul@prod+2
 11087  0FD3  3000               	movlw	0
 11088  0FD4  00B9               	movwf	___flmul@prod+1
 11089  0FD5  3000               	movlw	0
 11090  0FD6  00B8               	movwf	___flmul@prod
 11091  0FD7                     l2997:
 11092  0FD7  01B1               	clrf	___flmul@sign
 11093  0FD8  2FF3               	goto	l863
 11094  0FD9                     l2999:
 11095  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 11096  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 11097  0FDB  083C               	movf	___flmul@temp,w
 11098  0FDC  00AC               	movwf	??___flmul
 11099  0FDD  082C               	movf	??___flmul,w
 11100  0FDE  00B7               	movwf	___flmul@bexp
 11101  0FDF  30FF               	movlw	255
 11102  0FE0  05B8               	andwf	___flmul@prod,f
 11103  0FE1  30FF               	movlw	255
 11104  0FE2  05B9               	andwf	___flmul@prod+1,f
 11105  0FE3  307F               	movlw	127
 11106  0FE4  05BA               	andwf	___flmul@prod+2,f
 11107  0FE5  3000               	movlw	0
 11108  0FE6  05BB               	andwf	___flmul@prod+3,f
 11109  0FE7                     l3001:
 11110  0FE7  1C37               	btfss	___flmul@bexp,0
 11111  0FE8  2FEA               	goto	u4431
 11112  0FE9  2FEB               	goto	u4430
 11113  0FEA                     u4431:
 11114  0FEA  2FEC               	goto	l3005
 11115  0FEB                     u4430:
 11116  0FEB                     l3003:
 11117  0FEB  17BA               	bsf	___flmul@prod+2,7
 11118  0FEC                     l3005:
 11119  0FEC  0837               	movf	___flmul@bexp,w
 11120  0FED  00AC               	movwf	??___flmul
 11121  0FEE  1003               	clrc
 11122  0FEF  0C2C               	rrf	??___flmul,w
 11123  0FF0  00AD               	movwf	??___flmul+1
 11124  0FF1  082D               	movf	??___flmul+1,w
 11125  0FF2  00BB               	movwf	___flmul@prod+3
 11126  0FF3                     l863:
 11127  0FF3  0831               	movf	___flmul@sign,w
 11128  0FF4  00AC               	movwf	??___flmul
 11129  0FF5  082C               	movf	??___flmul,w
 11130  0FF6  04BB               	iorwf	___flmul@prod+3,f
 11131  0FF7                     l3007:
 11132  0FF7  083B               	movf	___flmul@prod+3,w
 11133  0FF8  00A7               	movwf	?___flmul+3
 11134  0FF9  083A               	movf	___flmul@prod+2,w
 11135  0FFA  00A6               	movwf	?___flmul+2
 11136  0FFB  0839               	movf	___flmul@prod+1,w
 11137  0FFC  00A5               	movwf	?___flmul+1
 11138  0FFD  0838               	movf	___flmul@prod,w
 11139  0FFE  00A4               	movwf	?___flmul
 11140  0FFF                     l851:
 11141  0FFF  0008               	return
 11142  1000                     __end_of___flmul:
 11143                           
 11144                           	psect	text38
 11145  191B                     __ptext38:	
 11146 ;; *************** function __Umul8_16 *****************
 11147 ;; Defined at:
 11148 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  multiplier      1    wreg     unsigned char 
 11151 ;;  multiplicand    1    0[COMMON] unsigned char 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;  multiplier      1    8[COMMON] unsigned char 
 11154 ;;  word_mpld       2    6[COMMON] unsigned int 
 11155 ;;  product         2    4[COMMON] unsigned int 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  2    0[COMMON] unsigned int 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11165 ;;      Params:         2       0       0       0       0
 11166 ;;      Locals:         5       0       0       0       0
 11167 ;;      Temps:          2       0       0       0       0
 11168 ;;      Totals:         9       0       0       0       0
 11169 ;;Total ram usage:        9 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; This function calls:
 11172 ;;		Nothing
 11173 ;; This function is called by:
 11174 ;;		___flmul
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           
 11179                           ;psect for function __Umul8_16
 11180  191B                     __Umul8_16:
 11181                           
 11182                           ;incstack = 0
 11183                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11184                           ;__Umul8_16@multiplier stored from wreg
 11185  191B  00F8               	movwf	__Umul8_16@multiplier
 11186  191C                     l2515:
 11187  191C  01F4               	clrf	__Umul8_16@product
 11188  191D  01F5               	clrf	__Umul8_16@product+1
 11189  191E                     l2517:
 11190  191E  0870               	movf	__Umul8_16@multiplicand,w
 11191  191F  00F2               	movwf	??__Umul8_16
 11192  1920  01F3               	clrf	??__Umul8_16+1
 11193  1921  0872               	movf	??__Umul8_16,w
 11194  1922  00F6               	movwf	__Umul8_16@word_mpld
 11195  1923  0873               	movf	??__Umul8_16+1,w
 11196  1924  00F7               	movwf	__Umul8_16@word_mpld+1
 11197  1925                     l2519:
 11198  1925  1C78               	btfss	__Umul8_16@multiplier,0
 11199  1926  2928               	goto	u3181
 11200  1927  2929               	goto	u3180
 11201  1928                     u3181:
 11202  1928  292F               	goto	l870
 11203  1929                     u3180:
 11204  1929                     l2521:
 11205  1929  0876               	movf	__Umul8_16@word_mpld,w
 11206  192A  07F4               	addwf	__Umul8_16@product,f
 11207  192B  1803               	skipnc
 11208  192C  0AF5               	incf	__Umul8_16@product+1,f
 11209  192D  0877               	movf	__Umul8_16@word_mpld+1,w
 11210  192E  07F5               	addwf	__Umul8_16@product+1,f
 11211  192F                     l870:
 11212  192F  3001               	movlw	1
 11213  1930                     u3195:
 11214  1930  1003               	clrc
 11215  1931  0DF6               	rlf	__Umul8_16@word_mpld,f
 11216  1932  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11217  1933  3EFF               	addlw	-1
 11218  1934  1D03               	skipz
 11219  1935  2930               	goto	u3195
 11220  1936  1003               	clrc
 11221  1937  0CF8               	rrf	__Umul8_16@multiplier,f
 11222  1938                     l2523:
 11223  1938  0878               	movf	__Umul8_16@multiplier,w
 11224  1939  1D03               	btfss	3,2
 11225  193A  293C               	goto	u3201
 11226  193B  293D               	goto	u3200
 11227  193C                     u3201:
 11228  193C  2925               	goto	l2519
 11229  193D                     u3200:
 11230  193D                     l2525:
 11231  193D  0875               	movf	__Umul8_16@product+1,w
 11232  193E  00F1               	movwf	?__Umul8_16+1
 11233  193F  0874               	movf	__Umul8_16@product,w
 11234  1940  00F0               	movwf	?__Umul8_16
 11235  1941                     l872:
 11236  1941  0008               	return
 11237  1942                     __end_of__Umul8_16:
 11238                           
 11239                           	psect	text39
 11240  1190                     __ptext39:	
 11241 ;; *************** function ___fldiv *****************
 11242 ;; Defined at:
 11243 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  a               4   30[BANK0 ] unsigned int 
 11246 ;;  b               4   34[BANK0 ] unsigned int 
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;  grs             4   50[BANK0 ] unsigned long 
 11249 ;;  rem             4   43[BANK0 ] unsigned long 
 11250 ;;  new_exp         2   48[BANK0 ] int 
 11251 ;;  aexp            1   55[BANK0 ] unsigned char 
 11252 ;;  bexp            1   54[BANK0 ] unsigned char 
 11253 ;;  sign            1   47[BANK0 ] unsigned char 
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  4   30[BANK0 ] unsigned char 
 11256 ;; Registers used:
 11257 ;;		wreg, status,2, status,0, btemp+1
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11263 ;;      Params:         0       8       0       0       0
 11264 ;;      Locals:         0      13       0       0       0
 11265 ;;      Temps:          0       5       0       0       0
 11266 ;;      Totals:         0      26       0       0       0
 11267 ;;Total ram usage:       26 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_ADC_1
 11273 ;;		_ADC_2
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           
 11278                           ;psect for function ___fldiv
 11279  1190                     ___fldiv:
 11280  1190                     l3367:	
 11281                           ;incstack = 0
 11282                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11283                           
 11284  1190  1283               	bcf	3,5	;RP0=0, select bank0
 11285  1191  1303               	bcf	3,6	;RP1=0, select bank0
 11286  1192  0845               	movf	___fldiv@b+3,w
 11287  1193  3980               	andlw	128
 11288  1194  00C6               	movwf	??___fldiv
 11289  1195  0846               	movf	??___fldiv,w
 11290  1196  00CF               	movwf	___fldiv@sign
 11291  1197                     l3369:
 11292  1197  0845               	movf	___fldiv@b+3,w
 11293  1198  00C6               	movwf	??___fldiv
 11294  1199  0746               	addwf	??___fldiv,w
 11295  119A  00C7               	movwf	??___fldiv+1
 11296  119B  0847               	movf	??___fldiv+1,w
 11297  119C  00D6               	movwf	___fldiv@bexp
 11298  119D                     l3371:
 11299  119D  1FC4               	btfss	___fldiv@b+2,7
 11300  119E  29A0               	goto	u5361
 11301  119F  29A1               	goto	u5360
 11302  11A0                     u5361:
 11303  11A0  29A2               	goto	l3375
 11304  11A1                     u5360:
 11305  11A1                     l3373:
 11306  11A1  1456               	bsf	___fldiv@bexp,0
 11307  11A2                     l3375:
 11308  11A2  0856               	movf	___fldiv@bexp,w
 11309  11A3  1903               	btfsc	3,2
 11310  11A4  29A6               	goto	u5371
 11311  11A5  29A7               	goto	u5370
 11312  11A6                     u5371:
 11313  11A6  29B7               	goto	l3385
 11314  11A7                     u5370:
 11315  11A7                     l3377:
 11316  11A7  0A56               	incf	___fldiv@bexp,w
 11317  11A8  1D03               	btfss	3,2
 11318  11A9  29AB               	goto	u5381
 11319  11AA  29AC               	goto	u5380
 11320  11AB                     u5381:
 11321  11AB  29B4               	goto	l3381
 11322  11AC                     u5380:
 11323  11AC                     l3379:
 11324  11AC  3000               	movlw	0
 11325  11AD  00C5               	movwf	___fldiv@b+3
 11326  11AE  3000               	movlw	0
 11327  11AF  00C4               	movwf	___fldiv@b+2
 11328  11B0  3000               	movlw	0
 11329  11B1  00C3               	movwf	___fldiv@b+1
 11330  11B2  3000               	movlw	0
 11331  11B3  00C2               	movwf	___fldiv@b
 11332  11B4                     l3381:
 11333  11B4  17C4               	bsf	___fldiv@b+2,7
 11334  11B5                     l3383:
 11335  11B5  01C5               	clrf	___fldiv@b+3
 11336  11B6  29BF               	goto	l3387
 11337  11B7                     l3385:
 11338  11B7  3000               	movlw	0
 11339  11B8  00C5               	movwf	___fldiv@b+3
 11340  11B9  3000               	movlw	0
 11341  11BA  00C4               	movwf	___fldiv@b+2
 11342  11BB  3000               	movlw	0
 11343  11BC  00C3               	movwf	___fldiv@b+1
 11344  11BD  3000               	movlw	0
 11345  11BE  00C2               	movwf	___fldiv@b
 11346  11BF                     l3387:
 11347  11BF  0841               	movf	___fldiv@a+3,w
 11348  11C0  3980               	andlw	128
 11349  11C1  00C6               	movwf	??___fldiv
 11350  11C2  0846               	movf	??___fldiv,w
 11351  11C3  06CF               	xorwf	___fldiv@sign,f
 11352  11C4                     l3389:
 11353  11C4  0841               	movf	___fldiv@a+3,w
 11354  11C5  00C6               	movwf	??___fldiv
 11355  11C6  0746               	addwf	??___fldiv,w
 11356  11C7  00C7               	movwf	??___fldiv+1
 11357  11C8  0847               	movf	??___fldiv+1,w
 11358  11C9  00D7               	movwf	___fldiv@aexp
 11359  11CA                     l3391:
 11360  11CA  1FC0               	btfss	___fldiv@a+2,7
 11361  11CB  29CD               	goto	u5391
 11362  11CC  29CE               	goto	u5390
 11363  11CD                     u5391:
 11364  11CD  29CF               	goto	l3395
 11365  11CE                     u5390:
 11366  11CE                     l3393:
 11367  11CE  1457               	bsf	___fldiv@aexp,0
 11368  11CF                     l3395:
 11369  11CF  0857               	movf	___fldiv@aexp,w
 11370  11D0  1903               	btfsc	3,2
 11371  11D1  29D3               	goto	u5401
 11372  11D2  29D4               	goto	u5400
 11373  11D3                     u5401:
 11374  11D3  29E4               	goto	l3405
 11375  11D4                     u5400:
 11376  11D4                     l3397:
 11377  11D4  0A57               	incf	___fldiv@aexp,w
 11378  11D5  1D03               	btfss	3,2
 11379  11D6  29D8               	goto	u5411
 11380  11D7  29D9               	goto	u5410
 11381  11D8                     u5411:
 11382  11D8  29E1               	goto	l3401
 11383  11D9                     u5410:
 11384  11D9                     l3399:
 11385  11D9  3000               	movlw	0
 11386  11DA  00C1               	movwf	___fldiv@a+3
 11387  11DB  3000               	movlw	0
 11388  11DC  00C0               	movwf	___fldiv@a+2
 11389  11DD  3000               	movlw	0
 11390  11DE  00BF               	movwf	___fldiv@a+1
 11391  11DF  3000               	movlw	0
 11392  11E0  00BE               	movwf	___fldiv@a
 11393  11E1                     l3401:
 11394  11E1  17C0               	bsf	___fldiv@a+2,7
 11395  11E2                     l3403:
 11396  11E2  01C1               	clrf	___fldiv@a+3
 11397  11E3  29EC               	goto	l811
 11398  11E4                     l3405:
 11399  11E4  3000               	movlw	0
 11400  11E5  00C1               	movwf	___fldiv@a+3
 11401  11E6  3000               	movlw	0
 11402  11E7  00C0               	movwf	___fldiv@a+2
 11403  11E8  3000               	movlw	0
 11404  11E9  00BF               	movwf	___fldiv@a+1
 11405  11EA  3000               	movlw	0
 11406  11EB  00BE               	movwf	___fldiv@a
 11407  11EC                     l811:
 11408  11EC  0841               	movf	___fldiv@a+3,w
 11409  11ED  0440               	iorwf	___fldiv@a+2,w
 11410  11EE  043F               	iorwf	___fldiv@a+1,w
 11411  11EF  043E               	iorwf	___fldiv@a,w
 11412  11F0  1D03               	skipz
 11413  11F1  29F3               	goto	u5421
 11414  11F2  29F4               	goto	u5420
 11415  11F3                     u5421:
 11416  11F3  2A0D               	goto	l3415
 11417  11F4                     u5420:
 11418  11F4                     l3407:
 11419  11F4  3000               	movlw	0
 11420  11F5  00C5               	movwf	___fldiv@b+3
 11421  11F6  3000               	movlw	0
 11422  11F7  00C4               	movwf	___fldiv@b+2
 11423  11F8  3000               	movlw	0
 11424  11F9  00C3               	movwf	___fldiv@b+1
 11425  11FA  3000               	movlw	0
 11426  11FB  00C2               	movwf	___fldiv@b
 11427  11FC  3080               	movlw	128
 11428  11FD  04C4               	iorwf	___fldiv@b+2,f
 11429  11FE  307F               	movlw	127
 11430  11FF  04C5               	iorwf	___fldiv@b+3,f
 11431  1200                     l3409:
 11432  1200  084F               	movf	___fldiv@sign,w
 11433  1201  00C6               	movwf	??___fldiv
 11434  1202  0846               	movf	??___fldiv,w
 11435  1203  04C5               	iorwf	___fldiv@b+3,f
 11436  1204                     l3411:
 11437  1204  0845               	movf	___fldiv@b+3,w
 11438  1205  00C1               	movwf	?___fldiv+3
 11439  1206  0844               	movf	___fldiv@b+2,w
 11440  1207  00C0               	movwf	?___fldiv+2
 11441  1208  0843               	movf	___fldiv@b+1,w
 11442  1209  00BF               	movwf	?___fldiv+1
 11443  120A  0842               	movf	___fldiv@b,w
 11444  120B  00BE               	movwf	?___fldiv
 11445  120C  2B6C               	goto	l813
 11446  120D                     l3415:
 11447  120D  0856               	movf	___fldiv@bexp,w
 11448  120E  1D03               	btfss	3,2
 11449  120F  2A11               	goto	u5431
 11450  1210  2A12               	goto	u5430
 11451  1211                     u5431:
 11452  1211  2A1B               	goto	l3421
 11453  1212                     u5430:
 11454  1212                     l3417:
 11455  1212  3000               	movlw	0
 11456  1213  00C1               	movwf	?___fldiv+3
 11457  1214  3000               	movlw	0
 11458  1215  00C0               	movwf	?___fldiv+2
 11459  1216  3000               	movlw	0
 11460  1217  00BF               	movwf	?___fldiv+1
 11461  1218  3000               	movlw	0
 11462  1219  00BE               	movwf	?___fldiv
 11463  121A  2B6C               	goto	l813
 11464  121B                     l3421:
 11465  121B  0856               	movf	___fldiv@bexp,w
 11466  121C  00C6               	movwf	??___fldiv
 11467  121D  01C7               	clrf	??___fldiv+1
 11468  121E  0847               	movf	??___fldiv+1,w
 11469  121F  00C9               	movwf	??___fldiv+3
 11470  1220  0857               	movf	___fldiv@aexp,w
 11471  1221  0246               	subwf	??___fldiv,w
 11472  1222  00C8               	movwf	??___fldiv+2
 11473  1223  1C03               	skipc
 11474  1224  03C9               	decf	??___fldiv+3,f
 11475  1225  0848               	movf	??___fldiv+2,w
 11476  1226  3E7F               	addlw	127
 11477  1227  00D0               	movwf	___fldiv@new_exp
 11478  1228  0849               	movf	??___fldiv+3,w
 11479  1229  1803               	skipnc
 11480  122A  3E01               	addlw	1
 11481  122B  3E00               	addlw	0
 11482  122C  00D1               	movwf	___fldiv@new_exp+1
 11483  122D                     l3423:
 11484  122D  0845               	movf	___fldiv@b+3,w
 11485  122E  00CE               	movwf	___fldiv@rem+3
 11486  122F  0844               	movf	___fldiv@b+2,w
 11487  1230  00CD               	movwf	___fldiv@rem+2
 11488  1231  0843               	movf	___fldiv@b+1,w
 11489  1232  00CC               	movwf	___fldiv@rem+1
 11490  1233  0842               	movf	___fldiv@b,w
 11491  1234  00CB               	movwf	___fldiv@rem
 11492  1235                     l3425:
 11493  1235  3000               	movlw	0
 11494  1236  00C5               	movwf	___fldiv@b+3
 11495  1237  3000               	movlw	0
 11496  1238  00C4               	movwf	___fldiv@b+2
 11497  1239  3000               	movlw	0
 11498  123A  00C3               	movwf	___fldiv@b+1
 11499  123B  3000               	movlw	0
 11500  123C  00C2               	movwf	___fldiv@b
 11501  123D                     l3427:
 11502  123D  3000               	movlw	0
 11503  123E  00D5               	movwf	___fldiv@grs+3
 11504  123F  3000               	movlw	0
 11505  1240  00D4               	movwf	___fldiv@grs+2
 11506  1241  3000               	movlw	0
 11507  1242  00D3               	movwf	___fldiv@grs+1
 11508  1243  3000               	movlw	0
 11509  1244  00D2               	movwf	___fldiv@grs
 11510  1245                     l3429:
 11511  1245  01D7               	clrf	___fldiv@aexp
 11512  1246  2A91               	goto	l3449
 11513  1247                     l3431:
 11514  1247  0857               	movf	___fldiv@aexp,w
 11515  1248  1903               	btfsc	3,2
 11516  1249  2A4B               	goto	u5441
 11517  124A  2A4C               	goto	u5440
 11518  124B                     u5441:
 11519  124B  2A6C               	goto	l3441
 11520  124C                     u5440:
 11521  124C                     l3433:
 11522  124C  3001               	movlw	1
 11523  124D  00C6               	movwf	??___fldiv
 11524  124E                     u5455:
 11525  124E  1003               	clrc
 11526  124F  0DCB               	rlf	___fldiv@rem,f
 11527  1250  0DCC               	rlf	___fldiv@rem+1,f
 11528  1251  0DCD               	rlf	___fldiv@rem+2,f
 11529  1252  0DCE               	rlf	___fldiv@rem+3,f
 11530  1253  0BC6               	decfsz	??___fldiv,f
 11531  1254  2A4E               	goto	u5455
 11532  1255  3001               	movlw	1
 11533  1256  00C6               	movwf	??___fldiv
 11534  1257                     u5465:
 11535  1257  1003               	clrc
 11536  1258  0DC2               	rlf	___fldiv@b,f
 11537  1259  0DC3               	rlf	___fldiv@b+1,f
 11538  125A  0DC4               	rlf	___fldiv@b+2,f
 11539  125B  0DC5               	rlf	___fldiv@b+3,f
 11540  125C  0BC6               	decfsz	??___fldiv,f
 11541  125D  2A57               	goto	u5465
 11542  125E                     l3435:
 11543  125E  1FD5               	btfss	___fldiv@grs+3,7
 11544  125F  2A61               	goto	u5471
 11545  1260  2A62               	goto	u5470
 11546  1261                     u5471:
 11547  1261  2A63               	goto	l3439
 11548  1262                     u5470:
 11549  1262                     l3437:
 11550  1262  1442               	bsf	___fldiv@b,0
 11551  1263                     l3439:
 11552  1263  3001               	movlw	1
 11553  1264  00C6               	movwf	??___fldiv
 11554  1265                     u5485:
 11555  1265  1003               	clrc
 11556  1266  0DD2               	rlf	___fldiv@grs,f
 11557  1267  0DD3               	rlf	___fldiv@grs+1,f
 11558  1268  0DD4               	rlf	___fldiv@grs+2,f
 11559  1269  0DD5               	rlf	___fldiv@grs+3,f
 11560  126A  0BC6               	decfsz	??___fldiv,f
 11561  126B  2A65               	goto	u5485
 11562  126C                     l3441:
 11563  126C  0841               	movf	___fldiv@a+3,w
 11564  126D  024E               	subwf	___fldiv@rem+3,w
 11565  126E  1D03               	skipz
 11566  126F  2A7A               	goto	u5495
 11567  1270  0840               	movf	___fldiv@a+2,w
 11568  1271  024D               	subwf	___fldiv@rem+2,w
 11569  1272  1D03               	skipz
 11570  1273  2A7A               	goto	u5495
 11571  1274  083F               	movf	___fldiv@a+1,w
 11572  1275  024C               	subwf	___fldiv@rem+1,w
 11573  1276  1D03               	skipz
 11574  1277  2A7A               	goto	u5495
 11575  1278  083E               	movf	___fldiv@a,w
 11576  1279  024B               	subwf	___fldiv@rem,w
 11577  127A                     u5495:
 11578  127A  1C03               	skipc
 11579  127B  2A7D               	goto	u5491
 11580  127C  2A7E               	goto	u5490
 11581  127D                     u5491:
 11582  127D  2A8D               	goto	l3447
 11583  127E                     u5490:
 11584  127E                     l3443:
 11585  127E  1755               	bsf	___fldiv@grs+3,6
 11586  127F                     l3445:
 11587  127F  083E               	movf	___fldiv@a,w
 11588  1280  02CB               	subwf	___fldiv@rem,f
 11589  1281  083F               	movf	___fldiv@a+1,w
 11590  1282  1C03               	skipc
 11591  1283  0F3F               	incfsz	___fldiv@a+1,w
 11592  1284  02CC               	subwf	___fldiv@rem+1,f
 11593  1285  0840               	movf	___fldiv@a+2,w
 11594  1286  1C03               	skipc
 11595  1287  0F40               	incfsz	___fldiv@a+2,w
 11596  1288  02CD               	subwf	___fldiv@rem+2,f
 11597  1289  0841               	movf	___fldiv@a+3,w
 11598  128A  1C03               	skipc
 11599  128B  0F41               	incfsz	___fldiv@a+3,w
 11600  128C  02CE               	subwf	___fldiv@rem+3,f
 11601  128D                     l3447:
 11602  128D  3001               	movlw	1
 11603  128E  00C6               	movwf	??___fldiv
 11604  128F  0846               	movf	??___fldiv,w
 11605  1290  07D7               	addwf	___fldiv@aexp,f
 11606  1291                     l3449:
 11607  1291  301A               	movlw	26
 11608  1292  0257               	subwf	___fldiv@aexp,w
 11609  1293  1C03               	skipc
 11610  1294  2A96               	goto	u5501
 11611  1295  2A97               	goto	u5500
 11612  1296                     u5501:
 11613  1296  2A47               	goto	l3431
 11614  1297                     u5500:
 11615  1297                     l3451:
 11616  1297  084E               	movf	___fldiv@rem+3,w
 11617  1298  044D               	iorwf	___fldiv@rem+2,w
 11618  1299  044C               	iorwf	___fldiv@rem+1,w
 11619  129A  044B               	iorwf	___fldiv@rem,w
 11620  129B  1903               	skipnz
 11621  129C  2A9E               	goto	u5511
 11622  129D  2A9F               	goto	u5510
 11623  129E                     u5511:
 11624  129E  2ABE               	goto	l3465
 11625  129F                     u5510:
 11626  129F                     l3453:
 11627  129F  1452               	bsf	___fldiv@grs,0
 11628  12A0  2ABE               	goto	l3465
 11629  12A1                     l3455:
 11630  12A1  3001               	movlw	1
 11631  12A2  00C6               	movwf	??___fldiv
 11632  12A3                     u5525:
 11633  12A3  1003               	clrc
 11634  12A4  0DC2               	rlf	___fldiv@b,f
 11635  12A5  0DC3               	rlf	___fldiv@b+1,f
 11636  12A6  0DC4               	rlf	___fldiv@b+2,f
 11637  12A7  0DC5               	rlf	___fldiv@b+3,f
 11638  12A8  0BC6               	decfsz	??___fldiv,f
 11639  12A9  2AA3               	goto	u5525
 11640  12AA                     l3457:
 11641  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11642  12AB  2AAD               	goto	u5531
 11643  12AC  2AAE               	goto	u5530
 11644  12AD                     u5531:
 11645  12AD  2AAF               	goto	l3461
 11646  12AE                     u5530:
 11647  12AE                     l3459:
 11648  12AE  1442               	bsf	___fldiv@b,0
 11649  12AF                     l3461:
 11650  12AF  3001               	movlw	1
 11651  12B0  00C6               	movwf	??___fldiv
 11652  12B1                     u5545:
 11653  12B1  1003               	clrc
 11654  12B2  0DD2               	rlf	___fldiv@grs,f
 11655  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11656  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11657  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11658  12B6  0BC6               	decfsz	??___fldiv,f
 11659  12B7  2AB1               	goto	u5545
 11660  12B8                     l3463:
 11661  12B8  30FF               	movlw	255
 11662  12B9  07D0               	addwf	___fldiv@new_exp,f
 11663  12BA  1803               	skipnc
 11664  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11665  12BC  30FF               	movlw	255
 11666  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11667  12BE                     l3465:
 11668  12BE  1FC4               	btfss	___fldiv@b+2,7
 11669  12BF  2AC1               	goto	u5551
 11670  12C0  2AC2               	goto	u5550
 11671  12C1                     u5551:
 11672  12C1  2AA1               	goto	l3455
 11673  12C2                     u5550:
 11674  12C2                     l3467:
 11675  12C2  01D7               	clrf	___fldiv@aexp
 11676  12C3                     l3469:
 11677  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11678  12C4  2AC6               	goto	u5561
 11679  12C5  2AC7               	goto	u5560
 11680  12C6                     u5561:
 11681  12C6  2AE3               	goto	l3477
 11682  12C7                     u5560:
 11683  12C7                     l3471:
 11684  12C7  30FF               	movlw	255
 11685  12C8  0552               	andwf	___fldiv@grs,w
 11686  12C9  00C6               	movwf	??___fldiv
 11687  12CA  30FF               	movlw	255
 11688  12CB  0553               	andwf	___fldiv@grs+1,w
 11689  12CC  00C7               	movwf	??___fldiv+1
 11690  12CD  30FF               	movlw	255
 11691  12CE  0554               	andwf	___fldiv@grs+2,w
 11692  12CF  00C8               	movwf	??___fldiv+2
 11693  12D0  307F               	movlw	127
 11694  12D1  0555               	andwf	___fldiv@grs+3,w
 11695  12D2  00C9               	movwf	??___fldiv+3
 11696  12D3  0849               	movf	??___fldiv+3,w
 11697  12D4  0448               	iorwf	??___fldiv+2,w
 11698  12D5  0447               	iorwf	??___fldiv+1,w
 11699  12D6  0446               	iorwf	??___fldiv,w
 11700  12D7  1903               	skipnz
 11701  12D8  2ADA               	goto	u5571
 11702  12D9  2ADB               	goto	u5570
 11703  12DA                     u5571:
 11704  12DA  2ADE               	goto	l827
 11705  12DB                     u5570:
 11706  12DB                     l3473:
 11707  12DB  01D7               	clrf	___fldiv@aexp
 11708  12DC  0AD7               	incf	___fldiv@aexp,f
 11709  12DD  2AE3               	goto	l3477
 11710  12DE                     l827:
 11711  12DE  1C42               	btfss	___fldiv@b,0
 11712  12DF  2AE1               	goto	u5581
 11713  12E0  2AE2               	goto	u5580
 11714  12E1                     u5581:
 11715  12E1  2AE3               	goto	l3477
 11716  12E2                     u5580:
 11717  12E2  2ADB               	goto	l3473
 11718  12E3                     l3477:
 11719  12E3  0857               	movf	___fldiv@aexp,w
 11720  12E4  1903               	btfsc	3,2
 11721  12E5  2AE7               	goto	u5591
 11722  12E6  2AE8               	goto	u5590
 11723  12E7                     u5591:
 11724  12E7  2B19               	goto	l3487
 11725  12E8                     u5590:
 11726  12E8                     l3479:
 11727  12E8  3001               	movlw	1
 11728  12E9  07C2               	addwf	___fldiv@b,f
 11729  12EA  3000               	movlw	0
 11730  12EB  1803               	skipnc
 11731  12EC  3001               	movlw	1
 11732  12ED  07C3               	addwf	___fldiv@b+1,f
 11733  12EE  3000               	movlw	0
 11734  12EF  1803               	skipnc
 11735  12F0  3001               	movlw	1
 11736  12F1  07C4               	addwf	___fldiv@b+2,f
 11737  12F2  3000               	movlw	0
 11738  12F3  1803               	skipnc
 11739  12F4  3001               	movlw	1
 11740  12F5  07C5               	addwf	___fldiv@b+3,f
 11741  12F6                     l3481:
 11742  12F6  1C45               	btfss	___fldiv@b+3,0
 11743  12F7  2AF9               	goto	u5601
 11744  12F8  2AFA               	goto	u5600
 11745  12F9                     u5601:
 11746  12F9  2B19               	goto	l3487
 11747  12FA                     u5600:
 11748  12FA                     l3483:
 11749  12FA  0842               	movf	___fldiv@b,w
 11750  12FB  00C6               	movwf	??___fldiv
 11751  12FC  0843               	movf	___fldiv@b+1,w
 11752  12FD  00C7               	movwf	??___fldiv+1
 11753  12FE  0844               	movf	___fldiv@b+2,w
 11754  12FF  00C8               	movwf	??___fldiv+2
 11755  1300  0845               	movf	___fldiv@b+3,w
 11756  1301  00C9               	movwf	??___fldiv+3
 11757  1302  3001               	movlw	1
 11758  1303  00CA               	movwf	??___fldiv+4
 11759  1304                     u5615:
 11760  1304  0D49               	rlf	??___fldiv+3,w
 11761  1305  0CC9               	rrf	??___fldiv+3,f
 11762  1306  0CC8               	rrf	??___fldiv+2,f
 11763  1307  0CC7               	rrf	??___fldiv+1,f
 11764  1308  0CC6               	rrf	??___fldiv,f
 11765  1309                     u5610:
 11766  1309  0BCA               	decfsz	??___fldiv+4,f
 11767  130A  2B04               	goto	u5615
 11768  130B  0849               	movf	??___fldiv+3,w
 11769  130C  00C5               	movwf	___fldiv@b+3
 11770  130D  0848               	movf	??___fldiv+2,w
 11771  130E  00C4               	movwf	___fldiv@b+2
 11772  130F  0847               	movf	??___fldiv+1,w
 11773  1310  00C3               	movwf	___fldiv@b+1
 11774  1311  0846               	movf	??___fldiv,w
 11775  1312  00C2               	movwf	___fldiv@b
 11776  1313                     l3485:
 11777  1313  3001               	movlw	1
 11778  1314  07D0               	addwf	___fldiv@new_exp,f
 11779  1315  1803               	skipnc
 11780  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11781  1317  3000               	movlw	0
 11782  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11783  1319                     l3487:
 11784  1319  0851               	movf	___fldiv@new_exp+1,w
 11785  131A  3A80               	xorlw	128
 11786  131B  00FF               	movwf	btemp+1
 11787  131C  3080               	movlw	128
 11788  131D  027F               	subwf	btemp+1,w
 11789  131E  1D03               	skipz
 11790  131F  2B22               	goto	u5625
 11791  1320  30FF               	movlw	255
 11792  1321  0250               	subwf	___fldiv@new_exp,w
 11793  1322                     u5625:
 11794  1322  1C03               	skipc
 11795  1323  2B25               	goto	u5621
 11796  1324  2B26               	goto	u5620
 11797  1325                     u5621:
 11798  1325  2B34               	goto	l3491
 11799  1326                     u5620:
 11800  1326                     l3489:
 11801  1326  30FF               	movlw	255
 11802  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11803  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11804  1329  00D0               	movwf	___fldiv@new_exp
 11805  132A  3000               	movlw	0
 11806  132B  00D1               	movwf	___fldiv@new_exp+1
 11807  132C  3000               	movlw	0
 11808  132D  00C5               	movwf	___fldiv@b+3
 11809  132E  3000               	movlw	0
 11810  132F  00C4               	movwf	___fldiv@b+2
 11811  1330  3000               	movlw	0
 11812  1331  00C3               	movwf	___fldiv@b+1
 11813  1332  3000               	movlw	0
 11814  1333  00C2               	movwf	___fldiv@b
 11815  1334                     l3491:
 11816  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11817  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11818  1336  0851               	movf	___fldiv@new_exp+1,w
 11819  1337  3A80               	xorlw	128
 11820  1338  00FF               	movwf	btemp+1
 11821  1339  3080               	movlw	128
 11822  133A  027F               	subwf	btemp+1,w
 11823  133B  1D03               	skipz
 11824  133C  2B3F               	goto	u5635
 11825  133D  3001               	movlw	1
 11826  133E  0250               	subwf	___fldiv@new_exp,w
 11827  133F                     u5635:
 11828  133F  1803               	skipnc
 11829  1340  2B42               	goto	u5631
 11830  1341  2B43               	goto	u5630
 11831  1342                     u5631:
 11832  1342  2B50               	goto	l833
 11833  1343                     u5630:
 11834  1343                     l3493:
 11835  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11836  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11837  1345  01D0               	clrf	___fldiv@new_exp
 11838  1346  01D1               	clrf	___fldiv@new_exp+1
 11839  1347                     l3495:
 11840  1347  3000               	movlw	0
 11841  1348  00C5               	movwf	___fldiv@b+3
 11842  1349  3000               	movlw	0
 11843  134A  00C4               	movwf	___fldiv@b+2
 11844  134B  3000               	movlw	0
 11845  134C  00C3               	movwf	___fldiv@b+1
 11846  134D  3000               	movlw	0
 11847  134E  00C2               	movwf	___fldiv@b
 11848  134F                     l3497:
 11849  134F  01CF               	clrf	___fldiv@sign
 11850  1350                     l833:
 11851  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11852  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11853  1352  0850               	movf	___fldiv@new_exp,w
 11854  1353  00C6               	movwf	??___fldiv
 11855  1354  0846               	movf	??___fldiv,w
 11856  1355  00D6               	movwf	___fldiv@bexp
 11857  1356                     l3499:
 11858  1356  1C56               	btfss	___fldiv@bexp,0
 11859  1357  2B59               	goto	u5641
 11860  1358  2B5A               	goto	u5640
 11861  1359                     u5641:
 11862  1359  2B5C               	goto	l3503
 11863  135A                     u5640:
 11864  135A                     l3501:
 11865  135A  17C4               	bsf	___fldiv@b+2,7
 11866  135B  2B60               	goto	l835
 11867  135C                     l3503:
 11868  135C  307F               	movlw	127
 11869  135D  00C6               	movwf	??___fldiv
 11870  135E  0846               	movf	??___fldiv,w
 11871  135F  05C4               	andwf	___fldiv@b+2,f
 11872  1360                     l835:
 11873  1360  0856               	movf	___fldiv@bexp,w
 11874  1361  00C6               	movwf	??___fldiv
 11875  1362  1003               	clrc
 11876  1363  0C46               	rrf	??___fldiv,w
 11877  1364  00C7               	movwf	??___fldiv+1
 11878  1365  0847               	movf	??___fldiv+1,w
 11879  1366  00C5               	movwf	___fldiv@b+3
 11880  1367  084F               	movf	___fldiv@sign,w
 11881  1368  00C6               	movwf	??___fldiv
 11882  1369  0846               	movf	??___fldiv,w
 11883  136A  04C5               	iorwf	___fldiv@b+3,f
 11884  136B  2A04               	goto	l3411
 11885  136C                     l813:
 11886  136C  0008               	return
 11887  136D                     __end_of___fldiv:
 11888                           
 11889                           	psect	text40
 11890  1DD9                     __ptext40:	
 11891 ;; *************** function _Canal_ADC *****************
 11892 ;; Defined at:
 11893 ;;		line 10 in file "ADC.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;  x               2    0[COMMON] unsigned short 
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;		None
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  2    0[COMMON] unsigned int 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11907 ;;      Params:         2       0       0       0       0
 11908 ;;      Locals:         0       0       0       0       0
 11909 ;;      Temps:          0       0       0       0       0
 11910 ;;      Totals:         2       0       0       0       0
 11911 ;;Total ram usage:        2 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_ADC_1
 11917 ;;		_ADC_2
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           
 11922                           ;psect for function _Canal_ADC
 11923  1DD9                     _Canal_ADC:
 11924  1DD9                     l3015:	
 11925                           ;incstack = 0
 11926                           ; Regs used in _Canal_ADC: [wreg-fsr0h+status,2+status,0]
 11927                           
 11928                           
 11929                           ;ADC.c: 11:     switch(x){
 11930  1DD9  2E51               	goto	l3019
 11931  1DDA                     l173:	
 11932                           ;ADC.c: 13:         case 0:
 11933                           
 11934                           
 11935                           ;ADC.c: 14:             ADCON0bits.CHS3 = 0;
 11936  1DDA  1283               	bcf	3,5	;RP0=0, select bank0
 11937  1DDB  1303               	bcf	3,6	;RP1=0, select bank0
 11938  1DDC  129F               	bcf	31,5	;volatile
 11939                           
 11940                           ;ADC.c: 15:             ADCON0bits.CHS2 = 0;
 11941  1DDD  121F               	bcf	31,4	;volatile
 11942                           
 11943                           ;ADC.c: 16:             ADCON0bits.CHS1 = 0;
 11944  1DDE  119F               	bcf	31,3	;volatile
 11945                           
 11946                           ;ADC.c: 17:             ADCON0bits.CHS0 = 0;
 11947  1DDF  111F               	bcf	31,2	;volatile
 11948                           
 11949                           ;ADC.c: 18:             break;
 11950  1DE0  2E88               	goto	l191
 11951  1DE1                     l175:	
 11952                           ;ADC.c: 19:         case 1:
 11953                           
 11954                           
 11955                           ;ADC.c: 20:             ADCON0bits.CHS3 = 0;
 11956  1DE1  1283               	bcf	3,5	;RP0=0, select bank0
 11957  1DE2  1303               	bcf	3,6	;RP1=0, select bank0
 11958  1DE3  129F               	bcf	31,5	;volatile
 11959                           
 11960                           ;ADC.c: 21:             ADCON0bits.CHS2 = 0;
 11961  1DE4  121F               	bcf	31,4	;volatile
 11962                           
 11963                           ;ADC.c: 22:             ADCON0bits.CHS1 = 0;
 11964  1DE5  119F               	bcf	31,3	;volatile
 11965                           
 11966                           ;ADC.c: 23:             ADCON0bits.CHS0 = 1;
 11967  1DE6  151F               	bsf	31,2	;volatile
 11968                           
 11969                           ;ADC.c: 24:             break;
 11970  1DE7  2E88               	goto	l191
 11971  1DE8                     l176:	
 11972                           ;ADC.c: 25:         case 2:
 11973                           
 11974                           
 11975                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
 11976  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
 11977  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
 11978  1DEA  129F               	bcf	31,5	;volatile
 11979                           
 11980                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
 11981  1DEB  121F               	bcf	31,4	;volatile
 11982                           
 11983                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
 11984  1DEC  159F               	bsf	31,3	;volatile
 11985                           
 11986                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
 11987  1DED  111F               	bcf	31,2	;volatile
 11988                           
 11989                           ;ADC.c: 30:             break;
 11990  1DEE  2E88               	goto	l191
 11991  1DEF                     l177:	
 11992                           ;ADC.c: 31:         case 3:
 11993                           
 11994                           
 11995                           ;ADC.c: 32:             ADCON0bits.CHS3 = 0;
 11996  1DEF  1283               	bcf	3,5	;RP0=0, select bank0
 11997  1DF0  1303               	bcf	3,6	;RP1=0, select bank0
 11998  1DF1  129F               	bcf	31,5	;volatile
 11999                           
 12000                           ;ADC.c: 33:             ADCON0bits.CHS2 = 0;
 12001  1DF2  121F               	bcf	31,4	;volatile
 12002                           
 12003                           ;ADC.c: 34:             ADCON0bits.CHS1 = 1;
 12004  1DF3  159F               	bsf	31,3	;volatile
 12005                           
 12006                           ;ADC.c: 35:             ADCON0bits.CHS0 = 1;
 12007  1DF4  151F               	bsf	31,2	;volatile
 12008                           
 12009                           ;ADC.c: 36:             break;
 12010  1DF5  2E88               	goto	l191
 12011  1DF6                     l178:	
 12012                           ;ADC.c: 37:         case 4:
 12013                           
 12014                           
 12015                           ;ADC.c: 38:             ADCON0bits.CHS3 = 0;
 12016  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
 12017  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
 12018  1DF8  129F               	bcf	31,5	;volatile
 12019                           
 12020                           ;ADC.c: 39:             ADCON0bits.CHS2 = 1;
 12021  1DF9  161F               	bsf	31,4	;volatile
 12022                           
 12023                           ;ADC.c: 40:             ADCON0bits.CHS1 = 0;
 12024  1DFA  119F               	bcf	31,3	;volatile
 12025                           
 12026                           ;ADC.c: 41:             ADCON0bits.CHS0 = 0;
 12027  1DFB  111F               	bcf	31,2	;volatile
 12028                           
 12029                           ;ADC.c: 42:             break;
 12030  1DFC  2E88               	goto	l191
 12031  1DFD                     l179:	
 12032                           ;ADC.c: 43:         case 5:
 12033                           
 12034                           
 12035                           ;ADC.c: 44:             ADCON0bits.CHS3 = 0;
 12036  1DFD  1283               	bcf	3,5	;RP0=0, select bank0
 12037  1DFE  1303               	bcf	3,6	;RP1=0, select bank0
 12038  1DFF  129F               	bcf	31,5	;volatile
 12039                           
 12040                           ;ADC.c: 45:             ADCON0bits.CHS2 = 1;
 12041  1E00  161F               	bsf	31,4	;volatile
 12042                           
 12043                           ;ADC.c: 46:             ADCON0bits.CHS1 = 0;
 12044  1E01  119F               	bcf	31,3	;volatile
 12045                           
 12046                           ;ADC.c: 47:             ADCON0bits.CHS0 = 1;
 12047  1E02  151F               	bsf	31,2	;volatile
 12048                           
 12049                           ;ADC.c: 48:             break;
 12050  1E03  2E88               	goto	l191
 12051  1E04                     l180:	
 12052                           ;ADC.c: 49:         case 6:
 12053                           
 12054                           
 12055                           ;ADC.c: 50:             ADCON0bits.CHS3 = 0;
 12056  1E04  1283               	bcf	3,5	;RP0=0, select bank0
 12057  1E05  1303               	bcf	3,6	;RP1=0, select bank0
 12058  1E06  129F               	bcf	31,5	;volatile
 12059                           
 12060                           ;ADC.c: 51:             ADCON0bits.CHS2 = 1;
 12061  1E07  161F               	bsf	31,4	;volatile
 12062                           
 12063                           ;ADC.c: 52:             ADCON0bits.CHS1 = 1;
 12064  1E08  159F               	bsf	31,3	;volatile
 12065                           
 12066                           ;ADC.c: 53:             ADCON0bits.CHS0 = 0;
 12067  1E09  111F               	bcf	31,2	;volatile
 12068                           
 12069                           ;ADC.c: 54:             break;
 12070  1E0A  2E88               	goto	l191
 12071  1E0B                     l181:	
 12072                           ;ADC.c: 55:         case 7:
 12073                           
 12074                           
 12075                           ;ADC.c: 56:             ADCON0bits.CHS3 = 0;
 12076  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
 12077  1E0C  1303               	bcf	3,6	;RP1=0, select bank0
 12078  1E0D  129F               	bcf	31,5	;volatile
 12079                           
 12080                           ;ADC.c: 57:             ADCON0bits.CHS2 = 1;
 12081  1E0E  161F               	bsf	31,4	;volatile
 12082                           
 12083                           ;ADC.c: 58:             ADCON0bits.CHS1 = 1;
 12084  1E0F  159F               	bsf	31,3	;volatile
 12085                           
 12086                           ;ADC.c: 59:             ADCON0bits.CHS0 = 1;
 12087  1E10  151F               	bsf	31,2	;volatile
 12088                           
 12089                           ;ADC.c: 60:             break;
 12090  1E11  2E88               	goto	l191
 12091  1E12                     l182:	
 12092                           ;ADC.c: 61:         case 8:
 12093                           
 12094                           
 12095                           ;ADC.c: 62:             ADCON0bits.CHS3 = 1;
 12096  1E12  1283               	bcf	3,5	;RP0=0, select bank0
 12097  1E13  1303               	bcf	3,6	;RP1=0, select bank0
 12098  1E14  169F               	bsf	31,5	;volatile
 12099                           
 12100                           ;ADC.c: 63:             ADCON0bits.CHS2 = 0;
 12101  1E15  121F               	bcf	31,4	;volatile
 12102                           
 12103                           ;ADC.c: 64:             ADCON0bits.CHS1 = 0;
 12104  1E16  119F               	bcf	31,3	;volatile
 12105                           
 12106                           ;ADC.c: 65:             ADCON0bits.CHS0 = 0;
 12107  1E17  111F               	bcf	31,2	;volatile
 12108                           
 12109                           ;ADC.c: 66:             break;
 12110  1E18  2E88               	goto	l191
 12111  1E19                     l183:	
 12112                           ;ADC.c: 67:         case 9:
 12113                           
 12114                           
 12115                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
 12116  1E19  1283               	bcf	3,5	;RP0=0, select bank0
 12117  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
 12118  1E1B  169F               	bsf	31,5	;volatile
 12119                           
 12120                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
 12121  1E1C  121F               	bcf	31,4	;volatile
 12122                           
 12123                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
 12124  1E1D  119F               	bcf	31,3	;volatile
 12125                           
 12126                           ;ADC.c: 71:             ADCON0bits.CHS0 = 1;
 12127  1E1E  151F               	bsf	31,2	;volatile
 12128                           
 12129                           ;ADC.c: 72:             break;
 12130  1E1F  2E88               	goto	l191
 12131  1E20                     l184:	
 12132                           ;ADC.c: 73:         case 10:
 12133                           
 12134                           
 12135                           ;ADC.c: 74:             ADCON0bits.CHS3 = 1;
 12136  1E20  1283               	bcf	3,5	;RP0=0, select bank0
 12137  1E21  1303               	bcf	3,6	;RP1=0, select bank0
 12138  1E22  169F               	bsf	31,5	;volatile
 12139                           
 12140                           ;ADC.c: 75:             ADCON0bits.CHS2 = 0;
 12141  1E23  121F               	bcf	31,4	;volatile
 12142                           
 12143                           ;ADC.c: 76:             ADCON0bits.CHS1 = 1;
 12144  1E24  159F               	bsf	31,3	;volatile
 12145                           
 12146                           ;ADC.c: 77:             ADCON0bits.CHS0 = 0;
 12147  1E25  111F               	bcf	31,2	;volatile
 12148                           
 12149                           ;ADC.c: 78:             break;
 12150  1E26  2E88               	goto	l191
 12151  1E27                     l185:	
 12152                           ;ADC.c: 79:         case 11:
 12153                           
 12154                           
 12155                           ;ADC.c: 80:             ADCON0bits.CHS3 = 1;
 12156  1E27  1283               	bcf	3,5	;RP0=0, select bank0
 12157  1E28  1303               	bcf	3,6	;RP1=0, select bank0
 12158  1E29  169F               	bsf	31,5	;volatile
 12159                           
 12160                           ;ADC.c: 81:             ADCON0bits.CHS2 = 0;
 12161  1E2A  121F               	bcf	31,4	;volatile
 12162                           
 12163                           ;ADC.c: 82:             ADCON0bits.CHS1 = 1;
 12164  1E2B  159F               	bsf	31,3	;volatile
 12165                           
 12166                           ;ADC.c: 83:             ADCON0bits.CHS0 = 1;
 12167  1E2C  151F               	bsf	31,2	;volatile
 12168                           
 12169                           ;ADC.c: 84:             break;
 12170  1E2D  2E88               	goto	l191
 12171  1E2E                     l186:	
 12172                           ;ADC.c: 85:         case 12:
 12173                           
 12174                           
 12175                           ;ADC.c: 86:             ADCON0bits.CHS3 = 1;
 12176  1E2E  1283               	bcf	3,5	;RP0=0, select bank0
 12177  1E2F  1303               	bcf	3,6	;RP1=0, select bank0
 12178  1E30  169F               	bsf	31,5	;volatile
 12179                           
 12180                           ;ADC.c: 87:             ADCON0bits.CHS2 = 1;
 12181  1E31  161F               	bsf	31,4	;volatile
 12182                           
 12183                           ;ADC.c: 88:             ADCON0bits.CHS1 = 0;
 12184  1E32  119F               	bcf	31,3	;volatile
 12185                           
 12186                           ;ADC.c: 89:             ADCON0bits.CHS0 = 0;
 12187  1E33  111F               	bcf	31,2	;volatile
 12188                           
 12189                           ;ADC.c: 90:             break;
 12190  1E34  2E88               	goto	l191
 12191  1E35                     l187:	
 12192                           ;ADC.c: 91:         case 13:
 12193                           
 12194                           
 12195                           ;ADC.c: 92:             ADCON0bits.CHS3 = 1;
 12196  1E35  1283               	bcf	3,5	;RP0=0, select bank0
 12197  1E36  1303               	bcf	3,6	;RP1=0, select bank0
 12198  1E37  169F               	bsf	31,5	;volatile
 12199                           
 12200                           ;ADC.c: 93:             ADCON0bits.CHS2 = 1;
 12201  1E38  161F               	bsf	31,4	;volatile
 12202                           
 12203                           ;ADC.c: 94:             ADCON0bits.CHS1 = 0;
 12204  1E39  119F               	bcf	31,3	;volatile
 12205                           
 12206                           ;ADC.c: 95:             ADCON0bits.CHS0 = 1;
 12207  1E3A  151F               	bsf	31,2	;volatile
 12208                           
 12209                           ;ADC.c: 96:             break;
 12210  1E3B  2E88               	goto	l191
 12211  1E3C                     l188:	
 12212                           ;ADC.c: 97:         case 14:
 12213                           
 12214                           
 12215                           ;ADC.c: 98:             ADCON0bits.CHS3 = 1;
 12216  1E3C  1283               	bcf	3,5	;RP0=0, select bank0
 12217  1E3D  1303               	bcf	3,6	;RP1=0, select bank0
 12218  1E3E  169F               	bsf	31,5	;volatile
 12219                           
 12220                           ;ADC.c: 99:             ADCON0bits.CHS2 = 1;
 12221  1E3F  161F               	bsf	31,4	;volatile
 12222                           
 12223                           ;ADC.c: 100:             ADCON0bits.CHS1 = 1;
 12224  1E40  159F               	bsf	31,3	;volatile
 12225                           
 12226                           ;ADC.c: 101:             ADCON0bits.CHS0 = 0;
 12227  1E41  111F               	bcf	31,2	;volatile
 12228                           
 12229                           ;ADC.c: 102:             break;
 12230  1E42  2E88               	goto	l191
 12231  1E43                     l189:	
 12232                           ;ADC.c: 103:         case 15:
 12233                           
 12234                           
 12235                           ;ADC.c: 104:             ADCON0bits.CHS3 = 1;
 12236  1E43  1283               	bcf	3,5	;RP0=0, select bank0
 12237  1E44  1303               	bcf	3,6	;RP1=0, select bank0
 12238  1E45  169F               	bsf	31,5	;volatile
 12239                           
 12240                           ;ADC.c: 105:             ADCON0bits.CHS2 = 1;
 12241  1E46  161F               	bsf	31,4	;volatile
 12242                           
 12243                           ;ADC.c: 106:             ADCON0bits.CHS1 = 1;
 12244  1E47  159F               	bsf	31,3	;volatile
 12245                           
 12246                           ;ADC.c: 107:             ADCON0bits.CHS0 = 1;
 12247  1E48  151F               	bsf	31,2	;volatile
 12248                           
 12249                           ;ADC.c: 108:             break;
 12250  1E49  2E88               	goto	l191
 12251  1E4A                     l190:	
 12252                           ;ADC.c: 109:         default:
 12253                           
 12254                           
 12255                           ;ADC.c: 110:             ADCON0bits.CHS3 = 0;
 12256  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
 12257  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
 12258  1E4C  129F               	bcf	31,5	;volatile
 12259                           
 12260                           ;ADC.c: 111:             ADCON0bits.CHS2 = 0;
 12261  1E4D  121F               	bcf	31,4	;volatile
 12262                           
 12263                           ;ADC.c: 112:             ADCON0bits.CHS1 = 0;
 12264  1E4E  119F               	bcf	31,3	;volatile
 12265                           
 12266                           ;ADC.c: 113:             ADCON0bits.CHS0 = 0;
 12267  1E4F  111F               	bcf	31,2	;volatile
 12268                           
 12269                           ;ADC.c: 114:             break;
 12270  1E50  2E88               	goto	l191
 12271  1E51                     l3019:
 12272                           
 12273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12274                           ; Switch size 1, requested type "simple"
 12275                           ; Number of cases is 1, Range of values is 0 to 0
 12276                           ; switch strategies available:
 12277                           ; Name         Instructions Cycles
 12278                           ; simple_byte            4     3 (average)
 12279                           ; direct_byte           11     8 (fixed)
 12280                           ; jumptable            260     6 (fixed)
 12281                           ;	Chosen strategy is simple_byte
 12282  1E51  0871               	movf	Canal_ADC@x+1,w
 12283  1E52  3A00               	xorlw	0	; case 0
 12284  1E53  1903               	skipnz
 12285  1E54  2E56               	goto	l4017
 12286  1E55  2E4A               	goto	l190
 12287  1E56                     l4017:
 12288                           
 12289                           ; Switch size 1, requested type "simple"
 12290                           ; Number of cases is 16, Range of values is 0 to 15
 12291                           ; switch strategies available:
 12292                           ; Name         Instructions Cycles
 12293                           ; simple_byte           49    25 (average)
 12294                           ; direct_byte           56     8 (fixed)
 12295                           ; jumptable            260     6 (fixed)
 12296                           ;	Chosen strategy is simple_byte
 12297  1E56  0870               	movf	Canal_ADC@x,w
 12298  1E57  3A00               	xorlw	0	; case 0
 12299  1E58  1903               	skipnz
 12300  1E59  2DDA               	goto	l173
 12301  1E5A  3A01               	xorlw	1	; case 1
 12302  1E5B  1903               	skipnz
 12303  1E5C  2DE1               	goto	l175
 12304  1E5D  3A03               	xorlw	3	; case 2
 12305  1E5E  1903               	skipnz
 12306  1E5F  2DE8               	goto	l176
 12307  1E60  3A01               	xorlw	1	; case 3
 12308  1E61  1903               	skipnz
 12309  1E62  2DEF               	goto	l177
 12310  1E63  3A07               	xorlw	7	; case 4
 12311  1E64  1903               	skipnz
 12312  1E65  2DF6               	goto	l178
 12313  1E66  3A01               	xorlw	1	; case 5
 12314  1E67  1903               	skipnz
 12315  1E68  2DFD               	goto	l179
 12316  1E69  3A03               	xorlw	3	; case 6
 12317  1E6A  1903               	skipnz
 12318  1E6B  2E04               	goto	l180
 12319  1E6C  3A01               	xorlw	1	; case 7
 12320  1E6D  1903               	skipnz
 12321  1E6E  2E0B               	goto	l181
 12322  1E6F  3A0F               	xorlw	15	; case 8
 12323  1E70  1903               	skipnz
 12324  1E71  2E12               	goto	l182
 12325  1E72  3A01               	xorlw	1	; case 9
 12326  1E73  1903               	skipnz
 12327  1E74  2E19               	goto	l183
 12328  1E75  3A03               	xorlw	3	; case 10
 12329  1E76  1903               	skipnz
 12330  1E77  2E20               	goto	l184
 12331  1E78  3A01               	xorlw	1	; case 11
 12332  1E79  1903               	skipnz
 12333  1E7A  2E27               	goto	l185
 12334  1E7B  3A07               	xorlw	7	; case 12
 12335  1E7C  1903               	skipnz
 12336  1E7D  2E2E               	goto	l186
 12337  1E7E  3A01               	xorlw	1	; case 13
 12338  1E7F  1903               	skipnz
 12339  1E80  2E35               	goto	l187
 12340  1E81  3A03               	xorlw	3	; case 14
 12341  1E82  1903               	skipnz
 12342  1E83  2E3C               	goto	l188
 12343  1E84  3A01               	xorlw	1	; case 15
 12344  1E85  1903               	skipnz
 12345  1E86  2E43               	goto	l189
 12346  1E87  2E4A               	goto	l190
 12347  1E88                     l191:
 12348  1E88  0008               	return
 12349  1E89                     __end_of_Canal_ADC:
 12350  007E                     btemp	set	126	;btemp
 12351  007E                     wtemp0	set	126
 12352                           
 12353                           	psect	config
 12354                           
 12355                           ;Config register CONFIG1 @ 0x2007
 12356                           ;	Oscillator Selection bits
 12357                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 12358                           ;	Watchdog Timer Enable bit
 12359                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12360                           ;	Power-up Timer Enable bit
 12361                           ;	PWRTE = OFF, PWRT disabled
 12362                           ;	RE3/MCLR pin function select bit
 12363                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12364                           ;	Code Protection bit
 12365                           ;	CP = OFF, Program memory code protection is disabled
 12366                           ;	Data Code Protection bit
 12367                           ;	CPD = OFF, Data memory code protection is disabled
 12368                           ;	Brown Out Reset Selection bits
 12369                           ;	BOREN = ON, BOR enabled
 12370                           ;	Internal External Switchover bit
 12371                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12372                           ;	Fail-Safe Clock Monitor Enabled bit
 12373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12374                           ;	Low Voltage Programming Enable bit
 12375                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12376                           ;	In-Circuit Debugger Mode bit
 12377                           ;	DEBUG = 0x1, unprogrammed default
 12378  2007                     	org	8199
 12379  2007  23D1               	dw	9169
 12380                           
 12381                           ;Config register CONFIG2 @ 0x2008
 12382                           ;	Brown-out Reset Selection bit
 12383                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12384                           ;	Flash Program Memory Self Write Enable bits
 12385                           ;	WRT = OFF, Write protection off
 12386  2008                     	org	8200
 12387  2008  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    144
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     44      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 25
		 -> STR_4(CODE[25]), data(BANK1[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> data(BANK1[16]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Write_USART_String->_Write_USART
    _Lcd_Write_String->_LCD_CMD
    _LCD_CMD->_Puerto
    _Lcd_Set_Cursor->_datosLCD
    _Lcd_Init->_datosLCD
    _LCD_Limpia->_datosLCD
    _datosLCD->_Puerto
    _ADC_2->___xxtofl
    _ADC_1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_2->___fldiv
    _ADC_1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   47762
                                             41 BANK1      3     3      0
                              _ADC_1
                              _ADC_2
                         _LCD_Limpia
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _Write_USART
                 _Write_USART_String
                           __baudios
                         _config_ADC
                           _config_P
                       _config_rcsta
                       _config_txsta
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   32312
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     609
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_P                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     516
                                              3 COMMON     7     5      2
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     198
                                              1 COMMON     2     2      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     560
                                              4 COMMON     4     3      1
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Limpia                                           0     0      0     198
                           _datosLCD
 ---------------------------------------------------------------------------------
 (2) _datosLCD                                             3     3      0     198
                                              1 COMMON     3     3      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (3) _Puerto                                               1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_2                                                4     4      0    6846
                                             56 BANK0      4     4      0
                          _Canal_ADC
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_1                                                4     4      0    6846
                                             56 BANK0      4     4      0
                          _Canal_ADC
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Canal_ADC                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_1
     _Canal_ADC
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_2
     _Canal_ADC
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _LCD_Limpia
     _datosLCD
       _Puerto
   _Lcd_Init
     _datosLCD
       _Puerto
   _Lcd_Set_Cursor
     _datosLCD
       _Puerto
   _Lcd_Write_String
     _LCD_CMD
       _Puerto
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _config_ADC
   _config_P
   _config_rcsta
   _config_txsta
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 15:56:05 2021

               ___fldiv@aexp 0057                 ___fldiv@bexp 0056                            pc 0002  
               ___fldiv@sign 004F                  ?_LCD_Limpia 0070                           l73 186E  
                         l85 1CBA                           l79 1C42                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076  
       __size_of_Write_USART 000C                          l130 19CE                          l122 19B0  
                        l131 19CF                          l123 19B3                          l211 1844  
                        l132 19D5                          l124 19B9                          l220 1850  
                        l133 19D6                          l125 19BA                          l141 188B  
                        l134 19DC                          l126 19C0                          l150 0077  
                        l214 1832                          l135 19DD                          l127 19C1  
                        l136 19E3                          l128 19C7                          l144 18AD  
                        l208 182A                          l129 19C8                          l217 1846  
                        l401 05C6                          l138 19E4                          l162 1A26  
                        l226 196C                          l147 185D                          l180 1E04  
                        l156 18D1                          l181 1E0B                          l173 1DDA  
                        l341 0C9E                          l190 1E4A                          l182 1E12  
                        l430 191A                          l334 1577                          l183 1E19  
                        l175 1DE1                          l191 1E88                          l184 1E20  
                        l176 1DE8                          l424 07F2                          l185 1E27  
                        l177 1DEF                          l169 1825                          l409 072D  
                        l186 1E2E                          l178 1DF6                          l602 1152  
                        l187 1E35                          l179 1DFD                          l363 013D  
                        l188 1E3C                          l428 1902                          l189 1E43  
                        l614 1A87                          l622 1DBF                          l615 1AA3  
                        l623 1DD8                          l631 1D36                          l616 1AB8  
                        l464 1BCB                          l801 18F5                          l641 1D36  
                        l609 1182                          l394 0582                          l811 11EC  
                        l619 1D53                          l627 000D                          l813 136C  
                        l901 1EF0                          l645 1FFF                          l581 093F  
                        l638 1D21                          l646 1F71                          l734 1A6A  
                        l656 1FF2                          l744 19A6                          l833 1350  
                        l761 1659                          l649 1FC2                          l594 1B65  
                        l835 1360                          l827 12DE                          l851 0FFF  
                        l755 15DB                          l915 1014                          l908 1F0C  
                        l780 1771                          l684 1B0C                          l909 1F18  
                        l870 192F                          l598 118F                          l863 0FF3  
                        l759 1682                          l599 10F4                          l872 1941  
                        l776 174D                          l768 17FF                          l857 0F6B  
                        l786 1793                          l797 17F3                          l789 17D1  
                        l798 17FF                          l895 1EAB                          l897 1F42  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          fsr0 0004                          indf 0000  
               ___awmod@sign 0076                 ___flmul@aexp 0036                 ___flmul@bexp 0037  
               ___flmul@sign 0031                 ___flmul@temp 003C                 ___flmul@prod 0038  
__size_of_Write_USART_String 002B              __end_of_LCD_CMD 188C                 ___fltol@exp1 005B  
                       l3001 0FE7                         l3003 0FEB                         l3011 1846  
                       l3005 0FEC                         l3013 184C                         l3101 0BE3  
                       l3015 1DD9                         l3007 0FF7                         l3031 187C  
                       l3111 1004                         l3103 0BEA                         l3041 1890  
                       l3033 1880                         l3025 1870                         l3201 1142  
                       l3113 1005                         l3019 1E51                         l3051 18A4  
                       l3043 1896                         l3035 1883                         l3027 1873  
                       l3203 1143                         l3123 1F43                         l3115 100B  
                       l3107 0C72                         l3045 1899                         l3037 1887  
                       l3029 1879                         l3301 000D                         l3221 1177  
                       l3213 115E                         l3205 114C                         l3141 1F89  
                       l3125 1F56                         l3061 1483                         l3053 1370  
                       l3117 1011                         l3047 189D                         l3039 188D  
                       l3311 1CD1                         l3231 18FC                         l3223 1187  
                       l3207 1156                         l3215 1170                         l3151 1FB4  
                       l3143 1F92                         l3135 1F72                         l3063 1489  
                       l3055 1376                         l3119 1013                         l3071 0943  
                       l4015 0153                         l4017 1E56                         l3401 11E1  
                       l2521 1929                         l3049 18A0                         l3321 1CF5  
                       l3313 1CE6                         l3305 1CBB                         l3241 1B66  
                       l3233 1909                         l3161 1FCE                         l3153 1FBC  
                       l3145 1F9B                         l3137 1F78                         l3129 1F5F  
                       l2601 1B1D                         l3073 0947                         l3411 1204  
                       l3403 11E2                         l2523 1938                         l2515 191C  
                       l2531 19AC                         l3315 1CE7                         l3307 1CC8  
                       l3251 1B93                         l3243 1B76                         l3235 1910  
                       l3227 18F6                         l3171 1FF7                         l3155 1FC6  
                       l3163 1FE0                         l3147 1FA9                         l3139 1F87  
                       l3067 1534                         l2611 1B36                         l2603 1B22  
                       l3083 0A38                         l3075 0949                         l3501 135A  
                       l3421 121B                         l3405 11E4                         l2525 193D  
                       l2517 191E                         l2541 19D3                         l2533 19B7  
                       l2701 15B2                         l3317 1CEF                         l3253 1BA5  
                       l3245 1B79                         l3261 1BC3                         l3341 1AB9  
                       l3237 1916                         l3229 18F8                         l3181 10E8  
                       l3149 1FB3                         l2613 1B3A                         l2605 1B28  
                       l2621 1B57                         l3085 0A3F                         l3077 0950  
                       l3093 0AF4                         l3503 135C                         l3431 1247  
                       l3423 122D                         l3407 11F4                         l3415 120D  
                       l2519 1925                         l3511 1E8F                         l2543 19DA  
                       l2535 19BE                         l3271 1AB5                         l2711 15C3  
                       l2703 15B3                         l3335 1D16                         l3327 1CFD  
                       l3319 1CF1                         l3255 1BB3                         l3247 1B86  
                       l3351 1AE7                         l3343 1AC1                         l3191 110E  
                       l3175 10D2                         l2631 1A29                         l2551 08DE  
                       l2623 1B5C                         l2615 1B44                         l2607 1B2B  
                       l3095 0AFB                         l3433 124C                         l3441 126C  
                       l3425 1235                         l3417 1212                         l3409 1200  
                       l3521 1EBC                         l3513 1E93                         l2545 19E1  
                       l2537 19C5                         l2529 19A8                         l3601 18C0  
                       l3273 1AB7                         l3265 1A6B                         l3281 1D67  
                       l2801 16E7                         l2721 15E1                         l2713 15C8  
                       l2705 15B9                         l3361 18D2                         l3337 1D26  
                       l3329 1D0F                         l3257 1BB4                         l3249 1B8A  
                       l3353 1AF5                         l3345 1AC4                         l3193 1110  
                       l3177 10DF                         l3169 1FE7                         l2641 1A41  
                       l2633 1A2F                         l2561 08F2                         l2553 08E3  
                       l2625 1B61                         l2617 1B4A                         l2609 1B32  
                       l3089 0AC7                         l3451 1297                         l3443 127E  
                       l3435 125E                         l3427 123D                         l3371 119D  
                       l3531 1EE7                         l3523 1EC1                         l3515 1EA3  
                       l2539 19CC                         l3603 18C6                         l3611 1A04  
                       l3267 1A7F                         l3291 1DD5                         l3283 1D6F  
                       l2811 1755                         l2803 1725                         l2731 15F5  
                       l2723 15E5                         l2715 15D0                         l2707 15BD  
                       l3363 18D6                         l3339 1D2B                         l3259 1BBD  
                       l3355 1AFE                         l3347 1AD1                         l3195 1119  
                       l3187 10F5                         l2643 1A52                         l2635 1A32  
                       l2651 1A66                         l2571 0908                         l2563 08F4  
                       l2555 08E5                         l2547 08D7                         l2619 1B51  
                       l3461 12AF                         l3453 129F                         l3445 127F  
                       l3437 1262                         l3429 1245                         l3381 11B4  
                       l3373 11A1                         l2901 0CE7                         l3541 1F1A  
                       l3533 1EF7                         l3525 1ECE                         l3517 1EB3  
                       l3509 1E8A                         l3621 1BD8                         l3605 18CB  
                       l3613 1A0A                         l3269 1A9B                         l3293 1DD7  
                       l3285 1D73                         l3277 1D37                         l2821 1770  
                       l2813 175A                         l2805 172B                         l2741 1609  
                       l2733 15F9                         l2725 15E9                         l2717 15D1  
                       l2709 15BE                         l3349 1AD5                         l3357 1B04  
                       l3197 1122                         l3189 10FD                         l2645 1A58  
                       l2637 1A39                         l2629 1A27                         l2661 197D  
                       l2581 092B                         l2573 090C                         l2565 08FA  
                       l2557 08E9                         l2549 08DA                         l3701 017D  
                       l3471 12C7                         l3463 12B8                         l3455 12A1  
                       l3447 128D                         l3439 1263                         l3391 11CA  
                       l3383 11B5                         l3375 11A2                         l3367 1190  
                       l2911 0D03                         l2903 0CEF                         l3543 1F30  
                       l3535 1F02                         l3527 1ED5                         l3623 1BD9  
                       l3615 1BCC                         l3631 1C43                         l3607 19E5  
                       l3287 1D97                         l3279 1D4B                         l2823 1775  
                       l2831 1781                         l2807 1730                         l2751 161D  
                       l2743 160D                         l2735 15FD                         l2727 15ED  
                       l2719 15D3                         l3199 1134                         l2647 1A59  
                       l2639 1A3D                         l2671 199C                         l2663 1981  
                       l2655 196D                         l2575 091D                         l2567 08FD  
                       l2583 0931                         l2559 08EE                         l2591 1B0D  
                       l3711 01BB                         l3703 0181                         l3481 12F6  
                       l3473 12DB                         l3457 12AA                         l3465 12BE  
                       l3449 1291                         l3393 11CE                         l3377 11A7  
                       l3385 11B7                         l3369 1197                         l2921 0D46  
                       l2905 0CF1                         l3545 1F35                         l3537 1F06  
                       l3529 1ED9                         l3625 1BE0                         l3617 1BD4  
                       l3641 1C58                         l3633 1C4C                         l3609 19E8  
                       l3561 1826                         l3553 185E                         l3289 1D9B  
                       l3297 0003                         l2825 1778                         l2817 1763  
                       l2809 173F                         l2833 1785                         l2761 165D  
                       l2753 1621                         l2745 1611                         l2737 1601  
                       l2729 15F1                         l2681 1585                         l2649 1A60  
                       l2665 1985                         l2657 1973                         l2673 19A2  
                       l2585 0936                         l2577 0923                         l2569 0904  
                       l2593 1B0E                         l3801 0517                         l3721 020B  
                       l3713 01D4                         l3705 019A                         l3491 1334  
                       l3483 12FA                         l3467 12C2                         l3459 12AE  
                       l3395 11CF                         l3387 11BF                         l3379 11AC  
                       l2931 0DCF                         l2923 0D62                         l2915 0D0C  
                       l2907 0CF9                         l3547 1F39                         l3539 1F10  
                       l3627 1BE4                         l3619 1BD7                         l3643 1C5C  
                       l3635 1C4F                         l3571 0017                         l3555 1862  
                       l3563 183B                         l3299 000B                         l2851 17CD  
                       l2843 1798                         l2835 1786                         l2827 177A  
                       l2819 176C                         l2771 1676                         l2763 1666  
                       l2747 1615                         l2739 1605                         l2755 1625  
                       l2691 159C                         l2683 1589                         l2667 198F  
                       l2659 1976                         l2587 093B                         l2579 0924  
                       l2595 1B12                         l3811 0593                         l3803 051C  
                       l3731 0298                         l3723 020F                         l3715 01DF  
                       l3707 01B3                         l3651 0086                         l3493 1343  
                       l3485 1313                         l3477 12E3                         l3469 12C3  
                       l3397 11D4                         l3389 11C4                         l2941 0E42  
                       l2933 0DDF                         l2925 0D8E                         l2917 0D1C  
                       l2909 0CFE                         l3549 1F3A                         l3629 1C3D  
                       l3645 1CB5                         l3637 1C50                         l3581 0042  
                       l3573 001D                         l3557 1864                         l3565 182B  
                       l2861 17E9                         l2853 17D6                         l2845 179D  
                       l2837 178A                         l2829 177F                         l2781 1694  
                       l2765 1668                         l2773 167A                         l2757 1626  
                       l2749 1619                         l2693 159D                         l2685 158A  
                       l2677 1578                         l2669 1995                         l2597 1B17  
                       l3821 05C0                         l3813 0597                         l3805 0557  
                       l3741 031A                         l3733 02A1                         l3725 0215  
                       l3717 01E5                         l3709 01B7                         l3661 00AA  
                       l3653 008D                         l3495 1347                         l3479 12E8  
                       l3487 1319                         l3399 11D9                         l2951 0EEF  
                       l2943 0E5F                         l2935 0DFC                         l2927 0DAA  
                       l2919 0D29                         l2871 0C9F                         l3639 1C51  
                       l3591 0072                         l3583 004D                         l3575 002C  
                       l3911 1944                         l3559 1822                         l3567 1831  
                       l2863 17ED                         l2855 17DB                         l2847 17AB  
                       l2839 1790                         l2791 16BE                         l2783 16AB  
                       l2775 1686                         l2767 166C                         l2759 163D  
                       l2687 158F                         l2695 159F                         l2679 157F  
                       l2599 1B19                         l3831 05FD                         l3823 05CF  
                       l3815 059D                         l3807 0576                         l3751 0395  
                       l3743 0329                         l3735 02BC                         l3727 0234  
                       l3719 01F8                         l3671 00F4                         l3663 00BF  
                       l3655 0092                         l3647 007B                         l3497 134F  
                       l3489 1326                         l2961 0F3B                         l2953 0F17  
                       l2945 0E8C                         l2937 0E0C                         l2929 0DC6  
                       l2881 0CB6                         l2873 0CA6                         l3593 1851  
                       l3585 0052                         l3577 0031                         l3569 000E  
                       l3913 1955                         l2865 17EF                         l2857 17E3  
                       l2849 17AF                         l2793 16C2                         l2785 16AF  
                       l2777 168B                         l2769 166D                         l2697 15A7  
                       l2689 1594                         l3833 0658                         l3841 06F9  
                       l3825 05D4                         l3817 05AA                         l3809 058A  
                       l3761 03E3                         l3753 039E                         l3745 0344  
                       l3729 027F                         l3737 02C4                         l3681 0124  
                       l3673 00F5                         l3665 00D2                         l3657 0096  
                       l3649 0080                         l3921 101F                         l3499 1356  
                       l2971 0F50                         l2963 0F3C                         l2955 0F20  
                       l2947 0E9C                         l2939 0E29                         l2891 0CD2  
                       l2883 0CBB                         l2875 0CAC                         l3587 0061  
                       l3579 003C                         l3595 18AF                         l3915 1959  
                       l2867 17FA                         l2859 17E8                         l2795 16C3  
                       l2787 16B3                         l2699 15AC                         l3843 0701  
                       l3835 0693                         l3827 05DB                         l3819 05B9  
                       l3755 03A6                         l3747 036B                         l3763 03EC  
                       l3739 02D3                         l3851 0719                         l3691 013F  
                       l3683 0128                         l3675 00F9                         l3667 00D6  
                       l3659 00A6                         l3931 1049                         l3923 102E  
                       l2981 0F75                         l2973 0F54                         l2965 0F45  
                       l2957 0F2E                         l2949 0EC9                         l2893 0CD8  
                       l2885 0CC3                         l2877 0CB0                         l3589 0067  
                       l3597 18B4                         l3909 1942                         l2869 17FE  
                       l2797 16CC                         l2789 16BC                         l3861 074E  
                       l3853 071F                         l3845 0708                         l3837 06B2  
                       l3829 05DF                         l3781 04B3                         l3765 0421  
                       l3757 03C4                         l3749 037A                         l3693 015B  
                       l3677 00FC                         l3685 0139                         l3669 00E6  
                       l3941 1069                         l3933 104E                         l3925 1033  
                       l3917 1015                         l2991 0FB3                         l2983 0F83  
                       l2975 0F68                         l2959 0F37                         l2967 0F4B  
                       l2895 0CDC                         l2887 0CC5                         l2879 0CB1  
                       l3599 18B9                         l2799 16D1                         l3871 0775  
                       l3863 0757                         l3855 0727                         l3847 070C  
                       l3839 06BE                         l3791 04F0                         l3783 04CE  
                       l3775 0472                         l3767 046E                         l3695 0167  
                       l3687 013B                         l3679 0111                         l3951 10A5  
                       l3943 1085                         l3935 1056                         l3927 1038  
                       l3919 101A                         l2993 0FBE                         l2985 0F87  
                       l2969 0F4F                         l2897 0CDD                         l2889 0CCD  
                       l3881 07A7                         l3873 0783                         l3865 075F  
                       l3857 0738                         l3849 0712                         l3785 04D4  
                       l3769 0470                         l3697 016B                         l3953 10AB  
                       l3945 108D                         l3937 105F                         l3929 1040  
                       l2995 0FCD                         l2987 0FA0                         l2979 0F70  
                       l2899 0CE2                         l3891 07C8                         l3883 07AB  
                       l3875 078C                         l3867 076B                         l3859 073F  
                       l3787 04E0                         l3795 04F5                         l3779 04A9  
                       l3699 016F                         l3955 10B4                         l3947 1096  
                       l3939 1064                         l2997 0FD7                         l2989 0FA6  
                       l3893 07D4                         l3885 07B1                         l3877 0790  
                       l3869 0771                         l3797 0502                         l3789 04E7  
                       l3957 10BA                         l3949 109F                         l2999 0FD9  
                       l3887 07B8                         l3879 079B                         l3799 0510  
                       l3959 10C0                         l3889 07BC                         l3897 07DC  
                       l3899 07EE                         STR_1 08B9                         STR_2 08B9  
                       STR_3 08C8                         STR_4 08A0                         u3200 193D  
                       u4000 17BE                         u3201 193C                         u3210 19AC  
                       u4010 17CD                         u3211 19AB                         u4011 17CC  
                       u4100 0CDC                         u3220 19B7                         u4020 17D6  
                       u3300 08E9                         u4101 0CDB                         u3221 19B6  
                       u4021 17D5                         u4005 17B9                         u3301 08E8  
                       u4110 0CE2                         u3230 19BE                         u4030 17DB  
                       u3310 08FA                         u4111 0CE1                         u3231 19BD  
                       u4031 17DA                         u3311 08F9                         u4120 0CE7  
                       u3240 19C5                         u4040 17E8                         u3400 1B1D  
                       u4201 0DEE                         u4121 0CE6                         u3241 19C4  
                       u4041 17E7                         u3401 1B1C                         u4202 0DF5  
                       u4130 0CFE                         u3250 19CC                         u4050 17ED  
                       u5010 1916                         u3330 090C                         u3410 1B28  
                       u4211 0E1B                         u4203 0DFC                         u4131 0CFD  
                       u3251 19CB                         u4051 17EC                         u5011 1915  
                       u3331 090B                         u3411 1B27                         u3180 1929  
                       u4212 0E22                         u4140 0D03                         u3260 19D3  
                       u5100 1A9B                         u4060 17FE                         u5020 1B76  
                       u3500 1A41                         u3181 1928                         u4213 0E29  
                       u4141 0D02                         u3261 19D2                         u5101 1A9A  
                       u4061 17FD                         u5021 1B75                         u5005 190A  
                       u3501 1A40                         u3325 08FE                         u4070 0CB0  
                       u3270 19DA                         u5110 1AB5                         u3350 091D  
                       u3430 1B3A                         u4231 0E51                         u4151 0D54  
                       u4071 0CAF                         u3271 19D9                         u5111 1AB4  
                       u3351 091C                         u3431 1B39                         u4400 0F96  
                       u4320 0F3B                         u4232 0E58                         u4152 0D5B  
                       u4080 0CB6                         u3280 19E1                         u5120 1D4B  
                       u5200 1CC8                         u5040 1B8A                         u3520 1A52  
                       u3600 19A2                         u3440 1B44                         u6000 0344  
                       u4321 0F3A                         u4305 0F19                         u4241 0E7E  
                       u4233 0E5F                         u4225 0E2B                         u4161 0D70  
                       u4153 0D62                         u4081 0CB5                         u3281 19E0  
                       u5121 1D4A                         u5201 1CC7                         u5041 1B89  
                       u3521 1A51                         u3601 19A1                         u3345 090D  
                       u3441 1B43                         u3425 1B2C                         u6001 0343  
                       u4410 0FB3                         u4242 0E85                         u4162 0D77  
                       u4090 0CBB                         u5130 1D67                         u3610 1589  
                       u5210 1CDF                         u3370 0931                         u3290 08DE  
                       u6010 036B                         u3195 1930                         u4411 0FB2  
                       u4315 0F30                         u4251 0EAB                         u4243 0E8C  
                       u4171 0D9C                         u4163 0D7E                         u4091 0CBA  
                       u5115 1AB1                         u5131 1D66                         u3611 1588  
                       u5035 1B7B                         u3515 1A42                         u3371 0930  
                       u3355 0919                         u3291 08DD                         u6011 036A  
                       u4420 0FCD                         u4340 0F4F                         u4260 0ED5  
                       u4252 0EB2                         u4172 0DA3                         u5140 1D73  
                       u3700 163D                         u3620 158F                         u5220 1CF5  
                       u5060 1BA5                         u5300 1AC1                         u3540 1A66  
                       u3380 0936                         u3460 1B57                         u6100 0510  
                       u6020 037A                         u4421 0FCC                         u4405 0F91  
                       u4341 0F4E                         u4253 0EB9                         u4181 0DB8  
                       u4173 0DAA                         u5141 1D72                         u3701 163C  
                       u3621 158E                         u5221 1CF4                         u5061 1BA4  
                       u5301 1AC0                         u3541 1A65                         u3525 1A4E  
                       u3381 0935                         u3365 0925                         u3461 1B56  
                       u3445 1B40                         u6101 050F                         u6021 0379  
                       u4430 0FEB                         u4350 0F54                         u4182 0DBF  
                       u3710 1648                         u3630 1594                         u5230 1CFC  
                       u3550 1973                         u3470 1B5C                         u3390 1B12  
                       u6030 0395                         u4431 0FEA                         u4415 0FAF  
                       u4351 0F53                         u4335 0F3E                         u4271 0EE1  
                       u4183 0DC6                         u5151 1D82                         u3711 1646  
                       u3631 1593                         u5231 1CFB                         u5215 1CDA  
                       u5055 1B8C                         u3535 1A5A                         u3551 1972  
                       u3471 1B5B                         u3455 1B4B                         u3391 1B11  
                       u6031 0394                         u5400 11D4                         u4360 0F68  
                       u4280 0EFD                         u4272 0EE8                         u4440 184C  
                       u5160 1D9B                         u5152 1D83                         u3800 16AF  
                       u3720 1649                         u3640 15B2                         u5080 1BC3  
                       u5320 1AD5                         u3480 1A2F                         u6200 071F  
                       u6120 0589                         u5401 11D3                         u4425 0FC9  
                       u4361 0F67                         u4273 0EEF                         u4265 0ED0  
                       u4441 184B                         u5161 1D9A                         u5153 1D88  
                       u3801 16AE                         u3705 1639                         u3641 15B1  
                       u5081 1BC2                         u5065 1BA1                         u5321 1AD4  
                       u3481 1A2E                         u4505 14A6                         u6201 071E  
                       u6121 0588                         u6025 0376                         u5410 11D9  
                       u4370 0F6F                         u5090 1A7F                         u5154 1D89  
                       u3810 16B3                         u3730 165D                         u3650 15BD  
                       u5250 1D0E                         u5330 1AE7                         u3570 1985  
                       u4450 1376                         u4530 0947                         u6210 0727  
                       u6130 05AA                         u6050 04A8                         u5411 11D8  
                       u4371 0F6E                         u4291 0F09                         u4195 0DC8  
                       u5091 1A7E                         u5171 1DAA                         u5155 1D8E  
                       u3811 16B2                         u3731 165C                         u3651 15BC  
                       u5251 1D0D                         u5075 1BB5                         u5331 1AE6  
                       u5315 1AC6                         u3571 1984                         u4515 14F3  
                       u4451 1375                         u4531 0946                         u6211 0726  
                       u6131 05A9                         u6115 051F                         u6051 04A7  
                       u5500 1297                         u5420 11F4                         u4380 0F75  
                       u4292 0F10                         u5180 1DD5                         u5172 1DAB  
                       u5156 1D8F                         u3820 16C2                         u3740 166C  
                       u3660 15C3                         u5260 1D15                         u3580 198F  
                       u4700 100B                         u4620 0AFB                         u4540 0950  
                       u6300 07C8                         u6220 0738                         u6140 05B9  
                       u6060 04B3                         u5501 1296                         u5421 11F3  
                       u4381 0F74                         u4293 0F17                         u4285 0EF8  
                       u5181 1DD4                         u5173 1DB0                         u3821 16C1  
                       u3741 166B                         u3661 15C2                         u5261 1D14  
                       u5245 1CFE                         u3581 198E                         u3565 1977  
                       u4525 153F                         u4701 100A                         u4621 0AFA  
                       u4605 0A8E                         u4541 094F                         u6301 07C7  
                       u6221 0737                         u6141 05B8                         u6061 04B2  
                       u6045 0475                         u5510 129F                         u5430 1212  
                       u4390 0F87                         u5174 1DB1                         u5190 000B  
                       u3910 1770                         u3670 15C8                         u5350 1B04  
                       u4710 1011                         u6310 07D4                         u6230 074E  
                       u6150 05D4                         u6070 04CE                         u5511 129E  
                       u5431 1211                         u4391 0F86                         u5175 1DB6  
                       u5191 000A                         u3911 176F                         u3671 15C7  
                       u5351 1B03                         u5335 1AE3                         u3495 1A33  
                       u4711 1010                         u4615 0ACA                         u6311 07D3  
                       u6231 074D                         u6151 05D3                         u6135 05A6  
                       u6071 04CD                         u6055 04A4                         u5600 12FA  
                       u5440 124C                         u5360 11A1                         u5176 1DB7  
                       u3920 1775                         u3840 16E7                         u3760 1682  
                       u3680 15E1                         u5280 1D26                         u4720 1F56  
                       u6320 07EE                         u6240 075F                         u6080 04E0  
                       u5601 12F9                         u5441 124B                         u5361 11A0  
                       u5185 1DD1                         u3921 1774                         u3905 1765  
                       u3841 16E6                         u3761 1681                         u3681 15E0  
                       u5281 1D25                         u5345 1AF6                         u4721 1F55  
                       u3585 198B                         u4465 1393                         u6321 07ED  
                       u6241 075E                         u6225 0734                         u6145 05B5  
                       u6081 04DF                         u5610 1309                         u5530 12AE  
                       u5370 11A7                         u6330 196C                         u3930 177F  
                       u3770 1686                         u3690 15E5                         u5290 1D2B  
                       u4810 1FDF                         u4730 1F70                         u4490 1489  
                       u6250 076B                         u6090 0502                         u5531 12AD  
                       u5371 11A6                         u6331 196B                         u3931 177E  
                       u3851 16FE                         u3843 16E3                         u3835 16C5  
                       u3771 1685                         u3755 166F                         u3691 15E4  
                       u5291 1D2A                         u5275 1D18                         u4811 1FDE  
                       u4731 1F6F                         u3595 1996                         u4491 1488  
                       u4475 13ED                         u4635 0B1B                         u4555 0970  
                       u6251 076A                         u6235 074A                         u6091 0501  
                       u5620 1326                         u5380 11AC                         u3940 1785  
                       u3860 1712                         u3852 16FF                         u3780 168B  
                       u4900 1152                         u4820 1FE6                         u4660 0BEA  
                       u4580 0A3F                         u6260 0775                         u6180 0700  
                       _RCIF 0065                         u5621 1325                         u5525 12A3  
                       u5381 11AB                         u3941 1784                         u3861 1713  
                       u3853 1704                         u3781 168A                         u4901 1151  
                       u4821 1FE5                         u4805 1FCF                         u4485 1442  
                       u4661 0BE9                         u4645 0B57                         u4581 0A3E  
                       u4565 09AC                         u6261 0774                         u6181 06FF  
                       u6165 065B                         u5630 1343                         u5550 12C2  
                       u5470 1262                         u5390 11CE                         u5710 1EF6  
                       u3950 178A                         u3870 1730                         u3862 1718  
                       u3854 1705                         u4910 1156                         u4750 1FA9  
                       u6270 0783                         u6190 0718                         u5631 1342  
                       u5615 1304                         u5551 12C1                         u5471 1261  
                       u5455 124E                         u5391 11CD                         u5711 1EF5  
                       u6407 002E                         u3951 1789                         u3871 172F  
                       u3863 1719                         u3855 170A                         u3791 169D  
                       u4911 1155                         u4751 1FA8                         u4655 0BA2  
                       u4575 09F7                         u6271 0782                         u6191 0717  
                       u6175 06C1                         u6095 04FE                         u5640 135A  
                       u5560 12C7                         u5800 18C6                         u3960 1790  
                       u3880 1755                         u3856 170B                         u3792 16A4  
                       u4920 115D                         u4840 1FF7                         u6280 079B  
                       u5641 1359                         u5625 1322                         u5561 12C6  
                       u5545 12B1                         u5465 1257                         u5705 1EE8  
                       u6417 0039                         u5801 18C5                         u3961 178F  
                       u3881 1754                         u3793 16AB                         u4921 115C  
                       u4841 1FF6                         u4745 1F94                         u6281 079A  
                       u5570 12DB                         u5490 127E                         u5730 1F06  
                       u5650 1E8F                         u5810 19F2                         u3970 1797  
                       u3890 175A                         u4850 10DF                         u4770 1FC2  
                       u6290 07B1                         u5635 133F                         u5571 12DA  
                       u5491 127D                         u5731 1F05                         u5651 1E8E  
                       u6507 1C55                         u6427 0044                         u3971 1796  
                       u3891 1759                         u4851 10DE                         u4835 1FE9  
                       u4771 1FC1                         u4755 1FA5                         u4675 0BFD  
                       u4595 0A52                         u6291 07B0                         u6275 077F  
                       u6347 10C8                         u5580 12E2                         u5740 1F0C  
                       u5660 1E93                         u5820 1A14                         u3980 179D  
                       u4940 116F                         u4860 10F3                         u4780 1FC6  
                       u5900 0138                         u5581 12E1                         u5485 1265  
                       u5741 1F0B                         u5725 1EFB                         u5661 1E92  
                       u6517 1BDD                         u6437 004F                         u6357 187E  
                       u3981 179C                         u4941 116E                         u4861 10F2  
                       u4781 1FC5                         u4765 1FB5                         u4685 0C39  
                       u6285 0797                         u5901 0137                         u5590 12E8  
                       u5750 1F10                         u5670 1EB3                         u5830 1A26  
                       u3990 17AF                         u4950 1176                         u4790 1FCD  
                       u5910 0167                         u5591 12E7                         u5495 127A  
                       u5751 1F0F                         u5671 1EB2                         u6447 005C  
                       u6367 1885                         u5831 1A25                         u3991 17AE  
                       u4951 1175                         u4935 115F                         u4791 1FCC  
                       u4695 0C75                         u5911 0166                         u5760 1F25  
                       u5840 1C42                         u4880 1134                         u5920 016B  
                       u5841 1C41                         u6457 0069                         u6377 1889  
                       u4881 1133                         u5921 016A                         u5770 1F35  
                       u5690 1ED4                         u5850 1CBA                         u4970 1187  
                       u5930 019A                         u5771 1F34                         u5691 1ED3  
                       u5851 1CB9                         u6467 0074                         u6387 0012  
                       u4971 1186                         u4875 111B                         u5931 0199  
                       u5780 1F39                         u4980 18FC                         u5940 01D4  
                       u5860 0086                         u5781 1F38                         u5765 1F20  
                       u5685 1EC6                         u6477 189B                         u6397 0021  
                       u4981 18FB                         u4965 1179                         u4885 1130  
                       u5941 01D3                         u5861 0085                         u5790 18B4  
                       u5950 020F                         u5870 00A6                         u6487 18A2  
                       u5791 18B3                         u4895 1145                         u5951 020E  
                       u5871 00A5                         u5960 0298                         u5880 00E6  
                       u6497 18A8                         u5961 0297                         u5881 00E5  
                       u5970 02BC                         u5890 00F4                         u4995 1903  
                       u5971 02BB                         u5891 00F3                         u5980 02D3  
                       u5981 02D2                         u5990 0329                         u5991 0328  
                       u5985 02CF                         u5995 0325                         _TRMT 04C1  
                       _data 00D4            ?_Lcd_Write_String 0073                         _main 1015  
                       btemp 007E                         _volt 00D0                         start 0000  
             ??_config_rcsta 0070           ??_Lcd_Write_String 0075              ___fldiv@new_exp 0050  
             ??_config_txsta 0070                 _sprintf$1067 00AE                ___fltol@sign1 005A  
            __end_of___fladd 1800                        ?_main 0070                        _ADC_1 1BCC  
                      _ADC_2 1C43              __end_of___fldiv 136D              __end_of___awdiv 0940  
            __end_of___flneg 000E              __end_of___awmod 1B66              __end_of___flmul 1000  
            __end_of___flsub 18F6              __end_of___fltol 1D37                        _ANSEL 0188  
            __end_of___lldiv 1BCC              ___awdiv@divisor 0077              __end_of___llmod 1B0D  
            __end_of___lwdiv 1A6B              __end_of___lwmod 19A7              ___awdiv@counter 0020  
                      _RCREG 001A                        _SPBRG 0099                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009      __size_of_Lcd_Set_Cursor 0024  
                      _TRISA 0085                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019              __end_of_dpowers 08A0                        _scale 0940  
            __end_of_isdigit 1015                        _volt2 00CC                        pclath 000A  
        __size_of_LCD_Limpia 000D                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07F3           __size_of_Canal_ADC 00B0             __end_of_Lcd_Init 0078  
            __initialization 07F3                 __end_of_main 10D2                       ??_main 00C9  
                     ?_ADC_1 0070                       ?_ADC_2 0070                    ??_LCD_CMD 0071  
       __size_of__tdiv_to_l_ 00BD                       _ADCON1 009F             ___llmod@dividend 0074  
                     ?_scale 003E                       _ADRESH 001E             ___awdiv@dividend 0079  
                     _ANSELH 0189             __end_of__baudios 182B             __end_of___xxtofl 1F43  
           __end_of_datosLCD 18AE             __end_of__powers_ 0844             __end_of_config_P 186F  
                     _Puerto 19A7                       ___flge 1D37                       ___fleq 1A6B  
                  ??___fladd 005A                       ___wmul 18F6                    ??___fldiv 0046  
                  ??___awdiv 007B                    ??___flneg 0074                    ??___awmod 0074  
                  ??___flmul 002C                    ??___flsub 007E                    ??___fltol 0055  
                  ??___lldiv 0078                    ??___llmod 0078                    ??___lwdiv 007A  
                  ??___lwmod 0074                       _fround 136D             ___awdiv@quotient 0022  
            ___awmod@divisor 0070              ___awmod@counter 0075                    ??_isdigit 0070  
         __size_of__Umul8_16 0027         __end_of_config_rcsta 1833            __end_of_Canal_ADC 1E89  
       __end_of_config_txsta 1845                    ??_sprintf 00A9              Lcd_Set_Cursor@a 0077  
            Lcd_Set_Cursor@x 0076              Lcd_Set_Cursor@y 0074                   ___flge@ff1 0070  
                 ___flge@ff2 0074                 ___xxtofl@arg 007A                 ___xxtofl@exp 0079  
               ___xxtofl@val 0070                   ___fleq@ff1 0070                   ___fleq@ff2 0074  
    __end_of__initialization 07FC                   ___flneg@f1 0070                __end_of_ADC_1 1C43  
              __end_of_ADC_2 1CBB                   ___fltol@f1 0051               __pcstackCOMMON 0070  
               ??_LCD_Limpia 0074                __end_of_scale 0C9F                      ??_ADC_1 0058  
                    ??_ADC_2 0058               _Lcd_Set_Cursor 18AE                   __div_to_l_ 10D2  
                  ?_Lcd_Init 0070              __div_to_l_@exp1 0025              __div_to_l_@cntr 0024  
                    ??_scale 0042              __div_to_l_@quot 0020                 sprintf@width 00B9  
               Write_USART@a 0070                   __pbssBANK1 00CC           __end_of_LCD_Limpia 185E  
              __div_to_l_@f1 0070                __div_to_l_@f2 0074            __end_of__Umul8_16 1942  
                 __pmaintext 1015                      ?_Puerto 0070                      ?___flge 0070  
                    ?___fleq 0070                      ?___wmul 0070                ??_Write_USART 0070  
                    ?_fround 003E    __size_of_Lcd_Write_String 0042       __end_of_Lcd_Set_Cursor 18D2  
                  ?__baudios 0070                      _LCD_CMD 186F   __end_of_Write_USART_String 196D  
                 _config_ADC 1822                    ?___xxtofl 0070                    ?_datosLCD 0070  
                 ??_Lcd_Init 0074                    ?_config_P 0070                   __stringtab 0800  
          __end_of__npowers_ 0878                   _scale$1066 004C              __size_of_Puerto 003E  
                    Puerto@x 0070              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 1578                      ___fldiv 1190                      ___awdiv 08D7  
                    ___flneg 0003                      ___awmod 1B0D                      ___flmul 0C9F  
                    ___flsub 18D2                      ___fltol 1CBB                      ___lldiv 1B66  
            __size_of___wmul 0025                      ___llmod 1AB9                      ___lwdiv 1A27  
                    ___lwmod 196D        __size_of_config_rcsta 0008                   ??__baudios 0070  
            __size_of_fround 020B              ?_Lcd_Set_Cursor 0074                      __ptext1 0078  
                    __ptext2 0940        __size_of_config_txsta 000A                      __ptext3 1B0D  
                    __ptext4 08D7                      __ptext5 1003                      __ptext6 136D  
                    __ptext7 196D                      __ptext8 1A27                      __ptext9 1F43  
                ?__div_to_l_ 0070                      _dpowers 0878          __end_of_Write_USART 1851  
                    _isdigit 1003                   ??___xxtofl 0074             ___awmod@dividend 0072  
                 ??_datosLCD 0071                      _sprintf 0078                   ??_config_P 0070  
                    clrloop0 1834         end_of_initialization 07FC              ___lldiv@divisor 0070  
            ___lldiv@counter 007D                 _config_rcsta 182B                 _config_txsta 183B  
                  _RCSTAbits 0018               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074  
              ??__tdiv_to_l_ 0078                  ___fladd@grs 0065                  ?_config_ADC 0070  
              ___xxtofl@sign 0078                  ___fldiv@grs 0052                  ___fldiv@rem 004B  
                  _Canal_ADC 1DD9            Lcd_Write_String@a 0073            Lcd_Write_String@i 0078  
                ___flmul@grs 0032                    _TXSTAbits 0098          __size_of__div_to_l_ 00BE  
             __end_of_Puerto 19E5               __end_of___flge 1DD9               __end_of___fleq 1AB9  
                _Write_USART 1845               __end_of___wmul 191B             _Lcd_Write_String 19E5  
             __end_of_fround 1578          start_initialization 07F3          __end_of__tdiv_to_l_ 2000  
                 ?_Canal_ADC 0070            __size_of_Lcd_Init 006A              ___llmod@divisor 0070  
            ___llmod@counter 0079          __size_of_config_ADC 0004                     ??_Puerto 0070  
                   ??___flge 0078                     ??___fleq 0078                     ??___wmul 0074  
                  __Umul8_16 191B                     ??_fround 0042                sprintf@tmpval 00BB  
                  ___fladd@a 0056                    ___fladd@b 0052                     LCD_CMD@a 0072  
                   ?_LCD_CMD 0070                   fround@prec 0051                    ___fldiv@a 003E  
                  ___fldiv@b 0042            __size_of__baudios 0005                    ___flmul@a 0028  
                  ___flmul@b 0024                    ___flsub@a 0066                    ___flsub@b 006A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of___xxtofl 00BA            __size_of_datosLCD 0022            __size_of_config_P 0011  
                sprintf@flag 00B7                  sprintf@eexp 00BF                  sprintf@fval 00C1  
         _Write_USART_String 1942                  sprintf@prec 00C6             ___lwdiv@dividend 0078  
           ??_Lcd_Set_Cursor 0075          ?_Write_USART_String 0071                     ?___fladd 0052  
                   ?___fldiv 003E                     ?___awdiv 0077                     ?___flneg 0070  
                   ?___awmod 0070                     ?___flmul 0024                     ?___flsub 0066  
                   ?___fltol 0051                     ?___lldiv 0070                     ?___llmod 0070  
                  __npowers_ 0844                   ?__Umul8_16 0070                     ?___lwdiv 0076  
                   ?___lwmod 0070                    __pstrings 0800                  __tdiv_to_l_ 1F43  
             __size_of_ADC_1 0077               __size_of_ADC_2 0078                 ??__div_to_l_ 0078  
                   ?_isdigit 0070         ??_Write_USART_String 0073             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 035F                  ??_Canal_ADC 0072  
                  datosLCD@x 0073               ___wmul@product 0074                    clear_ram0 1833  
         __end_of__div_to_l_ 1190                   _ADCON0bits 001F                  __stringbase 080F  
          ___wmul@multiplier 0070                 ??_config_ADC 0070             __size_of_LCD_CMD 001D  
                   _Lcd_Init 000E     __end_of_Lcd_Write_String 1A27           __end_of_config_ADC 1826  
                ??__Umul8_16 0072                 ?_Write_USART 0070             __size_of___fladd 0288  
           __size_of___fldiv 01DD             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 0059             __size_of___flmul 0361             __size_of___flsub 0024  
           __size_of___fltol 007C             __size_of___lldiv 0066             __size_of___llmod 0054  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                     __baudios 1826  
                _fround$1064 004D                  _fround$1065 0049           __end_of__stringtab 0810  
                _isdigit$883 0070                   Canal_ADC@x 0070                   sprintf@val 00B3  
                   ___xxtofl 1E89             __size_of_isdigit 0012                     _datosLCD 188C  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 10D2  
                   __ptext11 18F6                     __ptext20 183B                     __ptext12 1AB9  
                   __ptext21 182B                     __ptext13 1B66                     __ptext30 000E  
                   __ptext22 185E                     __ptext14 1CBB                     __ptext31 1851  
                   __ptext23 1822                     __ptext15 18D2                     __ptext40 1DD9  
                   __ptext32 188C                     __ptext24 1826                     __ptext16 1578  
                   __ptext33 19A7                     __ptext25 1942                     __ptext17 0003  
                   __ptext34 1C43                     __ptext26 1845                     __ptext18 1D37  
                   __ptext35 1BCC                     __ptext27 19E5                     __ptext19 1A6B  
                   __ptext36 1E89                     __ptext28 186F                     __ptext37 0C9F  
                   __ptext29 18AE                     __ptext38 191B                     __ptext39 1190  
                   __powers_ 0810                     _config_P 185E             __size_of_sprintf 077B  
              __size_of_main 00BD                   _LCD_Limpia 1851          Write_USART_String@a 0071  
        Write_USART_String@i 0074                     isdigit@c 0071                     scale@scl 0050  
                  sprintf@ap 00B2             __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024  
                  sprintf@sp 00C5             __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074                    stringcode 080A                 ?__tdiv_to_l_ 0070  
     __Umul8_16@multiplicand 0070                     sprintf@c 00C8                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                   stringdir 080A                     stringtab 0800                ___fladd@signs 0062  
               ___fladd@aexp 0063                 ___fladd@bexp 0064         __Umul8_16@multiplier 0078  
              ?_config_rcsta 0070            __Umul8_16@product 0074                ?_config_txsta 0070  
