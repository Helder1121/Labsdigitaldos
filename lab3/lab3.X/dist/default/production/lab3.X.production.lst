

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 19:25:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 12/02/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F887 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  0086                     	;# 
   134  0087                     	;# 
   135  0088                     	;# 
   136  0089                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  0105                     	;# 
   160  0107                     	;# 
   161  0108                     	;# 
   162  0109                     	;# 
   163  010C                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0185                     	;# 
   169  0187                     	;# 
   170  0188                     	;# 
   171  0189                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  008F                     	;# 
   219  0090                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0097                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  0105                     	;# 
   238  0107                     	;# 
   239  0108                     	;# 
   240  0109                     	;# 
   241  010C                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010E                     	;# 
   245  010F                     	;# 
   246  0185                     	;# 
   247  0187                     	;# 
   248  0188                     	;# 
   249  0189                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001D                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  0081                     	;# 
   288  0085                     	;# 
   289  0086                     	;# 
   290  0087                     	;# 
   291  0088                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  0105                     	;# 
   316  0107                     	;# 
   317  0108                     	;# 
   318  0109                     	;# 
   319  010C                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  0185                     	;# 
   325  0187                     	;# 
   326  0188                     	;# 
   327  0189                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0000                     	;# 
   331  0001                     	;# 
   332  0002                     	;# 
   333  0003                     	;# 
   334  0004                     	;# 
   335  0005                     	;# 
   336  0006                     	;# 
   337  0007                     	;# 
   338  0008                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0088                     	;# 
   370  0089                     	;# 
   371  008C                     	;# 
   372  008D                     	;# 
   373  008E                     	;# 
   374  008F                     	;# 
   375  0090                     	;# 
   376  0091                     	;# 
   377  0092                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0093                     	;# 
   381  0094                     	;# 
   382  0095                     	;# 
   383  0096                     	;# 
   384  0097                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009A                     	;# 
   388  009B                     	;# 
   389  009C                     	;# 
   390  009D                     	;# 
   391  009E                     	;# 
   392  009F                     	;# 
   393  0105                     	;# 
   394  0107                     	;# 
   395  0108                     	;# 
   396  0109                     	;# 
   397  010C                     	;# 
   398  010C                     	;# 
   399  010D                     	;# 
   400  010E                     	;# 
   401  010F                     	;# 
   402  0185                     	;# 
   403  0187                     	;# 
   404  0188                     	;# 
   405  0189                     	;# 
   406  018C                     	;# 
   407  018D                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  000E                     	;# 
   423  000E                     	;# 
   424  000F                     	;# 
   425  0010                     	;# 
   426  0011                     	;# 
   427  0012                     	;# 
   428  0013                     	;# 
   429  0014                     	;# 
   430  0015                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  001D                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  0081                     	;# 
   444  0085                     	;# 
   445  0086                     	;# 
   446  0087                     	;# 
   447  0088                     	;# 
   448  0089                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  008F                     	;# 
   453  0090                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0093                     	;# 
   459  0094                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0097                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009A                     	;# 
   466  009B                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  009F                     	;# 
   471  0105                     	;# 
   472  0107                     	;# 
   473  0108                     	;# 
   474  0109                     	;# 
   475  010C                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  010F                     	;# 
   480  0185                     	;# 
   481  0187                     	;# 
   482  0188                     	;# 
   483  0189                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486                           
   487                           	psect	strings
   488  1000                     __pstrings:
   489  1000                     stringtab:
   490  1000                     __stringtab:
   491                           
   492                           ;	String table - string pointers are 1 byte each
   493  1000  1BFF               	btfsc	btemp+1,7
   494  1001  280A               	ljmp	stringcode
   495  1002  1383               	bcf	3,7
   496  1003  187F               	btfsc	btemp+1,0
   497  1004  1783               	bsf	3,7
   498  1005  0800               	movf	0,w
   499  1006  0A84               	incf	4,f
   500  1007  1903               	skipnz
   501  1008  0AFF               	incf	btemp+1,f
   502  1009  0008               	return
   503  100A                     stringcode:
   504  100A                     stringdir:
   505  100A  3010               	movlw	high stringdir
   506  100B  008A               	movwf	10
   507  100C  0804               	movf	4,w
   508  100D  0A84               	incf	4,f
   509  100E  0782               	addwf	2,f
   510  100F                     __stringbase:
   511  100F  3400               	retlw	0
   512  1010                     __end_of__stringtab:
   513  1010                     __powers_:
   514  1010  3400               	retlw	0
   515  1011  3480               	retlw	128
   516  1012  343F               	retlw	63
   517  1013  3400               	retlw	0
   518  1014  3420               	retlw	32
   519  1015  3441               	retlw	65
   520  1016  3400               	retlw	0
   521  1017  34C8               	retlw	200
   522  1018  3442               	retlw	66
   523  1019  3400               	retlw	0
   524  101A  347A               	retlw	122
   525  101B  3444               	retlw	68
   526  101C  3440               	retlw	64
   527  101D  341C               	retlw	28
   528  101E  3446               	retlw	70
   529  101F  3450               	retlw	80
   530  1020  34C3               	retlw	195
   531  1021  3447               	retlw	71
   532  1022  3424               	retlw	36
   533  1023  3474               	retlw	116
   534  1024  3449               	retlw	73
   535  1025  3497               	retlw	151
   536  1026  3418               	retlw	24
   537  1027  344B               	retlw	75
   538  1028  34BC               	retlw	188
   539  1029  34BE               	retlw	190
   540  102A  344C               	retlw	76
   541  102B  346B               	retlw	107
   542  102C  346E               	retlw	110
   543  102D  344E               	retlw	78
   544  102E  3403               	retlw	3
   545  102F  3415               	retlw	21
   546  1030  3450               	retlw	80
   547  1031  3479               	retlw	121
   548  1032  34AD               	retlw	173
   549  1033  3460               	retlw	96
   550  1034  34F3               	retlw	243
   551  1035  3449               	retlw	73
   552  1036  3471               	retlw	113
   553  1037                     __end_of__powers_:
   554  1037                     __npowers_:
   555  1037  3400               	retlw	0
   556  1038  3480               	retlw	128
   557  1039  343F               	retlw	63
   558  103A  34CD               	retlw	205
   559  103B  34CC               	retlw	204
   560  103C  343D               	retlw	61
   561  103D  34D7               	retlw	215
   562  103E  3423               	retlw	35
   563  103F  343C               	retlw	60
   564  1040  3412               	retlw	18
   565  1041  3483               	retlw	131
   566  1042  343A               	retlw	58
   567  1043  34B7               	retlw	183
   568  1044  34D1               	retlw	209
   569  1045  3438               	retlw	56
   570  1046  34C6               	retlw	198
   571  1047  3427               	retlw	39
   572  1048  3437               	retlw	55
   573  1049  3438               	retlw	56
   574  104A  3486               	retlw	134
   575  104B  3435               	retlw	53
   576  104C  34C0               	retlw	192
   577  104D  34D6               	retlw	214
   578  104E  3433               	retlw	51
   579  104F  34CC               	retlw	204
   580  1050  342B               	retlw	43
   581  1051  3432               	retlw	50
   582  1052  3470               	retlw	112
   583  1053  3489               	retlw	137
   584  1054  3430               	retlw	48
   585  1055  34E7               	retlw	231
   586  1056  34DB               	retlw	219
   587  1057  342E               	retlw	46
   588  1058  34E5               	retlw	229
   589  1059  343C               	retlw	60
   590  105A  341E               	retlw	30
   591  105B  3442               	retlw	66
   592  105C  34A2               	retlw	162
   593  105D  340D               	retlw	13
   594  105E                     __end_of__npowers_:
   595  105E                     _dpowers:
   596  105E  3401               	retlw	1
   597  105F  3400               	retlw	0
   598  1060  3400               	retlw	0
   599  1061  3400               	retlw	0
   600  1062  340A               	retlw	10
   601  1063  3400               	retlw	0
   602  1064  3400               	retlw	0
   603  1065  3400               	retlw	0
   604  1066  3464               	retlw	100
   605  1067  3400               	retlw	0
   606  1068  3400               	retlw	0
   607  1069  3400               	retlw	0
   608  106A  34E8               	retlw	232
   609  106B  3403               	retlw	3
   610  106C  3400               	retlw	0
   611  106D  3400               	retlw	0
   612  106E  3410               	retlw	16
   613  106F  3427               	retlw	39
   614  1070  3400               	retlw	0
   615  1071  3400               	retlw	0
   616  1072  34A0               	retlw	160
   617  1073  3486               	retlw	134
   618  1074  3401               	retlw	1
   619  1075  3400               	retlw	0
   620  1076  3440               	retlw	64
   621  1077  3442               	retlw	66
   622  1078  340F               	retlw	15
   623  1079  3400               	retlw	0
   624  107A  3480               	retlw	128
   625  107B  3496               	retlw	150
   626  107C  3498               	retlw	152
   627  107D  3400               	retlw	0
   628  107E  3400               	retlw	0
   629  107F  34E1               	retlw	225
   630  1080  34F5               	retlw	245
   631  1081  3405               	retlw	5
   632  1082  3400               	retlw	0
   633  1083  34CA               	retlw	202
   634  1084  349A               	retlw	154
   635  1085  343B               	retlw	59
   636  1086                     __end_of_dpowers:
   637  0018                     _RCSTAbits	set	24
   638  0019                     _TXREG	set	25
   639  001E                     _ADRESH	set	30
   640  001F                     _ADCON0bits	set	31
   641  0007                     _PORTC	set	7
   642  0009                     _PORTE	set	9
   643  0008                     _PORTD	set	8
   644  001A                     _RCREG	set	26
   645  0049                     _RE1	set	73
   646  0048                     _RE0	set	72
   647  0047                     _RD7	set	71
   648  0046                     _RD6	set	70
   649  0045                     _RD5	set	69
   650  0044                     _RD4	set	68
   651  0043                     _RD3	set	67
   652  0042                     _RD2	set	66
   653  0041                     _RD1	set	65
   654  0040                     _RD0	set	64
   655  0065                     _RCIF	set	101
   656  0099                     _SPBRG	set	153
   657  009F                     _ADCON1	set	159
   658  0098                     _TXSTAbits	set	152
   659  0085                     _TRISA	set	133
   660  0089                     _TRISE	set	137
   661  0088                     _TRISD	set	136
   662  04C1                     _TRMT	set	1217
   663  0189                     _ANSELH	set	393
   664  0188                     _ANSEL	set	392
   665  1086                     STR_2:
   666  1086  3425               	retlw	37	;'%'
   667  1087  3431               	retlw	49	;'1'
   668  1088  342E               	retlw	46	;'.'
   669  1089  3432               	retlw	50	;'2'
   670  108A  3466               	retlw	102	;'f'
   671  108B  3420               	retlw	32	;' '
   672  108C  3420               	retlw	32	;' '
   673  108D  3420               	retlw	32	;' '
   674  108E  3425               	retlw	37	;'%'
   675  108F  3431               	retlw	49	;'1'
   676  1090  342E               	retlw	46	;'.'
   677  1091  3432               	retlw	50	;'2'
   678  1092  3466               	retlw	102	;'f'
   679  1093  3420               	retlw	32	;' '
   680  1094  3420               	retlw	32	;' '
   681  1095  3420               	retlw	32	;' '
   682  1096  3425               	retlw	37	;'%'
   683  1097  3464               	retlw	100	;'d'
   684  1098  3400               	retlw	0
   685  1099                     STR_3:
   686  1099  3453               	retlw	83	;'S'
   687  109A  3431               	retlw	49	;'1'
   688  109B  3420               	retlw	32	;' '
   689  109C  3420               	retlw	32	;' '
   690  109D  3420               	retlw	32	;' '
   691  109E  3420               	retlw	32	;' '
   692  109F  3453               	retlw	83	;'S'
   693  10A0  3432               	retlw	50	;'2'
   694  10A1  3420               	retlw	32	;' '
   695  10A2  3420               	retlw	32	;' '
   696  10A3  3420               	retlw	32	;' '
   697  10A4  3420               	retlw	32	;' '
   698  10A5  3443               	retlw	67	;'C'
   699  10A6  344F               	retlw	79	;'O'
   700  10A7  344E               	retlw	78	;'N'
   701  10A8  3454               	retlw	84	;'T'
   702  10A9  3400               	retlw	0
   703  10AA                     STR_1:
   704  10AA  3453               	retlw	83	;'S'
   705  10AB  3431               	retlw	49	;'1'
   706  10AC  3420               	retlw	32	;' '
   707  10AD  3420               	retlw	32	;' '
   708  10AE  3420               	retlw	32	;' '
   709  10AF  3453               	retlw	83	;'S'
   710  10B0  3432               	retlw	50	;'2'
   711  10B1  3420               	retlw	32	;' '
   712  10B2  3420               	retlw	32	;' '
   713  10B3  3420               	retlw	32	;' '
   714  10B4  3443               	retlw	67	;'C'
   715  10B5  344F               	retlw	79	;'O'
   716  10B6  344E               	retlw	78	;'N'
   717  10B7  3454               	retlw	84	;'T'
   718  10B8  3420               	retlw	32	;' '
   719  10B9  3400               	retlw	0
   720                           
   721                           	psect	cinit
   722  000F                     start_initialization:	
   723                           ; #config settings
   724                           
   725  000F                     __initialization:
   726                           
   727                           ; Clear objects allocated to COMMON
   728  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   729                           
   730                           ; Clear objects allocated to BANK0
   731  0010  1283               	bcf	3,5	;RP0=0, select bank0
   732  0011  1303               	bcf	3,6	;RP1=0, select bank0
   733  0012  01EC               	clrf	__pbssBANK0& (0+127)
   734  0013  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   735                           
   736                           ; Clear objects allocated to BANK1
   737  0014  1383               	bcf	3,7	;select IRP bank0
   738  0015  30BF               	movlw	low __pbssBANK1
   739  0016  0084               	movwf	4
   740  0017  30D5               	movlw	low (__pbssBANK1+22)
   741  0018  160A  158A  24C5  120A  118A  	fcall	clear_ram0
   742  001D                     end_of_initialization:	
   743                           ;End of C runtime variable initialization code
   744                           
   745  001D                     __end_of__initialization:
   746  001D  0183               	clrf	3
   747  001E  160A  118A  2F19   	ljmp	_main	;jump to C main() function
   748                           
   749                           	psect	bssCOMMON
   750  007A                     __pbssCOMMON:
   751  007A                     _LecUSART:
   752  007A                     	ds	1
   753                           
   754                           	psect	bssBANK0
   755  006C                     __pbssBANK0:
   756  006C                     _contador:
   757  006C                     	ds	1
   758  006D                     _entregado:
   759  006D                     	ds	1
   760                           
   761                           	psect	bssBANK1
   762  00BF                     __pbssBANK1:
   763  00BF                     _volt2:
   764  00BF                     	ds	3
   765  00C2                     _volt:
   766  00C2                     	ds	3
   767  00C5                     _data:
   768  00C5                     	ds	16
   769                           
   770                           	psect	clrtext
   771  1CC5                     clear_ram0:	
   772                           ;	Called with FSR containing the base address, and
   773                           ;	W with the last address+1
   774                           
   775  1CC5  0064               	clrwdt	;clear the watchdog before getting into this loop
   776  1CC6                     clrloop0:
   777  1CC6  0180               	clrf	0	;clear RAM location pointed to by FSR
   778  1CC7  0A84               	incf	4,f	;increment pointer
   779  1CC8  0604               	xorwf	4,w	;XOR with final address
   780  1CC9  1903               	btfsc	3,2	;have we reached the end yet?
   781  1CCA  3400               	retlw	0	;all done for this memory range, return
   782  1CCB  0604               	xorwf	4,w	;XOR again to restore value
   783  1CCC  2CC6               	goto	clrloop0	;do the next byte
   784                           
   785                           	psect	cstackBANK1
   786  00A0                     __pcstackBANK1:
   787  00A0                     ??_sprintf:
   788                           
   789                           ; 1 bytes @ 0x0
   790  00A0                     	ds	6
   791  00A6                     _sprintf$1024:
   792                           
   793                           ; 3 bytes @ 0x6
   794  00A6                     	ds	3
   795  00A9                     sprintf@ap:
   796                           
   797                           ; 1 bytes @ 0x9
   798  00A9                     	ds	1
   799  00AA                     sprintf@flag:
   800                           
   801                           ; 2 bytes @ 0xA
   802  00AA                     	ds	2
   803  00AC                     sprintf@width:
   804                           
   805                           ; 2 bytes @ 0xC
   806  00AC                     	ds	2
   807  00AE                     sprintf@tmpval:
   808                           
   809                           ; 4 bytes @ 0xE
   810  00AE                     	ds	4
   811  00B2                     sprintf@val:
   812                           
   813                           ; 4 bytes @ 0x12
   814  00B2                     	ds	4
   815  00B6                     sprintf@eexp:
   816                           
   817                           ; 2 bytes @ 0x16
   818  00B6                     	ds	2
   819  00B8                     sprintf@fval:
   820                           
   821                           ; 3 bytes @ 0x18
   822  00B8                     	ds	3
   823  00BB                     sprintf@sp:
   824                           
   825                           ; 1 bytes @ 0x1B
   826  00BB                     	ds	1
   827  00BC                     sprintf@prec:
   828                           
   829                           ; 2 bytes @ 0x1C
   830  00BC                     	ds	2
   831  00BE                     sprintf@c:
   832                           
   833                           ; 1 bytes @ 0x1E
   834  00BE                     	ds	1
   835                           
   836                           	psect	cstackCOMMON
   837  0070                     __pcstackCOMMON:
   838  0070                     ?_isdigit:
   839  0070                     ?_Read_USART:	
   840                           ; 1 bit 
   841                           
   842  0070                     ??_Read_USART:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_config_P:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_config_ADC:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?__baudios:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_config_txsta:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_config_rcsta:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_Lcd_Init:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_LCD_Limpia:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_Write_USART:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_ISR:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ??_ISR:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_main:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_Puerto:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_LCD_CMD:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_datosLCD:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_ADC_1:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_ADC_2:	
   891                           ; 3 bytes @ 0x0
   892                           
   893                           
   894                           ; 3 bytes @ 0x0
   895  0070                     	ds	3
   896  0073                     ?___ftge:
   897  0073                     ??_config_P:	
   898                           ; 1 bit 
   899                           
   900  0073                     ??_config_ADC:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0073                     ??__baudios:	
   904                           ; 1 bytes @ 0x3
   905                           
   906  0073                     ??_config_txsta:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0073                     ??_config_rcsta:	
   910                           ; 1 bytes @ 0x3
   911                           
   912  0073                     ??_Write_USART:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0073                     ??_isdigit:	
   916                           ; 1 bytes @ 0x3
   917                           
   918  0073                     ??_Puerto:	
   919                           ; 1 bytes @ 0x3
   920                           
   921  0073                     ??___lldiv:	
   922                           ; 1 bytes @ 0x3
   923                           
   924  0073                     ?_Canal_ADC:	
   925                           ; 1 bytes @ 0x3
   926                           
   927  0073                     ?___wmul:	
   928                           ; 2 bytes @ 0x3
   929                           
   930  0073                     ?___awmod:	
   931                           ; 2 bytes @ 0x3
   932                           
   933  0073                     ?___lwmod:	
   934                           ; 2 bytes @ 0x3
   935                           
   936  0073                     ?___ftpack:	
   937                           ; 2 bytes @ 0x3
   938                           
   939  0073                     ?___ftneg:	
   940                           ; 3 bytes @ 0x3
   941                           
   942  0073                     ?__tdiv_to_l_:	
   943                           ; 3 bytes @ 0x3
   944                           
   945  0073                     ?__div_to_l_:	
   946                           ; 4 bytes @ 0x3
   947                           
   948  0073                     Puerto@x:	
   949                           ; 4 bytes @ 0x3
   950                           
   951  0073                     Write_USART@a:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     _isdigit$825:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0073                     Canal_ADC@x:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0073                     ___wmul@multiplier:	
   961                           ; 2 bytes @ 0x3
   962                           
   963  0073                     ___awmod@divisor:	
   964                           ; 2 bytes @ 0x3
   965                           
   966  0073                     ___lwmod@divisor:	
   967                           ; 2 bytes @ 0x3
   968                           
   969  0073                     __div_to_l_@f1:	
   970                           ; 2 bytes @ 0x3
   971                           
   972  0073                     ___ftpack@arg:	
   973                           ; 3 bytes @ 0x3
   974                           
   975  0073                     __tdiv_to_l_@f1:	
   976                           ; 3 bytes @ 0x3
   977                           
   978  0073                     ___ftge@ff1:	
   979                           ; 3 bytes @ 0x3
   980                           
   981  0073                     ___ftneg@f1:	
   982                           ; 3 bytes @ 0x3
   983                           
   984                           
   985                           ; 3 bytes @ 0x3
   986  0073                     	ds	1
   987  0074                     ?_Write_USART_String:
   988  0074                     ??_LCD_CMD:	
   989                           ; 1 bytes @ 0x4
   990                           
   991  0074                     ??_datosLCD:	
   992                           ; 1 bytes @ 0x4
   993                           
   994  0074                     isdigit@c:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  0074                     Write_USART_String@a:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  0074                     ___lldiv@quotient:	
  1001                           ; 2 bytes @ 0x4
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x4
  1005  0074                     	ds	1
  1006  0075                     ??_Canal_ADC:
  1007  0075                     LCD_CMD@a:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010  0075                     ___wmul@multiplicand:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013  0075                     ___awmod@dividend:	
  1014                           ; 2 bytes @ 0x5
  1015                           
  1016  0075                     ___lwmod@dividend:	
  1017                           ; 2 bytes @ 0x5
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x5
  1021  0075                     	ds	1
  1022  0076                     ?_Lcd_Write_String:
  1023  0076                     ??_Write_USART_String:	
  1024                           ; 1 bytes @ 0x6
  1025                           
  1026  0076                     ??___ftneg:	
  1027                           ; 1 bytes @ 0x6
  1028                           
  1029  0076                     datosLCD@x:	
  1030                           ; 1 bytes @ 0x6
  1031                           
  1032  0076                     ___ftpack@exp:	
  1033                           ; 1 bytes @ 0x6
  1034                           
  1035  0076                     Lcd_Write_String@a:	
  1036                           ; 1 bytes @ 0x6
  1037                           
  1038  0076                     __div_to_l_@f2:	
  1039                           ; 2 bytes @ 0x6
  1040                           
  1041  0076                     __tdiv_to_l_@f2:	
  1042                           ; 3 bytes @ 0x6
  1043                           
  1044  0076                     ___ftge@ff2:	
  1045                           ; 3 bytes @ 0x6
  1046                           
  1047                           
  1048                           ; 3 bytes @ 0x6
  1049  0076                     	ds	1
  1050  0077                     ??_Lcd_Init:
  1051  0077                     ??_LCD_Limpia:	
  1052                           ; 1 bytes @ 0x7
  1053                           
  1054  0077                     ?_Lcd_Set_Cursor:	
  1055                           ; 1 bytes @ 0x7
  1056                           
  1057  0077                     ??___wmul:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060  0077                     ??___awmod:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063  0077                     ??___lwmod:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066  0077                     Lcd_Set_Cursor@y:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069  0077                     Write_USART_String@i:	
  1070                           ; 1 bytes @ 0x7
  1071                           
  1072  0077                     ___ftpack@sign:	
  1073                           ; 1 bytes @ 0x7
  1074                           
  1075  0077                     ___wmul@product:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x7
  1080  0077                     	ds	1
  1081  0078                     ??_Lcd_Set_Cursor:
  1082  0078                     ??___awtoft:	
  1083                           ; 1 bytes @ 0x8
  1084                           
  1085  0078                     ??___lltoft:	
  1086                           ; 1 bytes @ 0x8
  1087                           
  1088  0078                     ___lldiv@counter:	
  1089                           ; 1 bytes @ 0x8
  1090                           
  1091  0078                     ___awmod@counter:	
  1092                           ; 1 bytes @ 0x8
  1093                           
  1094  0078                     ___lwmod@counter:	
  1095                           ; 1 bytes @ 0x8
  1096                           
  1097  0078                     Lcd_Write_String@i:	
  1098                           ; 1 bytes @ 0x8
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x8
  1102  0078                     	ds	1
  1103  0079                     ??___ftge:
  1104  0079                     ??___llmod:	
  1105                           ; 1 bytes @ 0x9
  1106                           
  1107  0079                     ??___lwdiv:	
  1108                           ; 1 bytes @ 0x9
  1109                           
  1110  0079                     ___awmod@sign:	
  1111                           ; 1 bytes @ 0x9
  1112                           
  1113  0079                     ___lltoft@exp:	
  1114                           ; 1 bytes @ 0x9
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x9
  1118  0079                     	ds	1
  1119  007A                     ??___ftsub:
  1120                           
  1121                           	psect	cstackBANK0
  1122  0020                     __pcstackBANK0:	
  1123                           ; 1 bytes @ 0xA
  1124                           
  1125  0020                     ??_Lcd_Write_String:
  1126  0020                     ??__tdiv_to_l_:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0020                     ??__div_to_l_:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0020                     ??___ftpack:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0020                     ?___awdiv:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0020                     ?___lwdiv:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141  0020                     ?___lldiv:	
  1142                           ; 2 bytes @ 0x0
  1143                           
  1144  0020                     Lcd_Set_Cursor@x:	
  1145                           ; 4 bytes @ 0x0
  1146                           
  1147  0020                     ___awdiv@divisor:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0020                     ___lwdiv@divisor:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153  0020                     ___lldiv@divisor:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156                           
  1157                           ; 4 bytes @ 0x0
  1158  0020                     	ds	1
  1159  0021                     Lcd_Set_Cursor@a:
  1160                           
  1161                           ; 1 bytes @ 0x1
  1162  0021                     	ds	1
  1163  0022                     ___awdiv@dividend:
  1164  0022                     ___lwdiv@dividend:	
  1165                           ; 2 bytes @ 0x2
  1166                           
  1167                           
  1168                           ; 2 bytes @ 0x2
  1169  0022                     	ds	1
  1170  0023                     ?___awtoft:
  1171  0023                     ?___lltoft:	
  1172                           ; 3 bytes @ 0x3
  1173                           
  1174  0023                     ___awtoft@c:	
  1175                           ; 3 bytes @ 0x3
  1176                           
  1177  0023                     ___lltoft@c:	
  1178                           ; 2 bytes @ 0x3
  1179                           
  1180                           
  1181                           ; 4 bytes @ 0x3
  1182  0023                     	ds	1
  1183  0024                     ??___awdiv:
  1184  0024                     ___lwdiv@quotient:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187  0024                     ___lldiv@dividend:	
  1188                           ; 2 bytes @ 0x4
  1189                           
  1190  0024                     __tdiv_to_l_@quot:	
  1191                           ; 4 bytes @ 0x4
  1192                           
  1193                           
  1194                           ; 4 bytes @ 0x4
  1195  0024                     	ds	1
  1196  0025                     ___awdiv@counter:
  1197                           
  1198                           ; 1 bytes @ 0x5
  1199  0025                     	ds	1
  1200  0026                     ___awdiv@sign:
  1201  0026                     ___awtoft@sign:	
  1202                           ; 1 bytes @ 0x6
  1203                           
  1204  0026                     ___lwdiv@counter:	
  1205                           ; 1 bytes @ 0x6
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x6
  1209  0026                     	ds	1
  1210  0027                     ___awdiv@quotient:
  1211                           
  1212                           ; 2 bytes @ 0x7
  1213  0027                     	ds	1
  1214  0028                     ?___llmod:
  1215  0028                     __tdiv_to_l_@cntr:	
  1216                           ; 4 bytes @ 0x8
  1217                           
  1218  0028                     __div_to_l_@quot:	
  1219                           ; 1 bytes @ 0x8
  1220                           
  1221  0028                     ___llmod@divisor:	
  1222                           ; 4 bytes @ 0x8
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x8
  1226  0028                     	ds	1
  1227  0029                     ?___bmul:
  1228  0029                     ___bmul@multiplicand:	
  1229                           ; 1 bytes @ 0x9
  1230                           
  1231  0029                     __tdiv_to_l_@exp1:	
  1232                           ; 1 bytes @ 0x9
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x9
  1236  0029                     	ds	1
  1237  002A                     ??___bmul:
  1238                           
  1239                           ; 1 bytes @ 0xA
  1240  002A                     	ds	1
  1241  002B                     ___bmul@product:
  1242                           
  1243                           ; 1 bytes @ 0xB
  1244  002B                     	ds	1
  1245  002C                     ___bmul@multiplier:
  1246  002C                     __div_to_l_@cntr:	
  1247                           ; 1 bytes @ 0xC
  1248                           
  1249  002C                     ___llmod@dividend:	
  1250                           ; 1 bytes @ 0xC
  1251                           
  1252                           
  1253                           ; 4 bytes @ 0xC
  1254  002C                     	ds	1
  1255  002D                     ?___ftmul:
  1256  002D                     __div_to_l_@exp1:	
  1257                           ; 3 bytes @ 0xD
  1258                           
  1259  002D                     ___ftmul@f1:	
  1260                           ; 1 bytes @ 0xD
  1261                           
  1262                           
  1263                           ; 3 bytes @ 0xD
  1264  002D                     	ds	3
  1265  0030                     ___llmod@counter:
  1266  0030                     ___ftmul@f2:	
  1267                           ; 1 bytes @ 0x10
  1268                           
  1269                           
  1270                           ; 3 bytes @ 0x10
  1271  0030                     	ds	3
  1272  0033                     ??___ftmul:
  1273                           
  1274                           ; 1 bytes @ 0x13
  1275  0033                     	ds	4
  1276  0037                     ___ftmul@exp:
  1277                           
  1278                           ; 1 bytes @ 0x17
  1279  0037                     	ds	1
  1280  0038                     ___ftmul@f3_as_product:
  1281                           
  1282                           ; 3 bytes @ 0x18
  1283  0038                     	ds	3
  1284  003B                     ___ftmul@cntr:
  1285                           
  1286                           ; 1 bytes @ 0x1B
  1287  003B                     	ds	1
  1288  003C                     ___ftmul@sign:
  1289                           
  1290                           ; 1 bytes @ 0x1C
  1291  003C                     	ds	1
  1292  003D                     ?_fround:
  1293  003D                     ?_scale:	
  1294                           ; 3 bytes @ 0x1D
  1295                           
  1296  003D                     ?___ftdiv:	
  1297                           ; 3 bytes @ 0x1D
  1298                           
  1299  003D                     ___ftdiv@f2:	
  1300                           ; 3 bytes @ 0x1D
  1301                           
  1302                           
  1303                           ; 3 bytes @ 0x1D
  1304  003D                     	ds	3
  1305  0040                     ??_fround:
  1306  0040                     ??_scale:	
  1307                           ; 1 bytes @ 0x20
  1308                           
  1309  0040                     ___ftdiv@f1:	
  1310                           ; 1 bytes @ 0x20
  1311                           
  1312                           
  1313                           ; 3 bytes @ 0x20
  1314  0040                     	ds	2
  1315  0042                     _scale$1023:
  1316                           
  1317                           ; 3 bytes @ 0x22
  1318  0042                     	ds	1
  1319  0043                     ??___ftdiv:
  1320                           
  1321                           ; 1 bytes @ 0x23
  1322  0043                     	ds	2
  1323  0045                     scale@scl:
  1324                           
  1325                           ; 1 bytes @ 0x25
  1326  0045                     	ds	1
  1327  0046                     ?___fttol:
  1328  0046                     ___fttol@f1:	
  1329                           ; 4 bytes @ 0x26
  1330                           
  1331  0046                     _fround$1022:	
  1332                           ; 3 bytes @ 0x26
  1333                           
  1334                           
  1335                           ; 3 bytes @ 0x26
  1336  0046                     	ds	1
  1337  0047                     ___ftdiv@cntr:
  1338                           
  1339                           ; 1 bytes @ 0x27
  1340  0047                     	ds	1
  1341  0048                     ___ftdiv@f3:
  1342                           
  1343                           ; 3 bytes @ 0x28
  1344  0048                     	ds	1
  1345  0049                     _fround$1021:
  1346                           
  1347                           ; 3 bytes @ 0x29
  1348  0049                     	ds	1
  1349  004A                     ??___fttol:
  1350                           
  1351                           ; 1 bytes @ 0x2A
  1352  004A                     	ds	1
  1353  004B                     ___ftdiv@exp:
  1354                           
  1355                           ; 1 bytes @ 0x2B
  1356  004B                     	ds	1
  1357  004C                     fround@prec:
  1358  004C                     ___ftdiv@sign:	
  1359                           ; 1 bytes @ 0x2C
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x2C
  1363  004C                     	ds	1
  1364  004D                     ??_ADC_1:
  1365  004D                     ??_ADC_2:	
  1366                           ; 1 bytes @ 0x2D
  1367                           
  1368  004D                     ?___ftadd:	
  1369                           ; 1 bytes @ 0x2D
  1370                           
  1371  004D                     ___ftadd@f1:	
  1372                           ; 3 bytes @ 0x2D
  1373                           
  1374                           
  1375                           ; 3 bytes @ 0x2D
  1376  004D                     	ds	1
  1377  004E                     ___fttol@sign1:
  1378                           
  1379                           ; 1 bytes @ 0x2E
  1380  004E                     	ds	1
  1381  004F                     ___fttol@lval:
  1382                           
  1383                           ; 4 bytes @ 0x2F
  1384  004F                     	ds	1
  1385  0050                     ___ftadd@f2:
  1386                           
  1387                           ; 3 bytes @ 0x30
  1388  0050                     	ds	3
  1389  0053                     ??___ftadd:
  1390  0053                     ___fttol@exp1:	
  1391                           ; 1 bytes @ 0x33
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0x33
  1395  0053                     	ds	4
  1396  0057                     ___ftadd@sign:
  1397                           
  1398                           ; 1 bytes @ 0x37
  1399  0057                     	ds	1
  1400  0058                     ___ftadd@exp2:
  1401                           
  1402                           ; 1 bytes @ 0x38
  1403  0058                     	ds	1
  1404  0059                     ___ftadd@exp1:
  1405                           
  1406                           ; 1 bytes @ 0x39
  1407  0059                     	ds	1
  1408  005A                     ?___ftsub:
  1409  005A                     ___ftsub@f2:	
  1410                           ; 3 bytes @ 0x3A
  1411                           
  1412                           
  1413                           ; 3 bytes @ 0x3A
  1414  005A                     	ds	3
  1415  005D                     ___ftsub@f1:
  1416                           
  1417                           ; 3 bytes @ 0x3D
  1418  005D                     	ds	3
  1419  0060                     ?_sprintf:
  1420  0060                     sprintf@f:	
  1421                           ; 2 bytes @ 0x40
  1422                           
  1423                           
  1424                           ; 1 bytes @ 0x40
  1425  0060                     	ds	9
  1426  0069                     ??_main:
  1427                           
  1428                           ; 1 bytes @ 0x49
  1429  0069                     	ds	3
  1430                           
  1431                           	psect	maintext
  1432  1719                     __pmaintext:	
  1433 ;;
  1434 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1435 ;;
  1436 ;; *************** function _main *****************
  1437 ;; Defined at:
  1438 ;;		line 74 in file "lab03.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : B00/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       3       0       0       0
  1455 ;;      Totals:         0       3       0       0       0
  1456 ;;Total ram usage:        3 bytes
  1457 ;; Hardware stack levels required when called:    6
  1458 ;; This function calls:
  1459 ;;		_ADC_1
  1460 ;;		_ADC_2
  1461 ;;		_LCD_Limpia
  1462 ;;		_Lcd_Init
  1463 ;;		_Lcd_Set_Cursor
  1464 ;;		_Lcd_Write_String
  1465 ;;		_Write_USART
  1466 ;;		_Write_USART_String
  1467 ;;		__baudios
  1468 ;;		_config_ADC
  1469 ;;		_config_P
  1470 ;;		_config_rcsta
  1471 ;;		_config_txsta
  1472 ;;		_sprintf
  1473 ;; This function is called by:
  1474 ;;		Startup code after reset
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _main
  1480  1719                     _main:
  1481  1719                     l4259:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1484                           
  1485                           
  1486                           ;lab03.c: 75:     config_P();
  1487  1719  160A  158A  24FA  160A  118A  	fcall	_config_P
  1488  171E                     l4261:
  1489                           
  1490                           ;lab03.c: 76:     config_ADC();
  1491  171E  160A  158A  24AC  160A  118A  	fcall	_config_ADC
  1492  1723                     l4263:
  1493                           
  1494                           ;lab03.c: 77:     _baudios();
  1495  1723  160A  158A  24B0  160A  118A  	fcall	__baudios
  1496                           
  1497                           ;lab03.c: 78:     config_txsta();
  1498  1728  160A  158A  24CD  160A  118A  	fcall	_config_txsta
  1499                           
  1500                           ;lab03.c: 79:     config_rcsta();
  1501  172D  160A  158A  24BD  160A  118A  	fcall	_config_rcsta
  1502  1732                     l4265:
  1503                           
  1504                           ;lab03.c: 80:     Lcd_Init();
  1505  1732  160A  118A  228D  160A  118A  	fcall	_Lcd_Init
  1506  1737                     l4267:
  1507                           
  1508                           ;lab03.c: 81:     LCD_Limpia();
  1509  1737  160A  158A  24ED  160A  118A  	fcall	_LCD_Limpia
  1510  173C                     l4269:
  1511                           
  1512                           ;lab03.c: 86:         LCD_Limpia();
  1513  173C  160A  158A  24ED  160A  118A  	fcall	_LCD_Limpia
  1514  1741                     l4271:
  1515                           
  1516                           ;lab03.c: 87:         Lcd_Set_Cursor(1, 1);
  1517  1741  01F7               	clrf	Lcd_Set_Cursor@y
  1518  1742  0AF7               	incf	Lcd_Set_Cursor@y,f
  1519  1743  3001               	movlw	1
  1520  1744  160A  158A  25A0  160A  118A  	fcall	_Lcd_Set_Cursor
  1521  1749                     l4273:
  1522                           
  1523                           ;lab03.c: 88:         Lcd_Write_String("S1   S2   CONT ");
  1524  1749  309B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1525  174A  00F6               	movwf	Lcd_Write_String@a
  1526  174B  3080               	movlw	128
  1527  174C  00F7               	movwf	Lcd_Write_String@a+1
  1528  174D  160A  158A  26C7  160A  118A  	fcall	_Lcd_Write_String
  1529  1752                     l4275:
  1530                           
  1531                           ;lab03.c: 90:         ADC_1();
  1532  1752  160A  118A  20F7  160A  118A  	fcall	_ADC_1
  1533  1757                     l4277:
  1534                           
  1535                           ;lab03.c: 91:         ADC_2();
  1536  1757  160A  118A  2159  160A  118A  	fcall	_ADC_2
  1537  175C                     l4279:
  1538                           
  1539                           ;lab03.c: 92:         sprintf(data, "%1.2f   %1.2f   %d" ,volt,volt2,contador);
  1540  175C  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1541  175D  1283               	bcf	3,5	;RP0=0, select bank0
  1542  175E  1303               	bcf	3,6	;RP1=0, select bank0
  1543  175F  00E9               	movwf	??_main
  1544  1760  0869               	movf	??_main,w
  1545  1761  00E0               	movwf	sprintf@f
  1546  1762  1683               	bsf	3,5	;RP0=1, select bank1
  1547  1763  1303               	bcf	3,6	;RP1=0, select bank1
  1548  1764  0842               	movf	_volt^(0+128),w
  1549  1765  1283               	bcf	3,5	;RP0=0, select bank0
  1550  1766  1303               	bcf	3,6	;RP1=0, select bank0
  1551  1767  00E1               	movwf	?_sprintf+1
  1552  1768  1683               	bsf	3,5	;RP0=1, select bank1
  1553  1769  1303               	bcf	3,6	;RP1=0, select bank1
  1554  176A  0843               	movf	(_volt+1)^(0+128),w
  1555  176B  1283               	bcf	3,5	;RP0=0, select bank0
  1556  176C  1303               	bcf	3,6	;RP1=0, select bank0
  1557  176D  00E2               	movwf	?_sprintf+2
  1558  176E  1683               	bsf	3,5	;RP0=1, select bank1
  1559  176F  1303               	bcf	3,6	;RP1=0, select bank1
  1560  1770  0844               	movf	(_volt+2)^(0+128),w
  1561  1771  1283               	bcf	3,5	;RP0=0, select bank0
  1562  1772  1303               	bcf	3,6	;RP1=0, select bank0
  1563  1773  00E3               	movwf	?_sprintf+3
  1564  1774  1683               	bsf	3,5	;RP0=1, select bank1
  1565  1775  1303               	bcf	3,6	;RP1=0, select bank1
  1566  1776  083F               	movf	_volt2^(0+128),w
  1567  1777  1283               	bcf	3,5	;RP0=0, select bank0
  1568  1778  1303               	bcf	3,6	;RP1=0, select bank0
  1569  1779  00E4               	movwf	?_sprintf+4
  1570  177A  1683               	bsf	3,5	;RP0=1, select bank1
  1571  177B  1303               	bcf	3,6	;RP1=0, select bank1
  1572  177C  0840               	movf	(_volt2+1)^(0+128),w
  1573  177D  1283               	bcf	3,5	;RP0=0, select bank0
  1574  177E  1303               	bcf	3,6	;RP1=0, select bank0
  1575  177F  00E5               	movwf	?_sprintf+5
  1576  1780  1683               	bsf	3,5	;RP0=1, select bank1
  1577  1781  1303               	bcf	3,6	;RP1=0, select bank1
  1578  1782  0841               	movf	(_volt2+2)^(0+128),w
  1579  1783  1283               	bcf	3,5	;RP0=0, select bank0
  1580  1784  1303               	bcf	3,6	;RP1=0, select bank0
  1581  1785  00E6               	movwf	?_sprintf+6
  1582  1786  086C               	movf	_contador,w
  1583  1787  00EA               	movwf	??_main+1
  1584  1788  01EB               	clrf	??_main+2
  1585  1789  086A               	movf	??_main+1,w
  1586  178A  00E7               	movwf	?_sprintf+7
  1587  178B  086B               	movf	??_main+2,w
  1588  178C  00E8               	movwf	?_sprintf+8
  1589  178D  30C5               	movlw	(low (_data| 0))& (0+255)
  1590  178E  120A  158A  228B  160A  118A  	fcall	_sprintf
  1591  1793                     l4281:
  1592                           
  1593                           ;lab03.c: 94:         Lcd_Set_Cursor(2, 1);
  1594  1793  01F7               	clrf	Lcd_Set_Cursor@y
  1595  1794  0AF7               	incf	Lcd_Set_Cursor@y,f
  1596  1795  3002               	movlw	2
  1597  1796  160A  158A  25A0  160A  118A  	fcall	_Lcd_Set_Cursor
  1598  179B                     l4283:
  1599                           
  1600                           ;lab03.c: 95:         Lcd_Write_String(data);
  1601  179B  30C5               	movlw	(low (_data| 0))& (0+255)
  1602  179C  00F6               	movwf	Lcd_Write_String@a
  1603  179D  3000               	movlw	0
  1604  179E  00F7               	movwf	Lcd_Write_String@a+1
  1605  179F  160A  158A  26C7  160A  118A  	fcall	_Lcd_Write_String
  1606  17A4                     l4285:
  1607                           
  1608                           ;lab03.c: 96:         Write_USART_String("S1    S2    CONT");
  1609  17A4  308A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1610  17A5  00F4               	movwf	Write_USART_String@a
  1611  17A6  3080               	movlw	128
  1612  17A7  00F5               	movwf	Write_USART_String@a+1
  1613  17A8  160A  158A  25C6  160A  118A  	fcall	_Write_USART_String
  1614  17AD                     l4287:
  1615                           
  1616                           ;lab03.c: 98:         Write_USART(13);
  1617  17AD  300D               	movlw	13
  1618  17AE  160A  158A  24E1  160A  118A  	fcall	_Write_USART
  1619  17B3                     l4289:
  1620                           
  1621                           ;lab03.c: 99:         Write_USART(10);
  1622  17B3  300A               	movlw	10
  1623  17B4  160A  158A  24E1  160A  118A  	fcall	_Write_USART
  1624  17B9                     l4291:
  1625                           
  1626                           ;lab03.c: 101:         Write_USART_String(data);
  1627  17B9  30C5               	movlw	(low (_data| 0))& (0+255)
  1628  17BA  00F4               	movwf	Write_USART_String@a
  1629  17BB  3000               	movlw	0
  1630  17BC  00F5               	movwf	Write_USART_String@a+1
  1631  17BD  160A  158A  25C6  160A  118A  	fcall	_Write_USART_String
  1632  17C2                     l4293:
  1633                           
  1634                           ;lab03.c: 102:         Write_USART(13);
  1635  17C2  300D               	movlw	13
  1636  17C3  160A  158A  24E1  160A  118A  	fcall	_Write_USART
  1637  17C8                     l4295:
  1638                           
  1639                           ;lab03.c: 103:         Write_USART(10);
  1640  17C8  300A               	movlw	10
  1641  17C9  160A  158A  24E1  160A  118A  	fcall	_Write_USART
  1642  17CE                     l4297:
  1643                           
  1644                           ;lab03.c: 105:         if (RCIF == 1){
  1645  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  1646  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  1647  17D0  1E8C               	btfss	12,5	;volatile
  1648  17D1  2FD3               	goto	u6401
  1649  17D2  2FD4               	goto	u6400
  1650  17D3                     u6401:
  1651  17D3  2FEE               	goto	l4307
  1652  17D4                     u6400:
  1653  17D4                     l4299:
  1654                           
  1655                           ;lab03.c: 106:             entregado = RCREG;
  1656  17D4  081A               	movf	26,w	;volatile
  1657  17D5  00E9               	movwf	??_main
  1658  17D6  0869               	movf	??_main,w
  1659  17D7  00ED               	movwf	_entregado
  1660  17D8                     l4301:
  1661                           
  1662                           ;lab03.c: 107:             if(entregado == '+'){contador = contador +1;}
  1663  17D8  302B               	movlw	43
  1664  17D9  066D               	xorwf	_entregado,w
  1665  17DA  1D03               	btfss	3,2
  1666  17DB  2FDD               	goto	u6411
  1667  17DC  2FDE               	goto	u6410
  1668  17DD                     u6411:
  1669  17DD  2FE3               	goto	l90
  1670  17DE                     u6410:
  1671  17DE                     l4303:
  1672  17DE  086C               	movf	_contador,w
  1673  17DF  3E01               	addlw	1
  1674  17E0  00E9               	movwf	??_main
  1675  17E1  0869               	movf	??_main,w
  1676  17E2  00EC               	movwf	_contador
  1677  17E3                     l90:
  1678                           
  1679                           ;lab03.c: 108:             if(entregado == '-'){contador = contador -1;}
  1680  17E3  302D               	movlw	45
  1681  17E4  066D               	xorwf	_entregado,w
  1682  17E5  1D03               	btfss	3,2
  1683  17E6  2FE8               	goto	u6421
  1684  17E7  2FE9               	goto	u6420
  1685  17E8                     u6421:
  1686  17E8  2FEE               	goto	l4307
  1687  17E9                     u6420:
  1688  17E9                     l4305:
  1689  17E9  086C               	movf	_contador,w
  1690  17EA  3EFF               	addlw	255
  1691  17EB  00E9               	movwf	??_main
  1692  17EC  0869               	movf	??_main,w
  1693  17ED  00EC               	movwf	_contador
  1694  17EE                     l4307:
  1695                           
  1696                           ;lab03.c: 110:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1697  17EE  3006               	movlw	6
  1698  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  1699  17F0  1303               	bcf	3,6	;RP1=0, select bank0
  1700  17F1  00EB               	movwf	??_main+2
  1701  17F2  3013               	movlw	19
  1702  17F3  00EA               	movwf	??_main+1
  1703  17F4  30AD               	movlw	173
  1704  17F5  00E9               	movwf	??_main
  1705  17F6                     u6437:
  1706  17F6  0BE9               	decfsz	??_main,f
  1707  17F7  2FF6               	goto	u6437
  1708  17F8  0BEA               	decfsz	??_main+1,f
  1709  17F9  2FF6               	goto	u6437
  1710  17FA  0BEB               	decfsz	??_main+2,f
  1711  17FB  2FF6               	goto	u6437
  1712  17FC  2F3C               	goto	l4269
  1713  17FD  120A  118A  280C   	ljmp	start
  1714  1800                     __end_of_main:
  1715                           
  1716                           	psect	text1
  1717  0A8B                     __ptext1:	
  1718 ;; *************** function _sprintf *****************
  1719 ;; Defined at:
  1720 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  sp              1    wreg     PTR unsigned char 
  1723 ;;		 -> data(16), 
  1724 ;;  f               1   64[BANK0 ] PTR const unsigned char 
  1725 ;;		 -> STR_2(19), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1728 ;;		 -> data(16), 
  1729 ;;  val             4   18[BANK1 ] unsigned long 
  1730 ;;  tmpval          4   14[BANK1 ] struct .
  1731 ;;  fval            3   24[BANK1 ] struct .
  1732 ;;  prec            2   28[BANK1 ] int 
  1733 ;;  eexp            2   22[BANK1 ] int 
  1734 ;;  width           2   12[BANK1 ] int 
  1735 ;;  flag            2   10[BANK1 ] unsigned short 
  1736 ;;  cp              2    0        PTR const unsigned char 
  1737 ;;  len             2    0        unsigned int 
  1738 ;;  c               1   30[BANK1 ] unsigned char 
  1739 ;;  ap              1    9[BANK1 ] PTR void [1]
  1740 ;;		 -> ?_sprintf(2), 
  1741 ;;  d               1    0        unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  2   64[BANK0 ] int 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       9       0       0       0
  1752 ;;      Locals:         0       0      25       0       0
  1753 ;;      Temps:          0       0       6       0       0
  1754 ;;      Totals:         0       9      31       0       0
  1755 ;;Total ram usage:       40 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		___awdiv
  1760 ;;		___ftadd
  1761 ;;		___ftge
  1762 ;;		___ftmul
  1763 ;;		___ftneg
  1764 ;;		___ftsub
  1765 ;;		___fttol
  1766 ;;		___lldiv
  1767 ;;		___llmod
  1768 ;;		___lltoft
  1769 ;;		___wmul
  1770 ;;		__div_to_l_
  1771 ;;		__tdiv_to_l_
  1772 ;;		_fround
  1773 ;;		_isdigit
  1774 ;;		_scale
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _sprintf
  1782  0A8B                     _sprintf:
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1786                           ;sprintf@sp stored from wreg
  1787  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0A8D  00BB               	movwf	sprintf@sp^(0+128)
  1790  0A8E                     l3967:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1793  0A8E  3061               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1794  0A8F  00A0               	movwf	??_sprintf^(0+128)
  1795  0A90  0820               	movf	??_sprintf^(0+128),w
  1796  0A91  00A9               	movwf	sprintf@ap^(0+128)
  1797  0A92                     L1:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1800  0A92  120A  118A  2E1B   	goto	l4247
  1801  0A95                     l3969:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1804  0A95  3025               	movlw	37
  1805  0A96  063E               	xorwf	sprintf@c^(0+128),w
  1806  0A97  1903               	btfsc	3,2
  1807  0A98  2A9A               	goto	u5861
  1808  0A99  2A9B               	goto	u5860
  1809  0A9A                     u5861:
  1810  0A9A  2AA7               	goto	l3975
  1811  0A9B                     u5860:
  1812  0A9B                     l3971:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1815  0A9B  083E               	movf	sprintf@c^(0+128),w
  1816  0A9C  00A0               	movwf	??_sprintf^(0+128)
  1817  0A9D  083B               	movf	sprintf@sp^(0+128),w
  1818  0A9E  0084               	movwf	4
  1819  0A9F  0820               	movf	??_sprintf^(0+128),w
  1820  0AA0  1383               	bcf	3,7	;select IRP bank0
  1821  0AA1  0080               	movwf	0
  1822  0AA2                     l3973:
  1823  0AA2  3001               	movlw	1
  1824  0AA3  00A0               	movwf	??_sprintf^(0+128)
  1825  0AA4  0820               	movf	??_sprintf^(0+128),w
  1826  0AA5  07BB               	addwf	sprintf@sp^(0+128),f
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1829  0AA6  2A92               	goto	L1
  1830  0AA7                     l3975:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1833  0AA7  01AC               	clrf	sprintf@width^(0+128)
  1834  0AA8  01AD               	clrf	(sprintf@width+1)^(0+128)
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1837  0AA9  01AA               	clrf	sprintf@flag^(0+128)
  1838  0AAA  01AB               	clrf	(sprintf@flag+1)^(0+128)
  1839  0AAB                     l3977:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1842  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0AAD  0860               	movf	sprintf@f,w
  1845  0AAE  0084               	movwf	4
  1846  0AAF  160A  118A  200A  120A  158A  	fcall	stringdir
  1847  0AB4  160A  158A  250B  120A  158A  	fcall	_isdigit
  1848  0AB9  1C03               	btfss	3,0
  1849  0ABA  2ABC               	goto	u5871
  1850  0ABB  2ABD               	goto	u5870
  1851  0ABC                     u5871:
  1852  0ABC  2B03               	goto	l3989
  1853  0ABD                     u5870:
  1854  0ABD                     l3979:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1857  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0ABE  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0ABF  01AC               	clrf	sprintf@width^(0+128)
  1860  0AC0  01AD               	clrf	(sprintf@width+1)^(0+128)
  1861  0AC1                     l3981:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1864  0AC1  300A               	movlw	10
  1865  0AC2  00F3               	movwf	___wmul@multiplier
  1866  0AC3  3000               	movlw	0
  1867  0AC4  00F4               	movwf	___wmul@multiplier+1
  1868  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0AC6  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0AC7  082D               	movf	(sprintf@width+1)^(0+128),w
  1871  0AC8  00F6               	movwf	___wmul@multiplicand+1
  1872  0AC9  082C               	movf	sprintf@width^(0+128),w
  1873  0ACA  00F5               	movwf	___wmul@multiplicand
  1874  0ACB  160A  158A  257B  120A  158A  	fcall	___wmul
  1875  0AD0  0874               	movf	?___wmul+1,w
  1876  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0AD3  00AD               	movwf	(sprintf@width+1)^(0+128)
  1879  0AD4  0873               	movf	?___wmul,w
  1880  0AD5  00AC               	movwf	sprintf@width^(0+128)
  1881  0AD6                     l3983:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1884  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0AD8  0860               	movf	sprintf@f,w
  1887  0AD9  0084               	movwf	4
  1888  0ADA  160A  118A  200A  120A  158A  	fcall	stringdir
  1889  0ADF  3ED0               	addlw	208
  1890  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  1891  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  1892  0AE2  00A0               	movwf	??_sprintf^(0+128)
  1893  0AE3  30FF               	movlw	255
  1894  0AE4  1803               	skipnc
  1895  0AE5  3000               	movlw	0
  1896  0AE6  00A1               	movwf	(??_sprintf^(0+128)+1)
  1897  0AE7  0820               	movf	??_sprintf^(0+128),w
  1898  0AE8  07AC               	addwf	sprintf@width^(0+128),f
  1899  0AE9  1803               	skipnc
  1900  0AEA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  1901  0AEB  0821               	movf	(??_sprintf+1)^(0+128),w
  1902  0AEC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  1903  0AED                     l3985:
  1904  0AED  3001               	movlw	1
  1905  0AEE  00A0               	movwf	??_sprintf^(0+128)
  1906  0AEF  0820               	movf	??_sprintf^(0+128),w
  1907  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0AF2  07E0               	addwf	sprintf@f,f
  1910  0AF3                     l3987:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1913  0AF3  0860               	movf	sprintf@f,w
  1914  0AF4  0084               	movwf	4
  1915  0AF5  160A  118A  200A  120A  158A  	fcall	stringdir
  1916  0AFA  160A  158A  250B  120A  158A  	fcall	_isdigit
  1917  0AFF  1803               	btfsc	3,0
  1918  0B00  2B02               	goto	u5881
  1919  0B01  2B03               	goto	u5880
  1920  0B02                     u5881:
  1921  0B02  2AC1               	goto	l3981
  1922  0B03                     u5880:
  1923  0B03                     l3989:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1926  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0B05  0860               	movf	sprintf@f,w
  1929  0B06  0084               	movwf	4
  1930  0B07  160A  118A  200A  120A  158A  	fcall	stringdir
  1931  0B0C  3A2E               	xorlw	46
  1932  0B0D  1D03               	skipz
  1933  0B0E  2B10               	goto	u5891
  1934  0B0F  2B11               	goto	u5890
  1935  0B10                     u5891:
  1936  0B10  2B63               	goto	l4005
  1937  0B11                     u5890:
  1938  0B11                     l3991:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1941  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0B13  172B               	bsf	(sprintf@flag^(0+128)+1),6
  1944  0B14                     l3993:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1947  0B14  3001               	movlw	1
  1948  0B15  00A0               	movwf	??_sprintf^(0+128)
  1949  0B16  0820               	movf	??_sprintf^(0+128),w
  1950  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0B19  07E0               	addwf	sprintf@f,f
  1953  0B1A                     l3995:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1956  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0B1C  01BC               	clrf	sprintf@prec^(0+128)
  1959  0B1D  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1962  0B1E  2B51               	goto	l4003
  1963  0B1F                     l3997:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1966  0B1F  300A               	movlw	10
  1967  0B20  00F3               	movwf	___wmul@multiplier
  1968  0B21  3000               	movlw	0
  1969  0B22  00F4               	movwf	___wmul@multiplier+1
  1970  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0B25  083D               	movf	(sprintf@prec+1)^(0+128),w
  1973  0B26  00F6               	movwf	___wmul@multiplicand+1
  1974  0B27  083C               	movf	sprintf@prec^(0+128),w
  1975  0B28  00F5               	movwf	___wmul@multiplicand
  1976  0B29  160A  158A  257B  120A  158A  	fcall	___wmul
  1977  0B2E  0874               	movf	?___wmul+1,w
  1978  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0B30  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0B31  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1981  0B32  0873               	movf	?___wmul,w
  1982  0B33  00BC               	movwf	sprintf@prec^(0+128)
  1983  0B34                     l3999:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1986  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0B36  0860               	movf	sprintf@f,w
  1989  0B37  0084               	movwf	4
  1990  0B38  160A  118A  200A  120A  158A  	fcall	stringdir
  1991  0B3D  3ED0               	addlw	208
  1992  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0B40  00A0               	movwf	??_sprintf^(0+128)
  1995  0B41  30FF               	movlw	255
  1996  0B42  1803               	skipnc
  1997  0B43  3000               	movlw	0
  1998  0B44  00A1               	movwf	(??_sprintf^(0+128)+1)
  1999  0B45  0820               	movf	??_sprintf^(0+128),w
  2000  0B46  07BC               	addwf	sprintf@prec^(0+128),f
  2001  0B47  1803               	skipnc
  2002  0B48  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2003  0B49  0821               	movf	(??_sprintf+1)^(0+128),w
  2004  0B4A  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2005  0B4B                     l4001:
  2006  0B4B  3001               	movlw	1
  2007  0B4C  00A0               	movwf	??_sprintf^(0+128)
  2008  0B4D  0820               	movf	??_sprintf^(0+128),w
  2009  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0B50  07E0               	addwf	sprintf@f,f
  2012  0B51                     l4003:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2015  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0B52  0860               	movf	sprintf@f,w
  2017  0B53  0084               	movwf	4
  2018  0B54  160A  118A  200A  120A  158A  	fcall	stringdir
  2019  0B59  160A  158A  250B  120A  158A  	fcall	_isdigit
  2020  0B5E  1803               	btfsc	3,0
  2021  0B5F  2B61               	goto	u5901
  2022  0B60  2B62               	goto	u5900
  2023  0B61                     u5901:
  2024  0B61  2B1F               	goto	l3997
  2025  0B62                     u5900:
  2026  0B62  2B6B               	goto	l4011
  2027  0B63                     l4005:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2030  0B63  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0B64  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0B65  01BC               	clrf	sprintf@prec^(0+128)
  2033  0B66  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2034  0B67                     l4007:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2037  0B67  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2038  0B68  2B6B               	goto	l4011
  2039  0B69                     l387:	
  2040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2041                           
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2044  0B69  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2047  0B6A  2B8F               	goto	l4013
  2048  0B6B                     l4011:
  2049  0B6B  3001               	movlw	1
  2050  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0B6E  07E0               	addwf	sprintf@f,f
  2053  0B6F  30FF               	movlw	-1
  2054  0B70  0760               	addwf	sprintf@f,w
  2055  0B71  0084               	movwf	4
  2056  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  2057  0B77  1683               	bsf	3,5	;RP0=1, select bank1
  2058  0B78  1303               	bcf	3,6	;RP1=0, select bank1
  2059  0B79  00BE               	movwf	sprintf@c^(0+128)
  2060  0B7A  00A0               	movwf	??_sprintf^(0+128)
  2061  0B7B  01A1               	clrf	(??_sprintf^(0+128)+1)
  2062                           
  2063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2064                           ; Switch size 1, requested type "simple"
  2065                           ; Number of cases is 1, Range of values is 0 to 0
  2066                           ; switch strategies available:
  2067                           ; Name         Instructions Cycles
  2068                           ; simple_byte            4     3 (average)
  2069                           ; direct_byte           11     8 (fixed)
  2070                           ; jumptable            260     6 (fixed)
  2071                           ;	Chosen strategy is simple_byte
  2072  0B7C  0821               	movf	(??_sprintf+1)^(0+128),w
  2073  0B7D  3A00               	xorlw	0	; case 0
  2074  0B7E  1903               	skipnz
  2075  0B7F  2B81               	goto	l4359
  2076  0B80  2A92               	goto	L1
  2077  0B81                     l4359:
  2078                           
  2079                           ; Switch size 1, requested type "simple"
  2080                           ; Number of cases is 4, Range of values is 0 to 105
  2081                           ; switch strategies available:
  2082                           ; Name         Instructions Cycles
  2083                           ; simple_byte           13     7 (average)
  2084                           ; jumptable            260     6 (fixed)
  2085                           ;	Chosen strategy is simple_byte
  2086  0B81  0820               	movf	??_sprintf^(0+128),w
  2087  0B82  3A00               	xorlw	0	; case 0
  2088  0B83  1903               	skipnz
  2089  0B84  2D42               	goto	L3
  2090  0B85  3A64               	xorlw	100	; case 100
  2091  0B86  1903               	skipnz
  2092  0B87  2B8F               	goto	l4013
  2093  0B88  3A02               	xorlw	2	; case 102
  2094  0B89  1903               	skipnz
  2095  0B8A  2B69               	goto	l387
  2096  0B8B  3A0F               	xorlw	15	; case 105
  2097  0B8C  1903               	skipnz
  2098  0B8D  2B8F               	goto	l4013
  2099  0B8E  2A92               	goto	L1
  2100  0B8F                     l4013:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2103  0B8F  3000               	movlw	0
  2104  0B90  052A               	andwf	sprintf@flag^(0+128),w
  2105  0B91  00A0               	movwf	??_sprintf^(0+128)
  2106  0B92  3007               	movlw	7
  2107  0B93  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2108  0B94  00A1               	movwf	(??_sprintf+1)^(0+128)
  2109  0B95  0820               	movf	??_sprintf^(0+128),w
  2110  0B96  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2111  0B97  1903               	btfsc	3,2
  2112  0B98  2B9A               	goto	u5911
  2113  0B99  2B9D               	goto	u5910
  2114  0B9A                     u5911:
  2115  0B9A  120A  118A  2C6C   	goto	l4169
  2116  0B9D                     u5910:
  2117  0B9D                     l4015:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2120  0B9D  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2121  0B9E  2BA0               	goto	u5921
  2122  0B9F  2BA1               	goto	u5920
  2123  0BA0                     u5921:
  2124  0BA0  2BA5               	goto	l4019
  2125  0BA1                     u5920:
  2126  0BA1                     l4017:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2129  0BA1  3006               	movlw	6
  2130  0BA2  00BC               	movwf	sprintf@prec^(0+128)
  2131  0BA3  3000               	movlw	0
  2132  0BA4  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2133  0BA5                     l4019:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2136  0BA5  0829               	movf	sprintf@ap^(0+128),w
  2137  0BA6  0084               	movwf	4
  2138  0BA7  1383               	bcf	3,7	;select IRP bank0
  2139  0BA8  0800               	movf	0,w
  2140  0BA9  00B8               	movwf	sprintf@fval^(0+128)
  2141  0BAA  0A84               	incf	4,f
  2142  0BAB  0800               	movf	0,w
  2143  0BAC  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2144  0BAD  0A84               	incf	4,f
  2145  0BAE  0800               	movf	0,w
  2146  0BAF  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2147  0BB0                     l4021:
  2148  0BB0  3003               	movlw	3
  2149  0BB1  00A0               	movwf	??_sprintf^(0+128)
  2150  0BB2  0820               	movf	??_sprintf^(0+128),w
  2151  0BB3  07A9               	addwf	sprintf@ap^(0+128),f
  2152  0BB4                     l4023:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2155  0BB4  0838               	movf	sprintf@fval^(0+128),w
  2156  0BB5  00F3               	movwf	___ftge@ff1
  2157  0BB6  0839               	movf	(sprintf@fval+1)^(0+128),w
  2158  0BB7  00F4               	movwf	___ftge@ff1+1
  2159  0BB8  083A               	movf	(sprintf@fval+2)^(0+128),w
  2160  0BB9  00F5               	movwf	___ftge@ff1+2
  2161  0BBA  3000               	movlw	0
  2162  0BBB  00F6               	movwf	___ftge@ff2
  2163  0BBC  3000               	movlw	0
  2164  0BBD  00F7               	movwf	___ftge@ff2+1
  2165  0BBE  3000               	movlw	0
  2166  0BBF  00F8               	movwf	___ftge@ff2+2
  2167  0BC0  160A  158A  2651  120A  158A  	fcall	___ftge
  2168  0BC5  1803               	btfsc	3,0
  2169  0BC6  2BC8               	goto	u5931
  2170  0BC7  2BC9               	goto	u5930
  2171  0BC8                     u5931:
  2172  0BC8  2BE2               	goto	l4029
  2173  0BC9                     u5930:
  2174  0BC9                     l4025:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2177  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0BCB  0838               	movf	sprintf@fval^(0+128),w
  2180  0BCC  00F3               	movwf	___ftneg@f1
  2181  0BCD  0839               	movf	(sprintf@fval+1)^(0+128),w
  2182  0BCE  00F4               	movwf	___ftneg@f1+1
  2183  0BCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  2184  0BD0  00F5               	movwf	___ftneg@f1+2
  2185  0BD1  160A  158A  24D7  120A  158A  	fcall	___ftneg
  2186  0BD6  0873               	movf	?___ftneg,w
  2187  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0BD9  00B8               	movwf	sprintf@fval^(0+128)
  2190  0BDA  0874               	movf	?___ftneg+1,w
  2191  0BDB  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2192  0BDC  0875               	movf	?___ftneg+2,w
  2193  0BDD  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2194  0BDE                     l4027:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2197  0BDE  3003               	movlw	3
  2198  0BDF  04AA               	iorwf	sprintf@flag^(0+128),f
  2199  0BE0  3000               	movlw	0
  2200  0BE1  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2201  0BE2                     l4029:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2204  0BE2  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0BE3  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0BE4  01B6               	clrf	sprintf@eexp^(0+128)
  2207  0BE5  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2208  0BE6                     l4031:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2211  0BE6  083A               	movf	(sprintf@fval+2)^(0+128),w
  2212  0BE7  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  2213  0BE8  0438               	iorwf	sprintf@fval^(0+128),w
  2214  0BE9  1903               	skipnz
  2215  0BEA  2BEC               	goto	u5941
  2216  0BEB  2BED               	goto	u5940
  2217  0BEC                     u5941:
  2218  0BEC  2CE7               	goto	l4057
  2219  0BED                     u5940:
  2220  0BED                     l4033:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2223  0BED  30B8               	movlw	low (sprintf@fval| 0)
  2224  0BEE  0084               	movwf	4
  2225  0BEF  1383               	bcf	3,7	;select IRP bank1
  2226  0BF0  0800               	movf	0,w
  2227  0BF1  00A0               	movwf	??_sprintf^(0+128)
  2228  0BF2  0A84               	incf	4,f
  2229  0BF3  0800               	movf	0,w
  2230  0BF4  00A1               	movwf	(??_sprintf^(0+128)+1)
  2231  0BF5  0A84               	incf	4,f
  2232  0BF6  0800               	movf	0,w
  2233  0BF7  00A2               	movwf	(??_sprintf^(0+128)+2)
  2234  0BF8  0A84               	incf	4,f
  2235  0BF9  0800               	movf	0,w
  2236  0BFA  00A3               	movwf	(??_sprintf^(0+128)+3)
  2237  0BFB  300F               	movlw	15
  2238  0BFC                     u5955:
  2239  0BFC  1003               	clrc
  2240  0BFD  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2241  0BFE  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2242  0BFF  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2243  0C00  0CA0               	rrf	??_sprintf^(0+128),f
  2244  0C01                     u5950:
  2245  0C01  3EFF               	addlw	-1
  2246  0C02  1D03               	skipz
  2247  0C03  2BFC               	goto	u5955
  2248  0C04  30FF               	movlw	255
  2249  0C05  0520               	andwf	??_sprintf^(0+128),w
  2250  0C06  00A4               	movwf	(??_sprintf+4)^(0+128)
  2251  0C07  3000               	movlw	0
  2252  0C08  0521               	andwf	(??_sprintf+1)^(0+128),w
  2253  0C09  00A5               	movwf	(??_sprintf+5)^(0+128)
  2254  0C0A  0824               	movf	(??_sprintf+4)^(0+128),w
  2255  0C0B  3E82               	addlw	130
  2256  0C0C  00B6               	movwf	sprintf@eexp^(0+128)
  2257  0C0D  0825               	movf	(??_sprintf+5)^(0+128),w
  2258  0C0E  1803               	skipnc
  2259  0C0F  3E01               	addlw	1
  2260  0C10  3EFF               	addlw	255
  2261  0C11  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2262  0C12                     l4035:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2265  0C12  30FF               	movlw	255
  2266  0C13  07B6               	addwf	sprintf@eexp^(0+128),f
  2267  0C14  1803               	skipnc
  2268  0C15  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2269  0C16  30FF               	movlw	255
  2270  0C17  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2271  0C18                     l4037:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2274  0C18  3003               	movlw	3
  2275  0C19  00F3               	movwf	___wmul@multiplier
  2276  0C1A  3000               	movlw	0
  2277  0C1B  00F4               	movwf	___wmul@multiplier+1
  2278  0C1C  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2279  0C1D  00F6               	movwf	___wmul@multiplicand+1
  2280  0C1E  0836               	movf	sprintf@eexp^(0+128),w
  2281  0C1F  00F5               	movwf	___wmul@multiplicand
  2282  0C20  160A  158A  257B  120A  158A  	fcall	___wmul
  2283  0C25  0874               	movf	?___wmul+1,w
  2284  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0C27  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0C28  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2287  0C29  0873               	movf	?___wmul,w
  2288  0C2A  00B6               	movwf	sprintf@eexp^(0+128)
  2289  0C2B                     l4039:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2292  0C2B  300A               	movlw	10
  2293  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0C2E  00A0               	movwf	___awdiv@divisor
  2296  0C2F  3000               	movlw	0
  2297  0C30  00A1               	movwf	___awdiv@divisor+1
  2298  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  2299  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  2300  0C33  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2301  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0C36  00A3               	movwf	___awdiv@dividend+1
  2304  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0C39  0836               	movf	sprintf@eexp^(0+128),w
  2307  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0C3C  00A2               	movwf	___awdiv@dividend
  2310  0C3D  160A  118A  2224  120A  158A  	fcall	___awdiv
  2311  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0C44  0821               	movf	?___awdiv+1,w
  2314  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0C47  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2317  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0C4A  0820               	movf	?___awdiv,w
  2320  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0C4D  00B6               	movwf	sprintf@eexp^(0+128)
  2323  0C4E                     l4041:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2326  0C4E  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2327  0C4F  2C51               	goto	u5961
  2328  0C50  2C52               	goto	u5960
  2329  0C51                     u5961:
  2330  0C51  2C58               	goto	l4045
  2331  0C52                     u5960:
  2332  0C52                     l4043:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2335  0C52  30FF               	movlw	255
  2336  0C53  07B6               	addwf	sprintf@eexp^(0+128),f
  2337  0C54  1803               	skipnc
  2338  0C55  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2339  0C56  30FF               	movlw	255
  2340  0C57  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2341  0C58                     l4045:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2344  0C58  0336               	decf	sprintf@eexp^(0+128),w
  2345  0C59  3AFF               	xorlw	255
  2346  0C5A  120A  158A  2545  120A  158A  	fcall	_scale
  2347  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0C61  083D               	movf	?_scale,w
  2350  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0C64  00AE               	movwf	sprintf@tmpval^(0+128)
  2353  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0C67  083E               	movf	?_scale+1,w
  2356  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0C6A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2359  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0C6D  083F               	movf	?_scale+2,w
  2362  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0C70  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2365  0C71                     l4047:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2368  0C71  0838               	movf	sprintf@fval^(0+128),w
  2369  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0C74  00AD               	movwf	___ftmul@f1
  2372  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0C76  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0C77  0839               	movf	(sprintf@fval+1)^(0+128),w
  2375  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0C7A  00AE               	movwf	___ftmul@f1+1
  2378  0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0C7C  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0C7D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2381  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0C80  00AF               	movwf	___ftmul@f1+2
  2384  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0C82  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0C83  082E               	movf	sprintf@tmpval^(0+128),w
  2387  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0C86  00B0               	movwf	___ftmul@f2
  2390  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0C89  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2393  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0C8C  00B1               	movwf	___ftmul@f2+1
  2396  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0C8E  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0C8F  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2399  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0C91  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0C92  00B2               	movwf	___ftmul@f2+2
  2402  0C93  160A  118A  2634  120A  158A  	fcall	___ftmul
  2403  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0C9A  082D               	movf	?___ftmul,w
  2406  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0C9D  00AE               	movwf	sprintf@tmpval^(0+128)
  2409  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0CA0  082E               	movf	?___ftmul+1,w
  2412  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0CA3  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2415  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0CA6  082F               	movf	?___ftmul+2,w
  2418  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0CA9  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2421  0CAA                     l4049:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2424  0CAA  082E               	movf	sprintf@tmpval^(0+128),w
  2425  0CAB  00F3               	movwf	___ftge@ff1
  2426  0CAC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2427  0CAD  00F4               	movwf	___ftge@ff1+1
  2428  0CAE  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2429  0CAF  00F5               	movwf	___ftge@ff1+2
  2430  0CB0  3000               	movlw	0
  2431  0CB1  00F6               	movwf	___ftge@ff2
  2432  0CB2  3080               	movlw	128
  2433  0CB3  00F7               	movwf	___ftge@ff2+1
  2434  0CB4  303F               	movlw	63
  2435  0CB5  00F8               	movwf	___ftge@ff2+2
  2436  0CB6  160A  158A  2651  120A  158A  	fcall	___ftge
  2437  0CBB  1803               	btfsc	3,0
  2438  0CBC  2CBE               	goto	u5971
  2439  0CBD  2CBF               	goto	u5970
  2440  0CBE                     u5971:
  2441  0CBE  2CC8               	goto	l4053
  2442  0CBF                     u5970:
  2443  0CBF                     l4051:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2446  0CBF  30FF               	movlw	255
  2447  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0CC2  07B6               	addwf	sprintf@eexp^(0+128),f
  2450  0CC3  1803               	skipnc
  2451  0CC4  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2452  0CC5  30FF               	movlw	255
  2453  0CC6  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2454  0CC7  2CE7               	goto	l4057
  2455  0CC8                     l4053:
  2456  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0CCA  082E               	movf	sprintf@tmpval^(0+128),w
  2459  0CCB  00F3               	movwf	___ftge@ff1
  2460  0CCC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2461  0CCD  00F4               	movwf	___ftge@ff1+1
  2462  0CCE  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2463  0CCF  00F5               	movwf	___ftge@ff1+2
  2464  0CD0  3000               	movlw	0
  2465  0CD1  00F6               	movwf	___ftge@ff2
  2466  0CD2  3020               	movlw	32
  2467  0CD3  00F7               	movwf	___ftge@ff2+1
  2468  0CD4  3041               	movlw	65
  2469  0CD5  00F8               	movwf	___ftge@ff2+2
  2470  0CD6  160A  158A  2651  120A  158A  	fcall	___ftge
  2471  0CDB  1C03               	btfss	3,0
  2472  0CDC  2CDE               	goto	u5981
  2473  0CDD  2CDF               	goto	u5980
  2474  0CDE                     u5981:
  2475  0CDE  2CE7               	goto	l4057
  2476  0CDF                     u5980:
  2477  0CDF                     l4055:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2480  0CDF  3001               	movlw	1
  2481  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  2482  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  2483  0CE2  07B6               	addwf	sprintf@eexp^(0+128),f
  2484  0CE3  1803               	skipnc
  2485  0CE4  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2486  0CE5  3000               	movlw	0
  2487  0CE6  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2488  0CE7                     l4057:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2491  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0CE8  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0CE9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2494  0CEA  3A80               	xorlw	128
  2495  0CEB  00FF               	movwf	btemp+1
  2496  0CEC  3080               	movlw	128
  2497  0CED  027F               	subwf	btemp+1,w
  2498  0CEE  1D03               	skipz
  2499  0CEF  2CF2               	goto	u5995
  2500  0CF0  300D               	movlw	13
  2501  0CF1  023C               	subwf	sprintf@prec^(0+128),w
  2502  0CF2                     u5995:
  2503  0CF2  1803               	skipnc
  2504  0CF3  2CF5               	goto	u5991
  2505  0CF4  2CF6               	goto	u5990
  2506  0CF5                     u5991:
  2507  0CF5  2D2F               	goto	l4061
  2508  0CF6                     u5990:
  2509  0CF6                     l4059:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2512  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  2514  0CF8  083C               	movf	sprintf@prec^(0+128),w
  2515  0CF9  120A  118A  2638  120A  158A  	fcall	_fround
  2516  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0D00  083D               	movf	?_fround,w
  2519  0D01  00CD               	movwf	___ftadd@f1
  2520  0D02  083E               	movf	?_fround+1,w
  2521  0D03  00CE               	movwf	___ftadd@f1+1
  2522  0D04  083F               	movf	?_fround+2,w
  2523  0D05  00CF               	movwf	___ftadd@f1+2
  2524  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  2525  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  2526  0D08  0838               	movf	sprintf@fval^(0+128),w
  2527  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0D0B  00D0               	movwf	___ftadd@f2
  2530  0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  2531  0D0D  1303               	bcf	3,6	;RP1=0, select bank1
  2532  0D0E  0839               	movf	(sprintf@fval+1)^(0+128),w
  2533  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0D11  00D1               	movwf	___ftadd@f2+1
  2536  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  2537  0D13  1303               	bcf	3,6	;RP1=0, select bank1
  2538  0D14  083A               	movf	(sprintf@fval+2)^(0+128),w
  2539  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0D17  00D2               	movwf	___ftadd@f2+2
  2542  0D18  120A  158A  2155  120A  158A  	fcall	___ftadd
  2543  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0D1F  084D               	movf	?___ftadd,w
  2546  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0D22  00B8               	movwf	sprintf@fval^(0+128)
  2549  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0D25  084E               	movf	?___ftadd+1,w
  2552  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  2554  0D28  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2555  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0D2B  084F               	movf	?___ftadd+2,w
  2558  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0D2E  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2561  0D2F                     l4061:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2564  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  2565  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  2566  0D31  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2567  0D32  3A80               	xorlw	128
  2568  0D33  00FF               	movwf	btemp+1
  2569  0D34  3080               	movlw	128
  2570  0D35  027F               	subwf	btemp+1,w
  2571  0D36  1D03               	skipz
  2572  0D37  2D3A               	goto	u6005
  2573  0D38  300A               	movlw	10
  2574  0D39  0236               	subwf	sprintf@eexp^(0+128),w
  2575  0D3A                     u6005:
  2576  0D3A  1803               	skipnc
  2577  0D3B  2D3F               	goto	u6001
  2578  0D3C  120A  118A  2821   	goto	u6000
  2579  0D3F                     u6001:
  2580  0D3F  120A  118A  2858   	goto	l4069
  2581  0D42                     L3:
  2582  0D42                     L2:
  2583  0D42  120A  118A  2E33   	ljmp	l4249
  2584                           
  2585                           	psect	text2
  2586  0D45                     __ptext2:	
  2587 ;; *************** function _scale *****************
  2588 ;; Defined at:
  2589 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  scl             1    wreg     char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  scl             1   37[BANK0 ] char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  3   29[BANK0 ] char 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       3       0       0       0
  2604 ;;      Locals:         0       4       0       0       0
  2605 ;;      Temps:          0       2       0       0       0
  2606 ;;      Totals:         0       9       0       0       0
  2607 ;;Total ram usage:        9 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    4
  2610 ;; This function calls:
  2611 ;;		___awdiv
  2612 ;;		___awmod
  2613 ;;		___bmul
  2614 ;;		___ftmul
  2615 ;; This function is called by:
  2616 ;;		_sprintf
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _scale
  2622  0D45                     _scale:
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2626                           ;scale@scl stored from wreg
  2627  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0D47  00C5               	movwf	scale@scl
  2630  0D48                     l3733:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2633  0D48  1FC5               	btfss	scale@scl,7
  2634  0D49  2D4B               	goto	u5491
  2635  0D4A  2D4C               	goto	u5490
  2636  0D4B                     u5491:
  2637  0D4B  2EA7               	goto	l3755
  2638  0D4C                     u5490:
  2639  0D4C                     l3735:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2642  0D4C  09C5               	comf	scale@scl,f
  2643  0D4D  0AC5               	incf	scale@scl,f
  2644  0D4E                     l3737:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2647  0D4E  0845               	movf	scale@scl,w
  2648  0D4F  3A80               	xorlw	128
  2649  0D50  3E12               	addlw	-238
  2650  0D51  1C03               	skipc
  2651  0D52  2D54               	goto	u5501
  2652  0D53  2D55               	goto	u5500
  2653  0D54                     u5501:
  2654  0D54  2E13               	goto	l3745
  2655  0D55                     u5500:
  2656  0D55                     l3739:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2659  0D55  3003               	movlw	3
  2660  0D56  00C0               	movwf	??_scale
  2661  0D57  0840               	movf	??_scale,w
  2662  0D58  00A9               	movwf	___bmul@multiplicand
  2663  0D59  0845               	movf	scale@scl,w
  2664  0D5A  00F5               	movwf	___awmod@dividend
  2665  0D5B  01F6               	clrf	___awmod@dividend+1
  2666  0D5C  1BF5               	btfsc	___awmod@dividend,7
  2667  0D5D  03F6               	decf	___awmod@dividend+1,f
  2668  0D5E  3064               	movlw	100
  2669  0D5F  00F3               	movwf	___awmod@divisor
  2670  0D60  3000               	movlw	0
  2671  0D61  00F4               	movwf	___awmod@divisor+1
  2672  0D62  160A  158A  27A7  120A  158A  	fcall	___awmod
  2673  0D67  0874               	movf	?___awmod+1,w
  2674  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0D6A  00A3               	movwf	___awdiv@dividend+1
  2677  0D6B  0873               	movf	?___awmod,w
  2678  0D6C  00A2               	movwf	___awdiv@dividend
  2679  0D6D  300A               	movlw	10
  2680  0D6E  00A0               	movwf	___awdiv@divisor
  2681  0D6F  3000               	movlw	0
  2682  0D70  00A1               	movwf	___awdiv@divisor+1
  2683  0D71  160A  118A  2224  120A  158A  	fcall	___awdiv
  2684  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0D78  0820               	movf	?___awdiv,w
  2687  0D79  160A  158A  251D  120A  158A  	fcall	___bmul
  2688  0D7E  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2689  0D7F  0084               	movwf	4
  2690  0D80  160A  118A  200A  120A  158A  	fcall	stringdir
  2691  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0D87  00AD               	movwf	___ftmul@f1
  2694  0D88  160A  118A  200A  120A  158A  	fcall	stringdir
  2695  0D8D  00AE               	movwf	___ftmul@f1+1
  2696  0D8E  160A  118A  200A  120A  158A  	fcall	stringdir
  2697  0D93  00AF               	movwf	___ftmul@f1+2
  2698  0D94  3003               	movlw	3
  2699  0D95  00C1               	movwf	??_scale+1
  2700  0D96  0841               	movf	??_scale+1,w
  2701  0D97  00A9               	movwf	___bmul@multiplicand
  2702  0D98  0845               	movf	scale@scl,w
  2703  0D99  00A2               	movwf	___awdiv@dividend
  2704  0D9A  01A3               	clrf	___awdiv@dividend+1
  2705  0D9B  1BA2               	btfsc	___awdiv@dividend,7
  2706  0D9C  03A3               	decf	___awdiv@dividend+1,f
  2707  0D9D  3064               	movlw	100
  2708  0D9E  00A0               	movwf	___awdiv@divisor
  2709  0D9F  3000               	movlw	0
  2710  0DA0  00A1               	movwf	___awdiv@divisor+1
  2711  0DA1  160A  118A  2224  120A  158A  	fcall	___awdiv
  2712  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0DA8  0820               	movf	?___awdiv,w
  2715  0DA9  160A  158A  251D  120A  158A  	fcall	___bmul
  2716  0DAE  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2717  0DAF  0084               	movwf	4
  2718  0DB0  160A  118A  200A  120A  158A  	fcall	stringdir
  2719  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  2721  0DB7  00B0               	movwf	___ftmul@f2
  2722  0DB8  160A  118A  200A  120A  158A  	fcall	stringdir
  2723  0DBD  00B1               	movwf	___ftmul@f2+1
  2724  0DBE  160A  118A  200A  120A  158A  	fcall	stringdir
  2725  0DC3  00B2               	movwf	___ftmul@f2+2
  2726  0DC4  160A  118A  2634  120A  158A  	fcall	___ftmul
  2727  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0DCB  082D               	movf	?___ftmul,w
  2730  0DCC  00C2               	movwf	_scale$1023
  2731  0DCD  082E               	movf	?___ftmul+1,w
  2732  0DCE  00C3               	movwf	_scale$1023+1
  2733  0DCF  082F               	movf	?___ftmul+2,w
  2734  0DD0  00C4               	movwf	_scale$1023+2
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2737  0DD1  3003               	movlw	3
  2738  0DD2  00C0               	movwf	??_scale
  2739  0DD3  0840               	movf	??_scale,w
  2740  0DD4  00A9               	movwf	___bmul@multiplicand
  2741  0DD5  0845               	movf	scale@scl,w
  2742  0DD6  00F5               	movwf	___awmod@dividend
  2743  0DD7  01F6               	clrf	___awmod@dividend+1
  2744  0DD8  1BF5               	btfsc	___awmod@dividend,7
  2745  0DD9  03F6               	decf	___awmod@dividend+1,f
  2746  0DDA  300A               	movlw	10
  2747  0DDB  00F3               	movwf	___awmod@divisor
  2748  0DDC  3000               	movlw	0
  2749  0DDD  00F4               	movwf	___awmod@divisor+1
  2750  0DDE  160A  158A  27A7  120A  158A  	fcall	___awmod
  2751  0DE3  0873               	movf	?___awmod,w
  2752  0DE4  160A  158A  251D  120A  158A  	fcall	___bmul
  2753  0DE9  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2754  0DEA  0084               	movwf	4
  2755  0DEB  160A  118A  200A  120A  158A  	fcall	stringdir
  2756  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0DF2  00AD               	movwf	___ftmul@f1
  2759  0DF3  160A  118A  200A  120A  158A  	fcall	stringdir
  2760  0DF8  00AE               	movwf	___ftmul@f1+1
  2761  0DF9  160A  118A  200A  120A  158A  	fcall	stringdir
  2762  0DFE  00AF               	movwf	___ftmul@f1+2
  2763  0DFF  0842               	movf	_scale$1023,w
  2764  0E00  00B0               	movwf	___ftmul@f2
  2765  0E01  0843               	movf	_scale$1023+1,w
  2766  0E02  00B1               	movwf	___ftmul@f2+1
  2767  0E03  0844               	movf	_scale$1023+2,w
  2768  0E04  00B2               	movwf	___ftmul@f2+2
  2769  0E05  160A  118A  2634  120A  158A  	fcall	___ftmul
  2770  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0E0C  082D               	movf	?___ftmul,w
  2773  0E0D  00BD               	movwf	?_scale
  2774  0E0E  082E               	movf	?___ftmul+1,w
  2775  0E0F  00BE               	movwf	?_scale+1
  2776  0E10  082F               	movf	?___ftmul+2,w
  2777  0E11  00BF               	movwf	?_scale+2
  2778  0E12  2FFF               	goto	l365
  2779  0E13                     l3745:
  2780  0E13  0845               	movf	scale@scl,w
  2781  0E14  3A80               	xorlw	128
  2782  0E15  3E75               	addlw	-139
  2783  0E16  1C03               	skipc
  2784  0E17  2E19               	goto	u5511
  2785  0E18  2E1A               	goto	u5510
  2786  0E19                     u5511:
  2787  0E19  2E86               	goto	l3751
  2788  0E1A                     u5510:
  2789  0E1A                     l3747:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2792  0E1A  3003               	movlw	3
  2793  0E1B  00C0               	movwf	??_scale
  2794  0E1C  0840               	movf	??_scale,w
  2795  0E1D  00A9               	movwf	___bmul@multiplicand
  2796  0E1E  0845               	movf	scale@scl,w
  2797  0E1F  00F5               	movwf	___awmod@dividend
  2798  0E20  01F6               	clrf	___awmod@dividend+1
  2799  0E21  1BF5               	btfsc	___awmod@dividend,7
  2800  0E22  03F6               	decf	___awmod@dividend+1,f
  2801  0E23  300A               	movlw	10
  2802  0E24  00F3               	movwf	___awmod@divisor
  2803  0E25  3000               	movlw	0
  2804  0E26  00F4               	movwf	___awmod@divisor+1
  2805  0E27  160A  158A  27A7  120A  158A  	fcall	___awmod
  2806  0E2C  0873               	movf	?___awmod,w
  2807  0E2D  160A  158A  251D  120A  158A  	fcall	___bmul
  2808  0E32  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2809  0E33  0084               	movwf	4
  2810  0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  2811  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0E3B  00AD               	movwf	___ftmul@f1
  2814  0E3C  160A  118A  200A  120A  158A  	fcall	stringdir
  2815  0E41  00AE               	movwf	___ftmul@f1+1
  2816  0E42  160A  118A  200A  120A  158A  	fcall	stringdir
  2817  0E47  00AF               	movwf	___ftmul@f1+2
  2818  0E48  3003               	movlw	3
  2819  0E49  00C1               	movwf	??_scale+1
  2820  0E4A  0841               	movf	??_scale+1,w
  2821  0E4B  00A9               	movwf	___bmul@multiplicand
  2822  0E4C  0845               	movf	scale@scl,w
  2823  0E4D  00A2               	movwf	___awdiv@dividend
  2824  0E4E  01A3               	clrf	___awdiv@dividend+1
  2825  0E4F  1BA2               	btfsc	___awdiv@dividend,7
  2826  0E50  03A3               	decf	___awdiv@dividend+1,f
  2827  0E51  300A               	movlw	10
  2828  0E52  00A0               	movwf	___awdiv@divisor
  2829  0E53  3000               	movlw	0
  2830  0E54  00A1               	movwf	___awdiv@divisor+1
  2831  0E55  160A  118A  2224  120A  158A  	fcall	___awdiv
  2832  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0E5C  0820               	movf	?___awdiv,w
  2835  0E5D  160A  158A  251D  120A  158A  	fcall	___bmul
  2836  0E62  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2837  0E63  0084               	movwf	4
  2838  0E64  160A  118A  200A  120A  158A  	fcall	stringdir
  2839  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0E6B  00B0               	movwf	___ftmul@f2
  2842  0E6C  160A  118A  200A  120A  158A  	fcall	stringdir
  2843  0E71  00B1               	movwf	___ftmul@f2+1
  2844  0E72  160A  118A  200A  120A  158A  	fcall	stringdir
  2845  0E77  00B2               	movwf	___ftmul@f2+2
  2846  0E78  160A  118A  2634  120A  158A  	fcall	___ftmul
  2847  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0E7F  082D               	movf	?___ftmul,w
  2850  0E80  00BD               	movwf	?_scale
  2851  0E81  082E               	movf	?___ftmul+1,w
  2852  0E82  00BE               	movwf	?_scale+1
  2853  0E83  082F               	movf	?___ftmul+2,w
  2854  0E84  00BF               	movwf	?_scale+2
  2855  0E85  2FFF               	goto	l365
  2856  0E86                     l3751:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2859  0E86  3003               	movlw	3
  2860  0E87  00C0               	movwf	??_scale
  2861  0E88  0840               	movf	??_scale,w
  2862  0E89  00A9               	movwf	___bmul@multiplicand
  2863  0E8A  0845               	movf	scale@scl,w
  2864  0E8B  160A  158A  251D  120A  158A  	fcall	___bmul
  2865  0E90  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2866  0E91  0084               	movwf	4
  2867  0E92  160A  118A  200A  120A  158A  	fcall	stringdir
  2868  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0E99  00BD               	movwf	?_scale
  2871  0E9A  160A  118A  200A  120A  158A  	fcall	stringdir
  2872  0E9F  00BE               	movwf	?_scale+1
  2873  0EA0  160A  118A  200A  120A  158A  	fcall	stringdir
  2874  0EA5  00BF               	movwf	?_scale+2
  2875  0EA6  2FFF               	goto	l365
  2876  0EA7                     l3755:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2879  0EA7  0845               	movf	scale@scl,w
  2880  0EA8  3A80               	xorlw	128
  2881  0EA9  3E12               	addlw	-238
  2882  0EAA  1C03               	skipc
  2883  0EAB  2EAD               	goto	u5521
  2884  0EAC  2EAE               	goto	u5520
  2885  0EAD                     u5521:
  2886  0EAD  2F6C               	goto	l3763
  2887  0EAE                     u5520:
  2888  0EAE                     l3757:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2891  0EAE  3003               	movlw	3
  2892  0EAF  00C0               	movwf	??_scale
  2893  0EB0  0840               	movf	??_scale,w
  2894  0EB1  00A9               	movwf	___bmul@multiplicand
  2895  0EB2  0845               	movf	scale@scl,w
  2896  0EB3  00F5               	movwf	___awmod@dividend
  2897  0EB4  01F6               	clrf	___awmod@dividend+1
  2898  0EB5  1BF5               	btfsc	___awmod@dividend,7
  2899  0EB6  03F6               	decf	___awmod@dividend+1,f
  2900  0EB7  3064               	movlw	100
  2901  0EB8  00F3               	movwf	___awmod@divisor
  2902  0EB9  3000               	movlw	0
  2903  0EBA  00F4               	movwf	___awmod@divisor+1
  2904  0EBB  160A  158A  27A7  120A  158A  	fcall	___awmod
  2905  0EC0  0874               	movf	?___awmod+1,w
  2906  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0EC3  00A3               	movwf	___awdiv@dividend+1
  2909  0EC4  0873               	movf	?___awmod,w
  2910  0EC5  00A2               	movwf	___awdiv@dividend
  2911  0EC6  300A               	movlw	10
  2912  0EC7  00A0               	movwf	___awdiv@divisor
  2913  0EC8  3000               	movlw	0
  2914  0EC9  00A1               	movwf	___awdiv@divisor+1
  2915  0ECA  160A  118A  2224  120A  158A  	fcall	___awdiv
  2916  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0ED1  0820               	movf	?___awdiv,w
  2919  0ED2  160A  158A  251D  120A  158A  	fcall	___bmul
  2920  0ED7  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2921  0ED8  0084               	movwf	4
  2922  0ED9  160A  118A  200A  120A  158A  	fcall	stringdir
  2923  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0EE0  00AD               	movwf	___ftmul@f1
  2926  0EE1  160A  118A  200A  120A  158A  	fcall	stringdir
  2927  0EE6  00AE               	movwf	___ftmul@f1+1
  2928  0EE7  160A  118A  200A  120A  158A  	fcall	stringdir
  2929  0EEC  00AF               	movwf	___ftmul@f1+2
  2930  0EED  3003               	movlw	3
  2931  0EEE  00C1               	movwf	??_scale+1
  2932  0EEF  0841               	movf	??_scale+1,w
  2933  0EF0  00A9               	movwf	___bmul@multiplicand
  2934  0EF1  0845               	movf	scale@scl,w
  2935  0EF2  00A2               	movwf	___awdiv@dividend
  2936  0EF3  01A3               	clrf	___awdiv@dividend+1
  2937  0EF4  1BA2               	btfsc	___awdiv@dividend,7
  2938  0EF5  03A3               	decf	___awdiv@dividend+1,f
  2939  0EF6  3064               	movlw	100
  2940  0EF7  00A0               	movwf	___awdiv@divisor
  2941  0EF8  3000               	movlw	0
  2942  0EF9  00A1               	movwf	___awdiv@divisor+1
  2943  0EFA  160A  118A  2224  120A  158A  	fcall	___awdiv
  2944  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0F01  0820               	movf	?___awdiv,w
  2947  0F02  160A  158A  251D  120A  158A  	fcall	___bmul
  2948  0F07  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2949  0F08  0084               	movwf	4
  2950  0F09  160A  118A  200A  120A  158A  	fcall	stringdir
  2951  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0F10  00B0               	movwf	___ftmul@f2
  2954  0F11  160A  118A  200A  120A  158A  	fcall	stringdir
  2955  0F16  00B1               	movwf	___ftmul@f2+1
  2956  0F17  160A  118A  200A  120A  158A  	fcall	stringdir
  2957  0F1C  00B2               	movwf	___ftmul@f2+2
  2958  0F1D  160A  118A  2634  120A  158A  	fcall	___ftmul
  2959  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0F24  082D               	movf	?___ftmul,w
  2962  0F25  00C2               	movwf	_scale$1023
  2963  0F26  082E               	movf	?___ftmul+1,w
  2964  0F27  00C3               	movwf	_scale$1023+1
  2965  0F28  082F               	movf	?___ftmul+2,w
  2966  0F29  00C4               	movwf	_scale$1023+2
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2969  0F2A  3003               	movlw	3
  2970  0F2B  00C0               	movwf	??_scale
  2971  0F2C  0840               	movf	??_scale,w
  2972  0F2D  00A9               	movwf	___bmul@multiplicand
  2973  0F2E  0845               	movf	scale@scl,w
  2974  0F2F  00F5               	movwf	___awmod@dividend
  2975  0F30  01F6               	clrf	___awmod@dividend+1
  2976  0F31  1BF5               	btfsc	___awmod@dividend,7
  2977  0F32  03F6               	decf	___awmod@dividend+1,f
  2978  0F33  300A               	movlw	10
  2979  0F34  00F3               	movwf	___awmod@divisor
  2980  0F35  3000               	movlw	0
  2981  0F36  00F4               	movwf	___awmod@divisor+1
  2982  0F37  160A  158A  27A7  120A  158A  	fcall	___awmod
  2983  0F3C  0873               	movf	?___awmod,w
  2984  0F3D  160A  158A  251D  120A  158A  	fcall	___bmul
  2985  0F42  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2986  0F43  0084               	movwf	4
  2987  0F44  160A  118A  200A  120A  158A  	fcall	stringdir
  2988  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0F4B  00AD               	movwf	___ftmul@f1
  2991  0F4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2992  0F51  00AE               	movwf	___ftmul@f1+1
  2993  0F52  160A  118A  200A  120A  158A  	fcall	stringdir
  2994  0F57  00AF               	movwf	___ftmul@f1+2
  2995  0F58  0842               	movf	_scale$1023,w
  2996  0F59  00B0               	movwf	___ftmul@f2
  2997  0F5A  0843               	movf	_scale$1023+1,w
  2998  0F5B  00B1               	movwf	___ftmul@f2+1
  2999  0F5C  0844               	movf	_scale$1023+2,w
  3000  0F5D  00B2               	movwf	___ftmul@f2+2
  3001  0F5E  160A  118A  2634  120A  158A  	fcall	___ftmul
  3002  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0F65  082D               	movf	?___ftmul,w
  3005  0F66  00BD               	movwf	?_scale
  3006  0F67  082E               	movf	?___ftmul+1,w
  3007  0F68  00BE               	movwf	?_scale+1
  3008  0F69  082F               	movf	?___ftmul+2,w
  3009  0F6A  00BF               	movwf	?_scale+2
  3010  0F6B  2FFF               	goto	l365
  3011  0F6C                     l3763:
  3012  0F6C  0845               	movf	scale@scl,w
  3013  0F6D  3A80               	xorlw	128
  3014  0F6E  3E75               	addlw	-139
  3015  0F6F  1C03               	skipc
  3016  0F70  2F72               	goto	u5531
  3017  0F71  2F73               	goto	u5530
  3018  0F72                     u5531:
  3019  0F72  2FDF               	goto	l3769
  3020  0F73                     u5530:
  3021  0F73                     l3765:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3024  0F73  3003               	movlw	3
  3025  0F74  00C0               	movwf	??_scale
  3026  0F75  0840               	movf	??_scale,w
  3027  0F76  00A9               	movwf	___bmul@multiplicand
  3028  0F77  0845               	movf	scale@scl,w
  3029  0F78  00F5               	movwf	___awmod@dividend
  3030  0F79  01F6               	clrf	___awmod@dividend+1
  3031  0F7A  1BF5               	btfsc	___awmod@dividend,7
  3032  0F7B  03F6               	decf	___awmod@dividend+1,f
  3033  0F7C  300A               	movlw	10
  3034  0F7D  00F3               	movwf	___awmod@divisor
  3035  0F7E  3000               	movlw	0
  3036  0F7F  00F4               	movwf	___awmod@divisor+1
  3037  0F80  160A  158A  27A7  120A  158A  	fcall	___awmod
  3038  0F85  0873               	movf	?___awmod,w
  3039  0F86  160A  158A  251D  120A  158A  	fcall	___bmul
  3040  0F8B  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3041  0F8C  0084               	movwf	4
  3042  0F8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3043  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0F94  00AD               	movwf	___ftmul@f1
  3046  0F95  160A  118A  200A  120A  158A  	fcall	stringdir
  3047  0F9A  00AE               	movwf	___ftmul@f1+1
  3048  0F9B  160A  118A  200A  120A  158A  	fcall	stringdir
  3049  0FA0  00AF               	movwf	___ftmul@f1+2
  3050  0FA1  3003               	movlw	3
  3051  0FA2  00C1               	movwf	??_scale+1
  3052  0FA3  0841               	movf	??_scale+1,w
  3053  0FA4  00A9               	movwf	___bmul@multiplicand
  3054  0FA5  0845               	movf	scale@scl,w
  3055  0FA6  00A2               	movwf	___awdiv@dividend
  3056  0FA7  01A3               	clrf	___awdiv@dividend+1
  3057  0FA8  1BA2               	btfsc	___awdiv@dividend,7
  3058  0FA9  03A3               	decf	___awdiv@dividend+1,f
  3059  0FAA  300A               	movlw	10
  3060  0FAB  00A0               	movwf	___awdiv@divisor
  3061  0FAC  3000               	movlw	0
  3062  0FAD  00A1               	movwf	___awdiv@divisor+1
  3063  0FAE  160A  118A  2224  120A  158A  	fcall	___awdiv
  3064  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0FB5  0820               	movf	?___awdiv,w
  3067  0FB6  160A  158A  251D  120A  158A  	fcall	___bmul
  3068  0FBB  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3069  0FBC  0084               	movwf	4
  3070  0FBD  160A  118A  200A  120A  158A  	fcall	stringdir
  3071  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0FC4  00B0               	movwf	___ftmul@f2
  3074  0FC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3075  0FCA  00B1               	movwf	___ftmul@f2+1
  3076  0FCB  160A  118A  200A  120A  158A  	fcall	stringdir
  3077  0FD0  00B2               	movwf	___ftmul@f2+2
  3078  0FD1  160A  118A  2634  120A  158A  	fcall	___ftmul
  3079  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0FD8  082D               	movf	?___ftmul,w
  3082  0FD9  00BD               	movwf	?_scale
  3083  0FDA  082E               	movf	?___ftmul+1,w
  3084  0FDB  00BE               	movwf	?_scale+1
  3085  0FDC  082F               	movf	?___ftmul+2,w
  3086  0FDD  00BF               	movwf	?_scale+2
  3087  0FDE  2FFF               	goto	l365
  3088  0FDF                     l3769:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3091  0FDF  3003               	movlw	3
  3092  0FE0  00C0               	movwf	??_scale
  3093  0FE1  0840               	movf	??_scale,w
  3094  0FE2  00A9               	movwf	___bmul@multiplicand
  3095  0FE3  0845               	movf	scale@scl,w
  3096  0FE4  160A  158A  251D  120A  158A  	fcall	___bmul
  3097  0FE9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3098  0FEA  0084               	movwf	4
  3099  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3100  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0FF2  00BD               	movwf	?_scale
  3103  0FF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3104  0FF8  00BE               	movwf	?_scale+1
  3105  0FF9  160A  118A  200A  120A  158A  	fcall	stringdir
  3106  0FFE  00BF               	movwf	?_scale+2
  3107  0FFF                     l365:
  3108  0FFF  0008               	return
  3109  1000                     __end_of_scale:
  3110                           
  3111                           	psect	text3
  3112  1FA7                     __ptext3:	
  3113 ;; *************** function ___awmod *****************
  3114 ;; Defined at:
  3115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  divisor         2    3[COMMON] int 
  3118 ;;  dividend        2    5[COMMON] int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  sign            1    9[COMMON] unsigned char 
  3121 ;;  counter         1    8[COMMON] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    3[COMMON] int 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         4       0       0       0       0
  3132 ;;      Locals:         2       0       0       0       0
  3133 ;;      Temps:          1       0       0       0       0
  3134 ;;      Totals:         7       0       0       0       0
  3135 ;;Total ram usage:        7 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    2
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_scale
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function ___awmod
  3147  1FA7                     ___awmod:
  3148  1FA7                     l2325:	
  3149                           ;incstack = 0
  3150                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3151                           
  3152  1FA7  01F9               	clrf	___awmod@sign
  3153  1FA8                     l2327:
  3154  1FA8  1FF6               	btfss	___awmod@dividend+1,7
  3155  1FA9  2FAB               	goto	u2721
  3156  1FAA  2FAC               	goto	u2720
  3157  1FAB                     u2721:
  3158  1FAB  2FB3               	goto	l2333
  3159  1FAC                     u2720:
  3160  1FAC                     l2329:
  3161  1FAC  09F5               	comf	___awmod@dividend,f
  3162  1FAD  09F6               	comf	___awmod@dividend+1,f
  3163  1FAE  0AF5               	incf	___awmod@dividend,f
  3164  1FAF  1903               	skipnz
  3165  1FB0  0AF6               	incf	___awmod@dividend+1,f
  3166  1FB1                     l2331:
  3167  1FB1  01F9               	clrf	___awmod@sign
  3168  1FB2  0AF9               	incf	___awmod@sign,f
  3169  1FB3                     l2333:
  3170  1FB3  1FF4               	btfss	___awmod@divisor+1,7
  3171  1FB4  2FB6               	goto	u2731
  3172  1FB5  2FB7               	goto	u2730
  3173  1FB6                     u2731:
  3174  1FB6  2FBC               	goto	l2337
  3175  1FB7                     u2730:
  3176  1FB7                     l2335:
  3177  1FB7  09F3               	comf	___awmod@divisor,f
  3178  1FB8  09F4               	comf	___awmod@divisor+1,f
  3179  1FB9  0AF3               	incf	___awmod@divisor,f
  3180  1FBA  1903               	skipnz
  3181  1FBB  0AF4               	incf	___awmod@divisor+1,f
  3182  1FBC                     l2337:
  3183  1FBC  0873               	movf	___awmod@divisor,w
  3184  1FBD  0474               	iorwf	___awmod@divisor+1,w
  3185  1FBE  1903               	btfsc	3,2
  3186  1FBF  2FC1               	goto	u2741
  3187  1FC0  2FC2               	goto	u2740
  3188  1FC1                     u2741:
  3189  1FC1  2FF1               	goto	l2355
  3190  1FC2                     u2740:
  3191  1FC2                     l2339:
  3192  1FC2  01F8               	clrf	___awmod@counter
  3193  1FC3  0AF8               	incf	___awmod@counter,f
  3194  1FC4  2FD0               	goto	l2345
  3195  1FC5                     l2341:
  3196  1FC5  3001               	movlw	1
  3197  1FC6                     u2755:
  3198  1FC6  1003               	clrc
  3199  1FC7  0DF3               	rlf	___awmod@divisor,f
  3200  1FC8  0DF4               	rlf	___awmod@divisor+1,f
  3201  1FC9  3EFF               	addlw	-1
  3202  1FCA  1D03               	skipz
  3203  1FCB  2FC6               	goto	u2755
  3204  1FCC                     l2343:
  3205  1FCC  3001               	movlw	1
  3206  1FCD  00F7               	movwf	??___awmod
  3207  1FCE  0877               	movf	??___awmod,w
  3208  1FCF  07F8               	addwf	___awmod@counter,f
  3209  1FD0                     l2345:
  3210  1FD0  1FF4               	btfss	___awmod@divisor+1,7
  3211  1FD1  2FD3               	goto	u2761
  3212  1FD2  2FD4               	goto	u2760
  3213  1FD3                     u2761:
  3214  1FD3  2FC5               	goto	l2341
  3215  1FD4                     u2760:
  3216  1FD4                     l2347:
  3217  1FD4  0874               	movf	___awmod@divisor+1,w
  3218  1FD5  0276               	subwf	___awmod@dividend+1,w
  3219  1FD6  1D03               	skipz
  3220  1FD7  2FDA               	goto	u2775
  3221  1FD8  0873               	movf	___awmod@divisor,w
  3222  1FD9  0275               	subwf	___awmod@dividend,w
  3223  1FDA                     u2775:
  3224  1FDA  1C03               	skipc
  3225  1FDB  2FDD               	goto	u2771
  3226  1FDC  2FDE               	goto	u2770
  3227  1FDD                     u2771:
  3228  1FDD  2FE4               	goto	l2351
  3229  1FDE                     u2770:
  3230  1FDE                     l2349:
  3231  1FDE  0873               	movf	___awmod@divisor,w
  3232  1FDF  02F5               	subwf	___awmod@dividend,f
  3233  1FE0  0874               	movf	___awmod@divisor+1,w
  3234  1FE1  1C03               	skipc
  3235  1FE2  03F6               	decf	___awmod@dividend+1,f
  3236  1FE3  02F6               	subwf	___awmod@dividend+1,f
  3237  1FE4                     l2351:
  3238  1FE4  3001               	movlw	1
  3239  1FE5                     u2785:
  3240  1FE5  1003               	clrc
  3241  1FE6  0CF4               	rrf	___awmod@divisor+1,f
  3242  1FE7  0CF3               	rrf	___awmod@divisor,f
  3243  1FE8  3EFF               	addlw	-1
  3244  1FE9  1D03               	skipz
  3245  1FEA  2FE5               	goto	u2785
  3246  1FEB                     l2353:
  3247  1FEB  3001               	movlw	1
  3248  1FEC  02F8               	subwf	___awmod@counter,f
  3249  1FED  1D03               	btfss	3,2
  3250  1FEE  2FF0               	goto	u2791
  3251  1FEF  2FF1               	goto	u2790
  3252  1FF0                     u2791:
  3253  1FF0  2FD4               	goto	l2347
  3254  1FF1                     u2790:
  3255  1FF1                     l2355:
  3256  1FF1  0879               	movf	___awmod@sign,w
  3257  1FF2  1903               	btfsc	3,2
  3258  1FF3  2FF5               	goto	u2801
  3259  1FF4  2FF6               	goto	u2800
  3260  1FF5                     u2801:
  3261  1FF5  2FFB               	goto	l2359
  3262  1FF6                     u2800:
  3263  1FF6                     l2357:
  3264  1FF6  09F5               	comf	___awmod@dividend,f
  3265  1FF7  09F6               	comf	___awmod@dividend+1,f
  3266  1FF8  0AF5               	incf	___awmod@dividend,f
  3267  1FF9  1903               	skipnz
  3268  1FFA  0AF6               	incf	___awmod@dividend+1,f
  3269  1FFB                     l2359:
  3270  1FFB  0876               	movf	___awmod@dividend+1,w
  3271  1FFC  00F4               	movwf	?___awmod+1
  3272  1FFD  0875               	movf	___awmod@dividend,w
  3273  1FFE  00F3               	movwf	?___awmod
  3274  1FFF                     l657:
  3275  1FFF  0008               	return
  3276  2000                     __end_of___awmod:
  3277                           
  3278                           	psect	text4
  3279  1224                     __ptext4:	
  3280 ;; *************** function ___awdiv *****************
  3281 ;; Defined at:
  3282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  divisor         2    0[BANK0 ] int 
  3285 ;;  dividend        2    2[BANK0 ] int 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  quotient        2    7[BANK0 ] int 
  3288 ;;  sign            1    6[BANK0 ] unsigned char 
  3289 ;;  counter         1    5[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2    0[BANK0 ] int 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       4       0       0       0
  3300 ;;      Locals:         0       4       0       0       0
  3301 ;;      Temps:          0       1       0       0       0
  3302 ;;      Totals:         0       9       0       0       0
  3303 ;;Total ram usage:        9 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    2
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_scale
  3310 ;;		_sprintf
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function ___awdiv
  3316  1224                     ___awdiv:
  3317  1224                     l3519:	
  3318                           ;incstack = 0
  3319                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3320                           
  3321  1224  1283               	bcf	3,5	;RP0=0, select bank0
  3322  1225  1303               	bcf	3,6	;RP1=0, select bank0
  3323  1226  01A6               	clrf	___awdiv@sign
  3324  1227                     l3521:
  3325  1227  1FA1               	btfss	___awdiv@divisor+1,7
  3326  1228  2A2A               	goto	u4991
  3327  1229  2A2B               	goto	u4990
  3328  122A                     u4991:
  3329  122A  2A32               	goto	l3527
  3330  122B                     u4990:
  3331  122B                     l3523:
  3332  122B  09A0               	comf	___awdiv@divisor,f
  3333  122C  09A1               	comf	___awdiv@divisor+1,f
  3334  122D  0AA0               	incf	___awdiv@divisor,f
  3335  122E  1903               	skipnz
  3336  122F  0AA1               	incf	___awdiv@divisor+1,f
  3337  1230                     l3525:
  3338  1230  01A6               	clrf	___awdiv@sign
  3339  1231  0AA6               	incf	___awdiv@sign,f
  3340  1232                     l3527:
  3341  1232  1FA3               	btfss	___awdiv@dividend+1,7
  3342  1233  2A35               	goto	u5001
  3343  1234  2A36               	goto	u5000
  3344  1235                     u5001:
  3345  1235  2A3F               	goto	l3533
  3346  1236                     u5000:
  3347  1236                     l3529:
  3348  1236  09A2               	comf	___awdiv@dividend,f
  3349  1237  09A3               	comf	___awdiv@dividend+1,f
  3350  1238  0AA2               	incf	___awdiv@dividend,f
  3351  1239  1903               	skipnz
  3352  123A  0AA3               	incf	___awdiv@dividend+1,f
  3353  123B                     l3531:
  3354  123B  3001               	movlw	1
  3355  123C  00A4               	movwf	??___awdiv
  3356  123D  0824               	movf	??___awdiv,w
  3357  123E  06A6               	xorwf	___awdiv@sign,f
  3358  123F                     l3533:
  3359  123F  01A7               	clrf	___awdiv@quotient
  3360  1240  01A8               	clrf	___awdiv@quotient+1
  3361  1241                     l3535:
  3362  1241  0820               	movf	___awdiv@divisor,w
  3363  1242  0421               	iorwf	___awdiv@divisor+1,w
  3364  1243  1903               	btfsc	3,2
  3365  1244  2A46               	goto	u5011
  3366  1245  2A47               	goto	u5010
  3367  1246                     u5011:
  3368  1246  2A7E               	goto	l3555
  3369  1247                     u5010:
  3370  1247                     l3537:
  3371  1247  01A5               	clrf	___awdiv@counter
  3372  1248  0AA5               	incf	___awdiv@counter,f
  3373  1249  2A55               	goto	l3543
  3374  124A                     l3539:
  3375  124A  3001               	movlw	1
  3376  124B                     u5025:
  3377  124B  1003               	clrc
  3378  124C  0DA0               	rlf	___awdiv@divisor,f
  3379  124D  0DA1               	rlf	___awdiv@divisor+1,f
  3380  124E  3EFF               	addlw	-1
  3381  124F  1D03               	skipz
  3382  1250  2A4B               	goto	u5025
  3383  1251                     l3541:
  3384  1251  3001               	movlw	1
  3385  1252  00A4               	movwf	??___awdiv
  3386  1253  0824               	movf	??___awdiv,w
  3387  1254  07A5               	addwf	___awdiv@counter,f
  3388  1255                     l3543:
  3389  1255  1FA1               	btfss	___awdiv@divisor+1,7
  3390  1256  2A58               	goto	u5031
  3391  1257  2A59               	goto	u5030
  3392  1258                     u5031:
  3393  1258  2A4A               	goto	l3539
  3394  1259                     u5030:
  3395  1259                     l3545:
  3396  1259  3001               	movlw	1
  3397  125A                     u5045:
  3398  125A  1003               	clrc
  3399  125B  0DA7               	rlf	___awdiv@quotient,f
  3400  125C  0DA8               	rlf	___awdiv@quotient+1,f
  3401  125D  3EFF               	addlw	-1
  3402  125E  1D03               	skipz
  3403  125F  2A5A               	goto	u5045
  3404  1260  0821               	movf	___awdiv@divisor+1,w
  3405  1261  0223               	subwf	___awdiv@dividend+1,w
  3406  1262  1D03               	skipz
  3407  1263  2A66               	goto	u5055
  3408  1264  0820               	movf	___awdiv@divisor,w
  3409  1265  0222               	subwf	___awdiv@dividend,w
  3410  1266                     u5055:
  3411  1266  1C03               	skipc
  3412  1267  2A69               	goto	u5051
  3413  1268  2A6A               	goto	u5050
  3414  1269                     u5051:
  3415  1269  2A71               	goto	l3551
  3416  126A                     u5050:
  3417  126A                     l3547:
  3418  126A  0820               	movf	___awdiv@divisor,w
  3419  126B  02A2               	subwf	___awdiv@dividend,f
  3420  126C  0821               	movf	___awdiv@divisor+1,w
  3421  126D  1C03               	skipc
  3422  126E  03A3               	decf	___awdiv@dividend+1,f
  3423  126F  02A3               	subwf	___awdiv@dividend+1,f
  3424  1270                     l3549:
  3425  1270  1427               	bsf	___awdiv@quotient,0
  3426  1271                     l3551:
  3427  1271  3001               	movlw	1
  3428  1272                     u5065:
  3429  1272  1003               	clrc
  3430  1273  0CA1               	rrf	___awdiv@divisor+1,f
  3431  1274  0CA0               	rrf	___awdiv@divisor,f
  3432  1275  3EFF               	addlw	-1
  3433  1276  1D03               	skipz
  3434  1277  2A72               	goto	u5065
  3435  1278                     l3553:
  3436  1278  3001               	movlw	1
  3437  1279  02A5               	subwf	___awdiv@counter,f
  3438  127A  1D03               	btfss	3,2
  3439  127B  2A7D               	goto	u5071
  3440  127C  2A7E               	goto	u5070
  3441  127D                     u5071:
  3442  127D  2A59               	goto	l3545
  3443  127E                     u5070:
  3444  127E                     l3555:
  3445  127E  0826               	movf	___awdiv@sign,w
  3446  127F  1903               	btfsc	3,2
  3447  1280  2A82               	goto	u5081
  3448  1281  2A83               	goto	u5080
  3449  1282                     u5081:
  3450  1282  2A88               	goto	l3559
  3451  1283                     u5080:
  3452  1283                     l3557:
  3453  1283  09A7               	comf	___awdiv@quotient,f
  3454  1284  09A8               	comf	___awdiv@quotient+1,f
  3455  1285  0AA7               	incf	___awdiv@quotient,f
  3456  1286  1903               	skipnz
  3457  1287  0AA8               	incf	___awdiv@quotient+1,f
  3458  1288                     l3559:
  3459  1288  0828               	movf	___awdiv@quotient+1,w
  3460  1289  00A1               	movwf	?___awdiv+1
  3461  128A  0827               	movf	___awdiv@quotient,w
  3462  128B  00A0               	movwf	?___awdiv
  3463  128C                     l644:
  3464  128C  0008               	return
  3465  128D                     __end_of___awdiv:
  3466                           
  3467                           	psect	text5
  3468  1D0B                     __ptext5:	
  3469 ;; *************** function _isdigit *****************
  3470 ;; Defined at:
  3471 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  c               1    wreg     unsigned char 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  c               1    4[COMMON] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;		None               void
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         0       0       0       0       0
  3486 ;;      Locals:         2       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         2       0       0       0       0
  3489 ;;Total ram usage:        2 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    2
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_sprintf
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           
  3500                           ;psect for function _isdigit
  3501  1D0B                     _isdigit:
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3505                           ;isdigit@c stored from wreg
  3506  1D0B  00F4               	movwf	isdigit@c
  3507  1D0C                     l2635:
  3508  1D0C  01F3               	clrf	_isdigit$825
  3509  1D0D                     l2637:
  3510  1D0D  303A               	movlw	58
  3511  1D0E  0274               	subwf	isdigit@c,w
  3512  1D0F  1803               	skipnc
  3513  1D10  2D12               	goto	u3401
  3514  1D11  2D13               	goto	u3400
  3515  1D12                     u3401:
  3516  1D12  2D1B               	goto	l2643
  3517  1D13                     u3400:
  3518  1D13                     l2639:
  3519  1D13  3030               	movlw	48
  3520  1D14  0274               	subwf	isdigit@c,w
  3521  1D15  1C03               	skipc
  3522  1D16  2D18               	goto	u3411
  3523  1D17  2D19               	goto	u3410
  3524  1D18                     u3411:
  3525  1D18  2D1B               	goto	l2643
  3526  1D19                     u3410:
  3527  1D19                     l2641:
  3528  1D19  01F3               	clrf	_isdigit$825
  3529  1D1A  0AF3               	incf	_isdigit$825,f
  3530  1D1B                     l2643:
  3531  1D1B  0C73               	rrf	_isdigit$825,w
  3532  1D1C                     l923:
  3533  1D1C  0008               	return
  3534  1D1D                     __end_of_isdigit:
  3535                           
  3536                           	psect	text6
  3537  0638                     __ptext6:	
  3538 ;; *************** function _fround *****************
  3539 ;; Defined at:
  3540 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  prec            1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  prec            1   44[BANK0 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  3   29[BANK0 ] unsigned char 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       3       0       0       0
  3555 ;;      Locals:         0       7       0       0       0
  3556 ;;      Temps:          0       6       0       0       0
  3557 ;;      Totals:         0      16       0       0       0
  3558 ;;Total ram usage:       16 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    4
  3561 ;; This function calls:
  3562 ;;		___bmul
  3563 ;;		___ftmul
  3564 ;;		___lwdiv
  3565 ;;		___lwmod
  3566 ;; This function is called by:
  3567 ;;		_sprintf
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _fround
  3573  0638                     _fround:
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3577                           ;fround@prec stored from wreg
  3578  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3580  063A  00CC               	movwf	fround@prec
  3581  063B                     l3711:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3584  063B  306E               	movlw	110
  3585  063C  024C               	subwf	fround@prec,w
  3586  063D  1C03               	skipc
  3587  063E  2E40               	goto	u5471
  3588  063F  2E41               	goto	u5470
  3589  0640                     u5471:
  3590  0640  2F1E               	goto	l3721
  3591  0641                     u5470:
  3592  0641                     l3713:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3595  0641  3003               	movlw	3
  3596  0642  00C0               	movwf	??_fround
  3597  0643  0840               	movf	??_fround,w
  3598  0644  00A9               	movwf	___bmul@multiplicand
  3599  0645  084C               	movf	fround@prec,w
  3600  0646  00C1               	movwf	??_fround+1
  3601  0647  01C2               	clrf	??_fround+2
  3602  0648  0841               	movf	??_fround+1,w
  3603  0649  00F5               	movwf	___lwmod@dividend
  3604  064A  0842               	movf	??_fround+2,w
  3605  064B  00F6               	movwf	___lwmod@dividend+1
  3606  064C  3064               	movlw	100
  3607  064D  00F3               	movwf	___lwmod@divisor
  3608  064E  3000               	movlw	0
  3609  064F  00F4               	movwf	___lwmod@divisor+1
  3610  0650  160A  118A  20BD  120A  118A  	fcall	___lwmod
  3611  0655  0874               	movf	?___lwmod+1,w
  3612  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0658  00A3               	movwf	___lwdiv@dividend+1
  3615  0659  0873               	movf	?___lwmod,w
  3616  065A  00A2               	movwf	___lwdiv@dividend
  3617  065B  300A               	movlw	10
  3618  065C  00A0               	movwf	___lwdiv@divisor
  3619  065D  3000               	movlw	0
  3620  065E  00A1               	movwf	___lwdiv@divisor+1
  3621  065F  160A  158A  270B  120A  118A  	fcall	___lwdiv
  3622  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3623  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3624  0666  0820               	movf	?___lwdiv,w
  3625  0667  160A  158A  251D  120A  118A  	fcall	___bmul
  3626  066C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3627  066D  0084               	movwf	4
  3628  066E  160A  118A  200A  120A  118A  	fcall	stringdir
  3629  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0675  00AD               	movwf	___ftmul@f1
  3632  0676  160A  118A  200A  120A  118A  	fcall	stringdir
  3633  067B  00AE               	movwf	___ftmul@f1+1
  3634  067C  160A  118A  200A  120A  118A  	fcall	stringdir
  3635  0681  00AF               	movwf	___ftmul@f1+2
  3636  0682  3003               	movlw	3
  3637  0683  00C3               	movwf	??_fround+3
  3638  0684  0843               	movf	??_fround+3,w
  3639  0685  00A9               	movwf	___bmul@multiplicand
  3640  0686  084C               	movf	fround@prec,w
  3641  0687  00C4               	movwf	??_fround+4
  3642  0688  01C5               	clrf	??_fround+5
  3643  0689  0844               	movf	??_fround+4,w
  3644  068A  00A2               	movwf	___lwdiv@dividend
  3645  068B  0845               	movf	??_fround+5,w
  3646  068C  00A3               	movwf	___lwdiv@dividend+1
  3647  068D  3064               	movlw	100
  3648  068E  00A0               	movwf	___lwdiv@divisor
  3649  068F  3000               	movlw	0
  3650  0690  00A1               	movwf	___lwdiv@divisor+1
  3651  0691  160A  158A  270B  120A  118A  	fcall	___lwdiv
  3652  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0698  0820               	movf	?___lwdiv,w
  3655  0699  160A  158A  251D  120A  118A  	fcall	___bmul
  3656  069E  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3657  069F  0084               	movwf	4
  3658  06A0  160A  118A  200A  120A  118A  	fcall	stringdir
  3659  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3660  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3661  06A7  00B0               	movwf	___ftmul@f2
  3662  06A8  160A  118A  200A  120A  118A  	fcall	stringdir
  3663  06AD  00B1               	movwf	___ftmul@f2+1
  3664  06AE  160A  118A  200A  120A  118A  	fcall	stringdir
  3665  06B3  00B2               	movwf	___ftmul@f2+2
  3666  06B4  160A  118A  2634  120A  118A  	fcall	___ftmul
  3667  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3668  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3669  06BB  082D               	movf	?___ftmul,w
  3670  06BC  00C9               	movwf	_fround$1021
  3671  06BD  082E               	movf	?___ftmul+1,w
  3672  06BE  00CA               	movwf	_fround$1021+1
  3673  06BF  082F               	movf	?___ftmul+2,w
  3674  06C0  00CB               	movwf	_fround$1021+2
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3677  06C1  3003               	movlw	3
  3678  06C2  00C0               	movwf	??_fround
  3679  06C3  0840               	movf	??_fround,w
  3680  06C4  00A9               	movwf	___bmul@multiplicand
  3681  06C5  084C               	movf	fround@prec,w
  3682  06C6  00C1               	movwf	??_fround+1
  3683  06C7  01C2               	clrf	??_fround+2
  3684  06C8  0841               	movf	??_fround+1,w
  3685  06C9  00F5               	movwf	___lwmod@dividend
  3686  06CA  0842               	movf	??_fround+2,w
  3687  06CB  00F6               	movwf	___lwmod@dividend+1
  3688  06CC  300A               	movlw	10
  3689  06CD  00F3               	movwf	___lwmod@divisor
  3690  06CE  3000               	movlw	0
  3691  06CF  00F4               	movwf	___lwmod@divisor+1
  3692  06D0  160A  118A  20BD  120A  118A  	fcall	___lwmod
  3693  06D5  0873               	movf	?___lwmod,w
  3694  06D6  160A  158A  251D  120A  118A  	fcall	___bmul
  3695  06DB  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3696  06DC  0084               	movwf	4
  3697  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3698  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3699  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3700  06E4  00AD               	movwf	___ftmul@f1
  3701  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3702  06EA  00AE               	movwf	___ftmul@f1+1
  3703  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3704  06F0  00AF               	movwf	___ftmul@f1+2
  3705  06F1  0849               	movf	_fround$1021,w
  3706  06F2  00B0               	movwf	___ftmul@f2
  3707  06F3  084A               	movf	_fround$1021+1,w
  3708  06F4  00B1               	movwf	___ftmul@f2+1
  3709  06F5  084B               	movf	_fround$1021+2,w
  3710  06F6  00B2               	movwf	___ftmul@f2+2
  3711  06F7  160A  118A  2634  120A  118A  	fcall	___ftmul
  3712  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3713  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3714  06FE  082D               	movf	?___ftmul,w
  3715  06FF  00C6               	movwf	_fround$1022
  3716  0700  082E               	movf	?___ftmul+1,w
  3717  0701  00C7               	movwf	_fround$1022+1
  3718  0702  082F               	movf	?___ftmul+2,w
  3719  0703  00C8               	movwf	_fround$1022+2
  3720  0704                     l3715:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3723  0704  3000               	movlw	0
  3724  0705  00AD               	movwf	___ftmul@f1
  3725  0706  3000               	movlw	0
  3726  0707  00AE               	movwf	___ftmul@f1+1
  3727  0708  303F               	movlw	63
  3728  0709  00AF               	movwf	___ftmul@f1+2
  3729  070A  0846               	movf	_fround$1022,w
  3730  070B  00B0               	movwf	___ftmul@f2
  3731  070C  0847               	movf	_fround$1022+1,w
  3732  070D  00B1               	movwf	___ftmul@f2+1
  3733  070E  0848               	movf	_fround$1022+2,w
  3734  070F  00B2               	movwf	___ftmul@f2+2
  3735  0710  160A  118A  2634  120A  118A  	fcall	___ftmul
  3736  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0717  082D               	movf	?___ftmul,w
  3739  0718  00BD               	movwf	?_fround
  3740  0719  082E               	movf	?___ftmul+1,w
  3741  071A  00BE               	movwf	?_fround+1
  3742  071B  082F               	movf	?___ftmul+2,w
  3743  071C  00BF               	movwf	?_fround+2
  3744  071D  2FE0               	goto	l358
  3745  071E                     l3721:
  3746  071E  300B               	movlw	11
  3747  071F  024C               	subwf	fround@prec,w
  3748  0720  1C03               	skipc
  3749  0721  2F23               	goto	u5481
  3750  0722  2F24               	goto	u5480
  3751  0723                     u5481:
  3752  0723  2FAD               	goto	l3729
  3753  0724                     u5480:
  3754  0724                     l3723:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3757  0724  3003               	movlw	3
  3758  0725  00C0               	movwf	??_fround
  3759  0726  0840               	movf	??_fround,w
  3760  0727  00A9               	movwf	___bmul@multiplicand
  3761  0728  084C               	movf	fround@prec,w
  3762  0729  00C1               	movwf	??_fround+1
  3763  072A  01C2               	clrf	??_fround+2
  3764  072B  0841               	movf	??_fround+1,w
  3765  072C  00F5               	movwf	___lwmod@dividend
  3766  072D  0842               	movf	??_fround+2,w
  3767  072E  00F6               	movwf	___lwmod@dividend+1
  3768  072F  300A               	movlw	10
  3769  0730  00F3               	movwf	___lwmod@divisor
  3770  0731  3000               	movlw	0
  3771  0732  00F4               	movwf	___lwmod@divisor+1
  3772  0733  160A  118A  20BD  120A  118A  	fcall	___lwmod
  3773  0738  0873               	movf	?___lwmod,w
  3774  0739  160A  158A  251D  120A  118A  	fcall	___bmul
  3775  073E  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3776  073F  0084               	movwf	4
  3777  0740  160A  118A  200A  120A  118A  	fcall	stringdir
  3778  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3780  0747  00AD               	movwf	___ftmul@f1
  3781  0748  160A  118A  200A  120A  118A  	fcall	stringdir
  3782  074D  00AE               	movwf	___ftmul@f1+1
  3783  074E  160A  118A  200A  120A  118A  	fcall	stringdir
  3784  0753  00AF               	movwf	___ftmul@f1+2
  3785  0754  3003               	movlw	3
  3786  0755  00C3               	movwf	??_fround+3
  3787  0756  0843               	movf	??_fround+3,w
  3788  0757  00A9               	movwf	___bmul@multiplicand
  3789  0758  084C               	movf	fround@prec,w
  3790  0759  00C4               	movwf	??_fround+4
  3791  075A  01C5               	clrf	??_fround+5
  3792  075B  0844               	movf	??_fround+4,w
  3793  075C  00A2               	movwf	___lwdiv@dividend
  3794  075D  0845               	movf	??_fround+5,w
  3795  075E  00A3               	movwf	___lwdiv@dividend+1
  3796  075F  300A               	movlw	10
  3797  0760  00A0               	movwf	___lwdiv@divisor
  3798  0761  3000               	movlw	0
  3799  0762  00A1               	movwf	___lwdiv@divisor+1
  3800  0763  160A  158A  270B  120A  118A  	fcall	___lwdiv
  3801  0768  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0769  1303               	bcf	3,6	;RP1=0, select bank0
  3803  076A  0820               	movf	?___lwdiv,w
  3804  076B  160A  158A  251D  120A  118A  	fcall	___bmul
  3805  0770  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3806  0771  0084               	movwf	4
  3807  0772  160A  118A  200A  120A  118A  	fcall	stringdir
  3808  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0778  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0779  00B0               	movwf	___ftmul@f2
  3811  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  3812  077F  00B1               	movwf	___ftmul@f2+1
  3813  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  3814  0785  00B2               	movwf	___ftmul@f2+2
  3815  0786  160A  118A  2634  120A  118A  	fcall	___ftmul
  3816  078B  1283               	bcf	3,5	;RP0=0, select bank0
  3817  078C  1303               	bcf	3,6	;RP1=0, select bank0
  3818  078D  082D               	movf	?___ftmul,w
  3819  078E  00C9               	movwf	_fround$1021
  3820  078F  082E               	movf	?___ftmul+1,w
  3821  0790  00CA               	movwf	_fround$1021+1
  3822  0791  082F               	movf	?___ftmul+2,w
  3823  0792  00CB               	movwf	_fround$1021+2
  3824  0793                     l3725:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3827  0793  3000               	movlw	0
  3828  0794  00AD               	movwf	___ftmul@f1
  3829  0795  3000               	movlw	0
  3830  0796  00AE               	movwf	___ftmul@f1+1
  3831  0797  303F               	movlw	63
  3832  0798  00AF               	movwf	___ftmul@f1+2
  3833  0799  0849               	movf	_fround$1021,w
  3834  079A  00B0               	movwf	___ftmul@f2
  3835  079B  084A               	movf	_fround$1021+1,w
  3836  079C  00B1               	movwf	___ftmul@f2+1
  3837  079D  084B               	movf	_fround$1021+2,w
  3838  079E  00B2               	movwf	___ftmul@f2+2
  3839  079F  160A  118A  2634  120A  118A  	fcall	___ftmul
  3840  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  3841  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  3842  07A6  082D               	movf	?___ftmul,w
  3843  07A7  00BD               	movwf	?_fround
  3844  07A8  082E               	movf	?___ftmul+1,w
  3845  07A9  00BE               	movwf	?_fround+1
  3846  07AA  082F               	movf	?___ftmul+2,w
  3847  07AB  00BF               	movwf	?_fround+2
  3848  07AC  2FE0               	goto	l358
  3849  07AD                     l3729:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3852  07AD  3000               	movlw	0
  3853  07AE  00AD               	movwf	___ftmul@f1
  3854  07AF  3000               	movlw	0
  3855  07B0  00AE               	movwf	___ftmul@f1+1
  3856  07B1  303F               	movlw	63
  3857  07B2  00AF               	movwf	___ftmul@f1+2
  3858  07B3  3003               	movlw	3
  3859  07B4  00C0               	movwf	??_fround
  3860  07B5  0840               	movf	??_fround,w
  3861  07B6  00A9               	movwf	___bmul@multiplicand
  3862  07B7  084C               	movf	fround@prec,w
  3863  07B8  160A  158A  251D  120A  118A  	fcall	___bmul
  3864  07BD  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3865  07BE  0084               	movwf	4
  3866  07BF  160A  118A  200A  120A  118A  	fcall	stringdir
  3867  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3868  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3869  07C6  00B0               	movwf	___ftmul@f2
  3870  07C7  160A  118A  200A  120A  118A  	fcall	stringdir
  3871  07CC  00B1               	movwf	___ftmul@f2+1
  3872  07CD  160A  118A  200A  120A  118A  	fcall	stringdir
  3873  07D2  00B2               	movwf	___ftmul@f2+2
  3874  07D3  160A  118A  2634  120A  118A  	fcall	___ftmul
  3875  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3876  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3877  07DA  082D               	movf	?___ftmul,w
  3878  07DB  00BD               	movwf	?_fround
  3879  07DC  082E               	movf	?___ftmul+1,w
  3880  07DD  00BE               	movwf	?_fround+1
  3881  07DE  082F               	movf	?___ftmul+2,w
  3882  07DF  00BF               	movwf	?_fround+2
  3883  07E0                     l358:
  3884  07E0  0008               	return
  3885  07E1                     __end_of_fround:
  3886                           
  3887                           	psect	text7
  3888  10BD                     __ptext7:	
  3889 ;; *************** function ___lwmod *****************
  3890 ;; Defined at:
  3891 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  divisor         2    3[COMMON] unsigned int 
  3894 ;;  dividend        2    5[COMMON] unsigned int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  counter         1    8[COMMON] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2    3[COMMON] unsigned int 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         4       0       0       0       0
  3907 ;;      Locals:         1       0       0       0       0
  3908 ;;      Temps:          1       0       0       0       0
  3909 ;;      Totals:         6       0       0       0       0
  3910 ;;Total ram usage:        6 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    2
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_fround
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function ___lwmod
  3922  10BD                     ___lwmod:
  3923  10BD                     l2509:	
  3924                           ;incstack = 0
  3925                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3926                           
  3927  10BD  0873               	movf	___lwmod@divisor,w
  3928  10BE  0474               	iorwf	___lwmod@divisor+1,w
  3929  10BF  1903               	btfsc	3,2
  3930  10C0  28C2               	goto	u3261
  3931  10C1  28C3               	goto	u3260
  3932  10C2                     u3261:
  3933  10C2  28F2               	goto	l2527
  3934  10C3                     u3260:
  3935  10C3                     l2511:
  3936  10C3  01F8               	clrf	___lwmod@counter
  3937  10C4  0AF8               	incf	___lwmod@counter,f
  3938  10C5  28D1               	goto	l2517
  3939  10C6                     l2513:
  3940  10C6  3001               	movlw	1
  3941  10C7                     u3275:
  3942  10C7  1003               	clrc
  3943  10C8  0DF3               	rlf	___lwmod@divisor,f
  3944  10C9  0DF4               	rlf	___lwmod@divisor+1,f
  3945  10CA  3EFF               	addlw	-1
  3946  10CB  1D03               	skipz
  3947  10CC  28C7               	goto	u3275
  3948  10CD                     l2515:
  3949  10CD  3001               	movlw	1
  3950  10CE  00F7               	movwf	??___lwmod
  3951  10CF  0877               	movf	??___lwmod,w
  3952  10D0  07F8               	addwf	___lwmod@counter,f
  3953  10D1                     l2517:
  3954  10D1  1FF4               	btfss	___lwmod@divisor+1,7
  3955  10D2  28D4               	goto	u3281
  3956  10D3  28D5               	goto	u3280
  3957  10D4                     u3281:
  3958  10D4  28C6               	goto	l2513
  3959  10D5                     u3280:
  3960  10D5                     l2519:
  3961  10D5  0874               	movf	___lwmod@divisor+1,w
  3962  10D6  0276               	subwf	___lwmod@dividend+1,w
  3963  10D7  1D03               	skipz
  3964  10D8  28DB               	goto	u3295
  3965  10D9  0873               	movf	___lwmod@divisor,w
  3966  10DA  0275               	subwf	___lwmod@dividend,w
  3967  10DB                     u3295:
  3968  10DB  1C03               	skipc
  3969  10DC  28DE               	goto	u3291
  3970  10DD  28DF               	goto	u3290
  3971  10DE                     u3291:
  3972  10DE  28E5               	goto	l2523
  3973  10DF                     u3290:
  3974  10DF                     l2521:
  3975  10DF  0873               	movf	___lwmod@divisor,w
  3976  10E0  02F5               	subwf	___lwmod@dividend,f
  3977  10E1  0874               	movf	___lwmod@divisor+1,w
  3978  10E2  1C03               	skipc
  3979  10E3  03F6               	decf	___lwmod@dividend+1,f
  3980  10E4  02F6               	subwf	___lwmod@dividend+1,f
  3981  10E5                     l2523:
  3982  10E5  3001               	movlw	1
  3983  10E6                     u3305:
  3984  10E6  1003               	clrc
  3985  10E7  0CF4               	rrf	___lwmod@divisor+1,f
  3986  10E8  0CF3               	rrf	___lwmod@divisor,f
  3987  10E9  3EFF               	addlw	-1
  3988  10EA  1D03               	skipz
  3989  10EB  28E6               	goto	u3305
  3990  10EC                     l2525:
  3991  10EC  3001               	movlw	1
  3992  10ED  02F8               	subwf	___lwmod@counter,f
  3993  10EE  1D03               	btfss	3,2
  3994  10EF  28F1               	goto	u3311
  3995  10F0  28F2               	goto	u3310
  3996  10F1                     u3311:
  3997  10F1  28D5               	goto	l2519
  3998  10F2                     u3310:
  3999  10F2                     l2527:
  4000  10F2  0876               	movf	___lwmod@dividend+1,w
  4001  10F3  00F4               	movwf	?___lwmod+1
  4002  10F4  0875               	movf	___lwmod@dividend,w
  4003  10F5  00F3               	movwf	?___lwmod
  4004  10F6                     l913:
  4005  10F6  0008               	return
  4006  10F7                     __end_of___lwmod:
  4007                           
  4008                           	psect	text8
  4009  1F0B                     __ptext8:	
  4010 ;; *************** function ___lwdiv *****************
  4011 ;; Defined at:
  4012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  divisor         2    0[BANK0 ] unsigned int 
  4015 ;;  dividend        2    2[BANK0 ] unsigned int 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  quotient        2    4[BANK0 ] unsigned int 
  4018 ;;  counter         1    6[BANK0 ] unsigned char 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2    0[BANK0 ] unsigned int 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       4       0       0       0
  4029 ;;      Locals:         0       3       0       0       0
  4030 ;;      Temps:          1       0       0       0       0
  4031 ;;      Totals:         1       7       0       0       0
  4032 ;;Total ram usage:        8 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    2
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_fround
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function ___lwdiv
  4044  1F0B                     ___lwdiv:
  4045  1F0B                     l2483:	
  4046                           ;incstack = 0
  4047                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4048                           
  4049  1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  4050  1F0C  1303               	bcf	3,6	;RP1=0, select bank0
  4051  1F0D  01A4               	clrf	___lwdiv@quotient
  4052  1F0E  01A5               	clrf	___lwdiv@quotient+1
  4053  1F0F                     l2485:
  4054  1F0F  0820               	movf	___lwdiv@divisor,w
  4055  1F10  0421               	iorwf	___lwdiv@divisor+1,w
  4056  1F11  1903               	btfsc	3,2
  4057  1F12  2F14               	goto	u3191
  4058  1F13  2F15               	goto	u3190
  4059  1F14                     u3191:
  4060  1F14  2F4C               	goto	l2505
  4061  1F15                     u3190:
  4062  1F15                     l2487:
  4063  1F15  01A6               	clrf	___lwdiv@counter
  4064  1F16  0AA6               	incf	___lwdiv@counter,f
  4065  1F17  2F23               	goto	l2493
  4066  1F18                     l2489:
  4067  1F18  3001               	movlw	1
  4068  1F19                     u3205:
  4069  1F19  1003               	clrc
  4070  1F1A  0DA0               	rlf	___lwdiv@divisor,f
  4071  1F1B  0DA1               	rlf	___lwdiv@divisor+1,f
  4072  1F1C  3EFF               	addlw	-1
  4073  1F1D  1D03               	skipz
  4074  1F1E  2F19               	goto	u3205
  4075  1F1F                     l2491:
  4076  1F1F  3001               	movlw	1
  4077  1F20  00F9               	movwf	??___lwdiv
  4078  1F21  0879               	movf	??___lwdiv,w
  4079  1F22  07A6               	addwf	___lwdiv@counter,f
  4080  1F23                     l2493:
  4081  1F23  1FA1               	btfss	___lwdiv@divisor+1,7
  4082  1F24  2F26               	goto	u3211
  4083  1F25  2F27               	goto	u3210
  4084  1F26                     u3211:
  4085  1F26  2F18               	goto	l2489
  4086  1F27                     u3210:
  4087  1F27                     l2495:
  4088  1F27  3001               	movlw	1
  4089  1F28                     u3225:
  4090  1F28  1003               	clrc
  4091  1F29  0DA4               	rlf	___lwdiv@quotient,f
  4092  1F2A  0DA5               	rlf	___lwdiv@quotient+1,f
  4093  1F2B  3EFF               	addlw	-1
  4094  1F2C  1D03               	skipz
  4095  1F2D  2F28               	goto	u3225
  4096  1F2E  0821               	movf	___lwdiv@divisor+1,w
  4097  1F2F  0223               	subwf	___lwdiv@dividend+1,w
  4098  1F30  1D03               	skipz
  4099  1F31  2F34               	goto	u3235
  4100  1F32  0820               	movf	___lwdiv@divisor,w
  4101  1F33  0222               	subwf	___lwdiv@dividend,w
  4102  1F34                     u3235:
  4103  1F34  1C03               	skipc
  4104  1F35  2F37               	goto	u3231
  4105  1F36  2F38               	goto	u3230
  4106  1F37                     u3231:
  4107  1F37  2F3F               	goto	l2501
  4108  1F38                     u3230:
  4109  1F38                     l2497:
  4110  1F38  0820               	movf	___lwdiv@divisor,w
  4111  1F39  02A2               	subwf	___lwdiv@dividend,f
  4112  1F3A  0821               	movf	___lwdiv@divisor+1,w
  4113  1F3B  1C03               	skipc
  4114  1F3C  03A3               	decf	___lwdiv@dividend+1,f
  4115  1F3D  02A3               	subwf	___lwdiv@dividend+1,f
  4116  1F3E                     l2499:
  4117  1F3E  1424               	bsf	___lwdiv@quotient,0
  4118  1F3F                     l2501:
  4119  1F3F  3001               	movlw	1
  4120  1F40                     u3245:
  4121  1F40  1003               	clrc
  4122  1F41  0CA1               	rrf	___lwdiv@divisor+1,f
  4123  1F42  0CA0               	rrf	___lwdiv@divisor,f
  4124  1F43  3EFF               	addlw	-1
  4125  1F44  1D03               	skipz
  4126  1F45  2F40               	goto	u3245
  4127  1F46                     l2503:
  4128  1F46  3001               	movlw	1
  4129  1F47  02A6               	subwf	___lwdiv@counter,f
  4130  1F48  1D03               	btfss	3,2
  4131  1F49  2F4B               	goto	u3251
  4132  1F4A  2F4C               	goto	u3250
  4133  1F4B                     u3251:
  4134  1F4B  2F27               	goto	l2495
  4135  1F4C                     u3250:
  4136  1F4C                     l2505:
  4137  1F4C  0825               	movf	___lwdiv@quotient+1,w
  4138  1F4D  00A1               	movwf	?___lwdiv+1
  4139  1F4E  0824               	movf	___lwdiv@quotient,w
  4140  1F4F  00A0               	movwf	?___lwdiv
  4141  1F50                     l903:
  4142  1F50  0008               	return
  4143  1F51                     __end_of___lwdiv:
  4144                           
  4145                           	psect	text9
  4146  1D1D                     __ptext9:	
  4147 ;; *************** function ___bmul *****************
  4148 ;; Defined at:
  4149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  multiplier      1    wreg     unsigned char 
  4152 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  multiplier      1   12[BANK0 ] unsigned char 
  4155 ;;  product         1   11[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      unsigned char 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       1       0       0       0
  4166 ;;      Locals:         0       2       0       0       0
  4167 ;;      Temps:          0       1       0       0       0
  4168 ;;      Totals:         0       4       0       0       0
  4169 ;;Total ram usage:        4 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    2
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_fround
  4176 ;;		_scale
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function ___bmul
  4182  1D1D                     ___bmul:
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4186                           ;___bmul@multiplier stored from wreg
  4187  1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  4188  1D1E  1303               	bcf	3,6	;RP1=0, select bank0
  4189  1D1F  00AC               	movwf	___bmul@multiplier
  4190  1D20                     l2267:
  4191  1D20  01AB               	clrf	___bmul@product
  4192  1D21                     l2269:
  4193  1D21  1C2C               	btfss	___bmul@multiplier,0
  4194  1D22  2D24               	goto	u2601
  4195  1D23  2D25               	goto	u2600
  4196  1D24                     u2601:
  4197  1D24  2D29               	goto	l2273
  4198  1D25                     u2600:
  4199  1D25                     l2271:
  4200  1D25  0829               	movf	___bmul@multiplicand,w
  4201  1D26  00AA               	movwf	??___bmul
  4202  1D27  082A               	movf	??___bmul,w
  4203  1D28  07AB               	addwf	___bmul@product,f
  4204  1D29                     l2273:
  4205  1D29  1003               	clrc
  4206  1D2A  0DA9               	rlf	___bmul@multiplicand,f
  4207  1D2B                     l2275:
  4208  1D2B  1003               	clrc
  4209  1D2C  0CAC               	rrf	___bmul@multiplier,f
  4210  1D2D  082C               	movf	___bmul@multiplier,w
  4211  1D2E  1D03               	btfss	3,2
  4212  1D2F  2D31               	goto	u2611
  4213  1D30  2D32               	goto	u2610
  4214  1D31                     u2611:
  4215  1D31  2D21               	goto	l2269
  4216  1D32                     u2610:
  4217  1D32                     l2277:
  4218  1D32  082B               	movf	___bmul@product,w
  4219  1D33                     l487:
  4220  1D33  0008               	return
  4221  1D34                     __end_of___bmul:
  4222                           
  4223                           	psect	text10
  4224  14B5                     __ptext10:	
  4225 ;; *************** function __tdiv_to_l_ *****************
  4226 ;; Defined at:
  4227 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  f1              3    3[COMMON] float 
  4230 ;;  f2              3    6[COMMON] float 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  quot            4    4[BANK0 ] unsigned long 
  4233 ;;  exp1            1    9[BANK0 ] unsigned char 
  4234 ;;  cntr            1    8[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  4    3[COMMON] unsigned long 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         6       0       0       0       0
  4245 ;;      Locals:         0       6       0       0       0
  4246 ;;      Temps:          0       4       0       0       0
  4247 ;;      Totals:         6      10       0       0       0
  4248 ;;Total ram usage:       16 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    2
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_sprintf
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function __tdiv_to_l_
  4260  14B5                     __tdiv_to_l_:
  4261  14B5                     l2647:	
  4262                           ;incstack = 0
  4263                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4264                           
  4265  14B5  0873               	movf	__tdiv_to_l_@f1,w
  4266  14B6  1283               	bcf	3,5	;RP0=0, select bank0
  4267  14B7  1303               	bcf	3,6	;RP1=0, select bank0
  4268  14B8  00A0               	movwf	??__tdiv_to_l_
  4269  14B9  0874               	movf	__tdiv_to_l_@f1+1,w
  4270  14BA  00A1               	movwf	??__tdiv_to_l_+1
  4271  14BB  0875               	movf	__tdiv_to_l_@f1+2,w
  4272  14BC  00A2               	movwf	??__tdiv_to_l_+2
  4273  14BD  1003               	clrc
  4274  14BE  0D21               	rlf	??__tdiv_to_l_+1,w
  4275  14BF  0D22               	rlf	??__tdiv_to_l_+2,w
  4276  14C0  00A3               	movwf	??__tdiv_to_l_+3
  4277  14C1  0823               	movf	??__tdiv_to_l_+3,w
  4278  14C2  00A9               	movwf	__tdiv_to_l_@exp1
  4279  14C3  0829               	movf	__tdiv_to_l_@exp1,w
  4280  14C4  1D03               	btfss	3,2
  4281  14C5  2CC7               	goto	u3421
  4282  14C6  2CC8               	goto	u3420
  4283  14C7                     u3421:
  4284  14C7  2CD1               	goto	l2653
  4285  14C8                     u3420:
  4286  14C8                     l2649:
  4287  14C8  3000               	movlw	0
  4288  14C9  00F6               	movwf	?__tdiv_to_l_+3
  4289  14CA  3000               	movlw	0
  4290  14CB  00F5               	movwf	?__tdiv_to_l_+2
  4291  14CC  3000               	movlw	0
  4292  14CD  00F4               	movwf	?__tdiv_to_l_+1
  4293  14CE  3000               	movlw	0
  4294  14CF  00F3               	movwf	?__tdiv_to_l_
  4295  14D0  2D71               	goto	l746
  4296  14D1                     l2653:
  4297  14D1  0876               	movf	__tdiv_to_l_@f2,w
  4298  14D2  00A0               	movwf	??__tdiv_to_l_
  4299  14D3  0877               	movf	__tdiv_to_l_@f2+1,w
  4300  14D4  00A1               	movwf	??__tdiv_to_l_+1
  4301  14D5  0878               	movf	__tdiv_to_l_@f2+2,w
  4302  14D6  00A2               	movwf	??__tdiv_to_l_+2
  4303  14D7  1003               	clrc
  4304  14D8  0D21               	rlf	??__tdiv_to_l_+1,w
  4305  14D9  0D22               	rlf	??__tdiv_to_l_+2,w
  4306  14DA  00A3               	movwf	??__tdiv_to_l_+3
  4307  14DB  0823               	movf	??__tdiv_to_l_+3,w
  4308  14DC  00A8               	movwf	__tdiv_to_l_@cntr
  4309  14DD  0828               	movf	__tdiv_to_l_@cntr,w
  4310  14DE  1D03               	btfss	3,2
  4311  14DF  2CE1               	goto	u3431
  4312  14E0  2CE2               	goto	u3430
  4313  14E1                     u3431:
  4314  14E1  2CE3               	goto	l747
  4315  14E2                     u3430:
  4316  14E2  2CC8               	goto	l2649
  4317  14E3                     l747:
  4318  14E3  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4319  14E4                     l2659:
  4320  14E4  30FF               	movlw	255
  4321  14E5  05F3               	andwf	__tdiv_to_l_@f1,f
  4322  14E6  30FF               	movlw	255
  4323  14E7  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4324  14E8  3000               	movlw	0
  4325  14E9  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4326  14EA                     l2661:
  4327  14EA  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4328  14EB  30FF               	movlw	255
  4329  14EC  05F6               	andwf	__tdiv_to_l_@f2,f
  4330  14ED  30FF               	movlw	255
  4331  14EE  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4332  14EF  3000               	movlw	0
  4333  14F0  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4334  14F1  3000               	movlw	0
  4335  14F2  00A7               	movwf	__tdiv_to_l_@quot+3
  4336  14F3  3000               	movlw	0
  4337  14F4  00A6               	movwf	__tdiv_to_l_@quot+2
  4338  14F5  3000               	movlw	0
  4339  14F6  00A5               	movwf	__tdiv_to_l_@quot+1
  4340  14F7  3000               	movlw	0
  4341  14F8  00A4               	movwf	__tdiv_to_l_@quot
  4342  14F9                     l2663:
  4343  14F9  307F               	movlw	127
  4344  14FA  02A9               	subwf	__tdiv_to_l_@exp1,f
  4345  14FB                     l2665:
  4346  14FB  3098               	movlw	152
  4347  14FC  0728               	addwf	__tdiv_to_l_@cntr,w
  4348  14FD  00A0               	movwf	??__tdiv_to_l_
  4349  14FE  0820               	movf	??__tdiv_to_l_,w
  4350  14FF  02A9               	subwf	__tdiv_to_l_@exp1,f
  4351  1500  3018               	movlw	24
  4352  1501  00A0               	movwf	??__tdiv_to_l_
  4353  1502  0820               	movf	??__tdiv_to_l_,w
  4354  1503  00A8               	movwf	__tdiv_to_l_@cntr
  4355  1504                     l2667:
  4356  1504  3001               	movlw	1
  4357  1505  00A0               	movwf	??__tdiv_to_l_
  4358  1506                     u3445:
  4359  1506  1003               	clrc
  4360  1507  0DA4               	rlf	__tdiv_to_l_@quot,f
  4361  1508  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4362  1509  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4363  150A  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4364  150B  0BA0               	decfsz	??__tdiv_to_l_,f
  4365  150C  2D06               	goto	u3445
  4366  150D                     l2669:
  4367  150D  0878               	movf	__tdiv_to_l_@f2+2,w
  4368  150E  0275               	subwf	__tdiv_to_l_@f1+2,w
  4369  150F  1D03               	skipz
  4370  1510  2D17               	goto	u3455
  4371  1511  0877               	movf	__tdiv_to_l_@f2+1,w
  4372  1512  0274               	subwf	__tdiv_to_l_@f1+1,w
  4373  1513  1D03               	skipz
  4374  1514  2D17               	goto	u3455
  4375  1515  0876               	movf	__tdiv_to_l_@f2,w
  4376  1516  0273               	subwf	__tdiv_to_l_@f1,w
  4377  1517                     u3455:
  4378  1517  1C03               	skipc
  4379  1518  2D1A               	goto	u3451
  4380  1519  2D1B               	goto	u3450
  4381  151A                     u3451:
  4382  151A  2D26               	goto	l2675
  4383  151B                     u3450:
  4384  151B                     l2671:
  4385  151B  0876               	movf	__tdiv_to_l_@f2,w
  4386  151C  02F3               	subwf	__tdiv_to_l_@f1,f
  4387  151D  0877               	movf	__tdiv_to_l_@f2+1,w
  4388  151E  1C03               	skipc
  4389  151F  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  4390  1520  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4391  1521  0878               	movf	__tdiv_to_l_@f2+2,w
  4392  1522  1C03               	skipc
  4393  1523  0A78               	incf	__tdiv_to_l_@f2+2,w
  4394  1524  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4395  1525                     l2673:
  4396  1525  1424               	bsf	__tdiv_to_l_@quot,0
  4397  1526                     l2675:
  4398  1526  3001               	movlw	1
  4399  1527                     u3465:
  4400  1527  1003               	clrc
  4401  1528  0DF3               	rlf	__tdiv_to_l_@f1,f
  4402  1529  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4403  152A  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4404  152B  3EFF               	addlw	-1
  4405  152C  1D03               	skipz
  4406  152D  2D27               	goto	u3465
  4407  152E                     l2677:
  4408  152E  3001               	movlw	1
  4409  152F  02A8               	subwf	__tdiv_to_l_@cntr,f
  4410  1530  1D03               	btfss	3,2
  4411  1531  2D33               	goto	u3471
  4412  1532  2D34               	goto	u3470
  4413  1533                     u3471:
  4414  1533  2D04               	goto	l2667
  4415  1534                     u3470:
  4416  1534                     l750:
  4417  1534  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4418  1535  2D37               	goto	u3481
  4419  1536  2D38               	goto	u3480
  4420  1537                     u3481:
  4421  1537  2D52               	goto	l2687
  4422  1538                     u3480:
  4423  1538                     l2679:
  4424  1538  0829               	movf	__tdiv_to_l_@exp1,w
  4425  1539  3A80               	xorlw	128
  4426  153A  3E97               	addlw	151
  4427  153B  1803               	skipnc
  4428  153C  2D3E               	goto	u3491
  4429  153D  2D3F               	goto	u3490
  4430  153E                     u3491:
  4431  153E  2D40               	goto	l2685
  4432  153F                     u3490:
  4433  153F  2CC8               	goto	l2649
  4434  1540                     l2685:
  4435  1540  3001               	movlw	1
  4436  1541                     u3505:
  4437  1541  1003               	clrc
  4438  1542  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4439  1543  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4440  1544  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4441  1545  0CA4               	rrf	__tdiv_to_l_@quot,f
  4442  1546  3EFF               	addlw	-1
  4443  1547  1D03               	skipz
  4444  1548  2D41               	goto	u3505
  4445  1549  3001               	movlw	1
  4446  154A  00A0               	movwf	??__tdiv_to_l_
  4447  154B  0820               	movf	??__tdiv_to_l_,w
  4448  154C  07A9               	addwf	__tdiv_to_l_@exp1,f
  4449  154D  1D03               	btfss	3,2
  4450  154E  2D50               	goto	u3511
  4451  154F  2D51               	goto	u3510
  4452  1550                     u3511:
  4453  1550  2D40               	goto	l2685
  4454  1551                     u3510:
  4455  1551  2D69               	goto	l2695
  4456  1552                     l2687:
  4457  1552  3018               	movlw	24
  4458  1553  0229               	subwf	__tdiv_to_l_@exp1,w
  4459  1554  1C03               	skipc
  4460  1555  2D57               	goto	u3521
  4461  1556  2D58               	goto	u3520
  4462  1557                     u3521:
  4463  1557  2D64               	goto	l757
  4464  1558                     u3520:
  4465  1558  2CC8               	goto	l2649
  4466  1559                     l2693:
  4467  1559  3001               	movlw	1
  4468  155A  00A0               	movwf	??__tdiv_to_l_
  4469  155B                     u3535:
  4470  155B  1003               	clrc
  4471  155C  0DA4               	rlf	__tdiv_to_l_@quot,f
  4472  155D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4473  155E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4474  155F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4475  1560  0BA0               	decfsz	??__tdiv_to_l_,f
  4476  1561  2D5B               	goto	u3535
  4477  1562  3001               	movlw	1
  4478  1563  02A9               	subwf	__tdiv_to_l_@exp1,f
  4479  1564                     l757:
  4480  1564  0829               	movf	__tdiv_to_l_@exp1,w
  4481  1565  1D03               	btfss	3,2
  4482  1566  2D68               	goto	u3541
  4483  1567  2D69               	goto	u3540
  4484  1568                     u3541:
  4485  1568  2D59               	goto	l2693
  4486  1569                     u3540:
  4487  1569                     l2695:
  4488  1569  0827               	movf	__tdiv_to_l_@quot+3,w
  4489  156A  00F6               	movwf	?__tdiv_to_l_+3
  4490  156B  0826               	movf	__tdiv_to_l_@quot+2,w
  4491  156C  00F5               	movwf	?__tdiv_to_l_+2
  4492  156D  0825               	movf	__tdiv_to_l_@quot+1,w
  4493  156E  00F4               	movwf	?__tdiv_to_l_+1
  4494  156F  0824               	movf	__tdiv_to_l_@quot,w
  4495  1570  00F3               	movwf	?__tdiv_to_l_
  4496  1571                     l746:
  4497  1571  0008               	return
  4498  1572                     __end_of__tdiv_to_l_:
  4499                           
  4500                           	psect	text11
  4501  0829                     __ptext11:	
  4502 ;; *************** function __div_to_l_ *****************
  4503 ;; Defined at:
  4504 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  f1              3    3[COMMON] unsigned long 
  4507 ;;  f2              3    6[COMMON] unsigned long 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  quot            4    8[BANK0 ] unsigned long 
  4510 ;;  exp1            1   13[BANK0 ] unsigned char 
  4511 ;;  cntr            1   12[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  4    3[COMMON] unsigned long 
  4514 ;; Registers used:
  4515 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         6       0       0       0       0
  4522 ;;      Locals:         0       6       0       0       0
  4523 ;;      Temps:          0       8       0       0       0
  4524 ;;      Totals:         6      14       0       0       0
  4525 ;;Total ram usage:       20 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    2
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_sprintf
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function __div_to_l_
  4537  0829                     __div_to_l_:
  4538  0829                     l2699:	
  4539                           ;incstack = 0
  4540                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4541                           
  4542  0829  3073               	movlw	low (__div_to_l_@f1| 0)
  4543  082A  0084               	movwf	4
  4544  082B  0800               	movf	0,w
  4545  082C  1283               	bcf	3,5	;RP0=0, select bank0
  4546  082D  1303               	bcf	3,6	;RP1=0, select bank0
  4547  082E  00A0               	movwf	??__div_to_l_
  4548  082F  0A84               	incf	4,f
  4549  0830  0800               	movf	0,w
  4550  0831  00A1               	movwf	??__div_to_l_+1
  4551  0832  0A84               	incf	4,f
  4552  0833  0800               	movf	0,w
  4553  0834  00A2               	movwf	??__div_to_l_+2
  4554  0835  0A84               	incf	4,f
  4555  0836  0800               	movf	0,w
  4556  0837  00A3               	movwf	??__div_to_l_+3
  4557  0838  1003               	clrc
  4558  0839  0D22               	rlf	??__div_to_l_+2,w
  4559  083A  0D23               	rlf	??__div_to_l_+3,w
  4560  083B  00A4               	movwf	??__div_to_l_+4
  4561  083C  0824               	movf	??__div_to_l_+4,w
  4562  083D  00AD               	movwf	__div_to_l_@exp1
  4563  083E  082D               	movf	__div_to_l_@exp1,w
  4564  083F  1D03               	btfss	3,2
  4565  0840  2842               	goto	u3551
  4566  0841  2843               	goto	u3550
  4567  0842                     u3551:
  4568  0842  284C               	goto	l2705
  4569  0843                     u3550:
  4570  0843                     l2701:
  4571  0843  3000               	movlw	0
  4572  0844  00F6               	movwf	?__div_to_l_+3
  4573  0845  3000               	movlw	0
  4574  0846  00F5               	movwf	?__div_to_l_+2
  4575  0847  3000               	movlw	0
  4576  0848  00F4               	movwf	?__div_to_l_+1
  4577  0849  3000               	movlw	0
  4578  084A  00F3               	movwf	?__div_to_l_
  4579  084B  2954               	goto	l667
  4580  084C                     l2705:
  4581  084C  3076               	movlw	low (__div_to_l_@f2| 0)
  4582  084D  0084               	movwf	4
  4583  084E  0800               	movf	0,w
  4584  084F  00A0               	movwf	??__div_to_l_
  4585  0850  0A84               	incf	4,f
  4586  0851  0800               	movf	0,w
  4587  0852  00A1               	movwf	??__div_to_l_+1
  4588  0853  0A84               	incf	4,f
  4589  0854  0800               	movf	0,w
  4590  0855  00A2               	movwf	??__div_to_l_+2
  4591  0856  0A84               	incf	4,f
  4592  0857  0800               	movf	0,w
  4593  0858  00A3               	movwf	??__div_to_l_+3
  4594  0859  1003               	clrc
  4595  085A  0D22               	rlf	??__div_to_l_+2,w
  4596  085B  0D23               	rlf	??__div_to_l_+3,w
  4597  085C  00A4               	movwf	??__div_to_l_+4
  4598  085D  0824               	movf	??__div_to_l_+4,w
  4599  085E  00AC               	movwf	__div_to_l_@cntr
  4600  085F  082C               	movf	__div_to_l_@cntr,w
  4601  0860  1D03               	btfss	3,2
  4602  0861  2863               	goto	u3561
  4603  0862  2864               	goto	u3560
  4604  0863                     u3561:
  4605  0863  2865               	goto	l2711
  4606  0864                     u3560:
  4607  0864  2843               	goto	l2701
  4608  0865                     l2711:
  4609  0865  3073               	movlw	low (__div_to_l_@f1| 0)
  4610  0866  0084               	movwf	4
  4611  0867  3000               	movlw	0
  4612  0868  0480               	iorwf	0,f
  4613  0869  0A84               	incf	4,f
  4614  086A  3000               	movlw	0
  4615  086B  0480               	iorwf	0,f
  4616  086C  0A84               	incf	4,f
  4617  086D  3080               	movlw	128
  4618  086E  0480               	iorwf	0,f
  4619  086F  0A84               	incf	4,f
  4620  0870  3000               	movlw	0
  4621  0871  0480               	iorwf	0,f
  4622  0872  3073               	movlw	low (__div_to_l_@f1| 0)
  4623  0873  0084               	movwf	4
  4624  0874  30FF               	movlw	255
  4625  0875  0580               	andwf	0,f
  4626  0876  0A84               	incf	4,f
  4627  0877  30FF               	movlw	255
  4628  0878  0580               	andwf	0,f
  4629  0879  0A84               	incf	4,f
  4630  087A  30FF               	movlw	255
  4631  087B  0580               	andwf	0,f
  4632  087C  0A84               	incf	4,f
  4633  087D  3000               	movlw	0
  4634  087E  0580               	andwf	0,f
  4635  087F  3076               	movlw	low (__div_to_l_@f2| 0)
  4636  0880  0084               	movwf	4
  4637  0881  3000               	movlw	0
  4638  0882  0480               	iorwf	0,f
  4639  0883  0A84               	incf	4,f
  4640  0884  3000               	movlw	0
  4641  0885  0480               	iorwf	0,f
  4642  0886  0A84               	incf	4,f
  4643  0887  3080               	movlw	128
  4644  0888  0480               	iorwf	0,f
  4645  0889  0A84               	incf	4,f
  4646  088A  3000               	movlw	0
  4647  088B  0480               	iorwf	0,f
  4648  088C  3076               	movlw	low (__div_to_l_@f2| 0)
  4649  088D  0084               	movwf	4
  4650  088E  30FF               	movlw	255
  4651  088F  0580               	andwf	0,f
  4652  0890  0A84               	incf	4,f
  4653  0891  30FF               	movlw	255
  4654  0892  0580               	andwf	0,f
  4655  0893  0A84               	incf	4,f
  4656  0894  30FF               	movlw	255
  4657  0895  0580               	andwf	0,f
  4658  0896  0A84               	incf	4,f
  4659  0897  3000               	movlw	0
  4660  0898  0580               	andwf	0,f
  4661  0899                     l2713:
  4662  0899  3000               	movlw	0
  4663  089A  00AB               	movwf	__div_to_l_@quot+3
  4664  089B  3000               	movlw	0
  4665  089C  00AA               	movwf	__div_to_l_@quot+2
  4666  089D  3000               	movlw	0
  4667  089E  00A9               	movwf	__div_to_l_@quot+1
  4668  089F  3000               	movlw	0
  4669  08A0  00A8               	movwf	__div_to_l_@quot
  4670  08A1                     l2715:
  4671  08A1  307F               	movlw	127
  4672  08A2  02AD               	subwf	__div_to_l_@exp1,f
  4673  08A3                     l2717:
  4674  08A3  30A0               	movlw	160
  4675  08A4  072C               	addwf	__div_to_l_@cntr,w
  4676  08A5  00A0               	movwf	??__div_to_l_
  4677  08A6  0820               	movf	??__div_to_l_,w
  4678  08A7  02AD               	subwf	__div_to_l_@exp1,f
  4679  08A8                     l2719:
  4680  08A8  3020               	movlw	32
  4681  08A9  00A0               	movwf	??__div_to_l_
  4682  08AA  0820               	movf	??__div_to_l_,w
  4683  08AB  00AC               	movwf	__div_to_l_@cntr
  4684  08AC                     l2721:
  4685  08AC  3001               	movlw	1
  4686  08AD  00A0               	movwf	??__div_to_l_
  4687  08AE                     u3575:
  4688  08AE  1003               	clrc
  4689  08AF  0DA8               	rlf	__div_to_l_@quot,f
  4690  08B0  0DA9               	rlf	__div_to_l_@quot+1,f
  4691  08B1  0DAA               	rlf	__div_to_l_@quot+2,f
  4692  08B2  0DAB               	rlf	__div_to_l_@quot+3,f
  4693  08B3  0BA0               	decfsz	??__div_to_l_,f
  4694  08B4  28AE               	goto	u3575
  4695  08B5                     l2723:
  4696  08B5  3076               	movlw	low (__div_to_l_@f2| 0)
  4697  08B6  0084               	movwf	4
  4698  08B7  0800               	movf	0,w
  4699  08B8  00A0               	movwf	??__div_to_l_
  4700  08B9  0A84               	incf	4,f
  4701  08BA  0800               	movf	0,w
  4702  08BB  00A1               	movwf	??__div_to_l_+1
  4703  08BC  0A84               	incf	4,f
  4704  08BD  0800               	movf	0,w
  4705  08BE  00A2               	movwf	??__div_to_l_+2
  4706  08BF  0A84               	incf	4,f
  4707  08C0  0800               	movf	0,w
  4708  08C1  00A3               	movwf	??__div_to_l_+3
  4709  08C2  3073               	movlw	low (__div_to_l_@f1| 0)
  4710  08C3  0084               	movwf	4
  4711  08C4  0800               	movf	0,w
  4712  08C5  00A4               	movwf	??__div_to_l_+4
  4713  08C6  0A84               	incf	4,f
  4714  08C7  0800               	movf	0,w
  4715  08C8  00A5               	movwf	??__div_to_l_+5
  4716  08C9  0A84               	incf	4,f
  4717  08CA  0800               	movf	0,w
  4718  08CB  00A6               	movwf	??__div_to_l_+6
  4719  08CC  0A84               	incf	4,f
  4720  08CD  0800               	movf	0,w
  4721  08CE  00A7               	movwf	??__div_to_l_+7
  4722  08CF  0823               	movf	??__div_to_l_+3,w
  4723  08D0  0227               	subwf	??__div_to_l_+7,w
  4724  08D1  1D03               	skipz
  4725  08D2  28DD               	goto	u3585
  4726  08D3  0822               	movf	??__div_to_l_+2,w
  4727  08D4  0226               	subwf	??__div_to_l_+6,w
  4728  08D5  1D03               	skipz
  4729  08D6  28DD               	goto	u3585
  4730  08D7  0821               	movf	??__div_to_l_+1,w
  4731  08D8  0225               	subwf	??__div_to_l_+5,w
  4732  08D9  1D03               	skipz
  4733  08DA  28DD               	goto	u3585
  4734  08DB  0820               	movf	??__div_to_l_,w
  4735  08DC  0224               	subwf	??__div_to_l_+4,w
  4736  08DD                     u3585:
  4737  08DD  1C03               	skipc
  4738  08DE  28E0               	goto	u3581
  4739  08DF  28E1               	goto	u3580
  4740  08E0                     u3581:
  4741  08E0  2904               	goto	l670
  4742  08E1                     u3580:
  4743  08E1                     l2725:
  4744  08E1  3076               	movlw	low (__div_to_l_@f2| 0)
  4745  08E2  0084               	movwf	4
  4746  08E3  0800               	movf	0,w
  4747  08E4  00A0               	movwf	??__div_to_l_
  4748  08E5  0A84               	incf	4,f
  4749  08E6  0800               	movf	0,w
  4750  08E7  00A1               	movwf	??__div_to_l_+1
  4751  08E8  0A84               	incf	4,f
  4752  08E9  0800               	movf	0,w
  4753  08EA  00A2               	movwf	??__div_to_l_+2
  4754  08EB  0A84               	incf	4,f
  4755  08EC  0800               	movf	0,w
  4756  08ED  00A3               	movwf	??__div_to_l_+3
  4757  08EE  3073               	movlw	low (__div_to_l_@f1| 0)
  4758  08EF  0084               	movwf	4
  4759  08F0  0820               	movf	??__div_to_l_,w
  4760  08F1  0280               	subwf	0,f
  4761  08F2  0A84               	incf	4,f
  4762  08F3  0821               	movf	??__div_to_l_+1,w
  4763  08F4  1C03               	skipc
  4764  08F5  0F21               	incfsz	??__div_to_l_+1,w
  4765  08F6  0280               	subwf	0,f
  4766  08F7  0A84               	incf	4,f
  4767  08F8  0822               	movf	??__div_to_l_+2,w
  4768  08F9  1C03               	skipc
  4769  08FA  0F22               	incfsz	??__div_to_l_+2,w
  4770  08FB  0280               	subwf	0,f
  4771  08FC  0A84               	incf	4,f
  4772  08FD  0823               	movf	??__div_to_l_+3,w
  4773  08FE  1C03               	skipc
  4774  08FF  0A23               	incf	??__div_to_l_+3,w
  4775  0900  0280               	subwf	0,f
  4776  0901  3003               	movlw	3
  4777  0902  0284               	subwf	4,f
  4778  0903                     l2727:
  4779  0903  1428               	bsf	__div_to_l_@quot,0
  4780  0904                     l670:
  4781  0904  3073               	movlw	low (__div_to_l_@f1| 0)
  4782  0905  0084               	movwf	4
  4783  0906  1003               	clrc
  4784  0907  0D80               	rlf	0,f
  4785  0908  0A84               	incf	4,f
  4786  0909  0D80               	rlf	0,f
  4787  090A  0A84               	incf	4,f
  4788  090B  0D80               	rlf	0,f
  4789  090C  0A84               	incf	4,f
  4790  090D  0D80               	rlf	0,f
  4791  090E  0384               	decf	4,f
  4792  090F  0384               	decf	4,f
  4793  0910  0384               	decf	4,f
  4794  0911                     l2729:
  4795  0911  3001               	movlw	1
  4796  0912  02AC               	subwf	__div_to_l_@cntr,f
  4797  0913  1D03               	btfss	3,2
  4798  0914  2916               	goto	u3591
  4799  0915  2917               	goto	u3590
  4800  0916                     u3591:
  4801  0916  28AC               	goto	l2721
  4802  0917                     u3590:
  4803  0917                     l671:
  4804  0917  1FAD               	btfss	__div_to_l_@exp1,7
  4805  0918  291A               	goto	u3601
  4806  0919  291B               	goto	u3600
  4807  091A                     u3601:
  4808  091A  2935               	goto	l2739
  4809  091B                     u3600:
  4810  091B                     l2731:
  4811  091B  082D               	movf	__div_to_l_@exp1,w
  4812  091C  3A80               	xorlw	128
  4813  091D  3E9F               	addlw	159
  4814  091E  1803               	skipnc
  4815  091F  2921               	goto	u3611
  4816  0920  2922               	goto	u3610
  4817  0921                     u3611:
  4818  0921  2923               	goto	l2737
  4819  0922                     u3610:
  4820  0922  2843               	goto	l2701
  4821  0923                     l2737:
  4822  0923  3001               	movlw	1
  4823  0924                     u3625:
  4824  0924  1003               	clrc
  4825  0925  0CAB               	rrf	__div_to_l_@quot+3,f
  4826  0926  0CAA               	rrf	__div_to_l_@quot+2,f
  4827  0927  0CA9               	rrf	__div_to_l_@quot+1,f
  4828  0928  0CA8               	rrf	__div_to_l_@quot,f
  4829  0929  3EFF               	addlw	-1
  4830  092A  1D03               	skipz
  4831  092B  2924               	goto	u3625
  4832  092C  3001               	movlw	1
  4833  092D  00A0               	movwf	??__div_to_l_
  4834  092E  0820               	movf	??__div_to_l_,w
  4835  092F  07AD               	addwf	__div_to_l_@exp1,f
  4836  0930  1D03               	btfss	3,2
  4837  0931  2933               	goto	u3631
  4838  0932  2934               	goto	u3630
  4839  0933                     u3631:
  4840  0933  2923               	goto	l2737
  4841  0934                     u3630:
  4842  0934  294C               	goto	l2747
  4843  0935                     l2739:
  4844  0935  3020               	movlw	32
  4845  0936  022D               	subwf	__div_to_l_@exp1,w
  4846  0937  1C03               	skipc
  4847  0938  293A               	goto	u3641
  4848  0939  293B               	goto	u3640
  4849  093A                     u3641:
  4850  093A  2947               	goto	l678
  4851  093B                     u3640:
  4852  093B  2843               	goto	l2701
  4853  093C                     l2745:
  4854  093C  3001               	movlw	1
  4855  093D  00A0               	movwf	??__div_to_l_
  4856  093E                     u3655:
  4857  093E  1003               	clrc
  4858  093F  0DA8               	rlf	__div_to_l_@quot,f
  4859  0940  0DA9               	rlf	__div_to_l_@quot+1,f
  4860  0941  0DAA               	rlf	__div_to_l_@quot+2,f
  4861  0942  0DAB               	rlf	__div_to_l_@quot+3,f
  4862  0943  0BA0               	decfsz	??__div_to_l_,f
  4863  0944  293E               	goto	u3655
  4864  0945  3001               	movlw	1
  4865  0946  02AD               	subwf	__div_to_l_@exp1,f
  4866  0947                     l678:
  4867  0947  082D               	movf	__div_to_l_@exp1,w
  4868  0948  1D03               	btfss	3,2
  4869  0949  294B               	goto	u3661
  4870  094A  294C               	goto	u3660
  4871  094B                     u3661:
  4872  094B  293C               	goto	l2745
  4873  094C                     u3660:
  4874  094C                     l2747:
  4875  094C  082B               	movf	__div_to_l_@quot+3,w
  4876  094D  00F6               	movwf	?__div_to_l_+3
  4877  094E  082A               	movf	__div_to_l_@quot+2,w
  4878  094F  00F5               	movwf	?__div_to_l_+2
  4879  0950  0829               	movf	__div_to_l_@quot+1,w
  4880  0951  00F4               	movwf	?__div_to_l_+1
  4881  0952  0828               	movf	__div_to_l_@quot,w
  4882  0953  00F3               	movwf	?__div_to_l_
  4883  0954                     l667:
  4884  0954  0008               	return
  4885  0955                     __end_of__div_to_l_:
  4886                           
  4887                           	psect	text12
  4888  1D7B                     __ptext12:	
  4889 ;; *************** function ___wmul *****************
  4890 ;; Defined at:
  4891 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  multiplier      2    3[COMMON] unsigned int 
  4894 ;;  multiplicand    2    5[COMMON] unsigned int 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  product         2    7[COMMON] unsigned int 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  2    3[COMMON] unsigned int 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         4       0       0       0       0
  4907 ;;      Locals:         2       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         6       0       0       0       0
  4910 ;;Total ram usage:        6 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    2
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_sprintf
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function ___wmul
  4922  1D7B                     ___wmul:
  4923  1D7B                     l2751:	
  4924                           ;incstack = 0
  4925                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4926                           
  4927  1D7B  01F7               	clrf	___wmul@product
  4928  1D7C  01F8               	clrf	___wmul@product+1
  4929  1D7D                     l2753:
  4930  1D7D  1C73               	btfss	___wmul@multiplier,0
  4931  1D7E  2D80               	goto	u3671
  4932  1D7F  2D81               	goto	u3670
  4933  1D80                     u3671:
  4934  1D80  2D87               	goto	l461
  4935  1D81                     u3670:
  4936  1D81                     l2755:
  4937  1D81  0875               	movf	___wmul@multiplicand,w
  4938  1D82  07F7               	addwf	___wmul@product,f
  4939  1D83  1803               	skipnc
  4940  1D84  0AF8               	incf	___wmul@product+1,f
  4941  1D85  0876               	movf	___wmul@multiplicand+1,w
  4942  1D86  07F8               	addwf	___wmul@product+1,f
  4943  1D87                     l461:
  4944  1D87  3001               	movlw	1
  4945  1D88                     u3685:
  4946  1D88  1003               	clrc
  4947  1D89  0DF5               	rlf	___wmul@multiplicand,f
  4948  1D8A  0DF6               	rlf	___wmul@multiplicand+1,f
  4949  1D8B  3EFF               	addlw	-1
  4950  1D8C  1D03               	skipz
  4951  1D8D  2D88               	goto	u3685
  4952  1D8E                     l2757:
  4953  1D8E  3001               	movlw	1
  4954  1D8F                     u3695:
  4955  1D8F  1003               	clrc
  4956  1D90  0CF4               	rrf	___wmul@multiplier+1,f
  4957  1D91  0CF3               	rrf	___wmul@multiplier,f
  4958  1D92  3EFF               	addlw	-1
  4959  1D93  1D03               	skipz
  4960  1D94  2D8F               	goto	u3695
  4961  1D95                     l2759:
  4962  1D95  0873               	movf	___wmul@multiplier,w
  4963  1D96  0474               	iorwf	___wmul@multiplier+1,w
  4964  1D97  1D03               	btfss	3,2
  4965  1D98  2D9A               	goto	u3701
  4966  1D99  2D9B               	goto	u3700
  4967  1D9A                     u3701:
  4968  1D9A  2D7D               	goto	l2753
  4969  1D9B                     u3700:
  4970  1D9B                     l2761:
  4971  1D9B  0878               	movf	___wmul@product+1,w
  4972  1D9C  00F4               	movwf	?___wmul+1
  4973  1D9D  0877               	movf	___wmul@product,w
  4974  1D9E  00F3               	movwf	?___wmul
  4975  1D9F                     l463:
  4976  1D9F  0008               	return
  4977  1DA0                     __end_of___wmul:
  4978                           
  4979                           	psect	text13
  4980  1E1E                     __ptext13:	
  4981 ;; *************** function ___lltoft *****************
  4982 ;; Defined at:
  4983 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  c               4    3[BANK0 ] unsigned long 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  exp             1    9[COMMON] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  3    3[BANK0 ] float 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4997 ;;      Params:         0       4       0       0       0
  4998 ;;      Locals:         1       0       0       0       0
  4999 ;;      Temps:          1       0       0       0       0
  5000 ;;      Totals:         2       4       0       0       0
  5001 ;;Total ram usage:        6 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    3
  5004 ;; This function calls:
  5005 ;;		___ftpack
  5006 ;; This function is called by:
  5007 ;;		_sprintf
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function ___lltoft
  5013  1E1E                     ___lltoft:
  5014  1E1E                     l3879:	
  5015                           ;incstack = 0
  5016                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5017                           
  5018  1E1E  308E               	movlw	142
  5019  1E1F  00F8               	movwf	??___lltoft
  5020  1E20  0878               	movf	??___lltoft,w
  5021  1E21  00F9               	movwf	___lltoft@exp
  5022  1E22  2E30               	goto	l3883
  5023  1E23                     l3881:
  5024  1E23  3001               	movlw	1
  5025  1E24                     u5775:
  5026  1E24  1003               	clrc
  5027  1E25  0CA6               	rrf	___lltoft@c+3,f
  5028  1E26  0CA5               	rrf	___lltoft@c+2,f
  5029  1E27  0CA4               	rrf	___lltoft@c+1,f
  5030  1E28  0CA3               	rrf	___lltoft@c,f
  5031  1E29  3EFF               	addlw	-1
  5032  1E2A  1D03               	skipz
  5033  1E2B  2E24               	goto	u5775
  5034  1E2C  3001               	movlw	1
  5035  1E2D  00F8               	movwf	??___lltoft
  5036  1E2E  0878               	movf	??___lltoft,w
  5037  1E2F  07F9               	addwf	___lltoft@exp,f
  5038  1E30                     l3883:
  5039  1E30  30FF               	movlw	255
  5040  1E31  1283               	bcf	3,5	;RP0=0, select bank0
  5041  1E32  1303               	bcf	3,6	;RP1=0, select bank0
  5042  1E33  0526               	andwf	___lltoft@c+3,w
  5043  1E34  1D03               	btfss	3,2
  5044  1E35  2E37               	goto	u5781
  5045  1E36  2E38               	goto	u5780
  5046  1E37                     u5781:
  5047  1E37  2E23               	goto	l3881
  5048  1E38                     u5780:
  5049  1E38                     l3885:
  5050  1E38  0823               	movf	___lltoft@c,w
  5051  1E39  00F3               	movwf	___ftpack@arg
  5052  1E3A  0824               	movf	___lltoft@c+1,w
  5053  1E3B  00F4               	movwf	___ftpack@arg+1
  5054  1E3C  0825               	movf	___lltoft@c+2,w
  5055  1E3D  00F5               	movwf	___ftpack@arg+2
  5056  1E3E  0879               	movf	___lltoft@exp,w
  5057  1E3F  00F8               	movwf	??___lltoft
  5058  1E40  0878               	movf	??___lltoft,w
  5059  1E41  00F6               	movwf	___ftpack@exp
  5060  1E42  01F7               	clrf	___ftpack@sign
  5061  1E43  160A  118A  22F7  160A  158A  	fcall	___ftpack
  5062  1E48  0873               	movf	?___ftpack,w
  5063  1E49  1283               	bcf	3,5	;RP0=0, select bank0
  5064  1E4A  1303               	bcf	3,6	;RP1=0, select bank0
  5065  1E4B  00A3               	movwf	?___lltoft
  5066  1E4C  0874               	movf	?___ftpack+1,w
  5067  1E4D  00A4               	movwf	?___lltoft+1
  5068  1E4E  0875               	movf	?___ftpack+2,w
  5069  1E4F  00A5               	movwf	?___lltoft+2
  5070  1E50                     l840:
  5071  1E50  0008               	return
  5072  1E51                     __end_of___lltoft:
  5073                           
  5074                           	psect	text14
  5075  1F51                     __ptext14:	
  5076 ;; *************** function ___llmod *****************
  5077 ;; Defined at:
  5078 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  divisor         4    8[BANK0 ] unsigned long 
  5081 ;;  dividend        4   12[BANK0 ] unsigned long 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  counter         1   16[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  4    8[BANK0 ] unsigned long 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5093 ;;      Params:         0       8       0       0       0
  5094 ;;      Locals:         0       1       0       0       0
  5095 ;;      Temps:          1       0       0       0       0
  5096 ;;      Totals:         1       9       0       0       0
  5097 ;;Total ram usage:       10 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    2
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_sprintf
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function ___llmod
  5109  1F51                     ___llmod:
  5110  1F51                     l3859:	
  5111                           ;incstack = 0
  5112                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5113                           
  5114  1F51  1283               	bcf	3,5	;RP0=0, select bank0
  5115  1F52  1303               	bcf	3,6	;RP1=0, select bank0
  5116  1F53  082B               	movf	___llmod@divisor+3,w
  5117  1F54  042A               	iorwf	___llmod@divisor+2,w
  5118  1F55  0429               	iorwf	___llmod@divisor+1,w
  5119  1F56  0428               	iorwf	___llmod@divisor,w
  5120  1F57  1903               	skipnz
  5121  1F58  2F5A               	goto	u5711
  5122  1F59  2F5B               	goto	u5710
  5123  1F5A                     u5711:
  5124  1F5A  2F9E               	goto	l3875
  5125  1F5B                     u5710:
  5126  1F5B                     l3861:
  5127  1F5B  01B0               	clrf	___llmod@counter
  5128  1F5C  0AB0               	incf	___llmod@counter,f
  5129  1F5D  2F6B               	goto	l3865
  5130  1F5E                     l3863:
  5131  1F5E  3001               	movlw	1
  5132  1F5F  00F9               	movwf	??___llmod
  5133  1F60                     u5725:
  5134  1F60  1003               	clrc
  5135  1F61  0DA8               	rlf	___llmod@divisor,f
  5136  1F62  0DA9               	rlf	___llmod@divisor+1,f
  5137  1F63  0DAA               	rlf	___llmod@divisor+2,f
  5138  1F64  0DAB               	rlf	___llmod@divisor+3,f
  5139  1F65  0BF9               	decfsz	??___llmod,f
  5140  1F66  2F60               	goto	u5725
  5141  1F67  3001               	movlw	1
  5142  1F68  00F9               	movwf	??___llmod
  5143  1F69  0879               	movf	??___llmod,w
  5144  1F6A  07B0               	addwf	___llmod@counter,f
  5145  1F6B                     l3865:
  5146  1F6B  1FAB               	btfss	___llmod@divisor+3,7
  5147  1F6C  2F6E               	goto	u5731
  5148  1F6D  2F6F               	goto	u5730
  5149  1F6E                     u5731:
  5150  1F6E  2F5E               	goto	l3863
  5151  1F6F                     u5730:
  5152  1F6F                     l3867:
  5153  1F6F  082B               	movf	___llmod@divisor+3,w
  5154  1F70  022F               	subwf	___llmod@dividend+3,w
  5155  1F71  1D03               	skipz
  5156  1F72  2F7D               	goto	u5745
  5157  1F73  082A               	movf	___llmod@divisor+2,w
  5158  1F74  022E               	subwf	___llmod@dividend+2,w
  5159  1F75  1D03               	skipz
  5160  1F76  2F7D               	goto	u5745
  5161  1F77  0829               	movf	___llmod@divisor+1,w
  5162  1F78  022D               	subwf	___llmod@dividend+1,w
  5163  1F79  1D03               	skipz
  5164  1F7A  2F7D               	goto	u5745
  5165  1F7B  0828               	movf	___llmod@divisor,w
  5166  1F7C  022C               	subwf	___llmod@dividend,w
  5167  1F7D                     u5745:
  5168  1F7D  1C03               	skipc
  5169  1F7E  2F80               	goto	u5741
  5170  1F7F  2F81               	goto	u5740
  5171  1F80                     u5741:
  5172  1F80  2F8F               	goto	l3871
  5173  1F81                     u5740:
  5174  1F81                     l3869:
  5175  1F81  0828               	movf	___llmod@divisor,w
  5176  1F82  02AC               	subwf	___llmod@dividend,f
  5177  1F83  0829               	movf	___llmod@divisor+1,w
  5178  1F84  1C03               	skipc
  5179  1F85  0F29               	incfsz	___llmod@divisor+1,w
  5180  1F86  02AD               	subwf	___llmod@dividend+1,f
  5181  1F87  082A               	movf	___llmod@divisor+2,w
  5182  1F88  1C03               	skipc
  5183  1F89  0F2A               	incfsz	___llmod@divisor+2,w
  5184  1F8A  02AE               	subwf	___llmod@dividend+2,f
  5185  1F8B  082B               	movf	___llmod@divisor+3,w
  5186  1F8C  1C03               	skipc
  5187  1F8D  0F2B               	incfsz	___llmod@divisor+3,w
  5188  1F8E  02AF               	subwf	___llmod@dividend+3,f
  5189  1F8F                     l3871:
  5190  1F8F  3001               	movlw	1
  5191  1F90                     u5755:
  5192  1F90  1003               	clrc
  5193  1F91  0CAB               	rrf	___llmod@divisor+3,f
  5194  1F92  0CAA               	rrf	___llmod@divisor+2,f
  5195  1F93  0CA9               	rrf	___llmod@divisor+1,f
  5196  1F94  0CA8               	rrf	___llmod@divisor,f
  5197  1F95  3EFF               	addlw	-1
  5198  1F96  1D03               	skipz
  5199  1F97  2F90               	goto	u5755
  5200  1F98                     l3873:
  5201  1F98  3001               	movlw	1
  5202  1F99  02B0               	subwf	___llmod@counter,f
  5203  1F9A  1D03               	btfss	3,2
  5204  1F9B  2F9D               	goto	u5761
  5205  1F9C  2F9E               	goto	u5760
  5206  1F9D                     u5761:
  5207  1F9D  2F6F               	goto	l3867
  5208  1F9E                     u5760:
  5209  1F9E                     l3875:
  5210  1F9E  082F               	movf	___llmod@dividend+3,w
  5211  1F9F  00AB               	movwf	?___llmod+3
  5212  1FA0  082E               	movf	___llmod@dividend+2,w
  5213  1FA1  00AA               	movwf	?___llmod+2
  5214  1FA2  082D               	movf	___llmod@dividend+1,w
  5215  1FA3  00A9               	movwf	?___llmod+1
  5216  1FA4  082C               	movf	___llmod@dividend,w
  5217  1FA5  00A8               	movwf	?___llmod
  5218  1FA6                     l832:
  5219  1FA6  0008               	return
  5220  1FA7                     __end_of___llmod:
  5221                           
  5222                           	psect	text15
  5223  11BC                     __ptext15:	
  5224 ;; *************** function ___lldiv *****************
  5225 ;; Defined at:
  5226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  divisor         4    0[BANK0 ] unsigned long 
  5229 ;;  dividend        4    4[BANK0 ] unsigned long 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  quotient        4    4[COMMON] unsigned long 
  5232 ;;  counter         1    8[COMMON] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  4    0[BANK0 ] unsigned long 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5242 ;;      Params:         0       8       0       0       0
  5243 ;;      Locals:         5       0       0       0       0
  5244 ;;      Temps:          1       0       0       0       0
  5245 ;;      Totals:         6       8       0       0       0
  5246 ;;Total ram usage:       14 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    2
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_sprintf
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           
  5257                           ;psect for function ___lldiv
  5258  11BC                     ___lldiv:
  5259  11BC                     l3773:	
  5260                           ;incstack = 0
  5261                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5262                           
  5263  11BC  3000               	movlw	0
  5264  11BD  00F7               	movwf	___lldiv@quotient+3
  5265  11BE  3000               	movlw	0
  5266  11BF  00F6               	movwf	___lldiv@quotient+2
  5267  11C0  3000               	movlw	0
  5268  11C1  00F5               	movwf	___lldiv@quotient+1
  5269  11C2  3000               	movlw	0
  5270  11C3  00F4               	movwf	___lldiv@quotient
  5271  11C4  1283               	bcf	3,5	;RP0=0, select bank0
  5272  11C5  1303               	bcf	3,6	;RP1=0, select bank0
  5273  11C6  0823               	movf	___lldiv@divisor+3,w
  5274  11C7  0422               	iorwf	___lldiv@divisor+2,w
  5275  11C8  0421               	iorwf	___lldiv@divisor+1,w
  5276  11C9  0420               	iorwf	___lldiv@divisor,w
  5277  11CA  1903               	skipnz
  5278  11CB  29CD               	goto	u5541
  5279  11CC  29CE               	goto	u5540
  5280  11CD                     u5541:
  5281  11CD  2A1B               	goto	l3793
  5282  11CE                     u5540:
  5283  11CE                     l3775:
  5284  11CE  01F8               	clrf	___lldiv@counter
  5285  11CF  0AF8               	incf	___lldiv@counter,f
  5286  11D0  29DE               	goto	l3779
  5287  11D1                     l3777:
  5288  11D1  3001               	movlw	1
  5289  11D2  00F3               	movwf	??___lldiv
  5290  11D3                     u5555:
  5291  11D3  1003               	clrc
  5292  11D4  0DA0               	rlf	___lldiv@divisor,f
  5293  11D5  0DA1               	rlf	___lldiv@divisor+1,f
  5294  11D6  0DA2               	rlf	___lldiv@divisor+2,f
  5295  11D7  0DA3               	rlf	___lldiv@divisor+3,f
  5296  11D8  0BF3               	decfsz	??___lldiv,f
  5297  11D9  29D3               	goto	u5555
  5298  11DA  3001               	movlw	1
  5299  11DB  00F3               	movwf	??___lldiv
  5300  11DC  0873               	movf	??___lldiv,w
  5301  11DD  07F8               	addwf	___lldiv@counter,f
  5302  11DE                     l3779:
  5303  11DE  1FA3               	btfss	___lldiv@divisor+3,7
  5304  11DF  29E1               	goto	u5561
  5305  11E0  29E2               	goto	u5560
  5306  11E1                     u5561:
  5307  11E1  29D1               	goto	l3777
  5308  11E2                     u5560:
  5309  11E2                     l3781:
  5310  11E2  3001               	movlw	1
  5311  11E3  00F3               	movwf	??___lldiv
  5312  11E4                     u5575:
  5313  11E4  1003               	clrc
  5314  11E5  0DF4               	rlf	___lldiv@quotient,f
  5315  11E6  0DF5               	rlf	___lldiv@quotient+1,f
  5316  11E7  0DF6               	rlf	___lldiv@quotient+2,f
  5317  11E8  0DF7               	rlf	___lldiv@quotient+3,f
  5318  11E9  0BF3               	decfsz	??___lldiv,f
  5319  11EA  29E4               	goto	u5575
  5320  11EB                     l3783:
  5321  11EB  0823               	movf	___lldiv@divisor+3,w
  5322  11EC  0227               	subwf	___lldiv@dividend+3,w
  5323  11ED  1D03               	skipz
  5324  11EE  29F9               	goto	u5585
  5325  11EF  0822               	movf	___lldiv@divisor+2,w
  5326  11F0  0226               	subwf	___lldiv@dividend+2,w
  5327  11F1  1D03               	skipz
  5328  11F2  29F9               	goto	u5585
  5329  11F3  0821               	movf	___lldiv@divisor+1,w
  5330  11F4  0225               	subwf	___lldiv@dividend+1,w
  5331  11F5  1D03               	skipz
  5332  11F6  29F9               	goto	u5585
  5333  11F7  0820               	movf	___lldiv@divisor,w
  5334  11F8  0224               	subwf	___lldiv@dividend,w
  5335  11F9                     u5585:
  5336  11F9  1C03               	skipc
  5337  11FA  29FC               	goto	u5581
  5338  11FB  29FD               	goto	u5580
  5339  11FC                     u5581:
  5340  11FC  2A0C               	goto	l3789
  5341  11FD                     u5580:
  5342  11FD                     l3785:
  5343  11FD  0820               	movf	___lldiv@divisor,w
  5344  11FE  02A4               	subwf	___lldiv@dividend,f
  5345  11FF  0821               	movf	___lldiv@divisor+1,w
  5346  1200  1C03               	skipc
  5347  1201  0F21               	incfsz	___lldiv@divisor+1,w
  5348  1202  02A5               	subwf	___lldiv@dividend+1,f
  5349  1203  0822               	movf	___lldiv@divisor+2,w
  5350  1204  1C03               	skipc
  5351  1205  0F22               	incfsz	___lldiv@divisor+2,w
  5352  1206  02A6               	subwf	___lldiv@dividend+2,f
  5353  1207  0823               	movf	___lldiv@divisor+3,w
  5354  1208  1C03               	skipc
  5355  1209  0F23               	incfsz	___lldiv@divisor+3,w
  5356  120A  02A7               	subwf	___lldiv@dividend+3,f
  5357  120B                     l3787:
  5358  120B  1474               	bsf	___lldiv@quotient,0
  5359  120C                     l3789:
  5360  120C  3001               	movlw	1
  5361  120D                     u5595:
  5362  120D  1003               	clrc
  5363  120E  0CA3               	rrf	___lldiv@divisor+3,f
  5364  120F  0CA2               	rrf	___lldiv@divisor+2,f
  5365  1210  0CA1               	rrf	___lldiv@divisor+1,f
  5366  1211  0CA0               	rrf	___lldiv@divisor,f
  5367  1212  3EFF               	addlw	-1
  5368  1213  1D03               	skipz
  5369  1214  2A0D               	goto	u5595
  5370  1215                     l3791:
  5371  1215  3001               	movlw	1
  5372  1216  02F8               	subwf	___lldiv@counter,f
  5373  1217  1D03               	btfss	3,2
  5374  1218  2A1A               	goto	u5601
  5375  1219  2A1B               	goto	u5600
  5376  121A                     u5601:
  5377  121A  29E2               	goto	l3781
  5378  121B                     u5600:
  5379  121B                     l3793:
  5380  121B  0877               	movf	___lldiv@quotient+3,w
  5381  121C  00A3               	movwf	?___lldiv+3
  5382  121D  0876               	movf	___lldiv@quotient+2,w
  5383  121E  00A2               	movwf	?___lldiv+2
  5384  121F  0875               	movf	___lldiv@quotient+1,w
  5385  1220  00A1               	movwf	?___lldiv+1
  5386  1221  0874               	movf	___lldiv@quotient,w
  5387  1222  00A0               	movwf	?___lldiv
  5388  1223                     l497:
  5389  1223  0008               	return
  5390  1224                     __end_of___lldiv:
  5391                           
  5392                           	psect	text16
  5393  1379                     __ptext16:	
  5394 ;; *************** function ___fttol *****************
  5395 ;; Defined at:
  5396 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  f1              3   38[BANK0 ] float 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  lval            4   47[BANK0 ] unsigned long 
  5401 ;;  exp1            1   51[BANK0 ] unsigned char 
  5402 ;;  sign1           1   46[BANK0 ] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  4   38[BANK0 ] long 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         0       4       0       0       0
  5413 ;;      Locals:         0       6       0       0       0
  5414 ;;      Temps:          0       4       0       0       0
  5415 ;;      Totals:         0      14       0       0       0
  5416 ;;Total ram usage:       14 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    2
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_sprintf
  5423 ;;		_Enviar_1
  5424 ;;		_Enviar_2
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           
  5429                           ;psect for function ___fttol
  5430  1379                     ___fttol:
  5431  1379                     l2879:	
  5432                           ;incstack = 0
  5433                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5434                           
  5435  1379  1283               	bcf	3,5	;RP0=0, select bank0
  5436  137A  1303               	bcf	3,6	;RP1=0, select bank0
  5437  137B  0846               	movf	___fttol@f1,w
  5438  137C  00CA               	movwf	??___fttol
  5439  137D  0847               	movf	___fttol@f1+1,w
  5440  137E  00CB               	movwf	??___fttol+1
  5441  137F  0848               	movf	___fttol@f1+2,w
  5442  1380  00CC               	movwf	??___fttol+2
  5443  1381  1003               	clrc
  5444  1382  0D4B               	rlf	??___fttol+1,w
  5445  1383  0D4C               	rlf	??___fttol+2,w
  5446  1384  00CD               	movwf	??___fttol+3
  5447  1385  084D               	movf	??___fttol+3,w
  5448  1386  00D3               	movwf	___fttol@exp1
  5449  1387  0853               	movf	___fttol@exp1,w
  5450  1388  1D03               	btfss	3,2
  5451  1389  2B8B               	goto	u3921
  5452  138A  2B8C               	goto	u3920
  5453  138B                     u3921:
  5454  138B  2B95               	goto	l2885
  5455  138C                     u3920:
  5456  138C                     l2881:
  5457  138C  3000               	movlw	0
  5458  138D  00C9               	movwf	?___fttol+3
  5459  138E  3000               	movlw	0
  5460  138F  00C8               	movwf	?___fttol+2
  5461  1390  3000               	movlw	0
  5462  1391  00C7               	movwf	?___fttol+1
  5463  1392  3000               	movlw	0
  5464  1393  00C6               	movwf	?___fttol
  5465  1394  2C04               	goto	l791
  5466  1395                     l2885:
  5467  1395  0846               	movf	___fttol@f1,w
  5468  1396  00CA               	movwf	??___fttol
  5469  1397  0847               	movf	___fttol@f1+1,w
  5470  1398  00CB               	movwf	??___fttol+1
  5471  1399  0848               	movf	___fttol@f1+2,w
  5472  139A  00CC               	movwf	??___fttol+2
  5473  139B  3017               	movlw	23
  5474  139C                     u3935:
  5475  139C  1003               	clrc
  5476  139D  0CCC               	rrf	??___fttol+2,f
  5477  139E  0CCB               	rrf	??___fttol+1,f
  5478  139F  0CCA               	rrf	??___fttol,f
  5479  13A0                     u3930:
  5480  13A0  3EFF               	addlw	-1
  5481  13A1  1D03               	skipz
  5482  13A2  2B9C               	goto	u3935
  5483  13A3  084A               	movf	??___fttol,w
  5484  13A4  00CD               	movwf	??___fttol+3
  5485  13A5  084D               	movf	??___fttol+3,w
  5486  13A6  00CE               	movwf	___fttol@sign1
  5487  13A7                     l2887:
  5488  13A7  17C7               	bsf	___fttol@f1+1,7
  5489  13A8                     l2889:
  5490  13A8  30FF               	movlw	255
  5491  13A9  05C6               	andwf	___fttol@f1,f
  5492  13AA  30FF               	movlw	255
  5493  13AB  05C7               	andwf	___fttol@f1+1,f
  5494  13AC  3000               	movlw	0
  5495  13AD  05C8               	andwf	___fttol@f1+2,f
  5496  13AE                     l2891:
  5497  13AE  0846               	movf	___fttol@f1,w
  5498  13AF  00CF               	movwf	___fttol@lval
  5499  13B0  0847               	movf	___fttol@f1+1,w
  5500  13B1  00D0               	movwf	___fttol@lval+1
  5501  13B2  0848               	movf	___fttol@f1+2,w
  5502  13B3  00D1               	movwf	___fttol@lval+2
  5503  13B4  01D2               	clrf	___fttol@lval+3
  5504  13B5                     l2893:
  5505  13B5  308E               	movlw	142
  5506  13B6  02D3               	subwf	___fttol@exp1,f
  5507  13B7                     l2895:
  5508  13B7  1FD3               	btfss	___fttol@exp1,7
  5509  13B8  2BBA               	goto	u3941
  5510  13B9  2BBB               	goto	u3940
  5511  13BA                     u3941:
  5512  13BA  2BD5               	goto	l2905
  5513  13BB                     u3940:
  5514  13BB                     l2897:
  5515  13BB  0853               	movf	___fttol@exp1,w
  5516  13BC  3A80               	xorlw	128
  5517  13BD  3E8F               	addlw	143
  5518  13BE  1803               	skipnc
  5519  13BF  2BC1               	goto	u3951
  5520  13C0  2BC2               	goto	u3950
  5521  13C1                     u3951:
  5522  13C1  2BC3               	goto	l2903
  5523  13C2                     u3950:
  5524  13C2  2B8C               	goto	l2881
  5525  13C3                     l2903:
  5526  13C3  3001               	movlw	1
  5527  13C4                     u3965:
  5528  13C4  1003               	clrc
  5529  13C5  0CD2               	rrf	___fttol@lval+3,f
  5530  13C6  0CD1               	rrf	___fttol@lval+2,f
  5531  13C7  0CD0               	rrf	___fttol@lval+1,f
  5532  13C8  0CCF               	rrf	___fttol@lval,f
  5533  13C9  3EFF               	addlw	-1
  5534  13CA  1D03               	skipz
  5535  13CB  2BC4               	goto	u3965
  5536  13CC  3001               	movlw	1
  5537  13CD  00CA               	movwf	??___fttol
  5538  13CE  084A               	movf	??___fttol,w
  5539  13CF  07D3               	addwf	___fttol@exp1,f
  5540  13D0  1D03               	btfss	3,2
  5541  13D1  2BD3               	goto	u3971
  5542  13D2  2BD4               	goto	u3970
  5543  13D3                     u3971:
  5544  13D3  2BC3               	goto	l2903
  5545  13D4                     u3970:
  5546  13D4  2BEC               	goto	l2913
  5547  13D5                     l2905:
  5548  13D5  3018               	movlw	24
  5549  13D6  0253               	subwf	___fttol@exp1,w
  5550  13D7  1C03               	skipc
  5551  13D8  2BDA               	goto	u3981
  5552  13D9  2BDB               	goto	u3980
  5553  13DA                     u3981:
  5554  13DA  2BE7               	goto	l798
  5555  13DB                     u3980:
  5556  13DB  2B8C               	goto	l2881
  5557  13DC                     l2911:
  5558  13DC  3001               	movlw	1
  5559  13DD  00CA               	movwf	??___fttol
  5560  13DE                     u3995:
  5561  13DE  1003               	clrc
  5562  13DF  0DCF               	rlf	___fttol@lval,f
  5563  13E0  0DD0               	rlf	___fttol@lval+1,f
  5564  13E1  0DD1               	rlf	___fttol@lval+2,f
  5565  13E2  0DD2               	rlf	___fttol@lval+3,f
  5566  13E3  0BCA               	decfsz	??___fttol,f
  5567  13E4  2BDE               	goto	u3995
  5568  13E5  3001               	movlw	1
  5569  13E6  02D3               	subwf	___fttol@exp1,f
  5570  13E7                     l798:
  5571  13E7  0853               	movf	___fttol@exp1,w
  5572  13E8  1D03               	btfss	3,2
  5573  13E9  2BEB               	goto	u4001
  5574  13EA  2BEC               	goto	u4000
  5575  13EB                     u4001:
  5576  13EB  2BDC               	goto	l2911
  5577  13EC                     u4000:
  5578  13EC                     l2913:
  5579  13EC  084E               	movf	___fttol@sign1,w
  5580  13ED  1903               	btfsc	3,2
  5581  13EE  2BF0               	goto	u4011
  5582  13EF  2BF1               	goto	u4010
  5583  13F0                     u4011:
  5584  13F0  2BFC               	goto	l2917
  5585  13F1                     u4010:
  5586  13F1                     l2915:
  5587  13F1  09CF               	comf	___fttol@lval,f
  5588  13F2  09D0               	comf	___fttol@lval+1,f
  5589  13F3  09D1               	comf	___fttol@lval+2,f
  5590  13F4  09D2               	comf	___fttol@lval+3,f
  5591  13F5  0ACF               	incf	___fttol@lval,f
  5592  13F6  1903               	skipnz
  5593  13F7  0AD0               	incf	___fttol@lval+1,f
  5594  13F8  1903               	skipnz
  5595  13F9  0AD1               	incf	___fttol@lval+2,f
  5596  13FA  1903               	skipnz
  5597  13FB  0AD2               	incf	___fttol@lval+3,f
  5598  13FC                     l2917:
  5599  13FC  0852               	movf	___fttol@lval+3,w
  5600  13FD  00C9               	movwf	?___fttol+3
  5601  13FE  0851               	movf	___fttol@lval+2,w
  5602  13FF  00C8               	movwf	?___fttol+2
  5603  1400  0850               	movf	___fttol@lval+1,w
  5604  1401  00C7               	movwf	?___fttol+1
  5605  1402  084F               	movf	___fttol@lval,w
  5606  1403  00C6               	movwf	?___fttol
  5607  1404                     l791:
  5608  1404  0008               	return
  5609  1405                     __end_of___fttol:
  5610                           
  5611                           	psect	text17
  5612  1D56                     __ptext17:	
  5613 ;; *************** function ___ftsub *****************
  5614 ;; Defined at:
  5615 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  f2              3   58[BANK0 ] float 
  5618 ;;  f1              3   61[BANK0 ] float 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  3   58[BANK0 ] float 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, pclath, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5630 ;;      Params:         0       6       0       0       0
  5631 ;;      Locals:         0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0
  5633 ;;      Totals:         0       6       0       0       0
  5634 ;;Total ram usage:        6 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    4
  5637 ;; This function calls:
  5638 ;;		___ftadd
  5639 ;; This function is called by:
  5640 ;;		_sprintf
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function ___ftsub
  5646  1D56                     ___ftsub:
  5647  1D56                     l3851:	
  5648                           ;incstack = 0
  5649                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5650                           
  5651  1D56  1283               	bcf	3,5	;RP0=0, select bank0
  5652  1D57  1303               	bcf	3,6	;RP1=0, select bank0
  5653  1D58  085C               	movf	___ftsub@f2+2,w
  5654  1D59  045B               	iorwf	___ftsub@f2+1,w
  5655  1D5A  045A               	iorwf	___ftsub@f2,w
  5656  1D5B  1903               	skipnz
  5657  1D5C  2D5E               	goto	u5701
  5658  1D5D  2D5F               	goto	u5700
  5659  1D5E                     u5701:
  5660  1D5E  2D61               	goto	l3855
  5661  1D5F                     u5700:
  5662  1D5F                     l3853:
  5663  1D5F  3080               	movlw	128
  5664  1D60  06DC               	xorwf	___ftsub@f2+2,f
  5665  1D61                     l3855:
  5666  1D61  085D               	movf	___ftsub@f1,w
  5667  1D62  00CD               	movwf	___ftadd@f1
  5668  1D63  085E               	movf	___ftsub@f1+1,w
  5669  1D64  00CE               	movwf	___ftadd@f1+1
  5670  1D65  085F               	movf	___ftsub@f1+2,w
  5671  1D66  00CF               	movwf	___ftadd@f1+2
  5672  1D67  085A               	movf	___ftsub@f2,w
  5673  1D68  00D0               	movwf	___ftadd@f2
  5674  1D69  085B               	movf	___ftsub@f2+1,w
  5675  1D6A  00D1               	movwf	___ftadd@f2+1
  5676  1D6B  085C               	movf	___ftsub@f2+2,w
  5677  1D6C  00D2               	movwf	___ftadd@f2+2
  5678  1D6D  120A  158A  2155  160A  158A  	fcall	___ftadd
  5679  1D72  1283               	bcf	3,5	;RP0=0, select bank0
  5680  1D73  1303               	bcf	3,6	;RP1=0, select bank0
  5681  1D74  084D               	movf	?___ftadd,w
  5682  1D75  00DA               	movwf	?___ftsub
  5683  1D76  084E               	movf	?___ftadd+1,w
  5684  1D77  00DB               	movwf	?___ftsub+1
  5685  1D78  084F               	movf	?___ftadd+2,w
  5686  1D79  00DC               	movwf	?___ftsub+2
  5687  1D7A                     l787:
  5688  1D7A  0008               	return
  5689  1D7B                     __end_of___ftsub:
  5690                           
  5691                           	psect	text18
  5692  0955                     __ptext18:	
  5693 ;; *************** function ___ftadd *****************
  5694 ;; Defined at:
  5695 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  f1              3   45[BANK0 ] float 
  5698 ;;  f2              3   48[BANK0 ] float 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  exp1            1   57[BANK0 ] unsigned char 
  5701 ;;  exp2            1   56[BANK0 ] unsigned char 
  5702 ;;  sign            1   55[BANK0 ] unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  3   45[BANK0 ] float 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0, pclath, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5712 ;;      Params:         0       6       0       0       0
  5713 ;;      Locals:         0       3       0       0       0
  5714 ;;      Temps:          0       4       0       0       0
  5715 ;;      Totals:         0      13       0       0       0
  5716 ;;Total ram usage:       13 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    3
  5719 ;; This function calls:
  5720 ;;		___ftpack
  5721 ;; This function is called by:
  5722 ;;		_sprintf
  5723 ;;		___ftsub
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           
  5728                           ;psect for function ___ftadd
  5729  0955                     ___ftadd:
  5730  0955                     l3563:	
  5731                           ;incstack = 0
  5732                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5733                           
  5734  0955  1283               	bcf	3,5	;RP0=0, select bank0
  5735  0956  1303               	bcf	3,6	;RP1=0, select bank0
  5736  0957  084D               	movf	___ftadd@f1,w
  5737  0958  00D3               	movwf	??___ftadd
  5738  0959  084E               	movf	___ftadd@f1+1,w
  5739  095A  00D4               	movwf	??___ftadd+1
  5740  095B  084F               	movf	___ftadd@f1+2,w
  5741  095C  00D5               	movwf	??___ftadd+2
  5742  095D  1003               	clrc
  5743  095E  0D54               	rlf	??___ftadd+1,w
  5744  095F  0D55               	rlf	??___ftadd+2,w
  5745  0960  00D6               	movwf	??___ftadd+3
  5746  0961  0856               	movf	??___ftadd+3,w
  5747  0962  00D9               	movwf	___ftadd@exp1
  5748  0963  0850               	movf	___ftadd@f2,w
  5749  0964  00D3               	movwf	??___ftadd
  5750  0965  0851               	movf	___ftadd@f2+1,w
  5751  0966  00D4               	movwf	??___ftadd+1
  5752  0967  0852               	movf	___ftadd@f2+2,w
  5753  0968  00D5               	movwf	??___ftadd+2
  5754  0969  1003               	clrc
  5755  096A  0D54               	rlf	??___ftadd+1,w
  5756  096B  0D55               	rlf	??___ftadd+2,w
  5757  096C  00D6               	movwf	??___ftadd+3
  5758  096D  0856               	movf	??___ftadd+3,w
  5759  096E  00D8               	movwf	___ftadd@exp2
  5760  096F  0859               	movf	___ftadd@exp1,w
  5761  0970  1903               	btfsc	3,2
  5762  0971  2973               	goto	u5091
  5763  0972  2974               	goto	u5090
  5764  0973                     u5091:
  5765  0973  2984               	goto	l3569
  5766  0974                     u5090:
  5767  0974                     l3565:
  5768  0974  0858               	movf	___ftadd@exp2,w
  5769  0975  0259               	subwf	___ftadd@exp1,w
  5770  0976  1803               	skipnc
  5771  0977  2979               	goto	u5101
  5772  0978  297A               	goto	u5100
  5773  0979                     u5101:
  5774  0979  298B               	goto	l3573
  5775  097A                     u5100:
  5776  097A                     l3567:
  5777  097A  0858               	movf	___ftadd@exp2,w
  5778  097B  00D3               	movwf	??___ftadd
  5779  097C  0859               	movf	___ftadd@exp1,w
  5780  097D  02D3               	subwf	??___ftadd,f
  5781  097E  3019               	movlw	25
  5782  097F  0253               	subwf	??___ftadd,w
  5783  0980  1C03               	skipc
  5784  0981  2983               	goto	u5111
  5785  0982  2984               	goto	u5110
  5786  0983                     u5111:
  5787  0983  298B               	goto	l3573
  5788  0984                     u5110:
  5789  0984                     l3569:
  5790  0984  0850               	movf	___ftadd@f2,w
  5791  0985  00CD               	movwf	?___ftadd
  5792  0986  0851               	movf	___ftadd@f2+1,w
  5793  0987  00CE               	movwf	?___ftadd+1
  5794  0988  0852               	movf	___ftadd@f2+2,w
  5795  0989  00CF               	movwf	?___ftadd+2
  5796  098A  2A8A               	goto	l707
  5797  098B                     l3573:
  5798  098B  0858               	movf	___ftadd@exp2,w
  5799  098C  1903               	btfsc	3,2
  5800  098D  298F               	goto	u5121
  5801  098E  2990               	goto	u5120
  5802  098F                     u5121:
  5803  098F  29A0               	goto	l710
  5804  0990                     u5120:
  5805  0990                     l3575:
  5806  0990  0859               	movf	___ftadd@exp1,w
  5807  0991  0258               	subwf	___ftadd@exp2,w
  5808  0992  1803               	skipnc
  5809  0993  2995               	goto	u5131
  5810  0994  2996               	goto	u5130
  5811  0995                     u5131:
  5812  0995  29A1               	goto	l3579
  5813  0996                     u5130:
  5814  0996                     l3577:
  5815  0996  0859               	movf	___ftadd@exp1,w
  5816  0997  00D3               	movwf	??___ftadd
  5817  0998  0858               	movf	___ftadd@exp2,w
  5818  0999  02D3               	subwf	??___ftadd,f
  5819  099A  3019               	movlw	25
  5820  099B  0253               	subwf	??___ftadd,w
  5821  099C  1C03               	skipc
  5822  099D  299F               	goto	u5141
  5823  099E  29A0               	goto	u5140
  5824  099F                     u5141:
  5825  099F  29A1               	goto	l3579
  5826  09A0                     u5140:
  5827  09A0                     l710:
  5828  09A0  2A8A               	goto	l707
  5829  09A1                     l3579:
  5830  09A1  3006               	movlw	6
  5831  09A2  00D3               	movwf	??___ftadd
  5832  09A3  0853               	movf	??___ftadd,w
  5833  09A4  00D7               	movwf	___ftadd@sign
  5834  09A5                     l3581:
  5835  09A5  1FCF               	btfss	___ftadd@f1+2,7
  5836  09A6  29A8               	goto	u5151
  5837  09A7  29A9               	goto	u5150
  5838  09A8                     u5151:
  5839  09A8  29AA               	goto	l711
  5840  09A9                     u5150:
  5841  09A9                     l3583:
  5842  09A9  17D7               	bsf	___ftadd@sign,7
  5843  09AA                     l711:
  5844  09AA  1FD2               	btfss	___ftadd@f2+2,7
  5845  09AB  29AD               	goto	u5161
  5846  09AC  29AE               	goto	u5160
  5847  09AD                     u5161:
  5848  09AD  29AF               	goto	l712
  5849  09AE                     u5160:
  5850  09AE                     l3585:
  5851  09AE  1757               	bsf	___ftadd@sign,6
  5852  09AF                     l712:
  5853  09AF  17CE               	bsf	___ftadd@f1+1,7
  5854  09B0                     l3587:
  5855  09B0  30FF               	movlw	255
  5856  09B1  05CD               	andwf	___ftadd@f1,f
  5857  09B2  30FF               	movlw	255
  5858  09B3  05CE               	andwf	___ftadd@f1+1,f
  5859  09B4  3000               	movlw	0
  5860  09B5  05CF               	andwf	___ftadd@f1+2,f
  5861  09B6                     l3589:
  5862  09B6  17D1               	bsf	___ftadd@f2+1,7
  5863  09B7  30FF               	movlw	255
  5864  09B8  05D0               	andwf	___ftadd@f2,f
  5865  09B9  30FF               	movlw	255
  5866  09BA  05D1               	andwf	___ftadd@f2+1,f
  5867  09BB  3000               	movlw	0
  5868  09BC  05D2               	andwf	___ftadd@f2+2,f
  5869  09BD  0858               	movf	___ftadd@exp2,w
  5870  09BE  0259               	subwf	___ftadd@exp1,w
  5871  09BF  1803               	skipnc
  5872  09C0  29C2               	goto	u5171
  5873  09C1  29C3               	goto	u5170
  5874  09C2                     u5171:
  5875  09C2  29EF               	goto	l3601
  5876  09C3                     u5170:
  5877  09C3                     l3591:
  5878  09C3  3001               	movlw	1
  5879  09C4                     u5185:
  5880  09C4  1003               	clrc
  5881  09C5  0DD0               	rlf	___ftadd@f2,f
  5882  09C6  0DD1               	rlf	___ftadd@f2+1,f
  5883  09C7  0DD2               	rlf	___ftadd@f2+2,f
  5884  09C8  3EFF               	addlw	-1
  5885  09C9  1D03               	skipz
  5886  09CA  29C4               	goto	u5185
  5887  09CB  3001               	movlw	1
  5888  09CC  02D8               	subwf	___ftadd@exp2,f
  5889  09CD                     l3593:
  5890  09CD  0858               	movf	___ftadd@exp2,w
  5891  09CE  0659               	xorwf	___ftadd@exp1,w
  5892  09CF  1903               	skipnz
  5893  09D0  29D2               	goto	u5191
  5894  09D1  29D3               	goto	u5190
  5895  09D2                     u5191:
  5896  09D2  29E8               	goto	l3599
  5897  09D3                     u5190:
  5898  09D3                     l3595:
  5899  09D3  3001               	movlw	1
  5900  09D4  02D7               	subwf	___ftadd@sign,f
  5901  09D5  0857               	movf	___ftadd@sign,w
  5902  09D6  3907               	andlw	7
  5903  09D7  1D03               	btfss	3,2
  5904  09D8  29DA               	goto	u5201
  5905  09D9  29DB               	goto	u5200
  5906  09DA                     u5201:
  5907  09DA  29C3               	goto	l3591
  5908  09DB                     u5200:
  5909  09DB  29E8               	goto	l3599
  5910  09DC                     l3597:
  5911  09DC  3001               	movlw	1
  5912  09DD                     u5215:
  5913  09DD  1003               	clrc
  5914  09DE  0CCF               	rrf	___ftadd@f1+2,f
  5915  09DF  0CCE               	rrf	___ftadd@f1+1,f
  5916  09E0  0CCD               	rrf	___ftadd@f1,f
  5917  09E1  3EFF               	addlw	-1
  5918  09E2  1D03               	skipz
  5919  09E3  29DD               	goto	u5215
  5920  09E4  3001               	movlw	1
  5921  09E5  00D3               	movwf	??___ftadd
  5922  09E6  0853               	movf	??___ftadd,w
  5923  09E7  07D9               	addwf	___ftadd@exp1,f
  5924  09E8                     l3599:
  5925  09E8  0859               	movf	___ftadd@exp1,w
  5926  09E9  0658               	xorwf	___ftadd@exp2,w
  5927  09EA  1D03               	skipz
  5928  09EB  29ED               	goto	u5221
  5929  09EC  29EE               	goto	u5220
  5930  09ED                     u5221:
  5931  09ED  29DC               	goto	l3597
  5932  09EE                     u5220:
  5933  09EE  2A20               	goto	l721
  5934  09EF                     l3601:
  5935  09EF  0859               	movf	___ftadd@exp1,w
  5936  09F0  0258               	subwf	___ftadd@exp2,w
  5937  09F1  1803               	skipnc
  5938  09F2  29F4               	goto	u5231
  5939  09F3  29F5               	goto	u5230
  5940  09F4                     u5231:
  5941  09F4  2A20               	goto	l721
  5942  09F5                     u5230:
  5943  09F5                     l3603:
  5944  09F5  3001               	movlw	1
  5945  09F6                     u5245:
  5946  09F6  1003               	clrc
  5947  09F7  0DCD               	rlf	___ftadd@f1,f
  5948  09F8  0DCE               	rlf	___ftadd@f1+1,f
  5949  09F9  0DCF               	rlf	___ftadd@f1+2,f
  5950  09FA  3EFF               	addlw	-1
  5951  09FB  1D03               	skipz
  5952  09FC  29F6               	goto	u5245
  5953  09FD  3001               	movlw	1
  5954  09FE  02D9               	subwf	___ftadd@exp1,f
  5955  09FF                     l3605:
  5956  09FF  0858               	movf	___ftadd@exp2,w
  5957  0A00  0659               	xorwf	___ftadd@exp1,w
  5958  0A01  1903               	skipnz
  5959  0A02  2A04               	goto	u5251
  5960  0A03  2A05               	goto	u5250
  5961  0A04                     u5251:
  5962  0A04  2A1A               	goto	l3611
  5963  0A05                     u5250:
  5964  0A05                     l3607:
  5965  0A05  3001               	movlw	1
  5966  0A06  02D7               	subwf	___ftadd@sign,f
  5967  0A07  0857               	movf	___ftadd@sign,w
  5968  0A08  3907               	andlw	7
  5969  0A09  1D03               	btfss	3,2
  5970  0A0A  2A0C               	goto	u5261
  5971  0A0B  2A0D               	goto	u5260
  5972  0A0C                     u5261:
  5973  0A0C  29F5               	goto	l3603
  5974  0A0D                     u5260:
  5975  0A0D  2A1A               	goto	l3611
  5976  0A0E                     l3609:
  5977  0A0E  3001               	movlw	1
  5978  0A0F                     u5275:
  5979  0A0F  1003               	clrc
  5980  0A10  0CD2               	rrf	___ftadd@f2+2,f
  5981  0A11  0CD1               	rrf	___ftadd@f2+1,f
  5982  0A12  0CD0               	rrf	___ftadd@f2,f
  5983  0A13  3EFF               	addlw	-1
  5984  0A14  1D03               	skipz
  5985  0A15  2A0F               	goto	u5275
  5986  0A16  3001               	movlw	1
  5987  0A17  00D3               	movwf	??___ftadd
  5988  0A18  0853               	movf	??___ftadd,w
  5989  0A19  07D8               	addwf	___ftadd@exp2,f
  5990  0A1A                     l3611:
  5991  0A1A  0859               	movf	___ftadd@exp1,w
  5992  0A1B  0658               	xorwf	___ftadd@exp2,w
  5993  0A1C  1D03               	skipz
  5994  0A1D  2A1F               	goto	u5281
  5995  0A1E  2A20               	goto	u5280
  5996  0A1F                     u5281:
  5997  0A1F  2A0E               	goto	l3609
  5998  0A20                     u5280:
  5999  0A20                     l721:
  6000  0A20  1FD7               	btfss	___ftadd@sign,7
  6001  0A21  2A23               	goto	u5291
  6002  0A22  2A24               	goto	u5290
  6003  0A23                     u5291:
  6004  0A23  2A34               	goto	l3615
  6005  0A24                     u5290:
  6006  0A24                     l3613:
  6007  0A24  30FF               	movlw	255
  6008  0A25  06CD               	xorwf	___ftadd@f1,f
  6009  0A26  30FF               	movlw	255
  6010  0A27  06CE               	xorwf	___ftadd@f1+1,f
  6011  0A28  30FF               	movlw	255
  6012  0A29  06CF               	xorwf	___ftadd@f1+2,f
  6013  0A2A  3001               	movlw	1
  6014  0A2B  07CD               	addwf	___ftadd@f1,f
  6015  0A2C  3000               	movlw	0
  6016  0A2D  1803               	skipnc
  6017  0A2E  3001               	movlw	1
  6018  0A2F  07CE               	addwf	___ftadd@f1+1,f
  6019  0A30  3000               	movlw	0
  6020  0A31  1803               	skipnc
  6021  0A32  3001               	movlw	1
  6022  0A33  07CF               	addwf	___ftadd@f1+2,f
  6023  0A34                     l3615:
  6024  0A34  1F57               	btfss	___ftadd@sign,6
  6025  0A35  2A37               	goto	u5301
  6026  0A36  2A38               	goto	u5300
  6027  0A37                     u5301:
  6028  0A37  2A48               	goto	l3619
  6029  0A38                     u5300:
  6030  0A38                     l3617:
  6031  0A38  30FF               	movlw	255
  6032  0A39  06D0               	xorwf	___ftadd@f2,f
  6033  0A3A  30FF               	movlw	255
  6034  0A3B  06D1               	xorwf	___ftadd@f2+1,f
  6035  0A3C  30FF               	movlw	255
  6036  0A3D  06D2               	xorwf	___ftadd@f2+2,f
  6037  0A3E  3001               	movlw	1
  6038  0A3F  07D0               	addwf	___ftadd@f2,f
  6039  0A40  3000               	movlw	0
  6040  0A41  1803               	skipnc
  6041  0A42  3001               	movlw	1
  6042  0A43  07D1               	addwf	___ftadd@f2+1,f
  6043  0A44  3000               	movlw	0
  6044  0A45  1803               	skipnc
  6045  0A46  3001               	movlw	1
  6046  0A47  07D2               	addwf	___ftadd@f2+2,f
  6047  0A48                     l3619:
  6048  0A48  01D7               	clrf	___ftadd@sign
  6049  0A49                     l3621:
  6050  0A49  084D               	movf	___ftadd@f1,w
  6051  0A4A  07D0               	addwf	___ftadd@f2,f
  6052  0A4B  084E               	movf	___ftadd@f1+1,w
  6053  0A4C  1103               	clrz
  6054  0A4D  1803               	skipnc
  6055  0A4E  0A4E               	incf	___ftadd@f1+1,w
  6056  0A4F  1903               	skipnz
  6057  0A50  2A52               	goto	u5311
  6058  0A51  07D1               	addwf	___ftadd@f2+1,f
  6059  0A52                     u5311:
  6060  0A52  084F               	movf	___ftadd@f1+2,w
  6061  0A53  1103               	clrz
  6062  0A54  1803               	skipnc
  6063  0A55  0A4F               	incf	___ftadd@f1+2,w
  6064  0A56  1903               	skipnz
  6065  0A57  2A59               	goto	u5312
  6066  0A58  07D2               	addwf	___ftadd@f2+2,f
  6067  0A59                     u5312:
  6068  0A59                     l3623:
  6069  0A59  1FD2               	btfss	___ftadd@f2+2,7
  6070  0A5A  2A5C               	goto	u5321
  6071  0A5B  2A5D               	goto	u5320
  6072  0A5C                     u5321:
  6073  0A5C  2A6F               	goto	l3629
  6074  0A5D                     u5320:
  6075  0A5D                     l3625:
  6076  0A5D  30FF               	movlw	255
  6077  0A5E  06D0               	xorwf	___ftadd@f2,f
  6078  0A5F  30FF               	movlw	255
  6079  0A60  06D1               	xorwf	___ftadd@f2+1,f
  6080  0A61  30FF               	movlw	255
  6081  0A62  06D2               	xorwf	___ftadd@f2+2,f
  6082  0A63  3001               	movlw	1
  6083  0A64  07D0               	addwf	___ftadd@f2,f
  6084  0A65  3000               	movlw	0
  6085  0A66  1803               	skipnc
  6086  0A67  3001               	movlw	1
  6087  0A68  07D1               	addwf	___ftadd@f2+1,f
  6088  0A69  3000               	movlw	0
  6089  0A6A  1803               	skipnc
  6090  0A6B  3001               	movlw	1
  6091  0A6C  07D2               	addwf	___ftadd@f2+2,f
  6092  0A6D                     l3627:
  6093  0A6D  01D7               	clrf	___ftadd@sign
  6094  0A6E  0AD7               	incf	___ftadd@sign,f
  6095  0A6F                     l3629:
  6096  0A6F  0850               	movf	___ftadd@f2,w
  6097  0A70  00F3               	movwf	___ftpack@arg
  6098  0A71  0851               	movf	___ftadd@f2+1,w
  6099  0A72  00F4               	movwf	___ftpack@arg+1
  6100  0A73  0852               	movf	___ftadd@f2+2,w
  6101  0A74  00F5               	movwf	___ftpack@arg+2
  6102  0A75  0859               	movf	___ftadd@exp1,w
  6103  0A76  00D3               	movwf	??___ftadd
  6104  0A77  0853               	movf	??___ftadd,w
  6105  0A78  00F6               	movwf	___ftpack@exp
  6106  0A79  0857               	movf	___ftadd@sign,w
  6107  0A7A  00D4               	movwf	??___ftadd+1
  6108  0A7B  0854               	movf	??___ftadd+1,w
  6109  0A7C  00F7               	movwf	___ftpack@sign
  6110  0A7D  160A  118A  22F7  120A  158A  	fcall	___ftpack
  6111  0A82  0873               	movf	?___ftpack,w
  6112  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  6113  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  6114  0A85  00CD               	movwf	?___ftadd
  6115  0A86  0874               	movf	?___ftpack+1,w
  6116  0A87  00CE               	movwf	?___ftadd+1
  6117  0A88  0875               	movf	?___ftpack+2,w
  6118  0A89  00CF               	movwf	?___ftadd+2
  6119  0A8A                     l707:
  6120  0A8A  0008               	return
  6121  0A8B                     __end_of___ftadd:
  6122                           
  6123                           	psect	text19
  6124  1CD7                     __ptext19:	
  6125 ;; *************** function ___ftneg *****************
  6126 ;; Defined at:
  6127 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  f1              3    3[COMMON] float 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  3    3[COMMON] float 
  6134 ;; Registers used:
  6135 ;;		wreg
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6141 ;;      Params:         3       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0
  6144 ;;      Totals:         3       0       0       0       0
  6145 ;;Total ram usage:        3 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    2
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_sprintf
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           
  6156                           ;psect for function ___ftneg
  6157  1CD7                     ___ftneg:
  6158  1CD7                     l2863:	
  6159                           ;incstack = 0
  6160                           ; Regs used in ___ftneg: [wreg]
  6161                           
  6162  1CD7  0875               	movf	___ftneg@f1+2,w
  6163  1CD8  0474               	iorwf	___ftneg@f1+1,w
  6164  1CD9  0473               	iorwf	___ftneg@f1,w
  6165  1CDA  1903               	skipnz
  6166  1CDB  2CDD               	goto	u3901
  6167  1CDC  2CDE               	goto	u3900
  6168  1CDD                     u3901:
  6169  1CDD  2CE0               	goto	l2867
  6170  1CDE                     u3900:
  6171  1CDE                     l2865:
  6172  1CDE  3080               	movlw	128
  6173  1CDF  06F5               	xorwf	___ftneg@f1+2,f
  6174  1CE0                     l2867:
  6175  1CE0                     l781:
  6176  1CE0  0008               	return
  6177  1CE1                     __end_of___ftneg:
  6178                           
  6179                           	psect	text20
  6180  1E51                     __ptext20:	
  6181 ;; *************** function ___ftge *****************
  6182 ;; Defined at:
  6183 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  ff1             3    3[COMMON] float 
  6186 ;;  ff2             3    6[COMMON] float 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;		None               void
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6198 ;;      Params:         6       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0
  6201 ;;      Totals:         6       0       0       0       0
  6202 ;;Total ram usage:        6 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    2
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_sprintf
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           
  6213                           ;psect for function ___ftge
  6214  1E51                     ___ftge:
  6215  1E51                     l2843:	
  6216                           ;incstack = 0
  6217                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6218                           
  6219  1E51  1FF5               	btfss	___ftge@ff1+2,7
  6220  1E52  2E54               	goto	u3871
  6221  1E53  2E55               	goto	u3870
  6222  1E54                     u3871:
  6223  1E54  2E62               	goto	l2847
  6224  1E55                     u3870:
  6225  1E55                     l2845:
  6226  1E55  0873               	movf	___ftge@ff1,w
  6227  1E56  3C00               	sublw	0
  6228  1E57  00F3               	movwf	___ftge@ff1
  6229  1E58  0874               	movf	___ftge@ff1+1,w
  6230  1E59  1C03               	skipc
  6231  1E5A  0F74               	incfsz	___ftge@ff1+1,w
  6232  1E5B  3C00               	sublw	0
  6233  1E5C  00F4               	movwf	___ftge@ff1+1
  6234  1E5D  0875               	movf	___ftge@ff1+2,w
  6235  1E5E  1C03               	skipc
  6236  1E5F  0F75               	incfsz	___ftge@ff1+2,w
  6237  1E60  3C80               	sublw	128
  6238  1E61  00F5               	movwf	___ftge@ff1+2
  6239  1E62                     l2847:
  6240  1E62  1FF8               	btfss	___ftge@ff2+2,7
  6241  1E63  2E65               	goto	u3881
  6242  1E64  2E66               	goto	u3880
  6243  1E65                     u3881:
  6244  1E65  2E73               	goto	l2851
  6245  1E66                     u3880:
  6246  1E66                     l2849:
  6247  1E66  0876               	movf	___ftge@ff2,w
  6248  1E67  3C00               	sublw	0
  6249  1E68  00F6               	movwf	___ftge@ff2
  6250  1E69  0877               	movf	___ftge@ff2+1,w
  6251  1E6A  1C03               	skipc
  6252  1E6B  0F77               	incfsz	___ftge@ff2+1,w
  6253  1E6C  3C00               	sublw	0
  6254  1E6D  00F7               	movwf	___ftge@ff2+1
  6255  1E6E  0878               	movf	___ftge@ff2+2,w
  6256  1E6F  1C03               	skipc
  6257  1E70  0F78               	incfsz	___ftge@ff2+2,w
  6258  1E71  3C80               	sublw	128
  6259  1E72  00F8               	movwf	___ftge@ff2+2
  6260  1E73                     l2851:
  6261  1E73  3080               	movlw	128
  6262  1E74  06F5               	xorwf	___ftge@ff1+2,f
  6263  1E75                     l2853:
  6264  1E75  3080               	movlw	128
  6265  1E76  06F8               	xorwf	___ftge@ff2+2,f
  6266  1E77                     l2855:
  6267  1E77  0878               	movf	___ftge@ff2+2,w
  6268  1E78  0275               	subwf	___ftge@ff1+2,w
  6269  1E79  1D03               	skipz
  6270  1E7A  2E81               	goto	u3895
  6271  1E7B  0877               	movf	___ftge@ff2+1,w
  6272  1E7C  0274               	subwf	___ftge@ff1+1,w
  6273  1E7D  1D03               	skipz
  6274  1E7E  2E81               	goto	u3895
  6275  1E7F  0876               	movf	___ftge@ff2,w
  6276  1E80  0273               	subwf	___ftge@ff1,w
  6277  1E81                     u3895:
  6278  1E81  1803               	skipnc
  6279  1E82  2E84               	goto	u3891
  6280  1E83  2E85               	goto	u3890
  6281  1E84                     u3891:
  6282  1E84  2E87               	goto	l2859
  6283  1E85                     u3890:
  6284  1E85                     l2857:
  6285  1E85  1003               	clrc
  6286  1E86  2E88               	goto	l764
  6287  1E87                     l2859:
  6288  1E87  1403               	setc
  6289  1E88                     l764:
  6290  1E88  0008               	return
  6291  1E89                     __end_of___ftge:
  6292                           
  6293                           	psect	text21
  6294  1CCD                     __ptext21:	
  6295 ;; *************** function _config_txsta *****************
  6296 ;; Defined at:
  6297 ;;		line 9 in file "USART.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		None
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6311 ;;      Params:         0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0
  6314 ;;      Totals:         0       0       0       0       0
  6315 ;;Total ram usage:        0 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    2
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_main
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _config_txsta
  6327  1CCD                     _config_txsta:
  6328  1CCD                     l2967:	
  6329                           ;incstack = 0
  6330                           ; Regs used in _config_txsta: []
  6331                           
  6332                           
  6333                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  6334  1CCD  1683               	bsf	3,5	;RP0=1, select bank1
  6335  1CCE  1303               	bcf	3,6	;RP1=0, select bank1
  6336  1CCF  1398               	bcf	24,7	;volatile
  6337                           
  6338                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  6339  1CD0  1318               	bcf	24,6	;volatile
  6340                           
  6341                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  6342  1CD1  1698               	bsf	24,5	;volatile
  6343                           
  6344                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  6345  1CD2  1218               	bcf	24,4	;volatile
  6346                           
  6347                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  6348  1CD3  1118               	bcf	24,2	;volatile
  6349                           
  6350                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  6351  1CD4  1098               	bcf	24,1	;volatile
  6352                           
  6353                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  6354  1CD5  1018               	bcf	24,0	;volatile
  6355  1CD6                     l235:
  6356  1CD6  0008               	return
  6357  1CD7                     __end_of_config_txsta:
  6358                           
  6359                           	psect	text22
  6360  1CBD                     __ptext22:	
  6361 ;; *************** function _config_rcsta *****************
  6362 ;; Defined at:
  6363 ;;		line 19 in file "USART.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		status,2
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6377 ;;      Params:         0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0
  6380 ;;      Totals:         0       0       0       0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    2
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _config_rcsta
  6393  1CBD                     _config_rcsta:
  6394  1CBD                     l2969:	
  6395                           ;incstack = 0
  6396                           ; Regs used in _config_rcsta: [status,2]
  6397                           
  6398                           
  6399                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  6400  1CBD  1283               	bcf	3,5	;RP0=0, select bank0
  6401  1CBE  1303               	bcf	3,6	;RP1=0, select bank0
  6402  1CBF  1798               	bsf	24,7	;volatile
  6403                           
  6404                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  6405  1CC0  1318               	bcf	24,6	;volatile
  6406                           
  6407                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  6408  1CC1  1298               	bcf	24,5	;volatile
  6409                           
  6410                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  6411  1CC2  1618               	bsf	24,4	;volatile
  6412  1CC3                     l2971:
  6413                           
  6414                           ;USART.c: 24:     RCREG = 0;
  6415  1CC3  019A               	clrf	26	;volatile
  6416  1CC4                     l238:
  6417  1CC4  0008               	return
  6418  1CC5                     __end_of_config_rcsta:
  6419                           
  6420                           	psect	text23
  6421  1CFA                     __ptext23:	
  6422 ;; *************** function _config_P *****************
  6423 ;; Defined at:
  6424 ;;		line 116 in file "lab03.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6438 ;;      Params:         0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0
  6441 ;;      Totals:         0       0       0       0       0
  6442 ;;Total ram usage:        0 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    2
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_main
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function _config_P
  6454  1CFA                     _config_P:
  6455  1CFA                     l2957:	
  6456                           ;incstack = 0
  6457                           ; Regs used in _config_P: [wreg+status,2]
  6458                           
  6459                           
  6460                           ;lab03.c: 118:     TRISD = 0;
  6461  1CFA  1683               	bsf	3,5	;RP0=1, select bank1
  6462  1CFB  1303               	bcf	3,6	;RP1=0, select bank1
  6463  1CFC  0188               	clrf	8	;volatile
  6464                           
  6465                           ;lab03.c: 119:     TRISE = 0;
  6466  1CFD  0189               	clrf	9	;volatile
  6467  1CFE                     l2959:
  6468                           
  6469                           ;lab03.c: 120:     TRISA = 3;
  6470  1CFE  3003               	movlw	3
  6471  1CFF  0085               	movwf	5	;volatile
  6472  1D00                     l2961:
  6473                           
  6474                           ;lab03.c: 123:     ANSEL = 3;
  6475  1D00  3003               	movlw	3
  6476  1D01  1683               	bsf	3,5	;RP0=1, select bank3
  6477  1D02  1703               	bsf	3,6	;RP1=1, select bank3
  6478  1D03  0088               	movwf	8	;volatile
  6479                           
  6480                           ;lab03.c: 124:     ANSELH = 0;
  6481  1D04  0189               	clrf	9	;volatile
  6482                           
  6483                           ;lab03.c: 126:     PORTD = 0;
  6484  1D05  1283               	bcf	3,5	;RP0=0, select bank0
  6485  1D06  1303               	bcf	3,6	;RP1=0, select bank0
  6486  1D07  0188               	clrf	8	;volatile
  6487                           
  6488                           ;lab03.c: 127:     PORTE = 0;
  6489  1D08  0189               	clrf	9	;volatile
  6490                           
  6491                           ;lab03.c: 128:     PORTC = 0;
  6492  1D09  0187               	clrf	7	;volatile
  6493  1D0A                     l97:
  6494  1D0A  0008               	return
  6495  1D0B                     __end_of_config_P:
  6496                           
  6497                           	psect	text24
  6498  1CAC                     __ptext24:	
  6499 ;; *************** function _config_ADC *****************
  6500 ;; Defined at:
  6501 ;;		line 6 in file "ADC.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		status,2
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6515 ;;      Params:         0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    2
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_main
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           
  6530                           ;psect for function _config_ADC
  6531  1CAC                     _config_ADC:
  6532  1CAC                     l2963:	
  6533                           ;incstack = 0
  6534                           ; Regs used in _config_ADC: [status,2]
  6535                           
  6536                           
  6537                           ;ADC.c: 7:     ADCON1 = 0b00000000;
  6538  1CAC  1683               	bsf	3,5	;RP0=1, select bank1
  6539  1CAD  1303               	bcf	3,6	;RP1=0, select bank1
  6540  1CAE  019F               	clrf	31	;volatile
  6541  1CAF                     l193:
  6542  1CAF  0008               	return
  6543  1CB0                     __end_of_config_ADC:
  6544                           
  6545                           	psect	text25
  6546  1CB0                     __ptext25:	
  6547 ;; *************** function __baudios *****************
  6548 ;; Defined at:
  6549 ;;		line 5 in file "USART.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;		None
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      void 
  6556 ;; Registers used:
  6557 ;;		wreg
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6563 ;;      Params:         0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0
  6566 ;;      Totals:         0       0       0       0       0
  6567 ;;Total ram usage:        0 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    2
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_main
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           
  6578                           ;psect for function __baudios
  6579  1CB0                     __baudios:
  6580  1CB0                     l2965:	
  6581                           ;incstack = 0
  6582                           ; Regs used in __baudios: [wreg]
  6583                           
  6584                           
  6585                           ;USART.c: 6:     SPBRG = 12;
  6586  1CB0  300C               	movlw	12
  6587  1CB1  1683               	bsf	3,5	;RP0=1, select bank1
  6588  1CB2  1303               	bcf	3,6	;RP1=0, select bank1
  6589  1CB3  0099               	movwf	25	;volatile
  6590  1CB4                     l232:
  6591  1CB4  0008               	return
  6592  1CB5                     __end_of__baudios:
  6593                           
  6594                           	psect	text26
  6595  1DC6                     __ptext26:	
  6596 ;; *************** function _Write_USART_String *****************
  6597 ;; Defined at:
  6598 ;;		line 31 in file "USART.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  a               2    4[COMMON] PTR unsigned char 
  6601 ;;		 -> STR_3(17), data(16), 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  i               1    7[COMMON] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6613 ;;      Params:         2       0       0       0       0
  6614 ;;      Locals:         1       0       0       0       0
  6615 ;;      Temps:          1       0       0       0       0
  6616 ;;      Totals:         4       0       0       0       0
  6617 ;;Total ram usage:        4 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    3
  6620 ;; This function calls:
  6621 ;;		_Write_USART
  6622 ;; This function is called by:
  6623 ;;		_main
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _Write_USART_String
  6629  1DC6                     _Write_USART_String:
  6630  1DC6                     l3343:	
  6631                           ;incstack = 0
  6632                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6633                           
  6634                           
  6635                           ;USART.c: 32:     uint8_t i;;USART.c: 33:     for(i=0;a[i]!='\0';i++){
  6636  1DC6  01F7               	clrf	Write_USART_String@i
  6637  1DC7  2DDD               	goto	l3349
  6638  1DC8                     l3345:
  6639                           
  6640                           ;USART.c: 34:         Write_USART(a[i]);
  6641  1DC8  0877               	movf	Write_USART_String@i,w
  6642  1DC9  0774               	addwf	Write_USART_String@a,w
  6643  1DCA  0084               	movwf	4
  6644  1DCB  0875               	movf	Write_USART_String@a+1,w
  6645  1DCC  1803               	skipnc
  6646  1DCD  0A75               	incf	Write_USART_String@a+1,w
  6647  1DCE  00FF               	movwf	btemp+1
  6648  1DCF  160A  118A  2000  160A  158A  	fcall	stringtab
  6649  1DD4  160A  158A  24E1  160A  158A  	fcall	_Write_USART
  6650  1DD9                     l3347:
  6651                           
  6652                           ;USART.c: 35:     }
  6653  1DD9  3001               	movlw	1
  6654  1DDA  00F6               	movwf	??_Write_USART_String
  6655  1DDB  0876               	movf	??_Write_USART_String,w
  6656  1DDC  07F7               	addwf	Write_USART_String@i,f
  6657  1DDD                     l3349:
  6658  1DDD  0877               	movf	Write_USART_String@i,w
  6659  1DDE  0774               	addwf	Write_USART_String@a,w
  6660  1DDF  0084               	movwf	4
  6661  1DE0  0875               	movf	Write_USART_String@a+1,w
  6662  1DE1  1803               	skipnc
  6663  1DE2  0A75               	incf	Write_USART_String@a+1,w
  6664  1DE3  1283               	bcf	3,5	;RP0=0, select bank0
  6665  1DE4  1303               	bcf	3,6	;RP1=0, select bank0
  6666  1DE5  00FF               	movwf	btemp+1
  6667  1DE6  160A  118A  2000  160A  158A  	fcall	stringtab
  6668  1DEB  3A00               	xorlw	0
  6669  1DEC  1D03               	skipz
  6670  1DED  2DEF               	goto	u4721
  6671  1DEE  2DF0               	goto	u4720
  6672  1DEF                     u4721:
  6673  1DEF  2DC8               	goto	l3345
  6674  1DF0                     u4720:
  6675  1DF0                     l250:
  6676  1DF0  0008               	return
  6677  1DF1                     __end_of_Write_USART_String:
  6678                           
  6679                           	psect	text27
  6680  1CE1                     __ptext27:	
  6681 ;; *************** function _Write_USART *****************
  6682 ;; Defined at:
  6683 ;;		line 27 in file "USART.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  a               1    wreg     unsigned char 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  a               1    3[COMMON] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6697 ;;      Params:         0       0       0       0       0
  6698 ;;      Locals:         1       0       0       0       0
  6699 ;;      Temps:          0       0       0       0       0
  6700 ;;      Totals:         1       0       0       0       0
  6701 ;;Total ram usage:        1 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    2
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;;		_Write_USART_String
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _Write_USART
  6714  1CE1                     _Write_USART:
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _Write_USART: [wreg]
  6718                           ;Write_USART@a stored from wreg
  6719  1CE1  00F3               	movwf	Write_USART@a
  6720  1CE2                     l2531:
  6721  1CE2                     l241:	
  6722                           ;USART.c: 28:     while(!TRMT);
  6723                           
  6724  1CE2  1683               	bsf	3,5	;RP0=1, select bank1
  6725  1CE3  1303               	bcf	3,6	;RP1=0, select bank1
  6726  1CE4  1C98               	btfss	24,1	;volatile
  6727  1CE5  2CE7               	goto	u3321
  6728  1CE6  2CE8               	goto	u3320
  6729  1CE7                     u3321:
  6730  1CE7  2CE2               	goto	l241
  6731  1CE8                     u3320:
  6732  1CE8                     l2533:
  6733                           
  6734                           ;USART.c: 29:     TXREG=a;
  6735  1CE8  0873               	movf	Write_USART@a,w
  6736  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
  6737  1CEA  1303               	bcf	3,6	;RP1=0, select bank0
  6738  1CEB  0099               	movwf	25	;volatile
  6739  1CEC                     l244:
  6740  1CEC  0008               	return
  6741  1CED                     __end_of_Write_USART:
  6742                           
  6743                           	psect	text28
  6744  1EC7                     __ptext28:	
  6745 ;; *************** function _Lcd_Write_String *****************
  6746 ;; Defined at:
  6747 ;;		line 81 in file "LCD.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  a               2    6[COMMON] PTR unsigned char 
  6750 ;;		 -> data(16), STR_1(16), 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  i               2    8[COMMON] int 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6762 ;;      Params:         2       0       0       0       0
  6763 ;;      Locals:         2       0       0       0       0
  6764 ;;      Temps:          0       3       0       0       0
  6765 ;;      Totals:         4       3       0       0       0
  6766 ;;Total ram usage:        7 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    4
  6769 ;; This function calls:
  6770 ;;		_LCD_CMD
  6771 ;; This function is called by:
  6772 ;;		_main
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           
  6777                           ;psect for function _Lcd_Write_String
  6778  1EC7                     _Lcd_Write_String:
  6779  1EC7                     l3927:	
  6780                           ;incstack = 0
  6781                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6782                           
  6783                           
  6784                           ;LCD.c: 84:  int i;;LCD.c: 85:  for(i=0;a[i]!='\0';i++)
  6785  1EC7  01F8               	clrf	Lcd_Write_String@i
  6786  1EC8  01F9               	clrf	Lcd_Write_String@i+1
  6787  1EC9  2EEC               	goto	l3933
  6788  1ECA                     l3929:
  6789                           
  6790                           ;LCD.c: 86:     LCD_CMD(a[i]);
  6791  1ECA  0878               	movf	Lcd_Write_String@i,w
  6792  1ECB  0776               	addwf	Lcd_Write_String@a,w
  6793  1ECC  00A1               	movwf	??_Lcd_Write_String+1
  6794  1ECD  0877               	movf	Lcd_Write_String@a+1,w
  6795  1ECE  00A0               	movwf	??_Lcd_Write_String
  6796  1ECF  1803               	skipnc
  6797  1ED0  0AA0               	incf	??_Lcd_Write_String,f
  6798  1ED1  1FF8               	btfss	Lcd_Write_String@i,7
  6799  1ED2  2ED4               	goto	u5810
  6800  1ED3  03A0               	decf	??_Lcd_Write_String,f
  6801  1ED4                     u5810:
  6802  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  6803  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  6804  1ED6  0820               	movf	??_Lcd_Write_String,w
  6805  1ED7  00A2               	movwf	??_Lcd_Write_String+2
  6806  1ED8  0822               	movf	??_Lcd_Write_String+2,w
  6807  1ED9  00FF               	movwf	btemp+1
  6808  1EDA  0821               	movf	??_Lcd_Write_String+1,w
  6809  1EDB  0084               	movwf	4
  6810  1EDC  160A  118A  2000  160A  158A  	fcall	stringtab
  6811  1EE1  120A  118A  27E1  160A  158A  	fcall	_LCD_CMD
  6812  1EE6                     l3931:
  6813  1EE6  3001               	movlw	1
  6814  1EE7  07F8               	addwf	Lcd_Write_String@i,f
  6815  1EE8  1803               	skipnc
  6816  1EE9  0AF9               	incf	Lcd_Write_String@i+1,f
  6817  1EEA  3000               	movlw	0
  6818  1EEB  07F9               	addwf	Lcd_Write_String@i+1,f
  6819  1EEC                     l3933:
  6820  1EEC  0878               	movf	Lcd_Write_String@i,w
  6821  1EED  0776               	addwf	Lcd_Write_String@a,w
  6822  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
  6823  1EEF  1303               	bcf	3,6	;RP1=0, select bank0
  6824  1EF0  00A1               	movwf	??_Lcd_Write_String+1
  6825  1EF1  0877               	movf	Lcd_Write_String@a+1,w
  6826  1EF2  00A0               	movwf	??_Lcd_Write_String
  6827  1EF3  1803               	skipnc
  6828  1EF4  0AA0               	incf	??_Lcd_Write_String,f
  6829  1EF5  1FF8               	btfss	Lcd_Write_String@i,7
  6830  1EF6  2EF8               	goto	u5820
  6831  1EF7  03A0               	decf	??_Lcd_Write_String,f
  6832  1EF8                     u5820:
  6833  1EF8  1283               	bcf	3,5	;RP0=0, select bank0
  6834  1EF9  1303               	bcf	3,6	;RP1=0, select bank0
  6835  1EFA  0820               	movf	??_Lcd_Write_String,w
  6836  1EFB  00A2               	movwf	??_Lcd_Write_String+2
  6837  1EFC  0822               	movf	??_Lcd_Write_String+2,w
  6838  1EFD  00FF               	movwf	btemp+1
  6839  1EFE  0821               	movf	??_Lcd_Write_String+1,w
  6840  1EFF  0084               	movwf	4
  6841  1F00  160A  118A  2000  160A  158A  	fcall	stringtab
  6842  1F05  3A00               	xorlw	0
  6843  1F06  1D03               	skipz
  6844  1F07  2F09               	goto	u5831
  6845  1F08  2F0A               	goto	u5830
  6846  1F09                     u5831:
  6847  1F09  2ECA               	goto	l3929
  6848  1F0A                     u5830:
  6849  1F0A                     l186:
  6850  1F0A  0008               	return
  6851  1F0B                     __end_of_Lcd_Write_String:
  6852                           
  6853                           	psect	text29
  6854  07E1                     __ptext29:	
  6855 ;; *************** function _LCD_CMD *****************
  6856 ;; Defined at:
  6857 ;;		line 21 in file "LCD.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  a               1    wreg     unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  a               1    5[COMMON] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, pclath, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6871 ;;      Params:         0       0       0       0       0
  6872 ;;      Locals:         1       0       0       0       0
  6873 ;;      Temps:          1       0       0       0       0
  6874 ;;      Totals:         2       0       0       0       0
  6875 ;;Total ram usage:        2 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    3
  6878 ;; This function calls:
  6879 ;;		_Puerto
  6880 ;; This function is called by:
  6881 ;;		_Lcd_Write_String
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function _LCD_CMD
  6887  07E1                     _LCD_CMD:
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  6891                           ;LCD_CMD@a stored from wreg
  6892  07E1  00F5               	movwf	LCD_CMD@a
  6893  07E2                     l3683:
  6894                           
  6895                           ;LCD.c: 22:     RE0 = 1;
  6896  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  6897  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  6898  07E4  1409               	bsf	9,0	;volatile
  6899  07E5                     l3685:
  6900                           
  6901                           ;LCD.c: 23:     Puerto(a);
  6902  07E5  0875               	movf	LCD_CMD@a,w
  6903  07E6  160A  158A  2689  120A  118A  	fcall	_Puerto
  6904  07EB                     l3687:
  6905                           
  6906                           ;LCD.c: 24:     RE1 = 1;
  6907  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  6908  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  6909  07ED  1489               	bsf	9,1	;volatile
  6910  07EE                     l3689:
  6911                           
  6912                           ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6913  07EE  3003               	movlw	3
  6914  07EF  00F4               	movwf	??_LCD_CMD
  6915  07F0                     u6447:
  6916  07F0  0BF4               	decfsz	??_LCD_CMD,f
  6917  07F1  2FF0               	goto	u6447
  6918  07F2                     l3691:
  6919                           
  6920                           ;LCD.c: 26:     RE1 = 0;
  6921  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  6922  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  6923  07F4  1089               	bcf	9,1	;volatile
  6924  07F5                     l3693:
  6925                           
  6926                           ;LCD.c: 27:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6927  07F5  3003               	movlw	3
  6928  07F6  00F4               	movwf	??_LCD_CMD
  6929  07F7                     u6457:
  6930  07F7  0BF4               	decfsz	??_LCD_CMD,f
  6931  07F8  2FF7               	goto	u6457
  6932  07F9                     l3695:
  6933                           
  6934                           ;LCD.c: 28:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  6935  07F9  3021               	movlw	33
  6936  07FA  00F4               	movwf	??_LCD_CMD
  6937  07FB                     u6467:
  6938  07FB  0BF4               	decfsz	??_LCD_CMD,f
  6939  07FC  2FFB               	goto	u6467
  6940  07FD                     l165:
  6941  07FD  0008               	return
  6942  07FE                     __end_of_LCD_CMD:
  6943                           
  6944                           	psect	text30
  6945  1DA0                     __ptext30:	
  6946 ;; *************** function _Lcd_Set_Cursor *****************
  6947 ;; Defined at:
  6948 ;;		line 67 in file "LCD.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  x               1    wreg     unsigned char 
  6951 ;;  y               1    7[COMMON] unsigned char 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  x               1    0[BANK0 ] unsigned char 
  6954 ;;  a               1    1[BANK0 ] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      void 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0, pclath, cstack
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6964 ;;      Params:         1       0       0       0       0
  6965 ;;      Locals:         0       2       0       0       0
  6966 ;;      Temps:          1       0       0       0       0
  6967 ;;      Totals:         2       2       0       0       0
  6968 ;;Total ram usage:        4 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    4
  6971 ;; This function calls:
  6972 ;;		_datosLCD
  6973 ;; This function is called by:
  6974 ;;		_main
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _Lcd_Set_Cursor
  6980  1DA0                     _Lcd_Set_Cursor:
  6981                           
  6982                           ;incstack = 0
  6983                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6984                           ;Lcd_Set_Cursor@x stored from wreg
  6985  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  6986  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  6987  1DA2  00A0               	movwf	Lcd_Set_Cursor@x
  6988  1DA3                     l3915:
  6989                           
  6990                           ;LCD.c: 68:  uint8_t a;;LCD.c: 69:  if(x == 1){
  6991  1DA3  0320               	decf	Lcd_Set_Cursor@x,w
  6992  1DA4  1D03               	btfss	3,2
  6993  1DA5  2DA7               	goto	u5791
  6994  1DA6  2DA8               	goto	u5790
  6995  1DA7                     u5791:
  6996  1DA7  2DB4               	goto	l3921
  6997  1DA8                     u5790:
  6998  1DA8                     l3917:
  6999                           
  7000                           ;LCD.c: 70:    a = 0x80 + y;
  7001  1DA8  0877               	movf	Lcd_Set_Cursor@y,w
  7002  1DA9  3E80               	addlw	128
  7003  1DAA  00F8               	movwf	??_Lcd_Set_Cursor
  7004  1DAB  0878               	movf	??_Lcd_Set_Cursor,w
  7005  1DAC  00A1               	movwf	Lcd_Set_Cursor@a
  7006  1DAD                     l3919:
  7007                           
  7008                           ;LCD.c: 72:   datosLCD(a);
  7009  1DAD  0821               	movf	Lcd_Set_Cursor@a,w
  7010  1DAE  160A  158A  2534  160A  158A  	fcall	_datosLCD
  7011                           
  7012                           ;LCD.c: 73:     }
  7013  1DB3  2DC5               	goto	l180
  7014  1DB4                     l3921:
  7015  1DB4  3002               	movlw	2
  7016  1DB5  0620               	xorwf	Lcd_Set_Cursor@x,w
  7017  1DB6  1D03               	btfss	3,2
  7018  1DB7  2DB9               	goto	u5801
  7019  1DB8  2DBA               	goto	u5800
  7020  1DB9                     u5801:
  7021  1DB9  2DC5               	goto	l180
  7022  1DBA                     u5800:
  7023  1DBA                     l3923:
  7024                           
  7025                           ;LCD.c: 75:    a = 0xC0 + y;
  7026  1DBA  0877               	movf	Lcd_Set_Cursor@y,w
  7027  1DBB  3EC0               	addlw	192
  7028  1DBC  00F8               	movwf	??_Lcd_Set_Cursor
  7029  1DBD  0878               	movf	??_Lcd_Set_Cursor,w
  7030  1DBE  00A1               	movwf	Lcd_Set_Cursor@a
  7031  1DBF                     l3925:
  7032                           
  7033                           ;LCD.c: 77:   datosLCD(a);
  7034  1DBF  0821               	movf	Lcd_Set_Cursor@a,w
  7035  1DC0  160A  158A  2534  160A  158A  	fcall	_datosLCD
  7036  1DC5                     l180:
  7037  1DC5  0008               	return
  7038  1DC6                     __end_of_Lcd_Set_Cursor:
  7039                           
  7040                           	psect	text31
  7041  128D                     __ptext31:	
  7042 ;; *************** function _Lcd_Init *****************
  7043 ;; Defined at:
  7044 ;;		line 47 in file "LCD.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      void 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2, status,0, pclath, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7058 ;;      Params:         0       0       0       0       0
  7059 ;;      Locals:         0       0       0       0       0
  7060 ;;      Temps:          2       0       0       0       0
  7061 ;;      Totals:         2       0       0       0       0
  7062 ;;Total ram usage:        2 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    4
  7065 ;; This function calls:
  7066 ;;		_datosLCD
  7067 ;; This function is called by:
  7068 ;;		_main
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _Lcd_Init
  7074  128D                     _Lcd_Init:
  7075  128D                     l3889:	
  7076                           ;incstack = 0
  7077                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7078                           
  7079                           
  7080                           ;LCD.c: 48:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7081  128D  3034               	movlw	52
  7082  128E  00F8               	movwf	??_Lcd_Init+1
  7083  128F  30F1               	movlw	241
  7084  1290  00F7               	movwf	??_Lcd_Init
  7085  1291                     u6477:
  7086  1291  0BF7               	decfsz	??_Lcd_Init,f
  7087  1292  2A91               	goto	u6477
  7088  1293  0BF8               	decfsz	??_Lcd_Init+1,f
  7089  1294  2A91               	goto	u6477
  7090  1295  2A96               	nop2
  7091  1296                     l3891:
  7092                           
  7093                           ;LCD.c: 49:     datosLCD (0x30);
  7094  1296  3030               	movlw	48
  7095  1297  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7096  129C                     l3893:
  7097                           
  7098                           ;LCD.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7099  129C  300D               	movlw	13
  7100  129D  00F8               	movwf	??_Lcd_Init+1
  7101  129E  30FB               	movlw	251
  7102  129F  00F7               	movwf	??_Lcd_Init
  7103  12A0                     u6487:
  7104  12A0  0BF7               	decfsz	??_Lcd_Init,f
  7105  12A1  2AA0               	goto	u6487
  7106  12A2  0BF8               	decfsz	??_Lcd_Init+1,f
  7107  12A3  2AA0               	goto	u6487
  7108  12A4  2AA5               	nop2
  7109                           
  7110                           ;LCD.c: 51:     datosLCD (0x30);
  7111  12A5  3030               	movlw	48
  7112  12A6  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7113  12AB                     l3895:
  7114                           
  7115                           ;LCD.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7116  12AB  3042               	movlw	66
  7117  12AC  00F7               	movwf	??_Lcd_Init
  7118  12AD                     u6497:
  7119  12AD  0BF7               	decfsz	??_Lcd_Init,f
  7120  12AE  2AAD               	goto	u6497
  7121  12AF  0000               	nop
  7122  12B0                     l3897:
  7123                           
  7124                           ;LCD.c: 53:     datosLCD (0x30);
  7125  12B0  3030               	movlw	48
  7126  12B1  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7127                           
  7128                           ;LCD.c: 54:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7129  12B6  3042               	movlw	66
  7130  12B7  00F7               	movwf	??_Lcd_Init
  7131  12B8                     u6507:
  7132  12B8  0BF7               	decfsz	??_Lcd_Init,f
  7133  12B9  2AB8               	goto	u6507
  7134  12BA  0000               	nop
  7135  12BB                     l3899:
  7136                           
  7137                           ;LCD.c: 55:     datosLCD (0x38);
  7138  12BB  3038               	movlw	56
  7139  12BC  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7140  12C1                     l3901:
  7141                           
  7142                           ;LCD.c: 56:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  7143  12C1  3027               	movlw	39
  7144  12C2  00F7               	movwf	??_Lcd_Init
  7145  12C3                     u6517:
  7146  12C3  0BF7               	decfsz	??_Lcd_Init,f
  7147  12C4  2AC3               	goto	u6517
  7148  12C5  2AC6               	nop2
  7149                           
  7150                           ;LCD.c: 57:     datosLCD (0x08);
  7151  12C6  3008               	movlw	8
  7152  12C7  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7153  12CC                     l3903:
  7154                           
  7155                           ;LCD.c: 58:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  7156  12CC  3027               	movlw	39
  7157  12CD  00F7               	movwf	??_Lcd_Init
  7158  12CE                     u6527:
  7159  12CE  0BF7               	decfsz	??_Lcd_Init,f
  7160  12CF  2ACE               	goto	u6527
  7161  12D0  2AD1               	nop2
  7162  12D1                     l3905:
  7163                           
  7164                           ;LCD.c: 59:     datosLCD (0x01);
  7165  12D1  3001               	movlw	1
  7166  12D2  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7167                           
  7168                           ;LCD.c: 60:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7169  12D7  300D               	movlw	13
  7170  12D8  00F8               	movwf	??_Lcd_Init+1
  7171  12D9  30FB               	movlw	251
  7172  12DA  00F7               	movwf	??_Lcd_Init
  7173  12DB                     u6537:
  7174  12DB  0BF7               	decfsz	??_Lcd_Init,f
  7175  12DC  2ADB               	goto	u6537
  7176  12DD  0BF8               	decfsz	??_Lcd_Init+1,f
  7177  12DE  2ADB               	goto	u6537
  7178  12DF  2AE0               	nop2
  7179  12E0                     l3907:
  7180                           
  7181                           ;LCD.c: 61:     datosLCD (0x06);
  7182  12E0  3006               	movlw	6
  7183  12E1  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7184  12E6                     l3909:
  7185                           
  7186                           ;LCD.c: 62:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  7187  12E6  3027               	movlw	39
  7188  12E7  00F7               	movwf	??_Lcd_Init
  7189  12E8                     u6547:
  7190  12E8  0BF7               	decfsz	??_Lcd_Init,f
  7191  12E9  2AE8               	goto	u6547
  7192  12EA  2AEB               	nop2
  7193                           
  7194                           ;LCD.c: 63:     datosLCD (0x0C);
  7195  12EB  300C               	movlw	12
  7196  12EC  160A  158A  2534  160A  118A  	fcall	_datosLCD
  7197  12F1                     l3911:
  7198                           
  7199                           ;LCD.c: 64:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  7200  12F1  3027               	movlw	39
  7201  12F2  00F7               	movwf	??_Lcd_Init
  7202  12F3                     u6557:
  7203  12F3  0BF7               	decfsz	??_Lcd_Init,f
  7204  12F4  2AF3               	goto	u6557
  7205  12F5  2AF6               	nop2
  7206  12F6                     l174:
  7207  12F6  0008               	return
  7208  12F7                     __end_of_Lcd_Init:
  7209                           
  7210                           	psect	text32
  7211  1CED                     __ptext32:	
  7212 ;; *************** function _LCD_Limpia *****************
  7213 ;; Defined at:
  7214 ;;		line 41 in file "LCD.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7228 ;;      Params:         0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0
  7231 ;;      Totals:         0       0       0       0       0
  7232 ;;Total ram usage:        0 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    4
  7235 ;; This function calls:
  7236 ;;		_datosLCD
  7237 ;; This function is called by:
  7238 ;;		_main
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           
  7243                           ;psect for function _LCD_Limpia
  7244  1CED                     _LCD_Limpia:
  7245  1CED                     l3913:	
  7246                           ;incstack = 0
  7247                           ; Regs used in _LCD_Limpia: [wreg+status,2+status,0+pclath+cstack]
  7248                           
  7249                           
  7250                           ;LCD.c: 42:     datosLCD(0);
  7251  1CED  3000               	movlw	0
  7252  1CEE  160A  158A  2534  160A  158A  	fcall	_datosLCD
  7253                           
  7254                           ;LCD.c: 43:     datosLCD(1);
  7255  1CF3  3001               	movlw	1
  7256  1CF4  160A  158A  2534  160A  158A  	fcall	_datosLCD
  7257  1CF9                     l171:
  7258  1CF9  0008               	return
  7259  1CFA                     __end_of_LCD_Limpia:
  7260                           
  7261                           	psect	text33
  7262  1D34                     __ptext33:	
  7263 ;; *************** function _datosLCD *****************
  7264 ;; Defined at:
  7265 ;;		line 31 in file "LCD.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  x               1    wreg     unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  x               1    6[COMMON] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0, pclath, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7279 ;;      Params:         0       0       0       0       0
  7280 ;;      Locals:         1       0       0       0       0
  7281 ;;      Temps:          2       0       0       0       0
  7282 ;;      Totals:         3       0       0       0       0
  7283 ;;Total ram usage:        3 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    3
  7286 ;; This function calls:
  7287 ;;		_Puerto
  7288 ;; This function is called by:
  7289 ;;		_LCD_Limpia
  7290 ;;		_Lcd_Init
  7291 ;;		_Lcd_Set_Cursor
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           
  7296                           ;psect for function _datosLCD
  7297  1D34                     _datosLCD:
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _datosLCD: [wreg+status,2+status,0+pclath+cstack]
  7301                           ;datosLCD@x stored from wreg
  7302  1D34  00F6               	movwf	datosLCD@x
  7303  1D35                     l3697:
  7304                           
  7305                           ;LCD.c: 32:     RE0 = 0;
  7306  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  7307  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  7308  1D37  1009               	bcf	9,0	;volatile
  7309  1D38                     l3699:
  7310                           
  7311                           ;LCD.c: 33:     Puerto(x);
  7312  1D38  0876               	movf	datosLCD@x,w
  7313  1D39  160A  158A  2689  160A  158A  	fcall	_Puerto
  7314  1D3E                     l3701:
  7315                           
  7316                           ;LCD.c: 34:     RE1 = 1;
  7317  1D3E  1283               	bcf	3,5	;RP0=0, select bank0
  7318  1D3F  1303               	bcf	3,6	;RP1=0, select bank0
  7319  1D40  1489               	bsf	9,1	;volatile
  7320  1D41                     l3703:
  7321                           
  7322                           ;LCD.c: 35:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  7323  1D41  3003               	movlw	3
  7324  1D42  00F4               	movwf	??_datosLCD
  7325  1D43                     u6567:
  7326  1D43  0BF4               	decfsz	??_datosLCD,f
  7327  1D44  2D43               	goto	u6567
  7328  1D45                     l3705:
  7329                           
  7330                           ;LCD.c: 36:     RE1 = 0;
  7331  1D45  1283               	bcf	3,5	;RP0=0, select bank0
  7332  1D46  1303               	bcf	3,6	;RP1=0, select bank0
  7333  1D47  1089               	bcf	9,1	;volatile
  7334  1D48                     l3707:
  7335                           
  7336                           ;LCD.c: 37:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  7337  1D48  3003               	movlw	3
  7338  1D49  00F4               	movwf	??_datosLCD
  7339  1D4A                     u6577:
  7340  1D4A  0BF4               	decfsz	??_datosLCD,f
  7341  1D4B  2D4A               	goto	u6577
  7342  1D4C                     l3709:
  7343                           
  7344                           ;LCD.c: 38:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7345  1D4C  3006               	movlw	6
  7346  1D4D  00F5               	movwf	??_datosLCD+1
  7347  1D4E  3030               	movlw	48
  7348  1D4F  00F4               	movwf	??_datosLCD
  7349  1D50                     u6587:
  7350  1D50  0BF4               	decfsz	??_datosLCD,f
  7351  1D51  2D50               	goto	u6587
  7352  1D52  0BF5               	decfsz	??_datosLCD+1,f
  7353  1D53  2D50               	goto	u6587
  7354  1D54  0000               	nop
  7355  1D55                     l168:
  7356  1D55  0008               	return
  7357  1D56                     __end_of_datosLCD:
  7358                           
  7359                           	psect	text34
  7360  1E89                     __ptext34:	
  7361 ;; *************** function _Puerto *****************
  7362 ;; Defined at:
  7363 ;;		line 9 in file "LCD.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  x               1    wreg     unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  x               1    3[COMMON] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7377 ;;      Params:         0       0       0       0       0
  7378 ;;      Locals:         1       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0
  7380 ;;      Totals:         1       0       0       0       0
  7381 ;;Total ram usage:        1 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    2
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_LCD_CMD
  7388 ;;		_datosLCD
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function _Puerto
  7394  1E89                     _Puerto:
  7395                           
  7396                           ;incstack = 0
  7397                           ; Regs used in _Puerto: [wreg]
  7398                           ;Puerto@x stored from wreg
  7399  1E89  00F3               	movwf	Puerto@x
  7400  1E8A                     l3501:
  7401                           
  7402                           ;LCD.c: 10:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  7403  1E8A  1C73               	btfss	Puerto@x,0
  7404  1E8B  2E8D               	goto	u4911
  7405  1E8C  2E8E               	goto	u4910
  7406  1E8D                     u4911:
  7407  1E8D  2E92               	goto	l146
  7408  1E8E                     u4910:
  7409  1E8E                     l3503:
  7410  1E8E  1283               	bcf	3,5	;RP0=0, select bank0
  7411  1E8F  1303               	bcf	3,6	;RP1=0, select bank0
  7412  1E90  1408               	bsf	8,0	;volatile
  7413  1E91  2E95               	goto	l147
  7414  1E92                     l146:
  7415  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  7416  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  7417  1E94  1008               	bcf	8,0	;volatile
  7418  1E95                     l147:
  7419                           
  7420                           ;LCD.c: 11:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  7421  1E95  1CF3               	btfss	Puerto@x,1
  7422  1E96  2E98               	goto	u4921
  7423  1E97  2E99               	goto	u4920
  7424  1E98                     u4921:
  7425  1E98  2E9B               	goto	l148
  7426  1E99                     u4920:
  7427  1E99                     l3505:
  7428  1E99  1488               	bsf	8,1	;volatile
  7429  1E9A  2E9C               	goto	l149
  7430  1E9B                     l148:
  7431  1E9B  1088               	bcf	8,1	;volatile
  7432  1E9C                     l149:
  7433                           
  7434                           ;LCD.c: 12:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  7435  1E9C  1D73               	btfss	Puerto@x,2
  7436  1E9D  2E9F               	goto	u4931
  7437  1E9E  2EA0               	goto	u4930
  7438  1E9F                     u4931:
  7439  1E9F  2EA2               	goto	l150
  7440  1EA0                     u4930:
  7441  1EA0                     l3507:
  7442  1EA0  1508               	bsf	8,2	;volatile
  7443  1EA1  2EA3               	goto	l151
  7444  1EA2                     l150:
  7445  1EA2  1108               	bcf	8,2	;volatile
  7446  1EA3                     l151:
  7447                           
  7448                           ;LCD.c: 13:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  7449  1EA3  1DF3               	btfss	Puerto@x,3
  7450  1EA4  2EA6               	goto	u4941
  7451  1EA5  2EA7               	goto	u4940
  7452  1EA6                     u4941:
  7453  1EA6  2EA9               	goto	l152
  7454  1EA7                     u4940:
  7455  1EA7                     l3509:
  7456  1EA7  1588               	bsf	8,3	;volatile
  7457  1EA8  2EAA               	goto	l153
  7458  1EA9                     l152:
  7459  1EA9  1188               	bcf	8,3	;volatile
  7460  1EAA                     l153:
  7461                           
  7462                           ;LCD.c: 14:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  7463  1EAA  1E73               	btfss	Puerto@x,4
  7464  1EAB  2EAD               	goto	u4951
  7465  1EAC  2EAE               	goto	u4950
  7466  1EAD                     u4951:
  7467  1EAD  2EB0               	goto	l154
  7468  1EAE                     u4950:
  7469  1EAE                     l3511:
  7470  1EAE  1608               	bsf	8,4	;volatile
  7471  1EAF  2EB1               	goto	l155
  7472  1EB0                     l154:
  7473  1EB0  1208               	bcf	8,4	;volatile
  7474  1EB1                     l155:
  7475                           
  7476                           ;LCD.c: 15:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  7477  1EB1  1EF3               	btfss	Puerto@x,5
  7478  1EB2  2EB4               	goto	u4961
  7479  1EB3  2EB5               	goto	u4960
  7480  1EB4                     u4961:
  7481  1EB4  2EB7               	goto	l156
  7482  1EB5                     u4960:
  7483  1EB5                     l3513:
  7484  1EB5  1688               	bsf	8,5	;volatile
  7485  1EB6  2EB8               	goto	l157
  7486  1EB7                     l156:
  7487  1EB7  1288               	bcf	8,5	;volatile
  7488  1EB8                     l157:
  7489                           
  7490                           ;LCD.c: 16:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  7491  1EB8  1F73               	btfss	Puerto@x,6
  7492  1EB9  2EBB               	goto	u4971
  7493  1EBA  2EBC               	goto	u4970
  7494  1EBB                     u4971:
  7495  1EBB  2EBE               	goto	l158
  7496  1EBC                     u4970:
  7497  1EBC                     l3515:
  7498  1EBC  1708               	bsf	8,6	;volatile
  7499  1EBD  2EBF               	goto	l159
  7500  1EBE                     l158:
  7501  1EBE  1308               	bcf	8,6	;volatile
  7502  1EBF                     l159:
  7503                           
  7504                           ;LCD.c: 17:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  7505  1EBF  1FF3               	btfss	Puerto@x,7
  7506  1EC0  2EC2               	goto	u4981
  7507  1EC1  2EC3               	goto	u4980
  7508  1EC2                     u4981:
  7509  1EC2  2EC5               	goto	l160
  7510  1EC3                     u4980:
  7511  1EC3                     l3517:
  7512  1EC3  1788               	bsf	8,7	;volatile
  7513  1EC4  2EC6               	goto	l162
  7514  1EC5                     l160:
  7515  1EC5  1388               	bcf	8,7	;volatile
  7516  1EC6                     l162:
  7517  1EC6  0008               	return
  7518  1EC7                     __end_of_Puerto:
  7519                           
  7520                           	psect	text35
  7521  1159                     __ptext35:	
  7522 ;; *************** function _ADC_2 *****************
  7523 ;; Defined at:
  7524 ;;		line 145 in file "lab03.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;		None
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  3   26[None  ] float 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7538 ;;      Params:         0       0       0       0       0
  7539 ;;      Locals:         0       0       0       0       0
  7540 ;;      Temps:          0       2       0       0       0
  7541 ;;      Totals:         0       2       0       0       0
  7542 ;;Total ram usage:        2 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    4
  7545 ;; This function calls:
  7546 ;;		_Canal_ADC
  7547 ;;		___awtoft
  7548 ;;		___ftdiv
  7549 ;;		___ftmul
  7550 ;; This function is called by:
  7551 ;;		_main
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _ADC_2
  7557  1159                     _ADC_2:
  7558  1159                     l3951:	
  7559                           ;incstack = 0
  7560                           ; Regs used in _ADC_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7561                           
  7562                           
  7563                           ;lab03.c: 146:     Canal_ADC(1);
  7564  1159  3001               	movlw	1
  7565  115A  00F3               	movwf	Canal_ADC@x
  7566  115B  3000               	movlw	0
  7567  115C  00F4               	movwf	Canal_ADC@x+1
  7568  115D  160A  118A  2405  160A  118A  	fcall	_Canal_ADC
  7569  1162                     l3953:
  7570                           
  7571                           ;lab03.c: 148:     ADCON0bits.ADCS0 = 1;
  7572  1162  1283               	bcf	3,5	;RP0=0, select bank0
  7573  1163  1303               	bcf	3,6	;RP1=0, select bank0
  7574  1164  171F               	bsf	31,6	;volatile
  7575  1165                     l3955:
  7576                           
  7577                           ;lab03.c: 149:     ADCON0bits.ADCS1 = 0;
  7578  1165  139F               	bcf	31,7	;volatile
  7579  1166                     l3957:
  7580                           
  7581                           ;lab03.c: 150:     ADCON0bits.ADON = 1;
  7582  1166  141F               	bsf	31,0	;volatile
  7583  1167                     l3959:
  7584                           
  7585                           ;lab03.c: 151:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  7586  1167  30A5               	movlw	165
  7587  1168  1283               	bcf	3,5	;RP0=0, select bank0
  7588  1169  1303               	bcf	3,6	;RP1=0, select bank0
  7589  116A  00CD               	movwf	??_ADC_2
  7590  116B                     u6597:
  7591  116B  0BCD               	decfsz	??_ADC_2,f
  7592  116C  296B               	goto	u6597
  7593  116D  296E               	nop2
  7594  116E                     l3961:
  7595                           
  7596                           ;lab03.c: 152:     ADCON0bits.GO = 1;
  7597  116E  1283               	bcf	3,5	;RP0=0, select bank0
  7598  116F  1303               	bcf	3,6	;RP1=0, select bank0
  7599  1170  149F               	bsf	31,1	;volatile
  7600                           
  7601                           ;lab03.c: 153:     while (ADCON0bits.GO == 1){
  7602  1171  29B6               	goto	l3965
  7603  1172                     l3963:
  7604                           
  7605                           ;lab03.c: 154:         volt2 = ((ADRESH * 5.0)/255);
  7606  1172  3000               	movlw	0
  7607  1173  00BD               	movwf	___ftdiv@f2
  7608  1174  307F               	movlw	127
  7609  1175  00BE               	movwf	___ftdiv@f2+1
  7610  1176  3043               	movlw	67
  7611  1177  00BF               	movwf	___ftdiv@f2+2
  7612  1178  3000               	movlw	0
  7613  1179  00AD               	movwf	___ftmul@f1
  7614  117A  30A0               	movlw	160
  7615  117B  00AE               	movwf	___ftmul@f1+1
  7616  117C  3040               	movlw	64
  7617  117D  00AF               	movwf	___ftmul@f1+2
  7618  117E  081E               	movf	30,w	;volatile
  7619  117F  00CD               	movwf	??_ADC_2
  7620  1180  01CE               	clrf	??_ADC_2+1
  7621  1181  084D               	movf	??_ADC_2,w
  7622  1182  00A3               	movwf	___awtoft@c
  7623  1183  084E               	movf	??_ADC_2+1,w
  7624  1184  00A4               	movwf	___awtoft@c+1
  7625  1185  120A  158A  2000  160A  118A  	fcall	___awtoft
  7626  118A  1283               	bcf	3,5	;RP0=0, select bank0
  7627  118B  1303               	bcf	3,6	;RP1=0, select bank0
  7628  118C  0823               	movf	?___awtoft,w
  7629  118D  00B0               	movwf	___ftmul@f2
  7630  118E  0824               	movf	?___awtoft+1,w
  7631  118F  00B1               	movwf	___ftmul@f2+1
  7632  1190  0825               	movf	?___awtoft+2,w
  7633  1191  00B2               	movwf	___ftmul@f2+2
  7634  1192  160A  118A  2634  160A  118A  	fcall	___ftmul
  7635  1197  1283               	bcf	3,5	;RP0=0, select bank0
  7636  1198  1303               	bcf	3,6	;RP1=0, select bank0
  7637  1199  082D               	movf	?___ftmul,w
  7638  119A  00C0               	movwf	___ftdiv@f1
  7639  119B  082E               	movf	?___ftmul+1,w
  7640  119C  00C1               	movwf	___ftdiv@f1+1
  7641  119D  082F               	movf	?___ftmul+2,w
  7642  119E  00C2               	movwf	___ftdiv@f1+2
  7643  119F  160A  118A  2572  160A  118A  	fcall	___ftdiv
  7644  11A4  1283               	bcf	3,5	;RP0=0, select bank0
  7645  11A5  1303               	bcf	3,6	;RP1=0, select bank0
  7646  11A6  083D               	movf	?___ftdiv,w
  7647  11A7  1683               	bsf	3,5	;RP0=1, select bank1
  7648  11A8  1303               	bcf	3,6	;RP1=0, select bank1
  7649  11A9  00BF               	movwf	_volt2^(0+128)
  7650  11AA  1283               	bcf	3,5	;RP0=0, select bank0
  7651  11AB  1303               	bcf	3,6	;RP1=0, select bank0
  7652  11AC  083E               	movf	?___ftdiv+1,w
  7653  11AD  1683               	bsf	3,5	;RP0=1, select bank1
  7654  11AE  1303               	bcf	3,6	;RP1=0, select bank1
  7655  11AF  00C0               	movwf	(_volt2+1)^(0+128)
  7656  11B0  1283               	bcf	3,5	;RP0=0, select bank0
  7657  11B1  1303               	bcf	3,6	;RP1=0, select bank0
  7658  11B2  083F               	movf	?___ftdiv+2,w
  7659  11B3  1683               	bsf	3,5	;RP0=1, select bank1
  7660  11B4  1303               	bcf	3,6	;RP1=0, select bank1
  7661  11B5  00C1               	movwf	(_volt2+2)^(0+128)
  7662  11B6                     l3965:
  7663                           
  7664                           ;lab03.c: 153:     while (ADCON0bits.GO == 1){
  7665  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  7666  11B7  189F               	btfsc	31,1	;volatile
  7667  11B8  29BA               	goto	u5851
  7668  11B9  29BB               	goto	u5850
  7669  11BA                     u5851:
  7670  11BA  2972               	goto	l3963
  7671  11BB                     u5850:
  7672  11BB                     l109:
  7673  11BB  0008               	return
  7674  11BC                     __end_of_ADC_2:
  7675                           
  7676                           	psect	text36
  7677  10F7                     __ptext36:	
  7678 ;; *************** function _ADC_1 *****************
  7679 ;; Defined at:
  7680 ;;		line 133 in file "lab03.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;		None
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  3   24[None  ] float 
  7687 ;; Registers used:
  7688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7694 ;;      Params:         0       0       0       0       0
  7695 ;;      Locals:         0       0       0       0       0
  7696 ;;      Temps:          0       2       0       0       0
  7697 ;;      Totals:         0       2       0       0       0
  7698 ;;Total ram usage:        2 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    4
  7701 ;; This function calls:
  7702 ;;		_Canal_ADC
  7703 ;;		___awtoft
  7704 ;;		___ftdiv
  7705 ;;		___ftmul
  7706 ;; This function is called by:
  7707 ;;		_main
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _ADC_1
  7713  10F7                     _ADC_1:
  7714  10F7                     l3935:	
  7715                           ;incstack = 0
  7716                           ; Regs used in _ADC_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7717                           
  7718                           
  7719                           ;lab03.c: 134:     Canal_ADC(0);
  7720  10F7  3000               	movlw	0
  7721  10F8  00F3               	movwf	Canal_ADC@x
  7722  10F9  00F4               	movwf	Canal_ADC@x+1
  7723  10FA  160A  118A  2405  160A  118A  	fcall	_Canal_ADC
  7724  10FF                     l3937:
  7725                           
  7726                           ;lab03.c: 136:     ADCON0bits.ADCS0 = 1;
  7727  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  7728  1100  1303               	bcf	3,6	;RP1=0, select bank0
  7729  1101  171F               	bsf	31,6	;volatile
  7730  1102                     l3939:
  7731                           
  7732                           ;lab03.c: 137:     ADCON0bits.ADCS1 = 0;
  7733  1102  139F               	bcf	31,7	;volatile
  7734  1103                     l3941:
  7735                           
  7736                           ;lab03.c: 138:     ADCON0bits.ADON = 1;
  7737  1103  141F               	bsf	31,0	;volatile
  7738  1104                     l3943:
  7739                           
  7740                           ;lab03.c: 139:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  7741  1104  30A5               	movlw	165
  7742  1105  1283               	bcf	3,5	;RP0=0, select bank0
  7743  1106  1303               	bcf	3,6	;RP1=0, select bank0
  7744  1107  00CD               	movwf	??_ADC_1
  7745  1108                     u6607:
  7746  1108  0BCD               	decfsz	??_ADC_1,f
  7747  1109  2908               	goto	u6607
  7748  110A  290B               	nop2
  7749  110B                     l3945:
  7750                           
  7751                           ;lab03.c: 140:     ADCON0bits.GO = 1;
  7752  110B  1283               	bcf	3,5	;RP0=0, select bank0
  7753  110C  1303               	bcf	3,6	;RP1=0, select bank0
  7754  110D  149F               	bsf	31,1	;volatile
  7755                           
  7756                           ;lab03.c: 141:     while (ADCON0bits.GO == 1){
  7757  110E  2953               	goto	l3949
  7758  110F                     l3947:
  7759                           
  7760                           ;lab03.c: 142:         volt = ((ADRESH * 5.0)/255);
  7761  110F  3000               	movlw	0
  7762  1110  00BD               	movwf	___ftdiv@f2
  7763  1111  307F               	movlw	127
  7764  1112  00BE               	movwf	___ftdiv@f2+1
  7765  1113  3043               	movlw	67
  7766  1114  00BF               	movwf	___ftdiv@f2+2
  7767  1115  3000               	movlw	0
  7768  1116  00AD               	movwf	___ftmul@f1
  7769  1117  30A0               	movlw	160
  7770  1118  00AE               	movwf	___ftmul@f1+1
  7771  1119  3040               	movlw	64
  7772  111A  00AF               	movwf	___ftmul@f1+2
  7773  111B  081E               	movf	30,w	;volatile
  7774  111C  00CD               	movwf	??_ADC_1
  7775  111D  01CE               	clrf	??_ADC_1+1
  7776  111E  084D               	movf	??_ADC_1,w
  7777  111F  00A3               	movwf	___awtoft@c
  7778  1120  084E               	movf	??_ADC_1+1,w
  7779  1121  00A4               	movwf	___awtoft@c+1
  7780  1122  120A  158A  2000  160A  118A  	fcall	___awtoft
  7781  1127  1283               	bcf	3,5	;RP0=0, select bank0
  7782  1128  1303               	bcf	3,6	;RP1=0, select bank0
  7783  1129  0823               	movf	?___awtoft,w
  7784  112A  00B0               	movwf	___ftmul@f2
  7785  112B  0824               	movf	?___awtoft+1,w
  7786  112C  00B1               	movwf	___ftmul@f2+1
  7787  112D  0825               	movf	?___awtoft+2,w
  7788  112E  00B2               	movwf	___ftmul@f2+2
  7789  112F  160A  118A  2634  160A  118A  	fcall	___ftmul
  7790  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7791  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7792  1136  082D               	movf	?___ftmul,w
  7793  1137  00C0               	movwf	___ftdiv@f1
  7794  1138  082E               	movf	?___ftmul+1,w
  7795  1139  00C1               	movwf	___ftdiv@f1+1
  7796  113A  082F               	movf	?___ftmul+2,w
  7797  113B  00C2               	movwf	___ftdiv@f1+2
  7798  113C  160A  118A  2572  160A  118A  	fcall	___ftdiv
  7799  1141  1283               	bcf	3,5	;RP0=0, select bank0
  7800  1142  1303               	bcf	3,6	;RP1=0, select bank0
  7801  1143  083D               	movf	?___ftdiv,w
  7802  1144  1683               	bsf	3,5	;RP0=1, select bank1
  7803  1145  1303               	bcf	3,6	;RP1=0, select bank1
  7804  1146  00C2               	movwf	_volt^(0+128)
  7805  1147  1283               	bcf	3,5	;RP0=0, select bank0
  7806  1148  1303               	bcf	3,6	;RP1=0, select bank0
  7807  1149  083E               	movf	?___ftdiv+1,w
  7808  114A  1683               	bsf	3,5	;RP0=1, select bank1
  7809  114B  1303               	bcf	3,6	;RP1=0, select bank1
  7810  114C  00C3               	movwf	(_volt+1)^(0+128)
  7811  114D  1283               	bcf	3,5	;RP0=0, select bank0
  7812  114E  1303               	bcf	3,6	;RP1=0, select bank0
  7813  114F  083F               	movf	?___ftdiv+2,w
  7814  1150  1683               	bsf	3,5	;RP0=1, select bank1
  7815  1151  1303               	bcf	3,6	;RP1=0, select bank1
  7816  1152  00C4               	movwf	(_volt+2)^(0+128)
  7817  1153                     l3949:
  7818                           
  7819                           ;lab03.c: 141:     while (ADCON0bits.GO == 1){
  7820  1153  1283               	bcf	3,5	;RP0=0, select bank0
  7821  1154  189F               	btfsc	31,1	;volatile
  7822  1155  2957               	goto	u5841
  7823  1156  2958               	goto	u5840
  7824  1157                     u5841:
  7825  1157  290F               	goto	l3947
  7826  1158                     u5840:
  7827  1158                     l103:
  7828  1158  0008               	return
  7829  1159                     __end_of_ADC_1:
  7830                           
  7831                           	psect	text37
  7832  1634                     __ptext37:	
  7833 ;; *************** function ___ftmul *****************
  7834 ;; Defined at:
  7835 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  f1              3   13[BANK0 ] float 
  7838 ;;  f2              3   16[BANK0 ] float 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  7841 ;;  sign            1   28[BANK0 ] unsigned char 
  7842 ;;  cntr            1   27[BANK0 ] unsigned char 
  7843 ;;  exp             1   23[BANK0 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  3   13[BANK0 ] float 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7853 ;;      Params:         0       6       0       0       0
  7854 ;;      Locals:         0       6       0       0       0
  7855 ;;      Temps:          0       4       0       0       0
  7856 ;;      Totals:         0      16       0       0       0
  7857 ;;Total ram usage:       16 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    3
  7860 ;; This function calls:
  7861 ;;		___ftpack
  7862 ;; This function is called by:
  7863 ;;		_ADC_1
  7864 ;;		_ADC_2
  7865 ;;		_fround
  7866 ;;		_scale
  7867 ;;		_sprintf
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           
  7872                           ;psect for function ___ftmul
  7873  1634                     ___ftmul:
  7874  1634                     l3633:	
  7875                           ;incstack = 0
  7876                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7877                           
  7878  1634  1283               	bcf	3,5	;RP0=0, select bank0
  7879  1635  1303               	bcf	3,6	;RP1=0, select bank0
  7880  1636  082D               	movf	___ftmul@f1,w
  7881  1637  00B3               	movwf	??___ftmul
  7882  1638  082E               	movf	___ftmul@f1+1,w
  7883  1639  00B4               	movwf	??___ftmul+1
  7884  163A  082F               	movf	___ftmul@f1+2,w
  7885  163B  00B5               	movwf	??___ftmul+2
  7886  163C  1003               	clrc
  7887  163D  0D34               	rlf	??___ftmul+1,w
  7888  163E  0D35               	rlf	??___ftmul+2,w
  7889  163F  00B6               	movwf	??___ftmul+3
  7890  1640  0836               	movf	??___ftmul+3,w
  7891  1641  00B7               	movwf	___ftmul@exp
  7892  1642  0837               	movf	___ftmul@exp,w
  7893  1643  1D03               	btfss	3,2
  7894  1644  2E46               	goto	u5331
  7895  1645  2E47               	goto	u5330
  7896  1646                     u5331:
  7897  1646  2E4E               	goto	l3639
  7898  1647                     u5330:
  7899  1647                     l3635:
  7900  1647  3000               	movlw	0
  7901  1648  00AD               	movwf	?___ftmul
  7902  1649  3000               	movlw	0
  7903  164A  00AE               	movwf	?___ftmul+1
  7904  164B  3000               	movlw	0
  7905  164C  00AF               	movwf	?___ftmul+2
  7906  164D  2F18               	goto	l770
  7907  164E                     l3639:
  7908  164E  0830               	movf	___ftmul@f2,w
  7909  164F  00B3               	movwf	??___ftmul
  7910  1650  0831               	movf	___ftmul@f2+1,w
  7911  1651  00B4               	movwf	??___ftmul+1
  7912  1652  0832               	movf	___ftmul@f2+2,w
  7913  1653  00B5               	movwf	??___ftmul+2
  7914  1654  1003               	clrc
  7915  1655  0D34               	rlf	??___ftmul+1,w
  7916  1656  0D35               	rlf	??___ftmul+2,w
  7917  1657  00B6               	movwf	??___ftmul+3
  7918  1658  0836               	movf	??___ftmul+3,w
  7919  1659  00BC               	movwf	___ftmul@sign
  7920  165A  083C               	movf	___ftmul@sign,w
  7921  165B  1D03               	btfss	3,2
  7922  165C  2E5E               	goto	u5341
  7923  165D  2E5F               	goto	u5340
  7924  165E                     u5341:
  7925  165E  2E66               	goto	l3645
  7926  165F                     u5340:
  7927  165F                     l3641:
  7928  165F  3000               	movlw	0
  7929  1660  00AD               	movwf	?___ftmul
  7930  1661  3000               	movlw	0
  7931  1662  00AE               	movwf	?___ftmul+1
  7932  1663  3000               	movlw	0
  7933  1664  00AF               	movwf	?___ftmul+2
  7934  1665  2F18               	goto	l770
  7935  1666                     l3645:
  7936  1666  083C               	movf	___ftmul@sign,w
  7937  1667  3E7B               	addlw	123
  7938  1668  00B3               	movwf	??___ftmul
  7939  1669  0833               	movf	??___ftmul,w
  7940  166A  07B7               	addwf	___ftmul@exp,f
  7941  166B  082D               	movf	___ftmul@f1,w
  7942  166C  00B3               	movwf	??___ftmul
  7943  166D  082E               	movf	___ftmul@f1+1,w
  7944  166E  00B4               	movwf	??___ftmul+1
  7945  166F  082F               	movf	___ftmul@f1+2,w
  7946  1670  00B5               	movwf	??___ftmul+2
  7947  1671  3010               	movlw	16
  7948  1672                     u5355:
  7949  1672  1003               	clrc
  7950  1673  0CB5               	rrf	??___ftmul+2,f
  7951  1674  0CB4               	rrf	??___ftmul+1,f
  7952  1675  0CB3               	rrf	??___ftmul,f
  7953  1676                     u5350:
  7954  1676  3EFF               	addlw	-1
  7955  1677  1D03               	skipz
  7956  1678  2E72               	goto	u5355
  7957  1679  0833               	movf	??___ftmul,w
  7958  167A  00B6               	movwf	??___ftmul+3
  7959  167B  0836               	movf	??___ftmul+3,w
  7960  167C  00BC               	movwf	___ftmul@sign
  7961  167D  0830               	movf	___ftmul@f2,w
  7962  167E  00B3               	movwf	??___ftmul
  7963  167F  0831               	movf	___ftmul@f2+1,w
  7964  1680  00B4               	movwf	??___ftmul+1
  7965  1681  0832               	movf	___ftmul@f2+2,w
  7966  1682  00B5               	movwf	??___ftmul+2
  7967  1683  3010               	movlw	16
  7968  1684                     u5365:
  7969  1684  1003               	clrc
  7970  1685  0CB5               	rrf	??___ftmul+2,f
  7971  1686  0CB4               	rrf	??___ftmul+1,f
  7972  1687  0CB3               	rrf	??___ftmul,f
  7973  1688                     u5360:
  7974  1688  3EFF               	addlw	-1
  7975  1689  1D03               	skipz
  7976  168A  2E84               	goto	u5365
  7977  168B  0833               	movf	??___ftmul,w
  7978  168C  00B6               	movwf	??___ftmul+3
  7979  168D  0836               	movf	??___ftmul+3,w
  7980  168E  06BC               	xorwf	___ftmul@sign,f
  7981  168F  3080               	movlw	128
  7982  1690  00B3               	movwf	??___ftmul
  7983  1691  0833               	movf	??___ftmul,w
  7984  1692  05BC               	andwf	___ftmul@sign,f
  7985  1693                     l3647:
  7986  1693  17AE               	bsf	___ftmul@f1+1,7
  7987  1694                     l3649:
  7988  1694  17B1               	bsf	___ftmul@f2+1,7
  7989  1695                     l3651:
  7990  1695  30FF               	movlw	255
  7991  1696  05B0               	andwf	___ftmul@f2,f
  7992  1697  30FF               	movlw	255
  7993  1698  05B1               	andwf	___ftmul@f2+1,f
  7994  1699  3000               	movlw	0
  7995  169A  05B2               	andwf	___ftmul@f2+2,f
  7996  169B                     l3653:
  7997  169B  3000               	movlw	0
  7998  169C  00B8               	movwf	___ftmul@f3_as_product
  7999  169D  3000               	movlw	0
  8000  169E  00B9               	movwf	___ftmul@f3_as_product+1
  8001  169F  3000               	movlw	0
  8002  16A0  00BA               	movwf	___ftmul@f3_as_product+2
  8003  16A1                     l3655:
  8004  16A1  3007               	movlw	7
  8005  16A2  00B3               	movwf	??___ftmul
  8006  16A3  0833               	movf	??___ftmul,w
  8007  16A4  00BB               	movwf	___ftmul@cntr
  8008  16A5                     l3657:
  8009  16A5  1C2D               	btfss	___ftmul@f1,0
  8010  16A6  2EA8               	goto	u5371
  8011  16A7  2EA9               	goto	u5370
  8012  16A8                     u5371:
  8013  16A8  2EB9               	goto	l3661
  8014  16A9                     u5370:
  8015  16A9                     l3659:
  8016  16A9  0830               	movf	___ftmul@f2,w
  8017  16AA  07B8               	addwf	___ftmul@f3_as_product,f
  8018  16AB  0831               	movf	___ftmul@f2+1,w
  8019  16AC  1103               	clrz
  8020  16AD  1803               	skipnc
  8021  16AE  0A31               	incf	___ftmul@f2+1,w
  8022  16AF  1903               	skipnz
  8023  16B0  2EB2               	goto	u5381
  8024  16B1  07B9               	addwf	___ftmul@f3_as_product+1,f
  8025  16B2                     u5381:
  8026  16B2  0832               	movf	___ftmul@f2+2,w
  8027  16B3  1103               	clrz
  8028  16B4  1803               	skipnc
  8029  16B5  0A32               	incf	___ftmul@f2+2,w
  8030  16B6  1903               	skipnz
  8031  16B7  2EB9               	goto	u5382
  8032  16B8  07BA               	addwf	___ftmul@f3_as_product+2,f
  8033  16B9                     u5382:
  8034  16B9                     l3661:
  8035  16B9  3001               	movlw	1
  8036  16BA                     u5395:
  8037  16BA  1003               	clrc
  8038  16BB  0CAF               	rrf	___ftmul@f1+2,f
  8039  16BC  0CAE               	rrf	___ftmul@f1+1,f
  8040  16BD  0CAD               	rrf	___ftmul@f1,f
  8041  16BE  3EFF               	addlw	-1
  8042  16BF  1D03               	skipz
  8043  16C0  2EBA               	goto	u5395
  8044  16C1                     l3663:
  8045  16C1  3001               	movlw	1
  8046  16C2                     u5405:
  8047  16C2  1003               	clrc
  8048  16C3  0DB0               	rlf	___ftmul@f2,f
  8049  16C4  0DB1               	rlf	___ftmul@f2+1,f
  8050  16C5  0DB2               	rlf	___ftmul@f2+2,f
  8051  16C6  3EFF               	addlw	-1
  8052  16C7  1D03               	skipz
  8053  16C8  2EC2               	goto	u5405
  8054  16C9                     l3665:
  8055  16C9  3001               	movlw	1
  8056  16CA  02BB               	subwf	___ftmul@cntr,f
  8057  16CB  1D03               	btfss	3,2
  8058  16CC  2ECE               	goto	u5411
  8059  16CD  2ECF               	goto	u5410
  8060  16CE                     u5411:
  8061  16CE  2EA5               	goto	l3657
  8062  16CF                     u5410:
  8063  16CF                     l3667:
  8064  16CF  3009               	movlw	9
  8065  16D0  00B3               	movwf	??___ftmul
  8066  16D1  0833               	movf	??___ftmul,w
  8067  16D2  00BB               	movwf	___ftmul@cntr
  8068  16D3                     l3669:
  8069  16D3  1C2D               	btfss	___ftmul@f1,0
  8070  16D4  2ED6               	goto	u5421
  8071  16D5  2ED7               	goto	u5420
  8072  16D6                     u5421:
  8073  16D6  2EE7               	goto	l3673
  8074  16D7                     u5420:
  8075  16D7                     l3671:
  8076  16D7  0830               	movf	___ftmul@f2,w
  8077  16D8  07B8               	addwf	___ftmul@f3_as_product,f
  8078  16D9  0831               	movf	___ftmul@f2+1,w
  8079  16DA  1103               	clrz
  8080  16DB  1803               	skipnc
  8081  16DC  0A31               	incf	___ftmul@f2+1,w
  8082  16DD  1903               	skipnz
  8083  16DE  2EE0               	goto	u5431
  8084  16DF  07B9               	addwf	___ftmul@f3_as_product+1,f
  8085  16E0                     u5431:
  8086  16E0  0832               	movf	___ftmul@f2+2,w
  8087  16E1  1103               	clrz
  8088  16E2  1803               	skipnc
  8089  16E3  0A32               	incf	___ftmul@f2+2,w
  8090  16E4  1903               	skipnz
  8091  16E5  2EE7               	goto	u5432
  8092  16E6  07BA               	addwf	___ftmul@f3_as_product+2,f
  8093  16E7                     u5432:
  8094  16E7                     l3673:
  8095  16E7  3001               	movlw	1
  8096  16E8                     u5445:
  8097  16E8  1003               	clrc
  8098  16E9  0CAF               	rrf	___ftmul@f1+2,f
  8099  16EA  0CAE               	rrf	___ftmul@f1+1,f
  8100  16EB  0CAD               	rrf	___ftmul@f1,f
  8101  16EC  3EFF               	addlw	-1
  8102  16ED  1D03               	skipz
  8103  16EE  2EE8               	goto	u5445
  8104  16EF                     l3675:
  8105  16EF  3001               	movlw	1
  8106  16F0                     u5455:
  8107  16F0  1003               	clrc
  8108  16F1  0CBA               	rrf	___ftmul@f3_as_product+2,f
  8109  16F2  0CB9               	rrf	___ftmul@f3_as_product+1,f
  8110  16F3  0CB8               	rrf	___ftmul@f3_as_product,f
  8111  16F4  3EFF               	addlw	-1
  8112  16F5  1D03               	skipz
  8113  16F6  2EF0               	goto	u5455
  8114  16F7                     l3677:
  8115  16F7  3001               	movlw	1
  8116  16F8  02BB               	subwf	___ftmul@cntr,f
  8117  16F9  1D03               	btfss	3,2
  8118  16FA  2EFC               	goto	u5461
  8119  16FB  2EFD               	goto	u5460
  8120  16FC                     u5461:
  8121  16FC  2ED3               	goto	l3669
  8122  16FD                     u5460:
  8123  16FD                     l3679:
  8124  16FD  0838               	movf	___ftmul@f3_as_product,w
  8125  16FE  00F3               	movwf	___ftpack@arg
  8126  16FF  0839               	movf	___ftmul@f3_as_product+1,w
  8127  1700  00F4               	movwf	___ftpack@arg+1
  8128  1701  083A               	movf	___ftmul@f3_as_product+2,w
  8129  1702  00F5               	movwf	___ftpack@arg+2
  8130  1703  0837               	movf	___ftmul@exp,w
  8131  1704  00B3               	movwf	??___ftmul
  8132  1705  0833               	movf	??___ftmul,w
  8133  1706  00F6               	movwf	___ftpack@exp
  8134  1707  083C               	movf	___ftmul@sign,w
  8135  1708  00B4               	movwf	??___ftmul+1
  8136  1709  0834               	movf	??___ftmul+1,w
  8137  170A  00F7               	movwf	___ftpack@sign
  8138  170B  160A  118A  22F7  160A  118A  	fcall	___ftpack
  8139  1710  0873               	movf	?___ftpack,w
  8140  1711  1283               	bcf	3,5	;RP0=0, select bank0
  8141  1712  1303               	bcf	3,6	;RP1=0, select bank0
  8142  1713  00AD               	movwf	?___ftmul
  8143  1714  0874               	movf	?___ftpack+1,w
  8144  1715  00AE               	movwf	?___ftmul+1
  8145  1716  0875               	movf	?___ftpack+2,w
  8146  1717  00AF               	movwf	?___ftmul+2
  8147  1718                     l770:
  8148  1718  0008               	return
  8149  1719                     __end_of___ftmul:
  8150                           
  8151                           	psect	text38
  8152  1572                     __ptext38:	
  8153 ;; *************** function ___ftdiv *****************
  8154 ;; Defined at:
  8155 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdiv.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  f2              3   29[BANK0 ] float 
  8158 ;;  f1              3   32[BANK0 ] float 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  f3              3   40[BANK0 ] float 
  8161 ;;  sign            1   44[BANK0 ] unsigned char 
  8162 ;;  exp             1   43[BANK0 ] unsigned char 
  8163 ;;  cntr            1   39[BANK0 ] unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  3   29[BANK0 ] float 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0, pclath, cstack
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8173 ;;      Params:         0       6       0       0       0
  8174 ;;      Locals:         0       6       0       0       0
  8175 ;;      Temps:          0       4       0       0       0
  8176 ;;      Totals:         0      16       0       0       0
  8177 ;;Total ram usage:       16 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    3
  8180 ;; This function calls:
  8181 ;;		___ftpack
  8182 ;; This function is called by:
  8183 ;;		_ADC_1
  8184 ;;		_ADC_2
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function ___ftdiv
  8190  1572                     ___ftdiv:
  8191  1572                     l3809:	
  8192                           ;incstack = 0
  8193                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8194                           
  8195  1572  1283               	bcf	3,5	;RP0=0, select bank0
  8196  1573  1303               	bcf	3,6	;RP1=0, select bank0
  8197  1574  0840               	movf	___ftdiv@f1,w
  8198  1575  00C3               	movwf	??___ftdiv
  8199  1576  0841               	movf	___ftdiv@f1+1,w
  8200  1577  00C4               	movwf	??___ftdiv+1
  8201  1578  0842               	movf	___ftdiv@f1+2,w
  8202  1579  00C5               	movwf	??___ftdiv+2
  8203  157A  1003               	clrc
  8204  157B  0D44               	rlf	??___ftdiv+1,w
  8205  157C  0D45               	rlf	??___ftdiv+2,w
  8206  157D  00C6               	movwf	??___ftdiv+3
  8207  157E  0846               	movf	??___ftdiv+3,w
  8208  157F  00CB               	movwf	___ftdiv@exp
  8209  1580  084B               	movf	___ftdiv@exp,w
  8210  1581  1D03               	btfss	3,2
  8211  1582  2D84               	goto	u5621
  8212  1583  2D85               	goto	u5620
  8213  1584                     u5621:
  8214  1584  2D8C               	goto	l3815
  8215  1585                     u5620:
  8216  1585                     l3811:
  8217  1585  3000               	movlw	0
  8218  1586  00BD               	movwf	?___ftdiv
  8219  1587  3000               	movlw	0
  8220  1588  00BE               	movwf	?___ftdiv+1
  8221  1589  3000               	movlw	0
  8222  158A  00BF               	movwf	?___ftdiv+2
  8223  158B  2E33               	goto	l738
  8224  158C                     l3815:
  8225  158C  083D               	movf	___ftdiv@f2,w
  8226  158D  00C3               	movwf	??___ftdiv
  8227  158E  083E               	movf	___ftdiv@f2+1,w
  8228  158F  00C4               	movwf	??___ftdiv+1
  8229  1590  083F               	movf	___ftdiv@f2+2,w
  8230  1591  00C5               	movwf	??___ftdiv+2
  8231  1592  1003               	clrc
  8232  1593  0D44               	rlf	??___ftdiv+1,w
  8233  1594  0D45               	rlf	??___ftdiv+2,w
  8234  1595  00C6               	movwf	??___ftdiv+3
  8235  1596  0846               	movf	??___ftdiv+3,w
  8236  1597  00CC               	movwf	___ftdiv@sign
  8237  1598  084C               	movf	___ftdiv@sign,w
  8238  1599  1D03               	btfss	3,2
  8239  159A  2D9C               	goto	u5631
  8240  159B  2D9D               	goto	u5630
  8241  159C                     u5631:
  8242  159C  2DA4               	goto	l3821
  8243  159D                     u5630:
  8244  159D                     l3817:
  8245  159D  3000               	movlw	0
  8246  159E  00BD               	movwf	?___ftdiv
  8247  159F  3000               	movlw	0
  8248  15A0  00BE               	movwf	?___ftdiv+1
  8249  15A1  3000               	movlw	0
  8250  15A2  00BF               	movwf	?___ftdiv+2
  8251  15A3  2E33               	goto	l738
  8252  15A4                     l3821:
  8253  15A4  3000               	movlw	0
  8254  15A5  00C8               	movwf	___ftdiv@f3
  8255  15A6  3000               	movlw	0
  8256  15A7  00C9               	movwf	___ftdiv@f3+1
  8257  15A8  3000               	movlw	0
  8258  15A9  00CA               	movwf	___ftdiv@f3+2
  8259  15AA                     l3823:
  8260  15AA  3089               	movlw	137
  8261  15AB  074C               	addwf	___ftdiv@sign,w
  8262  15AC  00C3               	movwf	??___ftdiv
  8263  15AD  0843               	movf	??___ftdiv,w
  8264  15AE  02CB               	subwf	___ftdiv@exp,f
  8265  15AF                     l3825:
  8266  15AF  0840               	movf	___ftdiv@f1,w
  8267  15B0  00C3               	movwf	??___ftdiv
  8268  15B1  0841               	movf	___ftdiv@f1+1,w
  8269  15B2  00C4               	movwf	??___ftdiv+1
  8270  15B3  0842               	movf	___ftdiv@f1+2,w
  8271  15B4  00C5               	movwf	??___ftdiv+2
  8272  15B5  3010               	movlw	16
  8273  15B6                     u5645:
  8274  15B6  1003               	clrc
  8275  15B7  0CC5               	rrf	??___ftdiv+2,f
  8276  15B8  0CC4               	rrf	??___ftdiv+1,f
  8277  15B9  0CC3               	rrf	??___ftdiv,f
  8278  15BA                     u5640:
  8279  15BA  3EFF               	addlw	-1
  8280  15BB  1D03               	skipz
  8281  15BC  2DB6               	goto	u5645
  8282  15BD  0843               	movf	??___ftdiv,w
  8283  15BE  00C6               	movwf	??___ftdiv+3
  8284  15BF  0846               	movf	??___ftdiv+3,w
  8285  15C0  00CC               	movwf	___ftdiv@sign
  8286  15C1                     l3827:
  8287  15C1  083D               	movf	___ftdiv@f2,w
  8288  15C2  00C3               	movwf	??___ftdiv
  8289  15C3  083E               	movf	___ftdiv@f2+1,w
  8290  15C4  00C4               	movwf	??___ftdiv+1
  8291  15C5  083F               	movf	___ftdiv@f2+2,w
  8292  15C6  00C5               	movwf	??___ftdiv+2
  8293  15C7  3010               	movlw	16
  8294  15C8                     u5655:
  8295  15C8  1003               	clrc
  8296  15C9  0CC5               	rrf	??___ftdiv+2,f
  8297  15CA  0CC4               	rrf	??___ftdiv+1,f
  8298  15CB  0CC3               	rrf	??___ftdiv,f
  8299  15CC                     u5650:
  8300  15CC  3EFF               	addlw	-1
  8301  15CD  1D03               	skipz
  8302  15CE  2DC8               	goto	u5655
  8303  15CF  0843               	movf	??___ftdiv,w
  8304  15D0  00C6               	movwf	??___ftdiv+3
  8305  15D1  0846               	movf	??___ftdiv+3,w
  8306  15D2  06CC               	xorwf	___ftdiv@sign,f
  8307  15D3                     l3829:
  8308  15D3  3080               	movlw	128
  8309  15D4  00C3               	movwf	??___ftdiv
  8310  15D5  0843               	movf	??___ftdiv,w
  8311  15D6  05CC               	andwf	___ftdiv@sign,f
  8312  15D7                     l3831:
  8313  15D7  17C1               	bsf	___ftdiv@f1+1,7
  8314  15D8  30FF               	movlw	255
  8315  15D9  05C0               	andwf	___ftdiv@f1,f
  8316  15DA  30FF               	movlw	255
  8317  15DB  05C1               	andwf	___ftdiv@f1+1,f
  8318  15DC  3000               	movlw	0
  8319  15DD  05C2               	andwf	___ftdiv@f1+2,f
  8320  15DE                     l3833:
  8321  15DE  17BE               	bsf	___ftdiv@f2+1,7
  8322  15DF  30FF               	movlw	255
  8323  15E0  05BD               	andwf	___ftdiv@f2,f
  8324  15E1  30FF               	movlw	255
  8325  15E2  05BE               	andwf	___ftdiv@f2+1,f
  8326  15E3  3000               	movlw	0
  8327  15E4  05BF               	andwf	___ftdiv@f2+2,f
  8328  15E5  3018               	movlw	24
  8329  15E6  00C3               	movwf	??___ftdiv
  8330  15E7  0843               	movf	??___ftdiv,w
  8331  15E8  00C7               	movwf	___ftdiv@cntr
  8332  15E9                     l3835:
  8333  15E9  3001               	movlw	1
  8334  15EA                     u5665:
  8335  15EA  1003               	clrc
  8336  15EB  0DC8               	rlf	___ftdiv@f3,f
  8337  15EC  0DC9               	rlf	___ftdiv@f3+1,f
  8338  15ED  0DCA               	rlf	___ftdiv@f3+2,f
  8339  15EE  3EFF               	addlw	-1
  8340  15EF  1D03               	skipz
  8341  15F0  2DEA               	goto	u5665
  8342  15F1                     l3837:
  8343  15F1  083F               	movf	___ftdiv@f2+2,w
  8344  15F2  0242               	subwf	___ftdiv@f1+2,w
  8345  15F3  1D03               	skipz
  8346  15F4  2DFB               	goto	u5675
  8347  15F5  083E               	movf	___ftdiv@f2+1,w
  8348  15F6  0241               	subwf	___ftdiv@f1+1,w
  8349  15F7  1D03               	skipz
  8350  15F8  2DFB               	goto	u5675
  8351  15F9  083D               	movf	___ftdiv@f2,w
  8352  15FA  0240               	subwf	___ftdiv@f1,w
  8353  15FB                     u5675:
  8354  15FB  1C03               	skipc
  8355  15FC  2DFE               	goto	u5671
  8356  15FD  2DFF               	goto	u5670
  8357  15FE                     u5671:
  8358  15FE  2E0A               	goto	l3843
  8359  15FF                     u5670:
  8360  15FF                     l3839:
  8361  15FF  083D               	movf	___ftdiv@f2,w
  8362  1600  02C0               	subwf	___ftdiv@f1,f
  8363  1601  083E               	movf	___ftdiv@f2+1,w
  8364  1602  1C03               	skipc
  8365  1603  0F3E               	incfsz	___ftdiv@f2+1,w
  8366  1604  02C1               	subwf	___ftdiv@f1+1,f
  8367  1605  083F               	movf	___ftdiv@f2+2,w
  8368  1606  1C03               	skipc
  8369  1607  0A3F               	incf	___ftdiv@f2+2,w
  8370  1608  02C2               	subwf	___ftdiv@f1+2,f
  8371  1609                     l3841:
  8372  1609  1448               	bsf	___ftdiv@f3,0
  8373  160A                     l3843:
  8374  160A  3001               	movlw	1
  8375  160B                     u5685:
  8376  160B  1003               	clrc
  8377  160C  0DC0               	rlf	___ftdiv@f1,f
  8378  160D  0DC1               	rlf	___ftdiv@f1+1,f
  8379  160E  0DC2               	rlf	___ftdiv@f1+2,f
  8380  160F  3EFF               	addlw	-1
  8381  1610  1D03               	skipz
  8382  1611  2E0B               	goto	u5685
  8383  1612                     l3845:
  8384  1612  3001               	movlw	1
  8385  1613  02C7               	subwf	___ftdiv@cntr,f
  8386  1614  1D03               	btfss	3,2
  8387  1615  2E17               	goto	u5691
  8388  1616  2E18               	goto	u5690
  8389  1617                     u5691:
  8390  1617  2DE9               	goto	l3835
  8391  1618                     u5690:
  8392  1618                     l3847:
  8393  1618  0848               	movf	___ftdiv@f3,w
  8394  1619  00F3               	movwf	___ftpack@arg
  8395  161A  0849               	movf	___ftdiv@f3+1,w
  8396  161B  00F4               	movwf	___ftpack@arg+1
  8397  161C  084A               	movf	___ftdiv@f3+2,w
  8398  161D  00F5               	movwf	___ftpack@arg+2
  8399  161E  084B               	movf	___ftdiv@exp,w
  8400  161F  00C3               	movwf	??___ftdiv
  8401  1620  0843               	movf	??___ftdiv,w
  8402  1621  00F6               	movwf	___ftpack@exp
  8403  1622  084C               	movf	___ftdiv@sign,w
  8404  1623  00C4               	movwf	??___ftdiv+1
  8405  1624  0844               	movf	??___ftdiv+1,w
  8406  1625  00F7               	movwf	___ftpack@sign
  8407  1626  160A  118A  22F7  160A  118A  	fcall	___ftpack
  8408  162B  0873               	movf	?___ftpack,w
  8409  162C  1283               	bcf	3,5	;RP0=0, select bank0
  8410  162D  1303               	bcf	3,6	;RP1=0, select bank0
  8411  162E  00BD               	movwf	?___ftdiv
  8412  162F  0874               	movf	?___ftpack+1,w
  8413  1630  00BE               	movwf	?___ftdiv+1
  8414  1631  0875               	movf	?___ftpack+2,w
  8415  1632  00BF               	movwf	?___ftdiv+2
  8416  1633                     l738:
  8417  1633  0008               	return
  8418  1634                     __end_of___ftdiv:
  8419                           
  8420                           	psect	text39
  8421  0800                     __ptext39:	
  8422 ;; *************** function ___awtoft *****************
  8423 ;; Defined at:
  8424 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;  c               2    3[BANK0 ] int 
  8427 ;; Auto vars:     Size  Location     Type
  8428 ;;  sign            1    6[BANK0 ] unsigned char 
  8429 ;; Return value:  Size  Location     Type
  8430 ;;                  3    3[BANK0 ] float 
  8431 ;; Registers used:
  8432 ;;		wreg, status,2, status,0, pclath, cstack
  8433 ;; Tracked objects:
  8434 ;;		On entry : 0/0
  8435 ;;		On exit  : 0/0
  8436 ;;		Unchanged: 0/0
  8437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8438 ;;      Params:         0       3       0       0       0
  8439 ;;      Locals:         0       1       0       0       0
  8440 ;;      Temps:          2       0       0       0       0
  8441 ;;      Totals:         2       4       0       0       0
  8442 ;;Total ram usage:        6 bytes
  8443 ;; Hardware stack levels used:    1
  8444 ;; Hardware stack levels required when called:    3
  8445 ;; This function calls:
  8446 ;;		___ftpack
  8447 ;; This function is called by:
  8448 ;;		_ADC_1
  8449 ;;		_ADC_2
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           
  8454                           ;psect for function ___awtoft
  8455  0800                     ___awtoft:
  8456  0800                     l3797:	
  8457                           ;incstack = 0
  8458                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8459                           
  8460  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8461  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8462  0802  01A6               	clrf	___awtoft@sign
  8463  0803                     l3799:
  8464  0803  1FA4               	btfss	___awtoft@c+1,7
  8465  0804  2806               	goto	u5611
  8466  0805  2807               	goto	u5610
  8467  0806                     u5611:
  8468  0806  280E               	goto	l3805
  8469  0807                     u5610:
  8470  0807                     l3801:
  8471  0807  09A3               	comf	___awtoft@c,f
  8472  0808  09A4               	comf	___awtoft@c+1,f
  8473  0809  0AA3               	incf	___awtoft@c,f
  8474  080A  1903               	skipnz
  8475  080B  0AA4               	incf	___awtoft@c+1,f
  8476  080C                     l3803:
  8477  080C  01A6               	clrf	___awtoft@sign
  8478  080D  0AA6               	incf	___awtoft@sign,f
  8479  080E                     l3805:
  8480  080E  0823               	movf	___awtoft@c,w
  8481  080F  00F3               	movwf	___ftpack@arg
  8482  0810  0824               	movf	___awtoft@c+1,w
  8483  0811  00F4               	movwf	___ftpack@arg+1
  8484  0812  01F5               	clrf	___ftpack@arg+2
  8485  0813  308E               	movlw	142
  8486  0814  00F8               	movwf	??___awtoft
  8487  0815  0878               	movf	??___awtoft,w
  8488  0816  00F6               	movwf	___ftpack@exp
  8489  0817  0826               	movf	___awtoft@sign,w
  8490  0818  00F9               	movwf	??___awtoft+1
  8491  0819  0879               	movf	??___awtoft+1,w
  8492  081A  00F7               	movwf	___ftpack@sign
  8493  081B  160A  118A  22F7  120A  158A  	fcall	___ftpack
  8494  0820  0873               	movf	?___ftpack,w
  8495  0821  1283               	bcf	3,5	;RP0=0, select bank0
  8496  0822  1303               	bcf	3,6	;RP1=0, select bank0
  8497  0823  00A3               	movwf	?___awtoft
  8498  0824  0874               	movf	?___ftpack+1,w
  8499  0825  00A4               	movwf	?___awtoft+1
  8500  0826  0875               	movf	?___ftpack+2,w
  8501  0827  00A5               	movwf	?___awtoft+2
  8502  0828                     l663:
  8503  0828  0008               	return
  8504  0829                     __end_of___awtoft:
  8505                           
  8506                           	psect	text40
  8507  12F7                     __ptext40:	
  8508 ;; *************** function ___ftpack *****************
  8509 ;; Defined at:
  8510 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  arg             3    3[COMMON] unsigned um
  8513 ;;  exp             1    6[COMMON] unsigned char 
  8514 ;;  sign            1    7[COMMON] unsigned char 
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;		None
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  3    3[COMMON] float 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8526 ;;      Params:         5       0       0       0       0
  8527 ;;      Locals:         0       0       0       0       0
  8528 ;;      Temps:          0       3       0       0       0
  8529 ;;      Totals:         5       3       0       0       0
  8530 ;;Total ram usage:        8 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    2
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		___awtoft
  8537 ;;		___ftadd
  8538 ;;		___ftdiv
  8539 ;;		___ftmul
  8540 ;;		___lltoft
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           
  8545                           ;psect for function ___ftpack
  8546  12F7                     ___ftpack:
  8547  12F7                     l3469:	
  8548                           ;incstack = 0
  8549                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8550                           
  8551  12F7  0876               	movf	___ftpack@exp,w
  8552  12F8  1903               	btfsc	3,2
  8553  12F9  2AFB               	goto	u4791
  8554  12FA  2AFC               	goto	u4790
  8555  12FB                     u4791:
  8556  12FB  2B03               	goto	l3473
  8557  12FC                     u4790:
  8558  12FC                     l3471:
  8559  12FC  0875               	movf	___ftpack@arg+2,w
  8560  12FD  0474               	iorwf	___ftpack@arg+1,w
  8561  12FE  0473               	iorwf	___ftpack@arg,w
  8562  12FF  1D03               	skipz
  8563  1300  2B02               	goto	u4801
  8564  1301  2B03               	goto	u4800
  8565  1302                     u4801:
  8566  1302  2B18               	goto	l3479
  8567  1303                     u4800:
  8568  1303                     l3473:
  8569  1303  3000               	movlw	0
  8570  1304  00F3               	movwf	?___ftpack
  8571  1305  3000               	movlw	0
  8572  1306  00F4               	movwf	?___ftpack+1
  8573  1307  3000               	movlw	0
  8574  1308  00F5               	movwf	?___ftpack+2
  8575  1309  2B78               	goto	l686
  8576  130A                     l3477:
  8577  130A  3001               	movlw	1
  8578  130B  1283               	bcf	3,5	;RP0=0, select bank0
  8579  130C  1303               	bcf	3,6	;RP1=0, select bank0
  8580  130D  00A0               	movwf	??___ftpack
  8581  130E  0820               	movf	??___ftpack,w
  8582  130F  07F6               	addwf	___ftpack@exp,f
  8583  1310  3001               	movlw	1
  8584  1311                     u4815:
  8585  1311  1003               	clrc
  8586  1312  0CF5               	rrf	___ftpack@arg+2,f
  8587  1313  0CF4               	rrf	___ftpack@arg+1,f
  8588  1314  0CF3               	rrf	___ftpack@arg,f
  8589  1315  3EFF               	addlw	-1
  8590  1316  1D03               	skipz
  8591  1317  2B11               	goto	u4815
  8592  1318                     l3479:
  8593  1318  30FE               	movlw	254
  8594  1319  0575               	andwf	___ftpack@arg+2,w
  8595  131A  1D03               	btfss	3,2
  8596  131B  2B1D               	goto	u4821
  8597  131C  2B1E               	goto	u4820
  8598  131D                     u4821:
  8599  131D  2B0A               	goto	l3477
  8600  131E                     u4820:
  8601  131E  2B37               	goto	l690
  8602  131F                     l3481:
  8603  131F  3001               	movlw	1
  8604  1320  1283               	bcf	3,5	;RP0=0, select bank0
  8605  1321  1303               	bcf	3,6	;RP1=0, select bank0
  8606  1322  00A0               	movwf	??___ftpack
  8607  1323  0820               	movf	??___ftpack,w
  8608  1324  07F6               	addwf	___ftpack@exp,f
  8609  1325                     l3483:
  8610  1325  3001               	movlw	1
  8611  1326  07F3               	addwf	___ftpack@arg,f
  8612  1327  3000               	movlw	0
  8613  1328  1803               	skipnc
  8614  1329  3001               	movlw	1
  8615  132A  07F4               	addwf	___ftpack@arg+1,f
  8616  132B  3000               	movlw	0
  8617  132C  1803               	skipnc
  8618  132D  3001               	movlw	1
  8619  132E  07F5               	addwf	___ftpack@arg+2,f
  8620  132F                     l3485:
  8621  132F  3001               	movlw	1
  8622  1330                     u4835:
  8623  1330  1003               	clrc
  8624  1331  0CF5               	rrf	___ftpack@arg+2,f
  8625  1332  0CF4               	rrf	___ftpack@arg+1,f
  8626  1333  0CF3               	rrf	___ftpack@arg,f
  8627  1334  3EFF               	addlw	-1
  8628  1335  1D03               	skipz
  8629  1336  2B30               	goto	u4835
  8630  1337                     l690:
  8631  1337  30FF               	movlw	255
  8632  1338  0575               	andwf	___ftpack@arg+2,w
  8633  1339  1D03               	btfss	3,2
  8634  133A  2B3C               	goto	u4841
  8635  133B  2B3D               	goto	u4840
  8636  133C                     u4841:
  8637  133C  2B1F               	goto	l3481
  8638  133D                     u4840:
  8639  133D  2B48               	goto	l3489
  8640  133E                     l3487:
  8641  133E  3001               	movlw	1
  8642  133F  02F6               	subwf	___ftpack@exp,f
  8643  1340  3001               	movlw	1
  8644  1341                     u4855:
  8645  1341  1003               	clrc
  8646  1342  0DF3               	rlf	___ftpack@arg,f
  8647  1343  0DF4               	rlf	___ftpack@arg+1,f
  8648  1344  0DF5               	rlf	___ftpack@arg+2,f
  8649  1345  3EFF               	addlw	-1
  8650  1346  1D03               	skipz
  8651  1347  2B41               	goto	u4855
  8652  1348                     l3489:
  8653  1348  1BF4               	btfsc	___ftpack@arg+1,7
  8654  1349  2B4B               	goto	u4861
  8655  134A  2B4C               	goto	u4860
  8656  134B                     u4861:
  8657  134B  2B52               	goto	l697
  8658  134C                     u4860:
  8659  134C                     l3491:
  8660  134C  3002               	movlw	2
  8661  134D  0276               	subwf	___ftpack@exp,w
  8662  134E  1803               	skipnc
  8663  134F  2B51               	goto	u4871
  8664  1350  2B52               	goto	u4870
  8665  1351                     u4871:
  8666  1351  2B3E               	goto	l3487
  8667  1352                     u4870:
  8668  1352                     l697:
  8669  1352  1876               	btfsc	___ftpack@exp,0
  8670  1353  2B55               	goto	u4881
  8671  1354  2B56               	goto	u4880
  8672  1355                     u4881:
  8673  1355  2B5C               	goto	l698
  8674  1356                     u4880:
  8675  1356                     l3493:
  8676  1356  30FF               	movlw	255
  8677  1357  05F3               	andwf	___ftpack@arg,f
  8678  1358  307F               	movlw	127
  8679  1359  05F4               	andwf	___ftpack@arg+1,f
  8680  135A  30FF               	movlw	255
  8681  135B  05F5               	andwf	___ftpack@arg+2,f
  8682  135C                     l698:
  8683  135C  1003               	clrc
  8684  135D  0CF6               	rrf	___ftpack@exp,f
  8685  135E                     l3495:
  8686  135E  0876               	movf	___ftpack@exp,w
  8687  135F  1283               	bcf	3,5	;RP0=0, select bank0
  8688  1360  1303               	bcf	3,6	;RP1=0, select bank0
  8689  1361  00A0               	movwf	??___ftpack
  8690  1362  01A1               	clrf	??___ftpack+1
  8691  1363  01A2               	clrf	??___ftpack+2
  8692  1364  3010               	movlw	16
  8693  1365                     u4895:
  8694  1365  1003               	clrc
  8695  1366  0DA0               	rlf	??___ftpack,f
  8696  1367  0DA1               	rlf	??___ftpack+1,f
  8697  1368  0DA2               	rlf	??___ftpack+2,f
  8698  1369                     u4890:
  8699  1369  3EFF               	addlw	-1
  8700  136A  1D03               	skipz
  8701  136B  2B65               	goto	u4895
  8702  136C  0820               	movf	??___ftpack,w
  8703  136D  04F3               	iorwf	___ftpack@arg,f
  8704  136E  0821               	movf	??___ftpack+1,w
  8705  136F  04F4               	iorwf	___ftpack@arg+1,f
  8706  1370  0822               	movf	??___ftpack+2,w
  8707  1371  04F5               	iorwf	___ftpack@arg+2,f
  8708  1372                     l3497:
  8709  1372  0877               	movf	___ftpack@sign,w
  8710  1373  1903               	btfsc	3,2
  8711  1374  2B76               	goto	u4901
  8712  1375  2B77               	goto	u4900
  8713  1376                     u4901:
  8714  1376  2B78               	goto	l699
  8715  1377                     u4900:
  8716  1377                     l3499:
  8717  1377  17F5               	bsf	___ftpack@arg+2,7
  8718  1378                     l699:
  8719  1378                     l686:
  8720  1378  0008               	return
  8721  1379                     __end_of___ftpack:
  8722                           
  8723                           	psect	text41
  8724  1405                     __ptext41:	
  8725 ;; *************** function _Canal_ADC *****************
  8726 ;; Defined at:
  8727 ;;		line 10 in file "ADC.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  x               2    3[COMMON] unsigned short 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  2    3[COMMON] unsigned int 
  8734 ;; Registers used:
  8735 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8741 ;;      Params:         2       0       0       0       0
  8742 ;;      Locals:         0       0       0       0       0
  8743 ;;      Temps:          0       0       0       0       0
  8744 ;;      Totals:         2       0       0       0       0
  8745 ;;Total ram usage:        2 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    2
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_ADC_1
  8752 ;;		_ADC_2
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           
  8757                           ;psect for function _Canal_ADC
  8758  1405                     _Canal_ADC:
  8759  1405                     l2535:	
  8760                           ;incstack = 0
  8761                           ; Regs used in _Canal_ADC: [wreg-fsr0h+status,2+status,0]
  8762                           
  8763                           
  8764                           ;ADC.c: 11:     switch(x){
  8765  1405  2C7D               	goto	l2539
  8766  1406                     l197:	
  8767                           ;ADC.c: 13:         case 0:
  8768                           
  8769                           
  8770                           ;ADC.c: 14:             ADCON0bits.CHS3 = 0;
  8771  1406  1283               	bcf	3,5	;RP0=0, select bank0
  8772  1407  1303               	bcf	3,6	;RP1=0, select bank0
  8773  1408  129F               	bcf	31,5	;volatile
  8774                           
  8775                           ;ADC.c: 15:             ADCON0bits.CHS2 = 0;
  8776  1409  121F               	bcf	31,4	;volatile
  8777                           
  8778                           ;ADC.c: 16:             ADCON0bits.CHS1 = 0;
  8779  140A  119F               	bcf	31,3	;volatile
  8780                           
  8781                           ;ADC.c: 17:             ADCON0bits.CHS0 = 0;
  8782  140B  111F               	bcf	31,2	;volatile
  8783                           
  8784                           ;ADC.c: 18:             break;
  8785  140C  2CB4               	goto	l215
  8786  140D                     l199:	
  8787                           ;ADC.c: 19:         case 1:
  8788                           
  8789                           
  8790                           ;ADC.c: 20:             ADCON0bits.CHS3 = 0;
  8791  140D  1283               	bcf	3,5	;RP0=0, select bank0
  8792  140E  1303               	bcf	3,6	;RP1=0, select bank0
  8793  140F  129F               	bcf	31,5	;volatile
  8794                           
  8795                           ;ADC.c: 21:             ADCON0bits.CHS2 = 0;
  8796  1410  121F               	bcf	31,4	;volatile
  8797                           
  8798                           ;ADC.c: 22:             ADCON0bits.CHS1 = 0;
  8799  1411  119F               	bcf	31,3	;volatile
  8800                           
  8801                           ;ADC.c: 23:             ADCON0bits.CHS0 = 1;
  8802  1412  151F               	bsf	31,2	;volatile
  8803                           
  8804                           ;ADC.c: 24:             break;
  8805  1413  2CB4               	goto	l215
  8806  1414                     l200:	
  8807                           ;ADC.c: 25:         case 2:
  8808                           
  8809                           
  8810                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  8811  1414  1283               	bcf	3,5	;RP0=0, select bank0
  8812  1415  1303               	bcf	3,6	;RP1=0, select bank0
  8813  1416  129F               	bcf	31,5	;volatile
  8814                           
  8815                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  8816  1417  121F               	bcf	31,4	;volatile
  8817                           
  8818                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  8819  1418  159F               	bsf	31,3	;volatile
  8820                           
  8821                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  8822  1419  111F               	bcf	31,2	;volatile
  8823                           
  8824                           ;ADC.c: 30:             break;
  8825  141A  2CB4               	goto	l215
  8826  141B                     l201:	
  8827                           ;ADC.c: 31:         case 3:
  8828                           
  8829                           
  8830                           ;ADC.c: 32:             ADCON0bits.CHS3 = 0;
  8831  141B  1283               	bcf	3,5	;RP0=0, select bank0
  8832  141C  1303               	bcf	3,6	;RP1=0, select bank0
  8833  141D  129F               	bcf	31,5	;volatile
  8834                           
  8835                           ;ADC.c: 33:             ADCON0bits.CHS2 = 0;
  8836  141E  121F               	bcf	31,4	;volatile
  8837                           
  8838                           ;ADC.c: 34:             ADCON0bits.CHS1 = 1;
  8839  141F  159F               	bsf	31,3	;volatile
  8840                           
  8841                           ;ADC.c: 35:             ADCON0bits.CHS0 = 1;
  8842  1420  151F               	bsf	31,2	;volatile
  8843                           
  8844                           ;ADC.c: 36:             break;
  8845  1421  2CB4               	goto	l215
  8846  1422                     l202:	
  8847                           ;ADC.c: 37:         case 4:
  8848                           
  8849                           
  8850                           ;ADC.c: 38:             ADCON0bits.CHS3 = 0;
  8851  1422  1283               	bcf	3,5	;RP0=0, select bank0
  8852  1423  1303               	bcf	3,6	;RP1=0, select bank0
  8853  1424  129F               	bcf	31,5	;volatile
  8854                           
  8855                           ;ADC.c: 39:             ADCON0bits.CHS2 = 1;
  8856  1425  161F               	bsf	31,4	;volatile
  8857                           
  8858                           ;ADC.c: 40:             ADCON0bits.CHS1 = 0;
  8859  1426  119F               	bcf	31,3	;volatile
  8860                           
  8861                           ;ADC.c: 41:             ADCON0bits.CHS0 = 0;
  8862  1427  111F               	bcf	31,2	;volatile
  8863                           
  8864                           ;ADC.c: 42:             break;
  8865  1428  2CB4               	goto	l215
  8866  1429                     l203:	
  8867                           ;ADC.c: 43:         case 5:
  8868                           
  8869                           
  8870                           ;ADC.c: 44:             ADCON0bits.CHS3 = 0;
  8871  1429  1283               	bcf	3,5	;RP0=0, select bank0
  8872  142A  1303               	bcf	3,6	;RP1=0, select bank0
  8873  142B  129F               	bcf	31,5	;volatile
  8874                           
  8875                           ;ADC.c: 45:             ADCON0bits.CHS2 = 1;
  8876  142C  161F               	bsf	31,4	;volatile
  8877                           
  8878                           ;ADC.c: 46:             ADCON0bits.CHS1 = 0;
  8879  142D  119F               	bcf	31,3	;volatile
  8880                           
  8881                           ;ADC.c: 47:             ADCON0bits.CHS0 = 1;
  8882  142E  151F               	bsf	31,2	;volatile
  8883                           
  8884                           ;ADC.c: 48:             break;
  8885  142F  2CB4               	goto	l215
  8886  1430                     l204:	
  8887                           ;ADC.c: 49:         case 6:
  8888                           
  8889                           
  8890                           ;ADC.c: 50:             ADCON0bits.CHS3 = 0;
  8891  1430  1283               	bcf	3,5	;RP0=0, select bank0
  8892  1431  1303               	bcf	3,6	;RP1=0, select bank0
  8893  1432  129F               	bcf	31,5	;volatile
  8894                           
  8895                           ;ADC.c: 51:             ADCON0bits.CHS2 = 1;
  8896  1433  161F               	bsf	31,4	;volatile
  8897                           
  8898                           ;ADC.c: 52:             ADCON0bits.CHS1 = 1;
  8899  1434  159F               	bsf	31,3	;volatile
  8900                           
  8901                           ;ADC.c: 53:             ADCON0bits.CHS0 = 0;
  8902  1435  111F               	bcf	31,2	;volatile
  8903                           
  8904                           ;ADC.c: 54:             break;
  8905  1436  2CB4               	goto	l215
  8906  1437                     l205:	
  8907                           ;ADC.c: 55:         case 7:
  8908                           
  8909                           
  8910                           ;ADC.c: 56:             ADCON0bits.CHS3 = 0;
  8911  1437  1283               	bcf	3,5	;RP0=0, select bank0
  8912  1438  1303               	bcf	3,6	;RP1=0, select bank0
  8913  1439  129F               	bcf	31,5	;volatile
  8914                           
  8915                           ;ADC.c: 57:             ADCON0bits.CHS2 = 1;
  8916  143A  161F               	bsf	31,4	;volatile
  8917                           
  8918                           ;ADC.c: 58:             ADCON0bits.CHS1 = 1;
  8919  143B  159F               	bsf	31,3	;volatile
  8920                           
  8921                           ;ADC.c: 59:             ADCON0bits.CHS0 = 1;
  8922  143C  151F               	bsf	31,2	;volatile
  8923                           
  8924                           ;ADC.c: 60:             break;
  8925  143D  2CB4               	goto	l215
  8926  143E                     l206:	
  8927                           ;ADC.c: 61:         case 8:
  8928                           
  8929                           
  8930                           ;ADC.c: 62:             ADCON0bits.CHS3 = 1;
  8931  143E  1283               	bcf	3,5	;RP0=0, select bank0
  8932  143F  1303               	bcf	3,6	;RP1=0, select bank0
  8933  1440  169F               	bsf	31,5	;volatile
  8934                           
  8935                           ;ADC.c: 63:             ADCON0bits.CHS2 = 0;
  8936  1441  121F               	bcf	31,4	;volatile
  8937                           
  8938                           ;ADC.c: 64:             ADCON0bits.CHS1 = 0;
  8939  1442  119F               	bcf	31,3	;volatile
  8940                           
  8941                           ;ADC.c: 65:             ADCON0bits.CHS0 = 0;
  8942  1443  111F               	bcf	31,2	;volatile
  8943                           
  8944                           ;ADC.c: 66:             break;
  8945  1444  2CB4               	goto	l215
  8946  1445                     l207:	
  8947                           ;ADC.c: 67:         case 9:
  8948                           
  8949                           
  8950                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  8951  1445  1283               	bcf	3,5	;RP0=0, select bank0
  8952  1446  1303               	bcf	3,6	;RP1=0, select bank0
  8953  1447  169F               	bsf	31,5	;volatile
  8954                           
  8955                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  8956  1448  121F               	bcf	31,4	;volatile
  8957                           
  8958                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  8959  1449  119F               	bcf	31,3	;volatile
  8960                           
  8961                           ;ADC.c: 71:             ADCON0bits.CHS0 = 1;
  8962  144A  151F               	bsf	31,2	;volatile
  8963                           
  8964                           ;ADC.c: 72:             break;
  8965  144B  2CB4               	goto	l215
  8966  144C                     l208:	
  8967                           ;ADC.c: 73:         case 10:
  8968                           
  8969                           
  8970                           ;ADC.c: 74:             ADCON0bits.CHS3 = 1;
  8971  144C  1283               	bcf	3,5	;RP0=0, select bank0
  8972  144D  1303               	bcf	3,6	;RP1=0, select bank0
  8973  144E  169F               	bsf	31,5	;volatile
  8974                           
  8975                           ;ADC.c: 75:             ADCON0bits.CHS2 = 0;
  8976  144F  121F               	bcf	31,4	;volatile
  8977                           
  8978                           ;ADC.c: 76:             ADCON0bits.CHS1 = 1;
  8979  1450  159F               	bsf	31,3	;volatile
  8980                           
  8981                           ;ADC.c: 77:             ADCON0bits.CHS0 = 0;
  8982  1451  111F               	bcf	31,2	;volatile
  8983                           
  8984                           ;ADC.c: 78:             break;
  8985  1452  2CB4               	goto	l215
  8986  1453                     l209:	
  8987                           ;ADC.c: 79:         case 11:
  8988                           
  8989                           
  8990                           ;ADC.c: 80:             ADCON0bits.CHS3 = 1;
  8991  1453  1283               	bcf	3,5	;RP0=0, select bank0
  8992  1454  1303               	bcf	3,6	;RP1=0, select bank0
  8993  1455  169F               	bsf	31,5	;volatile
  8994                           
  8995                           ;ADC.c: 81:             ADCON0bits.CHS2 = 0;
  8996  1456  121F               	bcf	31,4	;volatile
  8997                           
  8998                           ;ADC.c: 82:             ADCON0bits.CHS1 = 1;
  8999  1457  159F               	bsf	31,3	;volatile
  9000                           
  9001                           ;ADC.c: 83:             ADCON0bits.CHS0 = 1;
  9002  1458  151F               	bsf	31,2	;volatile
  9003                           
  9004                           ;ADC.c: 84:             break;
  9005  1459  2CB4               	goto	l215
  9006  145A                     l210:	
  9007                           ;ADC.c: 85:         case 12:
  9008                           
  9009                           
  9010                           ;ADC.c: 86:             ADCON0bits.CHS3 = 1;
  9011  145A  1283               	bcf	3,5	;RP0=0, select bank0
  9012  145B  1303               	bcf	3,6	;RP1=0, select bank0
  9013  145C  169F               	bsf	31,5	;volatile
  9014                           
  9015                           ;ADC.c: 87:             ADCON0bits.CHS2 = 1;
  9016  145D  161F               	bsf	31,4	;volatile
  9017                           
  9018                           ;ADC.c: 88:             ADCON0bits.CHS1 = 0;
  9019  145E  119F               	bcf	31,3	;volatile
  9020                           
  9021                           ;ADC.c: 89:             ADCON0bits.CHS0 = 0;
  9022  145F  111F               	bcf	31,2	;volatile
  9023                           
  9024                           ;ADC.c: 90:             break;
  9025  1460  2CB4               	goto	l215
  9026  1461                     l211:	
  9027                           ;ADC.c: 91:         case 13:
  9028                           
  9029                           
  9030                           ;ADC.c: 92:             ADCON0bits.CHS3 = 1;
  9031  1461  1283               	bcf	3,5	;RP0=0, select bank0
  9032  1462  1303               	bcf	3,6	;RP1=0, select bank0
  9033  1463  169F               	bsf	31,5	;volatile
  9034                           
  9035                           ;ADC.c: 93:             ADCON0bits.CHS2 = 1;
  9036  1464  161F               	bsf	31,4	;volatile
  9037                           
  9038                           ;ADC.c: 94:             ADCON0bits.CHS1 = 0;
  9039  1465  119F               	bcf	31,3	;volatile
  9040                           
  9041                           ;ADC.c: 95:             ADCON0bits.CHS0 = 1;
  9042  1466  151F               	bsf	31,2	;volatile
  9043                           
  9044                           ;ADC.c: 96:             break;
  9045  1467  2CB4               	goto	l215
  9046  1468                     l212:	
  9047                           ;ADC.c: 97:         case 14:
  9048                           
  9049                           
  9050                           ;ADC.c: 98:             ADCON0bits.CHS3 = 1;
  9051  1468  1283               	bcf	3,5	;RP0=0, select bank0
  9052  1469  1303               	bcf	3,6	;RP1=0, select bank0
  9053  146A  169F               	bsf	31,5	;volatile
  9054                           
  9055                           ;ADC.c: 99:             ADCON0bits.CHS2 = 1;
  9056  146B  161F               	bsf	31,4	;volatile
  9057                           
  9058                           ;ADC.c: 100:             ADCON0bits.CHS1 = 1;
  9059  146C  159F               	bsf	31,3	;volatile
  9060                           
  9061                           ;ADC.c: 101:             ADCON0bits.CHS0 = 0;
  9062  146D  111F               	bcf	31,2	;volatile
  9063                           
  9064                           ;ADC.c: 102:             break;
  9065  146E  2CB4               	goto	l215
  9066  146F                     l213:	
  9067                           ;ADC.c: 103:         case 15:
  9068                           
  9069                           
  9070                           ;ADC.c: 104:             ADCON0bits.CHS3 = 1;
  9071  146F  1283               	bcf	3,5	;RP0=0, select bank0
  9072  1470  1303               	bcf	3,6	;RP1=0, select bank0
  9073  1471  169F               	bsf	31,5	;volatile
  9074                           
  9075                           ;ADC.c: 105:             ADCON0bits.CHS2 = 1;
  9076  1472  161F               	bsf	31,4	;volatile
  9077                           
  9078                           ;ADC.c: 106:             ADCON0bits.CHS1 = 1;
  9079  1473  159F               	bsf	31,3	;volatile
  9080                           
  9081                           ;ADC.c: 107:             ADCON0bits.CHS0 = 1;
  9082  1474  151F               	bsf	31,2	;volatile
  9083                           
  9084                           ;ADC.c: 108:             break;
  9085  1475  2CB4               	goto	l215
  9086  1476                     l214:	
  9087                           ;ADC.c: 109:         default:
  9088                           
  9089                           
  9090                           ;ADC.c: 110:             ADCON0bits.CHS3 = 0;
  9091  1476  1283               	bcf	3,5	;RP0=0, select bank0
  9092  1477  1303               	bcf	3,6	;RP1=0, select bank0
  9093  1478  129F               	bcf	31,5	;volatile
  9094                           
  9095                           ;ADC.c: 111:             ADCON0bits.CHS2 = 0;
  9096  1479  121F               	bcf	31,4	;volatile
  9097                           
  9098                           ;ADC.c: 112:             ADCON0bits.CHS1 = 0;
  9099  147A  119F               	bcf	31,3	;volatile
  9100                           
  9101                           ;ADC.c: 113:             ADCON0bits.CHS0 = 0;
  9102  147B  111F               	bcf	31,2	;volatile
  9103                           
  9104                           ;ADC.c: 114:             break;
  9105  147C  2CB4               	goto	l215
  9106  147D                     l2539:
  9107                           
  9108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9109                           ; Switch size 1, requested type "simple"
  9110                           ; Number of cases is 1, Range of values is 0 to 0
  9111                           ; switch strategies available:
  9112                           ; Name         Instructions Cycles
  9113                           ; simple_byte            4     3 (average)
  9114                           ; direct_byte           11     8 (fixed)
  9115                           ; jumptable            260     6 (fixed)
  9116                           ;	Chosen strategy is simple_byte
  9117  147D  0874               	movf	Canal_ADC@x+1,w
  9118  147E  3A00               	xorlw	0	; case 0
  9119  147F  1903               	skipnz
  9120  1480  2C82               	goto	l4361
  9121  1481  2C76               	goto	l214
  9122  1482                     l4361:
  9123                           
  9124                           ; Switch size 1, requested type "simple"
  9125                           ; Number of cases is 16, Range of values is 0 to 15
  9126                           ; switch strategies available:
  9127                           ; Name         Instructions Cycles
  9128                           ; simple_byte           49    25 (average)
  9129                           ; direct_byte           56     8 (fixed)
  9130                           ; jumptable            260     6 (fixed)
  9131                           ;	Chosen strategy is simple_byte
  9132  1482  0873               	movf	Canal_ADC@x,w
  9133  1483  3A00               	xorlw	0	; case 0
  9134  1484  1903               	skipnz
  9135  1485  2C06               	goto	l197
  9136  1486  3A01               	xorlw	1	; case 1
  9137  1487  1903               	skipnz
  9138  1488  2C0D               	goto	l199
  9139  1489  3A03               	xorlw	3	; case 2
  9140  148A  1903               	skipnz
  9141  148B  2C14               	goto	l200
  9142  148C  3A01               	xorlw	1	; case 3
  9143  148D  1903               	skipnz
  9144  148E  2C1B               	goto	l201
  9145  148F  3A07               	xorlw	7	; case 4
  9146  1490  1903               	skipnz
  9147  1491  2C22               	goto	l202
  9148  1492  3A01               	xorlw	1	; case 5
  9149  1493  1903               	skipnz
  9150  1494  2C29               	goto	l203
  9151  1495  3A03               	xorlw	3	; case 6
  9152  1496  1903               	skipnz
  9153  1497  2C30               	goto	l204
  9154  1498  3A01               	xorlw	1	; case 7
  9155  1499  1903               	skipnz
  9156  149A  2C37               	goto	l205
  9157  149B  3A0F               	xorlw	15	; case 8
  9158  149C  1903               	skipnz
  9159  149D  2C3E               	goto	l206
  9160  149E  3A01               	xorlw	1	; case 9
  9161  149F  1903               	skipnz
  9162  14A0  2C45               	goto	l207
  9163  14A1  3A03               	xorlw	3	; case 10
  9164  14A2  1903               	skipnz
  9165  14A3  2C4C               	goto	l208
  9166  14A4  3A01               	xorlw	1	; case 11
  9167  14A5  1903               	skipnz
  9168  14A6  2C53               	goto	l209
  9169  14A7  3A07               	xorlw	7	; case 12
  9170  14A8  1903               	skipnz
  9171  14A9  2C5A               	goto	l210
  9172  14AA  3A01               	xorlw	1	; case 13
  9173  14AB  1903               	skipnz
  9174  14AC  2C61               	goto	l211
  9175  14AD  3A03               	xorlw	3	; case 14
  9176  14AE  1903               	skipnz
  9177  14AF  2C68               	goto	l212
  9178  14B0  3A01               	xorlw	1	; case 15
  9179  14B1  1903               	skipnz
  9180  14B2  2C6F               	goto	l213
  9181  14B3  2C76               	goto	l214
  9182  14B4                     l215:
  9183  14B4  0008               	return
  9184  14B5                     __end_of_Canal_ADC:
  9185                           
  9186                           	psect	text42
  9187  1DF1                     __ptext42:	
  9188 ;; *************** function _ISR *****************
  9189 ;; Defined at:
  9190 ;;		line 61 in file "lab03.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;		None
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;		None
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0, pclath, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9204 ;;      Params:         0       0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0
  9206 ;;      Temps:          3       0       0       0       0
  9207 ;;      Totals:         3       0       0       0       0
  9208 ;;Total ram usage:        3 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    1
  9211 ;; This function calls:
  9212 ;;		_Read_USART
  9213 ;; This function is called by:
  9214 ;;		Interrupt level 1
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           
  9219                           ;psect for function _ISR
  9220  1DF1                     _ISR:
  9221  1DF1                     i1l3351:
  9222                           
  9223                           ;lab03.c: 62:     if (RCIF == 1){
  9224  1DF1  1283               	bcf	3,5	;RP0=0, select bank0
  9225  1DF2  1303               	bcf	3,6	;RP1=0, select bank0
  9226  1DF3  1E8C               	btfss	12,5	;volatile
  9227  1DF4  2DF6               	goto	u473_21
  9228  1DF5  2DF7               	goto	u473_20
  9229  1DF6                     u473_21:
  9230  1DF6  2E17               	goto	i1l83
  9231  1DF7                     u473_20:
  9232  1DF7                     i1l3353:
  9233                           
  9234                           ;lab03.c: 63:         RCIF = 0;
  9235  1DF7  128C               	bcf	12,5	;volatile
  9236  1DF8                     i1l3355:
  9237                           
  9238                           ;lab03.c: 64:         LecUSART = Read_USART();
  9239  1DF8  160A  158A  24B5  160A  158A  	fcall	_Read_USART
  9240  1DFD  00F0               	movwf	??_ISR
  9241  1DFE  0870               	movf	??_ISR,w
  9242  1DFF  00FA               	movwf	_LecUSART
  9243  1E00                     i1l3357:
  9244                           
  9245                           ;lab03.c: 65:         if(LecUSART=='+'){
  9246  1E00  302B               	movlw	43
  9247  1E01  067A               	xorwf	_LecUSART,w
  9248  1E02  1D03               	btfss	3,2
  9249  1E03  2E05               	goto	u474_21
  9250  1E04  2E06               	goto	u474_20
  9251  1E05                     u474_21:
  9252  1E05  2E0D               	goto	i1l3361
  9253  1E06                     u474_20:
  9254  1E06                     i1l3359:
  9255                           
  9256                           ;lab03.c: 66:             contador++;}
  9257  1E06  3001               	movlw	1
  9258  1E07  00F0               	movwf	??_ISR
  9259  1E08  0870               	movf	??_ISR,w
  9260  1E09  1283               	bcf	3,5	;RP0=0, select bank0
  9261  1E0A  1303               	bcf	3,6	;RP1=0, select bank0
  9262  1E0B  07EC               	addwf	_contador,f
  9263  1E0C  2E17               	goto	i1l83
  9264  1E0D                     i1l3361:
  9265  1E0D  302D               	movlw	45
  9266  1E0E  067A               	xorwf	_LecUSART,w
  9267  1E0F  1D03               	btfss	3,2
  9268  1E10  2E12               	goto	u475_21
  9269  1E11  2E13               	goto	u475_20
  9270  1E12                     u475_21:
  9271  1E12  2E17               	goto	i1l83
  9272  1E13                     u475_20:
  9273  1E13                     i1l3363:
  9274                           
  9275                           ;lab03.c: 68:             contador--;}
  9276  1E13  3001               	movlw	1
  9277  1E14  1283               	bcf	3,5	;RP0=0, select bank0
  9278  1E15  1303               	bcf	3,6	;RP1=0, select bank0
  9279  1E16  02EC               	subwf	_contador,f
  9280  1E17                     i1l83:
  9281  1E17  0872               	movf	??_ISR+2,w
  9282  1E18  008A               	movwf	10
  9283  1E19  0E71               	swapf	??_ISR+1,w
  9284  1E1A  0083               	movwf	3
  9285  1E1B  0EFE               	swapf	btemp,f
  9286  1E1C  0E7E               	swapf	btemp,w
  9287  1E1D  0009               	retfie
  9288  1E1E                     __end_of_ISR:
  9289                           
  9290                           	psect	intentry
  9291  0004                     __pintentry:	
  9292                           ;incstack = 0
  9293                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9294                           
  9295  0004                     interrupt_function:
  9296  007E                     saved_w	set	btemp
  9297  0004  00FE               	movwf	btemp
  9298  0005  0E03               	swapf	3,w
  9299  0006  00F1               	movwf	??_ISR+1
  9300  0007  080A               	movf	10,w
  9301  0008  00F2               	movwf	??_ISR+2
  9302  0009  160A  158A  2DF1   	ljmp	_ISR
  9303                           
  9304                           	psect	text43
  9305  1CB5                     __ptext43:	
  9306 ;; *************** function _Read_USART *****************
  9307 ;; Defined at:
  9308 ;;		line 37 in file "USART.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      unsigned char 
  9315 ;; Registers used:
  9316 ;;		wreg
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9322 ;;      Params:         0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0
  9325 ;;      Totals:         0       0       0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_ISR
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           
  9336                           ;psect for function _Read_USART
  9337  1CB5                     _Read_USART:
  9338  1CB5                     i1l2951:	
  9339                           ;incstack = 0
  9340                           ; Regs used in _Read_USART: [wreg]
  9341                           
  9342  1CB5                     i1l253:	
  9343                           ;USART.c: 38:   while(!RCIF);
  9344                           
  9345  1CB5  1283               	bcf	3,5	;RP0=0, select bank0
  9346  1CB6  1303               	bcf	3,6	;RP1=0, select bank0
  9347  1CB7  1E8C               	btfss	12,5	;volatile
  9348  1CB8  2CBA               	goto	u410_21
  9349  1CB9  2CBB               	goto	u410_20
  9350  1CBA                     u410_21:
  9351  1CBA  2CB5               	goto	i1l253
  9352  1CBB                     u410_20:
  9353  1CBB                     i1l2953:
  9354                           
  9355                           ;USART.c: 39:   return RCREG;
  9356  1CBB  081A               	movf	26,w	;volatile
  9357  1CBC                     i1l256:
  9358  1CBC  0008               	return
  9359  1CBD                     __end_of_Read_USART:
  9360  007E                     btemp	set	126	;btemp
  9361  007E                     wtemp0	set	126
  9362                           
  9363                           	psect	config
  9364                           
  9365                           ;Config register CONFIG1 @ 0x2007
  9366                           ;	Oscillator Selection bits
  9367                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  9368                           ;	Watchdog Timer Enable bit
  9369                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9370                           ;	Power-up Timer Enable bit
  9371                           ;	PWRTE = OFF, PWRT disabled
  9372                           ;	RE3/MCLR pin function select bit
  9373                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9374                           ;	Code Protection bit
  9375                           ;	CP = OFF, Program memory code protection is disabled
  9376                           ;	Data Code Protection bit
  9377                           ;	CPD = OFF, Data memory code protection is disabled
  9378                           ;	Brown Out Reset Selection bits
  9379                           ;	BOREN = ON, BOR enabled
  9380                           ;	Internal External Switchover bit
  9381                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9382                           ;	Fail-Safe Clock Monitor Enabled bit
  9383                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9384                           ;	Low Voltage Programming Enable bit
  9385                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9386                           ;	In-Circuit Debugger Mode bit
  9387                           ;	DEBUG = 0x1, unprogrammed default
  9388  2007                     	org	8199
  9389  2007  23D1               	dw	9169
  9390                           
  9391                           ;Config register CONFIG2 @ 0x2008
  9392                           ;	Brown-out Reset Selection bit
  9393                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9394                           ;	Flash Program Memory Self Write Enable bits
  9395                           ;	WRT = OFF, Write protection off
  9396  2008                     	org	8200
  9397  2008  3FFF               	dw	16383
  9398                           
  9399                           	psect	text1_split_1
  9400  0021                     u6000:
  9401  0021                     l4063:
  9402  0021  1683               	bsf	3,5	;RP0=1, select bank1
  9403  0022  1303               	bcf	3,6	;RP1=0, select bank1
  9404  0023  083A               	movf	(sprintf@fval+2)^(0+128),w
  9405  0024  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  9406  0025  0438               	iorwf	sprintf@fval^(0+128),w
  9407  0026  1903               	skipnz
  9408  0027  2829               	goto	u6011
  9409  0028  282A               	goto	u6010
  9410  0029                     u6011:
  9411  0029  28BA               	goto	l4083
  9412  002A                     u6010:
  9413  002A                     l4065:
  9414  002A  0838               	movf	sprintf@fval^(0+128),w
  9415  002B  1283               	bcf	3,5	;RP0=0, select bank0
  9416  002C  1303               	bcf	3,6	;RP1=0, select bank0
  9417  002D  00C6               	movwf	___fttol@f1
  9418  002E  1683               	bsf	3,5	;RP0=1, select bank1
  9419  002F  1303               	bcf	3,6	;RP1=0, select bank1
  9420  0030  0839               	movf	(sprintf@fval+1)^(0+128),w
  9421  0031  1283               	bcf	3,5	;RP0=0, select bank0
  9422  0032  1303               	bcf	3,6	;RP1=0, select bank0
  9423  0033  00C7               	movwf	___fttol@f1+1
  9424  0034  1683               	bsf	3,5	;RP0=1, select bank1
  9425  0035  1303               	bcf	3,6	;RP1=0, select bank1
  9426  0036  083A               	movf	(sprintf@fval+2)^(0+128),w
  9427  0037  1283               	bcf	3,5	;RP0=0, select bank0
  9428  0038  1303               	bcf	3,6	;RP1=0, select bank0
  9429  0039  00C8               	movwf	___fttol@f1+2
  9430  003A  160A  118A  2379  120A  118A  	fcall	___fttol
  9431  003F  1283               	bcf	3,5	;RP0=0, select bank0
  9432  0040  1303               	bcf	3,6	;RP1=0, select bank0
  9433  0041  0849               	movf	?___fttol+3,w
  9434  0042  0448               	iorwf	?___fttol+2,w
  9435  0043  0447               	iorwf	?___fttol+1,w
  9436  0044  0446               	iorwf	?___fttol,w
  9437  0045  1D03               	skipz
  9438  0046  2848               	goto	u6021
  9439  0047  2849               	goto	u6020
  9440  0048                     u6021:
  9441  0048  28BA               	goto	l4083
  9442  0049                     u6020:
  9443  0049                     l4067:
  9444  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9445  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9446  004B  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9447  004C  3A80               	xorlw	128
  9448  004D  00FF               	movwf	btemp+1
  9449  004E  3080               	movlw	128
  9450  004F  027F               	subwf	btemp+1,w
  9451  0050  1D03               	skipz
  9452  0051  2854               	goto	u6035
  9453  0052  3002               	movlw	2
  9454  0053  0236               	subwf	sprintf@eexp^(0+128),w
  9455  0054                     u6035:
  9456  0054  1C03               	skipc
  9457  0055  2857               	goto	u6031
  9458  0056  2858               	goto	u6030
  9459  0057                     u6031:
  9460  0057  28BA               	goto	l4083
  9461  0058                     u6030:
  9462  0058                     l4069:
  9463                           
  9464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9465  0058  1683               	bsf	3,5	;RP0=1, select bank1
  9466  0059  1303               	bcf	3,6	;RP1=0, select bank1
  9467  005A  082E               	movf	sprintf@tmpval^(0+128),w
  9468  005B  00F3               	movwf	___ftge@ff1
  9469  005C  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9470  005D  00F4               	movwf	___ftge@ff1+1
  9471  005E  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9472  005F  00F5               	movwf	___ftge@ff1+2
  9473  0060  3070               	movlw	112
  9474  0061  00F6               	movwf	___ftge@ff2
  9475  0062  3089               	movlw	137
  9476  0063  00F7               	movwf	___ftge@ff2+1
  9477  0064  3040               	movlw	64
  9478  0065  00F8               	movwf	___ftge@ff2+2
  9479  0066  160A  158A  2651  120A  118A  	fcall	___ftge
  9480  006B  1803               	btfsc	3,0
  9481  006C  286E               	goto	u6041
  9482  006D  286F               	goto	u6040
  9483  006E                     u6041:
  9484  006E  2878               	goto	l4073
  9485  006F                     u6040:
  9486  006F                     l4071:
  9487                           
  9488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9489  006F  30F7               	movlw	247
  9490  0070  1683               	bsf	3,5	;RP0=1, select bank1
  9491  0071  1303               	bcf	3,6	;RP1=0, select bank1
  9492  0072  07B6               	addwf	sprintf@eexp^(0+128),f
  9493  0073  1803               	skipnc
  9494  0074  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9495  0075  30FF               	movlw	255
  9496  0076  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9497                           
  9498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9499  0077  2880               	goto	l4075
  9500  0078                     l4073:
  9501                           
  9502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9503  0078  30F8               	movlw	248
  9504  0079  1683               	bsf	3,5	;RP0=1, select bank1
  9505  007A  1303               	bcf	3,6	;RP1=0, select bank1
  9506  007B  07B6               	addwf	sprintf@eexp^(0+128),f
  9507  007C  1803               	skipnc
  9508  007D  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9509  007E  30FF               	movlw	255
  9510  007F  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9511  0080                     l4075:
  9512                           
  9513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  9514  0080  0836               	movf	sprintf@eexp^(0+128),w
  9515  0081  120A  158A  2545  120A  118A  	fcall	_scale
  9516  0086  1283               	bcf	3,5	;RP0=0, select bank0
  9517  0087  1303               	bcf	3,6	;RP1=0, select bank0
  9518  0088  083D               	movf	?_scale,w
  9519  0089  1683               	bsf	3,5	;RP0=1, select bank1
  9520  008A  1303               	bcf	3,6	;RP1=0, select bank1
  9521  008B  00AE               	movwf	sprintf@tmpval^(0+128)
  9522  008C  1283               	bcf	3,5	;RP0=0, select bank0
  9523  008D  1303               	bcf	3,6	;RP1=0, select bank0
  9524  008E  083E               	movf	?_scale+1,w
  9525  008F  1683               	bsf	3,5	;RP0=1, select bank1
  9526  0090  1303               	bcf	3,6	;RP1=0, select bank1
  9527  0091  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9528  0092  1283               	bcf	3,5	;RP0=0, select bank0
  9529  0093  1303               	bcf	3,6	;RP1=0, select bank0
  9530  0094  083F               	movf	?_scale+2,w
  9531  0095  1683               	bsf	3,5	;RP0=1, select bank1
  9532  0096  1303               	bcf	3,6	;RP1=0, select bank1
  9533  0097  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9534  0098                     l4079:	
  9535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9536                           
  9537  0098  0838               	movf	sprintf@fval^(0+128),w
  9538  0099  00F3               	movwf	__tdiv_to_l_@f1
  9539  009A  0839               	movf	(sprintf@fval+1)^(0+128),w
  9540  009B  00F4               	movwf	__tdiv_to_l_@f1+1
  9541  009C  083A               	movf	(sprintf@fval+2)^(0+128),w
  9542  009D  00F5               	movwf	__tdiv_to_l_@f1+2
  9543  009E  082E               	movf	sprintf@tmpval^(0+128),w
  9544  009F  00F6               	movwf	__tdiv_to_l_@f2
  9545  00A0  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9546  00A1  00F7               	movwf	__tdiv_to_l_@f2+1
  9547  00A2  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9548  00A3  00F8               	movwf	__tdiv_to_l_@f2+2
  9549  00A4  160A  118A  24B5  120A  118A  	fcall	__tdiv_to_l_
  9550  00A9  0876               	movf	?__tdiv_to_l_+3,w
  9551  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  9552  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  9553  00AC  00B5               	movwf	(sprintf@val+3)^(0+128)
  9554  00AD  0875               	movf	?__tdiv_to_l_+2,w
  9555  00AE  00B4               	movwf	(sprintf@val+2)^(0+128)
  9556  00AF  0874               	movf	?__tdiv_to_l_+1,w
  9557  00B0  00B3               	movwf	(sprintf@val+1)^(0+128)
  9558  00B1  0873               	movf	?__tdiv_to_l_,w
  9559  00B2  00B2               	movwf	sprintf@val^(0+128)
  9560  00B3                     l4081:
  9561                           
  9562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9563  00B3  3000               	movlw	0
  9564  00B4  00B8               	movwf	sprintf@fval^(0+128)
  9565  00B5  3000               	movlw	0
  9566  00B6  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9567  00B7  3000               	movlw	0
  9568  00B8  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9569                           
  9570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9571  00B9  2937               	goto	l4087
  9572  00BA                     l4083:
  9573                           
  9574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9575  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  9576  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  9577  00BC  0838               	movf	sprintf@fval^(0+128),w
  9578  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9579  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9580  00BF  00C6               	movwf	___fttol@f1
  9581  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9582  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9583  00C2  0839               	movf	(sprintf@fval+1)^(0+128),w
  9584  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9585  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9586  00C5  00C7               	movwf	___fttol@f1+1
  9587  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  9588  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  9589  00C8  083A               	movf	(sprintf@fval+2)^(0+128),w
  9590  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9591  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9592  00CB  00C8               	movwf	___fttol@f1+2
  9593  00CC  160A  118A  2379  120A  118A  	fcall	___fttol
  9594  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9595  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9596  00D3  0849               	movf	?___fttol+3,w
  9597  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  9598  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  9599  00D6  00B5               	movwf	(sprintf@val+3)^(0+128)
  9600  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9601  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9602  00D9  0848               	movf	?___fttol+2,w
  9603  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9604  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9605  00DC  00B4               	movwf	(sprintf@val+2)^(0+128)
  9606  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  9607  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  9608  00DF  0847               	movf	?___fttol+1,w
  9609  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9610  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9611  00E2  00B3               	movwf	(sprintf@val+1)^(0+128)
  9612  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9613  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9614  00E5  0846               	movf	?___fttol,w
  9615  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9616  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9617  00E8  00B2               	movwf	sprintf@val^(0+128)
  9618                           
  9619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9620  00E9  0835               	movf	(sprintf@val+3)^(0+128),w
  9621  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  9622  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  9623  00EC  00A6               	movwf	___lltoft@c+3
  9624  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  9625  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  9626  00EF  0834               	movf	(sprintf@val+2)^(0+128),w
  9627  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  9628  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  9629  00F2  00A5               	movwf	___lltoft@c+2
  9630  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  9631  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  9632  00F5  0833               	movf	(sprintf@val+1)^(0+128),w
  9633  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  9634  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  9635  00F8  00A4               	movwf	___lltoft@c+1
  9636  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  9637  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  9638  00FB  0832               	movf	sprintf@val^(0+128),w
  9639  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  9640  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  9641  00FE  00A3               	movwf	___lltoft@c
  9642  00FF  160A  158A  261E  120A  118A  	fcall	___lltoft
  9643  0104  1283               	bcf	3,5	;RP0=0, select bank0
  9644  0105  1303               	bcf	3,6	;RP1=0, select bank0
  9645  0106  0823               	movf	?___lltoft,w
  9646  0107  00DA               	movwf	___ftsub@f2
  9647  0108  0824               	movf	?___lltoft+1,w
  9648  0109  00DB               	movwf	___ftsub@f2+1
  9649  010A  0825               	movf	?___lltoft+2,w
  9650  010B  00DC               	movwf	___ftsub@f2+2
  9651  010C  1683               	bsf	3,5	;RP0=1, select bank1
  9652  010D  1303               	bcf	3,6	;RP1=0, select bank1
  9653  010E  0838               	movf	sprintf@fval^(0+128),w
  9654  010F  1283               	bcf	3,5	;RP0=0, select bank0
  9655  0110  1303               	bcf	3,6	;RP1=0, select bank0
  9656  0111  00DD               	movwf	___ftsub@f1
  9657  0112  1683               	bsf	3,5	;RP0=1, select bank1
  9658  0113  1303               	bcf	3,6	;RP1=0, select bank1
  9659  0114  0839               	movf	(sprintf@fval+1)^(0+128),w
  9660  0115  1283               	bcf	3,5	;RP0=0, select bank0
  9661  0116  1303               	bcf	3,6	;RP1=0, select bank0
  9662  0117  00DE               	movwf	___ftsub@f1+1
  9663  0118  1683               	bsf	3,5	;RP0=1, select bank1
  9664  0119  1303               	bcf	3,6	;RP1=0, select bank1
  9665  011A  083A               	movf	(sprintf@fval+2)^(0+128),w
  9666  011B  1283               	bcf	3,5	;RP0=0, select bank0
  9667  011C  1303               	bcf	3,6	;RP1=0, select bank0
  9668  011D  00DF               	movwf	___ftsub@f1+2
  9669  011E  160A  158A  2556  120A  118A  	fcall	___ftsub
  9670  0123  1283               	bcf	3,5	;RP0=0, select bank0
  9671  0124  1303               	bcf	3,6	;RP1=0, select bank0
  9672  0125  085A               	movf	?___ftsub,w
  9673  0126  1683               	bsf	3,5	;RP0=1, select bank1
  9674  0127  1303               	bcf	3,6	;RP1=0, select bank1
  9675  0128  00B8               	movwf	sprintf@fval^(0+128)
  9676  0129  1283               	bcf	3,5	;RP0=0, select bank0
  9677  012A  1303               	bcf	3,6	;RP1=0, select bank0
  9678  012B  085B               	movf	?___ftsub+1,w
  9679  012C  1683               	bsf	3,5	;RP0=1, select bank1
  9680  012D  1303               	bcf	3,6	;RP1=0, select bank1
  9681  012E  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9682  012F  1283               	bcf	3,5	;RP0=0, select bank0
  9683  0130  1303               	bcf	3,6	;RP1=0, select bank0
  9684  0131  085C               	movf	?___ftsub+2,w
  9685  0132  1683               	bsf	3,5	;RP0=1, select bank1
  9686  0133  1303               	bcf	3,6	;RP1=0, select bank1
  9687  0134  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9688  0135                     l4085:
  9689                           
  9690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9691  0135  01B6               	clrf	sprintf@eexp^(0+128)
  9692  0136  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9693  0137                     l4087:
  9694                           
  9695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9696  0137  01BE               	clrf	sprintf@c^(0+128)
  9697  0138  0ABE               	incf	sprintf@c^(0+128),f
  9698  0139                     l4093:
  9699                           
  9700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9701  0139  083E               	movf	sprintf@c^(0+128),w
  9702  013A  00A0               	movwf	??_sprintf^(0+128)
  9703  013B  3001               	movlw	1
  9704  013C                     u6055:
  9705  013C  1003               	clrc
  9706  013D  0DA0               	rlf	??_sprintf^(0+128),f
  9707  013E  3EFF               	addlw	-1
  9708  013F  1D03               	skipz
  9709  0140  293C               	goto	u6055
  9710  0141  1003               	clrc
  9711  0142  0D20               	rlf	??_sprintf^(0+128),w
  9712  0143  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9713  0144  0084               	movwf	4
  9714  0145  160A  118A  200A  120A  118A  	fcall	stringdir
  9715  014A  00A1               	movwf	(??_sprintf+1)^(0+128)
  9716  014B  160A  118A  200A  120A  118A  	fcall	stringdir
  9717  0150  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9718  0151  160A  118A  200A  120A  118A  	fcall	stringdir
  9719  0156  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9720  0157  160A  118A  200A  120A  118A  	fcall	stringdir
  9721  015C  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9722  015D  0824               	movf	(??_sprintf+4)^(0+128),w
  9723  015E  0235               	subwf	(sprintf@val+3)^(0+128),w
  9724  015F  1D03               	skipz
  9725  0160  296B               	goto	u6065
  9726  0161  0823               	movf	(??_sprintf+3)^(0+128),w
  9727  0162  0234               	subwf	(sprintf@val+2)^(0+128),w
  9728  0163  1D03               	skipz
  9729  0164  296B               	goto	u6065
  9730  0165  0822               	movf	(??_sprintf+2)^(0+128),w
  9731  0166  0233               	subwf	(sprintf@val+1)^(0+128),w
  9732  0167  1D03               	skipz
  9733  0168  296B               	goto	u6065
  9734  0169  0821               	movf	(??_sprintf+1)^(0+128),w
  9735  016A  0232               	subwf	sprintf@val^(0+128),w
  9736  016B                     u6065:
  9737  016B  1803               	skipnc
  9738  016C  296E               	goto	u6061
  9739  016D  296F               	goto	u6060
  9740  016E                     u6061:
  9741  016E  2970               	goto	l4097
  9742  016F                     u6060:
  9743  016F  297A               	goto	l4099
  9744  0170                     l4097:
  9745  0170  3001               	movlw	1
  9746  0171  00A0               	movwf	??_sprintf^(0+128)
  9747  0172  0820               	movf	??_sprintf^(0+128),w
  9748  0173  07BE               	addwf	sprintf@c^(0+128),f
  9749  0174  300A               	movlw	10
  9750  0175  063E               	xorwf	sprintf@c^(0+128),w
  9751  0176  1D03               	btfss	3,2
  9752  0177  2979               	goto	u6071
  9753  0178  297A               	goto	u6070
  9754  0179                     u6071:
  9755  0179  2939               	goto	l4093
  9756  017A                     u6070:
  9757  017A                     l4099:
  9758                           
  9759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9760  017A  083E               	movf	sprintf@c^(0+128),w
  9761  017B  073C               	addwf	sprintf@prec^(0+128),w
  9762  017C  00A0               	movwf	??_sprintf^(0+128)
  9763  017D  083D               	movf	(sprintf@prec+1)^(0+128),w
  9764  017E  1803               	skipnc
  9765  017F  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9766  0180  00A1               	movwf	(??_sprintf^(0+128)+1)
  9767  0181  0836               	movf	sprintf@eexp^(0+128),w
  9768  0182  0720               	addwf	??_sprintf^(0+128),w
  9769  0183  00A2               	movwf	(??_sprintf+2)^(0+128)
  9770  0184  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9771  0185  1803               	skipnc
  9772  0186  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9773  0187  0721               	addwf	(??_sprintf+1)^(0+128),w
  9774  0188  00A3               	movwf	(??_sprintf+3)^(0+128)
  9775  0189  0822               	movf	(??_sprintf+2)^(0+128),w
  9776  018A  02AC               	subwf	sprintf@width^(0+128),f
  9777  018B  0823               	movf	(??_sprintf+3)^(0+128),w
  9778  018C  1C03               	skipc
  9779  018D  03AD               	decf	(sprintf@width+1)^(0+128),f
  9780  018E  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9781                           
  9782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9783  018F  083C               	movf	sprintf@prec^(0+128),w
  9784  0190  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9785  0191  1903               	btfsc	3,2
  9786  0192  2994               	goto	u6081
  9787  0193  2995               	goto	u6080
  9788  0194                     u6081:
  9789  0194  299B               	goto	l4103
  9790  0195                     u6080:
  9791  0195                     l4101:
  9792                           
  9793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9794  0195  30FF               	movlw	255
  9795  0196  07AC               	addwf	sprintf@width^(0+128),f
  9796  0197  1803               	skipnc
  9797  0198  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9798  0199  30FF               	movlw	255
  9799  019A  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9800  019B                     l4103:
  9801                           
  9802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9803  019B  3003               	movlw	3
  9804  019C  052A               	andwf	sprintf@flag^(0+128),w
  9805  019D  00A0               	movwf	??_sprintf^(0+128)
  9806  019E  3000               	movlw	0
  9807  019F  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9808  01A0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9809  01A1  0820               	movf	??_sprintf^(0+128),w
  9810  01A2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9811  01A3  1903               	btfsc	3,2
  9812  01A4  29A6               	goto	u6091
  9813  01A5  29A7               	goto	u6090
  9814  01A6                     u6091:
  9815  01A6  29BC               	goto	l4113
  9816  01A7                     u6090:
  9817  01A7                     l4105:
  9818                           
  9819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9820  01A7  30FF               	movlw	255
  9821  01A8  07AC               	addwf	sprintf@width^(0+128),f
  9822  01A9  1803               	skipnc
  9823  01AA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9824  01AB  30FF               	movlw	255
  9825  01AC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9826  01AD  29BC               	goto	l4113
  9827  01AE                     l4107:
  9828                           
  9829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9830  01AE  3020               	movlw	32
  9831  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  9832  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  9833  01B1  00A0               	movwf	??_sprintf^(0+128)
  9834  01B2  083B               	movf	sprintf@sp^(0+128),w
  9835  01B3  0084               	movwf	4
  9836  01B4  0820               	movf	??_sprintf^(0+128),w
  9837  01B5  1383               	bcf	3,7	;select IRP bank0
  9838  01B6  0080               	movwf	0
  9839  01B7                     l4109:
  9840  01B7  3001               	movlw	1
  9841  01B8  00A0               	movwf	??_sprintf^(0+128)
  9842  01B9  0820               	movf	??_sprintf^(0+128),w
  9843  01BA  07BB               	addwf	sprintf@sp^(0+128),f
  9844  01BB  29A7               	goto	l4105
  9845  01BC                     l4113:
  9846                           
  9847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9848  01BC  082D               	movf	(sprintf@width+1)^(0+128),w
  9849  01BD  3A80               	xorlw	128
  9850  01BE  00FF               	movwf	btemp+1
  9851  01BF  3080               	movlw	128
  9852  01C0  027F               	subwf	btemp+1,w
  9853  01C1  1D03               	skipz
  9854  01C2  29C5               	goto	u6105
  9855  01C3  3001               	movlw	1
  9856  01C4  022C               	subwf	sprintf@width^(0+128),w
  9857  01C5                     u6105:
  9858  01C5  1803               	skipnc
  9859  01C6  29C8               	goto	u6101
  9860  01C7  29C9               	goto	u6100
  9861  01C8                     u6101:
  9862  01C8  29AE               	goto	l4107
  9863  01C9                     u6100:
  9864  01C9                     l4115:
  9865                           
  9866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9867  01C9  3003               	movlw	3
  9868  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  9869  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  9870  01CC  052A               	andwf	sprintf@flag^(0+128),w
  9871  01CD  00A0               	movwf	??_sprintf^(0+128)
  9872  01CE  3000               	movlw	0
  9873  01CF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9874  01D0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9875  01D1  0820               	movf	??_sprintf^(0+128),w
  9876  01D2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9877  01D3  1903               	btfsc	3,2
  9878  01D4  29D6               	goto	u6111
  9879  01D5  29D7               	goto	u6110
  9880  01D6                     u6111:
  9881  01D6  2A89               	goto	l420
  9882  01D7                     u6110:
  9883  01D7                     l4117:
  9884                           
  9885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9886  01D7  302D               	movlw	45
  9887  01D8  00A0               	movwf	??_sprintf^(0+128)
  9888  01D9  083B               	movf	sprintf@sp^(0+128),w
  9889  01DA  0084               	movwf	4
  9890  01DB  0820               	movf	??_sprintf^(0+128),w
  9891  01DC  1383               	bcf	3,7	;select IRP bank0
  9892  01DD  0080               	movwf	0
  9893  01DE                     l4119:
  9894  01DE  3001               	movlw	1
  9895  01DF  00A0               	movwf	??_sprintf^(0+128)
  9896  01E0  0820               	movf	??_sprintf^(0+128),w
  9897  01E1  07BB               	addwf	sprintf@sp^(0+128),f
  9898  01E2  2A89               	goto	l420
  9899  01E3                     l4121:
  9900                           
  9901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9902  01E3  083E               	movf	sprintf@c^(0+128),w
  9903  01E4  00A0               	movwf	??_sprintf^(0+128)
  9904  01E5  3001               	movlw	1
  9905  01E6                     u6125:
  9906  01E6  1003               	clrc
  9907  01E7  0DA0               	rlf	??_sprintf^(0+128),f
  9908  01E8  3EFF               	addlw	-1
  9909  01E9  1D03               	skipz
  9910  01EA  29E6               	goto	u6125
  9911  01EB  1003               	clrc
  9912  01EC  0D20               	rlf	??_sprintf^(0+128),w
  9913  01ED  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9914  01EE  0084               	movwf	4
  9915  01EF  160A  118A  200A  120A  118A  	fcall	stringdir
  9916  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  9917  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  9918  01F6  00A0               	movwf	___lldiv@divisor
  9919  01F7  160A  118A  200A  120A  118A  	fcall	stringdir
  9920  01FC  00A1               	movwf	___lldiv@divisor+1
  9921  01FD  160A  118A  200A  120A  118A  	fcall	stringdir
  9922  0202  00A2               	movwf	___lldiv@divisor+2
  9923  0203  160A  118A  200A  120A  118A  	fcall	stringdir
  9924  0208  00A3               	movwf	___lldiv@divisor+3
  9925  0209  1683               	bsf	3,5	;RP0=1, select bank1
  9926  020A  1303               	bcf	3,6	;RP1=0, select bank1
  9927  020B  0835               	movf	(sprintf@val+3)^(0+128),w
  9928  020C  1283               	bcf	3,5	;RP0=0, select bank0
  9929  020D  1303               	bcf	3,6	;RP1=0, select bank0
  9930  020E  00A7               	movwf	___lldiv@dividend+3
  9931  020F  1683               	bsf	3,5	;RP0=1, select bank1
  9932  0210  1303               	bcf	3,6	;RP1=0, select bank1
  9933  0211  0834               	movf	(sprintf@val+2)^(0+128),w
  9934  0212  1283               	bcf	3,5	;RP0=0, select bank0
  9935  0213  1303               	bcf	3,6	;RP1=0, select bank0
  9936  0214  00A6               	movwf	___lldiv@dividend+2
  9937  0215  1683               	bsf	3,5	;RP0=1, select bank1
  9938  0216  1303               	bcf	3,6	;RP1=0, select bank1
  9939  0217  0833               	movf	(sprintf@val+1)^(0+128),w
  9940  0218  1283               	bcf	3,5	;RP0=0, select bank0
  9941  0219  1303               	bcf	3,6	;RP1=0, select bank0
  9942  021A  00A5               	movwf	___lldiv@dividend+1
  9943  021B  1683               	bsf	3,5	;RP0=1, select bank1
  9944  021C  1303               	bcf	3,6	;RP1=0, select bank1
  9945  021D  0832               	movf	sprintf@val^(0+128),w
  9946  021E  1283               	bcf	3,5	;RP0=0, select bank0
  9947  021F  1303               	bcf	3,6	;RP1=0, select bank0
  9948  0220  00A4               	movwf	___lldiv@dividend
  9949  0221  160A  118A  21BC  120A  118A  	fcall	___lldiv
  9950  0226  1283               	bcf	3,5	;RP0=0, select bank0
  9951  0227  1303               	bcf	3,6	;RP1=0, select bank0
  9952  0228  0823               	movf	?___lldiv+3,w
  9953  0229  1683               	bsf	3,5	;RP0=1, select bank1
  9954  022A  1303               	bcf	3,6	;RP1=0, select bank1
  9955  022B  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9956  022C  1283               	bcf	3,5	;RP0=0, select bank0
  9957  022D  1303               	bcf	3,6	;RP1=0, select bank0
  9958  022E  0822               	movf	?___lldiv+2,w
  9959  022F  1683               	bsf	3,5	;RP0=1, select bank1
  9960  0230  1303               	bcf	3,6	;RP1=0, select bank1
  9961  0231  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9962  0232  1283               	bcf	3,5	;RP0=0, select bank0
  9963  0233  1303               	bcf	3,6	;RP1=0, select bank0
  9964  0234  0821               	movf	?___lldiv+1,w
  9965  0235  1683               	bsf	3,5	;RP0=1, select bank1
  9966  0236  1303               	bcf	3,6	;RP1=0, select bank1
  9967  0237  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9968  0238  1283               	bcf	3,5	;RP0=0, select bank0
  9969  0239  1303               	bcf	3,6	;RP1=0, select bank0
  9970  023A  0820               	movf	?___lldiv,w
  9971  023B  1683               	bsf	3,5	;RP0=1, select bank1
  9972  023C  1303               	bcf	3,6	;RP1=0, select bank1
  9973  023D  00AE               	movwf	sprintf@tmpval^(0+128)
  9974  023E                     l4123:
  9975                           
  9976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9977  023E  3000               	movlw	0
  9978  023F  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0240  1303               	bcf	3,6	;RP1=0, select bank0
  9980  0241  00AB               	movwf	___llmod@divisor+3
  9981  0242  3000               	movlw	0
  9982  0243  00AA               	movwf	___llmod@divisor+2
  9983  0244  3000               	movlw	0
  9984  0245  00A9               	movwf	___llmod@divisor+1
  9985  0246  300A               	movlw	10
  9986  0247  00A8               	movwf	___llmod@divisor
  9987  0248  1683               	bsf	3,5	;RP0=1, select bank1
  9988  0249  1303               	bcf	3,6	;RP1=0, select bank1
  9989  024A  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9990  024B  1283               	bcf	3,5	;RP0=0, select bank0
  9991  024C  1303               	bcf	3,6	;RP1=0, select bank0
  9992  024D  00AF               	movwf	___llmod@dividend+3
  9993  024E  1683               	bsf	3,5	;RP0=1, select bank1
  9994  024F  1303               	bcf	3,6	;RP1=0, select bank1
  9995  0250  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9996  0251  1283               	bcf	3,5	;RP0=0, select bank0
  9997  0252  1303               	bcf	3,6	;RP1=0, select bank0
  9998  0253  00AE               	movwf	___llmod@dividend+2
  9999  0254  1683               	bsf	3,5	;RP0=1, select bank1
 10000  0255  1303               	bcf	3,6	;RP1=0, select bank1
 10001  0256  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10002  0257  1283               	bcf	3,5	;RP0=0, select bank0
 10003  0258  1303               	bcf	3,6	;RP1=0, select bank0
 10004  0259  00AD               	movwf	___llmod@dividend+1
 10005  025A  1683               	bsf	3,5	;RP0=1, select bank1
 10006  025B  1303               	bcf	3,6	;RP1=0, select bank1
 10007  025C  082E               	movf	sprintf@tmpval^(0+128),w
 10008  025D  1283               	bcf	3,5	;RP0=0, select bank0
 10009  025E  1303               	bcf	3,6	;RP1=0, select bank0
 10010  025F  00AC               	movwf	___llmod@dividend
 10011  0260  160A  158A  2751  120A  118A  	fcall	___llmod
 10012  0265  1283               	bcf	3,5	;RP0=0, select bank0
 10013  0266  1303               	bcf	3,6	;RP1=0, select bank0
 10014  0267  082B               	movf	?___llmod+3,w
 10015  0268  1683               	bsf	3,5	;RP0=1, select bank1
 10016  0269  1303               	bcf	3,6	;RP1=0, select bank1
 10017  026A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10018  026B  1283               	bcf	3,5	;RP0=0, select bank0
 10019  026C  1303               	bcf	3,6	;RP1=0, select bank0
 10020  026D  082A               	movf	?___llmod+2,w
 10021  026E  1683               	bsf	3,5	;RP0=1, select bank1
 10022  026F  1303               	bcf	3,6	;RP1=0, select bank1
 10023  0270  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10024  0271  1283               	bcf	3,5	;RP0=0, select bank0
 10025  0272  1303               	bcf	3,6	;RP1=0, select bank0
 10026  0273  0829               	movf	?___llmod+1,w
 10027  0274  1683               	bsf	3,5	;RP0=1, select bank1
 10028  0275  1303               	bcf	3,6	;RP1=0, select bank1
 10029  0276  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10030  0277  1283               	bcf	3,5	;RP0=0, select bank0
 10031  0278  1303               	bcf	3,6	;RP1=0, select bank0
 10032  0279  0828               	movf	?___llmod,w
 10033  027A  1683               	bsf	3,5	;RP0=1, select bank1
 10034  027B  1303               	bcf	3,6	;RP1=0, select bank1
 10035  027C  00AE               	movwf	sprintf@tmpval^(0+128)
 10036  027D                     l4125:
 10037                           
 10038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10039  027D  082E               	movf	sprintf@tmpval^(0+128),w
 10040  027E  3E30               	addlw	48
 10041  027F  00A0               	movwf	??_sprintf^(0+128)
 10042  0280  083B               	movf	sprintf@sp^(0+128),w
 10043  0281  0084               	movwf	4
 10044  0282  0820               	movf	??_sprintf^(0+128),w
 10045  0283  1383               	bcf	3,7	;select IRP bank0
 10046  0284  0080               	movwf	0
 10047  0285  3001               	movlw	1
 10048  0286  00A0               	movwf	??_sprintf^(0+128)
 10049  0287  0820               	movf	??_sprintf^(0+128),w
 10050  0288  07BB               	addwf	sprintf@sp^(0+128),f
 10051  0289                     l420:	
 10052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10053                           
 10054                           
 10055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10056  0289  3001               	movlw	1
 10057  028A  02BE               	subwf	sprintf@c^(0+128),f
 10058  028B  0A3E               	incf	sprintf@c^(0+128),w
 10059  028C  1D03               	btfss	3,2
 10060  028D  2A8F               	goto	u6131
 10061  028E  2A90               	goto	u6130
 10062  028F                     u6131:
 10063  028F  29E3               	goto	l4121
 10064  0290                     u6130:
 10065  0290  2AA4               	goto	l4133
 10066  0291                     l4127:
 10067                           
 10068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10069  0291  3030               	movlw	48
 10070  0292  1683               	bsf	3,5	;RP0=1, select bank1
 10071  0293  1303               	bcf	3,6	;RP1=0, select bank1
 10072  0294  00A0               	movwf	??_sprintf^(0+128)
 10073  0295  083B               	movf	sprintf@sp^(0+128),w
 10074  0296  0084               	movwf	4
 10075  0297  0820               	movf	??_sprintf^(0+128),w
 10076  0298  1383               	bcf	3,7	;select IRP bank0
 10077  0299  0080               	movwf	0
 10078  029A                     l4129:
 10079  029A  3001               	movlw	1
 10080  029B  00A0               	movwf	??_sprintf^(0+128)
 10081  029C  0820               	movf	??_sprintf^(0+128),w
 10082  029D  07BB               	addwf	sprintf@sp^(0+128),f
 10083  029E                     l4131:
 10084                           
 10085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10086  029E  30FF               	movlw	255
 10087  029F  07B6               	addwf	sprintf@eexp^(0+128),f
 10088  02A0  1803               	skipnc
 10089  02A1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
 10090  02A2  30FF               	movlw	255
 10091  02A3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
 10092  02A4                     l4133:
 10093                           
 10094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10095  02A4  0837               	movf	(sprintf@eexp+1)^(0+128),w
 10096  02A5  3A80               	xorlw	128
 10097  02A6  00FF               	movwf	btemp+1
 10098  02A7  3080               	movlw	128
 10099  02A8  027F               	subwf	btemp+1,w
 10100  02A9  1D03               	skipz
 10101  02AA  2AAD               	goto	u6145
 10102  02AB  3001               	movlw	1
 10103  02AC  0236               	subwf	sprintf@eexp^(0+128),w
 10104  02AD                     u6145:
 10105  02AD  1803               	skipnc
 10106  02AE  2AB0               	goto	u6141
 10107  02AF  2AB1               	goto	u6140
 10108  02B0                     u6141:
 10109  02B0  2A91               	goto	l4127
 10110  02B1                     u6140:
 10111  02B1                     l4135:
 10112                           
 10113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10114  02B1  1683               	bsf	3,5	;RP0=1, select bank1
 10115  02B2  1303               	bcf	3,6	;RP1=0, select bank1
 10116  02B3  083D               	movf	(sprintf@prec+1)^(0+128),w
 10117  02B4  3A80               	xorlw	128
 10118  02B5  00FF               	movwf	btemp+1
 10119  02B6  3080               	movlw	128
 10120  02B7  027F               	subwf	btemp+1,w
 10121  02B8  1D03               	skipz
 10122  02B9  2ABC               	goto	u6155
 10123  02BA  3009               	movlw	9
 10124  02BB  023C               	subwf	sprintf@prec^(0+128),w
 10125  02BC                     u6155:
 10126  02BC  1C03               	skipc
 10127  02BD  2ABF               	goto	u6151
 10128  02BE  2AC0               	goto	u6150
 10129  02BF                     u6151:
 10130  02BF  2AC7               	goto	l4139
 10131  02C0                     u6150:
 10132  02C0                     l4137:
 10133                           
 10134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10135  02C0  3008               	movlw	8
 10136  02C1  1683               	bsf	3,5	;RP0=1, select bank1
 10137  02C2  1303               	bcf	3,6	;RP1=0, select bank1
 10138  02C3  00A0               	movwf	??_sprintf^(0+128)
 10139  02C4  0820               	movf	??_sprintf^(0+128),w
 10140  02C5  00BE               	movwf	sprintf@c^(0+128)
 10141  02C6  2ACD               	goto	l427
 10142  02C7                     l4139:
 10143                           
 10144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10145  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 10146  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 10147  02C9  083C               	movf	sprintf@prec^(0+128),w
 10148  02CA  00A0               	movwf	??_sprintf^(0+128)
 10149  02CB  0820               	movf	??_sprintf^(0+128),w
 10150  02CC  00BE               	movwf	sprintf@c^(0+128)
 10151  02CD                     l427:
 10152                           
 10153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10154  02CD  083E               	movf	sprintf@c^(0+128),w
 10155  02CE  00A0               	movwf	??_sprintf^(0+128)
 10156  02CF  01A1               	clrf	(??_sprintf^(0+128)+1)
 10157  02D0  0820               	movf	??_sprintf^(0+128),w
 10158  02D1  02BC               	subwf	sprintf@prec^(0+128),f
 10159  02D2  0821               	movf	(??_sprintf+1)^(0+128),w
 10160  02D3  1C03               	skipc
 10161  02D4  03BD               	decf	(sprintf@prec+1)^(0+128),f
 10162  02D5  02BD               	subwf	(sprintf@prec+1)^(0+128),f
 10163  02D6                     l4141:
 10164                           
 10165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10166  02D6  083E               	movf	sprintf@c^(0+128),w
 10167  02D7  1903               	btfsc	3,2
 10168  02D8  2ADA               	goto	u6161
 10169  02D9  2ADB               	goto	u6160
 10170  02DA                     u6161:
 10171  02DA  2AE6               	goto	l4147
 10172  02DB                     u6160:
 10173  02DB                     l4143:
 10174                           
 10175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10176  02DB  302E               	movlw	46
 10177  02DC  00A0               	movwf	??_sprintf^(0+128)
 10178  02DD  083B               	movf	sprintf@sp^(0+128),w
 10179  02DE  0084               	movwf	4
 10180  02DF  0820               	movf	??_sprintf^(0+128),w
 10181  02E0  1383               	bcf	3,7	;select IRP bank0
 10182  02E1  0080               	movwf	0
 10183  02E2                     l4145:
 10184  02E2  3001               	movlw	1
 10185  02E3  00A0               	movwf	??_sprintf^(0+128)
 10186  02E4  0820               	movf	??_sprintf^(0+128),w
 10187  02E5  07BB               	addwf	sprintf@sp^(0+128),f
 10188  02E6                     l4147:
 10189                           
 10190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10191  02E6  083E               	movf	sprintf@c^(0+128),w
 10192  02E7  120A  158A  2545  120A  118A  	fcall	_scale
 10193  02EC  1283               	bcf	3,5	;RP0=0, select bank0
 10194  02ED  1303               	bcf	3,6	;RP1=0, select bank0
 10195  02EE  083D               	movf	?_scale,w
 10196  02EF  1683               	bsf	3,5	;RP0=1, select bank1
 10197  02F0  1303               	bcf	3,6	;RP1=0, select bank1
 10198  02F1  00A6               	movwf	_sprintf$1024^(0+128)
 10199  02F2  1283               	bcf	3,5	;RP0=0, select bank0
 10200  02F3  1303               	bcf	3,6	;RP1=0, select bank0
 10201  02F4  083E               	movf	?_scale+1,w
 10202  02F5  1683               	bsf	3,5	;RP0=1, select bank1
 10203  02F6  1303               	bcf	3,6	;RP1=0, select bank1
 10204  02F7  00A7               	movwf	(_sprintf$1024+1)^(0+128)
 10205  02F8  1283               	bcf	3,5	;RP0=0, select bank0
 10206  02F9  1303               	bcf	3,6	;RP1=0, select bank0
 10207  02FA  083F               	movf	?_scale+2,w
 10208  02FB  1683               	bsf	3,5	;RP0=1, select bank1
 10209  02FC  1303               	bcf	3,6	;RP1=0, select bank1
 10210  02FD  00A8               	movwf	(_sprintf$1024+2)^(0+128)
 10211  02FE                     l4149:
 10212                           
 10213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10214  02FE  0826               	movf	_sprintf$1024^(0+128),w
 10215  02FF  1283               	bcf	3,5	;RP0=0, select bank0
 10216  0300  1303               	bcf	3,6	;RP1=0, select bank0
 10217  0301  00B0               	movwf	___ftmul@f2
 10218  0302  1683               	bsf	3,5	;RP0=1, select bank1
 10219  0303  1303               	bcf	3,6	;RP1=0, select bank1
 10220  0304  0827               	movf	(_sprintf$1024+1)^(0+128),w
 10221  0305  1283               	bcf	3,5	;RP0=0, select bank0
 10222  0306  1303               	bcf	3,6	;RP1=0, select bank0
 10223  0307  00B1               	movwf	___ftmul@f2+1
 10224  0308  1683               	bsf	3,5	;RP0=1, select bank1
 10225  0309  1303               	bcf	3,6	;RP1=0, select bank1
 10226  030A  0828               	movf	(_sprintf$1024+2)^(0+128),w
 10227  030B  1283               	bcf	3,5	;RP0=0, select bank0
 10228  030C  1303               	bcf	3,6	;RP1=0, select bank0
 10229  030D  00B2               	movwf	___ftmul@f2+2
 10230  030E  1683               	bsf	3,5	;RP0=1, select bank1
 10231  030F  1303               	bcf	3,6	;RP1=0, select bank1
 10232  0310  0838               	movf	sprintf@fval^(0+128),w
 10233  0311  1283               	bcf	3,5	;RP0=0, select bank0
 10234  0312  1303               	bcf	3,6	;RP1=0, select bank0
 10235  0313  00AD               	movwf	___ftmul@f1
 10236  0314  1683               	bsf	3,5	;RP0=1, select bank1
 10237  0315  1303               	bcf	3,6	;RP1=0, select bank1
 10238  0316  0839               	movf	(sprintf@fval+1)^(0+128),w
 10239  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10240  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10241  0319  00AE               	movwf	___ftmul@f1+1
 10242  031A  1683               	bsf	3,5	;RP0=1, select bank1
 10243  031B  1303               	bcf	3,6	;RP1=0, select bank1
 10244  031C  083A               	movf	(sprintf@fval+2)^(0+128),w
 10245  031D  1283               	bcf	3,5	;RP0=0, select bank0
 10246  031E  1303               	bcf	3,6	;RP1=0, select bank0
 10247  031F  00AF               	movwf	___ftmul@f1+2
 10248  0320  160A  118A  2634  120A  118A  	fcall	___ftmul
 10249  0325  1283               	bcf	3,5	;RP0=0, select bank0
 10250  0326  1303               	bcf	3,6	;RP1=0, select bank0
 10251  0327  082D               	movf	?___ftmul,w
 10252  0328  00C6               	movwf	___fttol@f1
 10253  0329  082E               	movf	?___ftmul+1,w
 10254  032A  00C7               	movwf	___fttol@f1+1
 10255  032B  082F               	movf	?___ftmul+2,w
 10256  032C  00C8               	movwf	___fttol@f1+2
 10257  032D  160A  118A  2379  120A  118A  	fcall	___fttol
 10258  0332  1283               	bcf	3,5	;RP0=0, select bank0
 10259  0333  1303               	bcf	3,6	;RP1=0, select bank0
 10260  0334  0849               	movf	?___fttol+3,w
 10261  0335  1683               	bsf	3,5	;RP0=1, select bank1
 10262  0336  1303               	bcf	3,6	;RP1=0, select bank1
 10263  0337  00B5               	movwf	(sprintf@val+3)^(0+128)
 10264  0338  1283               	bcf	3,5	;RP0=0, select bank0
 10265  0339  1303               	bcf	3,6	;RP1=0, select bank0
 10266  033A  0848               	movf	?___fttol+2,w
 10267  033B  1683               	bsf	3,5	;RP0=1, select bank1
 10268  033C  1303               	bcf	3,6	;RP1=0, select bank1
 10269  033D  00B4               	movwf	(sprintf@val+2)^(0+128)
 10270  033E  1283               	bcf	3,5	;RP0=0, select bank0
 10271  033F  1303               	bcf	3,6	;RP1=0, select bank0
 10272  0340  0847               	movf	?___fttol+1,w
 10273  0341  1683               	bsf	3,5	;RP0=1, select bank1
 10274  0342  1303               	bcf	3,6	;RP1=0, select bank1
 10275  0343  00B3               	movwf	(sprintf@val+1)^(0+128)
 10276  0344  1283               	bcf	3,5	;RP0=0, select bank0
 10277  0345  1303               	bcf	3,6	;RP1=0, select bank0
 10278  0346  0846               	movf	?___fttol,w
 10279  0347  1683               	bsf	3,5	;RP0=1, select bank1
 10280  0348  1303               	bcf	3,6	;RP1=0, select bank1
 10281  0349  00B2               	movwf	sprintf@val^(0+128)
 10282                           
 10283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10284  034A  2C4C               	goto	l4159
 10285  034B                     l4151:
 10286                           
 10287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10288  034B  083E               	movf	sprintf@c^(0+128),w
 10289  034C  00A0               	movwf	??_sprintf^(0+128)
 10290  034D  3001               	movlw	1
 10291  034E                     u6175:
 10292  034E  1003               	clrc
 10293  034F  0DA0               	rlf	??_sprintf^(0+128),f
 10294  0350  3EFF               	addlw	-1
 10295  0351  1D03               	skipz
 10296  0352  2B4E               	goto	u6175
 10297  0353  1003               	clrc
 10298  0354  0D20               	rlf	??_sprintf^(0+128),w
 10299  0355  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10300  0356  0084               	movwf	4
 10301  0357  160A  118A  200A  120A  118A  	fcall	stringdir
 10302  035C  1283               	bcf	3,5	;RP0=0, select bank0
 10303  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10304  035E  00A0               	movwf	___lldiv@divisor
 10305  035F  160A  118A  200A  120A  118A  	fcall	stringdir
 10306  0364  00A1               	movwf	___lldiv@divisor+1
 10307  0365  160A  118A  200A  120A  118A  	fcall	stringdir
 10308  036A  00A2               	movwf	___lldiv@divisor+2
 10309  036B  160A  118A  200A  120A  118A  	fcall	stringdir
 10310  0370  00A3               	movwf	___lldiv@divisor+3
 10311  0371  1683               	bsf	3,5	;RP0=1, select bank1
 10312  0372  1303               	bcf	3,6	;RP1=0, select bank1
 10313  0373  0835               	movf	(sprintf@val+3)^(0+128),w
 10314  0374  1283               	bcf	3,5	;RP0=0, select bank0
 10315  0375  1303               	bcf	3,6	;RP1=0, select bank0
 10316  0376  00A7               	movwf	___lldiv@dividend+3
 10317  0377  1683               	bsf	3,5	;RP0=1, select bank1
 10318  0378  1303               	bcf	3,6	;RP1=0, select bank1
 10319  0379  0834               	movf	(sprintf@val+2)^(0+128),w
 10320  037A  1283               	bcf	3,5	;RP0=0, select bank0
 10321  037B  1303               	bcf	3,6	;RP1=0, select bank0
 10322  037C  00A6               	movwf	___lldiv@dividend+2
 10323  037D  1683               	bsf	3,5	;RP0=1, select bank1
 10324  037E  1303               	bcf	3,6	;RP1=0, select bank1
 10325  037F  0833               	movf	(sprintf@val+1)^(0+128),w
 10326  0380  1283               	bcf	3,5	;RP0=0, select bank0
 10327  0381  1303               	bcf	3,6	;RP1=0, select bank0
 10328  0382  00A5               	movwf	___lldiv@dividend+1
 10329  0383  1683               	bsf	3,5	;RP0=1, select bank1
 10330  0384  1303               	bcf	3,6	;RP1=0, select bank1
 10331  0385  0832               	movf	sprintf@val^(0+128),w
 10332  0386  1283               	bcf	3,5	;RP0=0, select bank0
 10333  0387  1303               	bcf	3,6	;RP1=0, select bank0
 10334  0388  00A4               	movwf	___lldiv@dividend
 10335  0389  160A  118A  21BC  120A  118A  	fcall	___lldiv
 10336  038E  1283               	bcf	3,5	;RP0=0, select bank0
 10337  038F  1303               	bcf	3,6	;RP1=0, select bank0
 10338  0390  0823               	movf	?___lldiv+3,w
 10339  0391  1683               	bsf	3,5	;RP0=1, select bank1
 10340  0392  1303               	bcf	3,6	;RP1=0, select bank1
 10341  0393  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10342  0394  1283               	bcf	3,5	;RP0=0, select bank0
 10343  0395  1303               	bcf	3,6	;RP1=0, select bank0
 10344  0396  0822               	movf	?___lldiv+2,w
 10345  0397  1683               	bsf	3,5	;RP0=1, select bank1
 10346  0398  1303               	bcf	3,6	;RP1=0, select bank1
 10347  0399  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10348  039A  1283               	bcf	3,5	;RP0=0, select bank0
 10349  039B  1303               	bcf	3,6	;RP1=0, select bank0
 10350  039C  0821               	movf	?___lldiv+1,w
 10351  039D  1683               	bsf	3,5	;RP0=1, select bank1
 10352  039E  1303               	bcf	3,6	;RP1=0, select bank1
 10353  039F  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10354  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 10355  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 10356  03A2  0820               	movf	?___lldiv,w
 10357  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10358  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10359  03A5  00AE               	movwf	sprintf@tmpval^(0+128)
 10360  03A6                     l4153:
 10361                           
 10362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10363  03A6  3000               	movlw	0
 10364  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10365  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10366  03A9  00AB               	movwf	___llmod@divisor+3
 10367  03AA  3000               	movlw	0
 10368  03AB  00AA               	movwf	___llmod@divisor+2
 10369  03AC  3000               	movlw	0
 10370  03AD  00A9               	movwf	___llmod@divisor+1
 10371  03AE  300A               	movlw	10
 10372  03AF  00A8               	movwf	___llmod@divisor
 10373  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10374  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10375  03B2  0831               	movf	(sprintf@tmpval+3)^(0+128),w
 10376  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 10377  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 10378  03B5  00AF               	movwf	___llmod@dividend+3
 10379  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10380  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10381  03B8  0830               	movf	(sprintf@tmpval+2)^(0+128),w
 10382  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10383  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10384  03BB  00AE               	movwf	___llmod@dividend+2
 10385  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10386  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10387  03BE  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10388  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 10389  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 10390  03C1  00AD               	movwf	___llmod@dividend+1
 10391  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10392  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10393  03C4  082E               	movf	sprintf@tmpval^(0+128),w
 10394  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10395  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10396  03C7  00AC               	movwf	___llmod@dividend
 10397  03C8  160A  158A  2751  120A  118A  	fcall	___llmod
 10398  03CD  1283               	bcf	3,5	;RP0=0, select bank0
 10399  03CE  1303               	bcf	3,6	;RP1=0, select bank0
 10400  03CF  082B               	movf	?___llmod+3,w
 10401  03D0  1683               	bsf	3,5	;RP0=1, select bank1
 10402  03D1  1303               	bcf	3,6	;RP1=0, select bank1
 10403  03D2  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10404  03D3  1283               	bcf	3,5	;RP0=0, select bank0
 10405  03D4  1303               	bcf	3,6	;RP1=0, select bank0
 10406  03D5  082A               	movf	?___llmod+2,w
 10407  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 10408  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 10409  03D8  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10410  03D9  1283               	bcf	3,5	;RP0=0, select bank0
 10411  03DA  1303               	bcf	3,6	;RP1=0, select bank0
 10412  03DB  0829               	movf	?___llmod+1,w
 10413  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 10414  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 10415  03DE  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10416  03DF  1283               	bcf	3,5	;RP0=0, select bank0
 10417  03E0  1303               	bcf	3,6	;RP1=0, select bank0
 10418  03E1  0828               	movf	?___llmod,w
 10419  03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10420  03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10421  03E4  00AE               	movwf	sprintf@tmpval^(0+128)
 10422  03E5                     l4155:
 10423                           
 10424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10425  03E5  082E               	movf	sprintf@tmpval^(0+128),w
 10426  03E6  3E30               	addlw	48
 10427  03E7  00A0               	movwf	??_sprintf^(0+128)
 10428  03E8  083B               	movf	sprintf@sp^(0+128),w
 10429  03E9  0084               	movwf	4
 10430  03EA  0820               	movf	??_sprintf^(0+128),w
 10431  03EB  1383               	bcf	3,7	;select IRP bank0
 10432  03EC  0080               	movwf	0
 10433  03ED  3001               	movlw	1
 10434  03EE  00A0               	movwf	??_sprintf^(0+128)
 10435  03EF  0820               	movf	??_sprintf^(0+128),w
 10436  03F0  07BB               	addwf	sprintf@sp^(0+128),f
 10437  03F1                     l4157:
 10438                           
 10439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10440  03F1  083E               	movf	sprintf@c^(0+128),w
 10441  03F2  00A0               	movwf	??_sprintf^(0+128)
 10442  03F3  3001               	movlw	1
 10443  03F4                     u6185:
 10444  03F4  1003               	clrc
 10445  03F5  0DA0               	rlf	??_sprintf^(0+128),f
 10446  03F6  3EFF               	addlw	-1
 10447  03F7  1D03               	skipz
 10448  03F8  2BF4               	goto	u6185
 10449  03F9  1003               	clrc
 10450  03FA  0D20               	rlf	??_sprintf^(0+128),w
 10451  03FB  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10452  03FC  0084               	movwf	4
 10453  03FD  160A  118A  200A  120A  118A  	fcall	stringdir
 10454  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10455  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10456  0404  00A8               	movwf	___llmod@divisor
 10457  0405  160A  118A  200A  120A  118A  	fcall	stringdir
 10458  040A  00A9               	movwf	___llmod@divisor+1
 10459  040B  160A  118A  200A  120A  118A  	fcall	stringdir
 10460  0410  00AA               	movwf	___llmod@divisor+2
 10461  0411  160A  118A  200A  120A  118A  	fcall	stringdir
 10462  0416  00AB               	movwf	___llmod@divisor+3
 10463  0417  1683               	bsf	3,5	;RP0=1, select bank1
 10464  0418  1303               	bcf	3,6	;RP1=0, select bank1
 10465  0419  0835               	movf	(sprintf@val+3)^(0+128),w
 10466  041A  1283               	bcf	3,5	;RP0=0, select bank0
 10467  041B  1303               	bcf	3,6	;RP1=0, select bank0
 10468  041C  00AF               	movwf	___llmod@dividend+3
 10469  041D  1683               	bsf	3,5	;RP0=1, select bank1
 10470  041E  1303               	bcf	3,6	;RP1=0, select bank1
 10471  041F  0834               	movf	(sprintf@val+2)^(0+128),w
 10472  0420  1283               	bcf	3,5	;RP0=0, select bank0
 10473  0421  1303               	bcf	3,6	;RP1=0, select bank0
 10474  0422  00AE               	movwf	___llmod@dividend+2
 10475  0423  1683               	bsf	3,5	;RP0=1, select bank1
 10476  0424  1303               	bcf	3,6	;RP1=0, select bank1
 10477  0425  0833               	movf	(sprintf@val+1)^(0+128),w
 10478  0426  1283               	bcf	3,5	;RP0=0, select bank0
 10479  0427  1303               	bcf	3,6	;RP1=0, select bank0
 10480  0428  00AD               	movwf	___llmod@dividend+1
 10481  0429  1683               	bsf	3,5	;RP0=1, select bank1
 10482  042A  1303               	bcf	3,6	;RP1=0, select bank1
 10483  042B  0832               	movf	sprintf@val^(0+128),w
 10484  042C  1283               	bcf	3,5	;RP0=0, select bank0
 10485  042D  1303               	bcf	3,6	;RP1=0, select bank0
 10486  042E  00AC               	movwf	___llmod@dividend
 10487  042F  160A  158A  2751  120A  118A  	fcall	___llmod
 10488  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10489  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10490  0436  082B               	movf	?___llmod+3,w
 10491  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10492  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10493  0439  00B5               	movwf	(sprintf@val+3)^(0+128)
 10494  043A  1283               	bcf	3,5	;RP0=0, select bank0
 10495  043B  1303               	bcf	3,6	;RP1=0, select bank0
 10496  043C  082A               	movf	?___llmod+2,w
 10497  043D  1683               	bsf	3,5	;RP0=1, select bank1
 10498  043E  1303               	bcf	3,6	;RP1=0, select bank1
 10499  043F  00B4               	movwf	(sprintf@val+2)^(0+128)
 10500  0440  1283               	bcf	3,5	;RP0=0, select bank0
 10501  0441  1303               	bcf	3,6	;RP1=0, select bank0
 10502  0442  0829               	movf	?___llmod+1,w
 10503  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10504  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10505  0445  00B3               	movwf	(sprintf@val+1)^(0+128)
 10506  0446  1283               	bcf	3,5	;RP0=0, select bank0
 10507  0447  1303               	bcf	3,6	;RP1=0, select bank0
 10508  0448  0828               	movf	?___llmod,w
 10509  0449  1683               	bsf	3,5	;RP0=1, select bank1
 10510  044A  1303               	bcf	3,6	;RP1=0, select bank1
 10511  044B  00B2               	movwf	sprintf@val^(0+128)
 10512  044C                     l4159:
 10513                           
 10514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10515  044C  3001               	movlw	1
 10516  044D  02BE               	subwf	sprintf@c^(0+128),f
 10517  044E  0A3E               	incf	sprintf@c^(0+128),w
 10518  044F  1D03               	btfss	3,2
 10519  0450  2C52               	goto	u6191
 10520  0451  2C53               	goto	u6190
 10521  0452                     u6191:
 10522  0452  2B4B               	goto	l4151
 10523  0453                     u6190:
 10524  0453  2C65               	goto	l4167
 10525  0454                     l4161:
 10526                           
 10527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10528  0454  3030               	movlw	48
 10529  0455  00A0               	movwf	??_sprintf^(0+128)
 10530  0456  083B               	movf	sprintf@sp^(0+128),w
 10531  0457  0084               	movwf	4
 10532  0458  0820               	movf	??_sprintf^(0+128),w
 10533  0459  1383               	bcf	3,7	;select IRP bank0
 10534  045A  0080               	movwf	0
 10535  045B                     l4163:
 10536  045B  3001               	movlw	1
 10537  045C  00A0               	movwf	??_sprintf^(0+128)
 10538  045D  0820               	movf	??_sprintf^(0+128),w
 10539  045E  07BB               	addwf	sprintf@sp^(0+128),f
 10540  045F                     l4165:
 10541                           
 10542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10543  045F  30FF               	movlw	255
 10544  0460  07BC               	addwf	sprintf@prec^(0+128),f
 10545  0461  1803               	skipnc
 10546  0462  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10547  0463  30FF               	movlw	255
 10548  0464  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10549  0465                     l4167:
 10550                           
 10551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10552  0465  083C               	movf	sprintf@prec^(0+128),w
 10553  0466  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10554  0467  1D03               	btfss	3,2
 10555  0468  2C6A               	goto	u6201
 10556  0469  2C6B               	goto	u6200
 10557  046A                     u6201:
 10558  046A  2C54               	goto	l4161
 10559  046B                     u6200:
 10560  046B  2E1B               	goto	l4247
 10561  046C                     l4169:
 10562                           
 10563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10564  046C  0829               	movf	sprintf@ap^(0+128),w
 10565  046D  0084               	movwf	4
 10566  046E  1383               	bcf	3,7	;select IRP bank0
 10567  046F  0800               	movf	0,w
 10568  0470  00A0               	movwf	??_sprintf^(0+128)
 10569  0471  0A84               	incf	4,f
 10570  0472  0800               	movf	0,w
 10571  0473  00A1               	movwf	(??_sprintf^(0+128)+1)
 10572  0474  0820               	movf	??_sprintf^(0+128),w
 10573  0475  00B2               	movwf	sprintf@val^(0+128)
 10574  0476  0821               	movf	(??_sprintf+1)^(0+128),w
 10575  0477  00B3               	movwf	(sprintf@val+1)^(0+128)
 10576  0478  3000               	movlw	0
 10577  0479  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
 10578  047A  30FF               	movlw	255
 10579  047B  00B4               	movwf	(sprintf@val+2)^(0+128)
 10580  047C  00B5               	movwf	(sprintf@val+3)^(0+128)
 10581  047D                     l4171:
 10582  047D  3002               	movlw	2
 10583  047E  00A0               	movwf	??_sprintf^(0+128)
 10584  047F  0820               	movf	??_sprintf^(0+128),w
 10585  0480  07A9               	addwf	sprintf@ap^(0+128),f
 10586  0481                     l4173:
 10587                           
 10588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10589  0481  1FB5               	btfss	(sprintf@val+3)^(0+128),7
 10590  0482  2C84               	goto	u6211
 10591  0483  2C85               	goto	u6210
 10592  0484                     u6211:
 10593  0484  2C94               	goto	l4179
 10594  0485                     u6210:
 10595  0485                     l4175:
 10596                           
 10597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10598  0485  3003               	movlw	3
 10599  0486  04AA               	iorwf	sprintf@flag^(0+128),f
 10600  0487  3000               	movlw	0
 10601  0488  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
 10602  0489                     l4177:
 10603                           
 10604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10605  0489  09B2               	comf	sprintf@val^(0+128),f
 10606  048A  09B3               	comf	(sprintf@val+1)^(0+128),f
 10607  048B  09B4               	comf	(sprintf@val+2)^(0+128),f
 10608  048C  09B5               	comf	(sprintf@val+3)^(0+128),f
 10609  048D  0AB2               	incf	sprintf@val^(0+128),f
 10610  048E  1903               	skipnz
 10611  048F  0AB3               	incf	(sprintf@val+1)^(0+128),f
 10612  0490  1903               	skipnz
 10613  0491  0AB4               	incf	(sprintf@val+2)^(0+128),f
 10614  0492  1903               	skipnz
 10615  0493  0AB5               	incf	(sprintf@val+3)^(0+128),f
 10616  0494                     l4179:
 10617                           
 10618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10619  0494  083C               	movf	sprintf@prec^(0+128),w
 10620  0495  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10621  0496  1D03               	btfss	3,2
 10622  0497  2C99               	goto	u6221
 10623  0498  2C9A               	goto	u6220
 10624  0499                     u6221:
 10625  0499  2CA8               	goto	l4185
 10626  049A                     u6220:
 10627  049A                     l4181:
 10628  049A  0835               	movf	(sprintf@val+3)^(0+128),w
 10629  049B  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10630  049C  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10631  049D  0432               	iorwf	sprintf@val^(0+128),w
 10632  049E  1D03               	skipz
 10633  049F  2CA1               	goto	u6231
 10634  04A0  2CA2               	goto	u6230
 10635  04A1                     u6231:
 10636  04A1  2CA8               	goto	l4185
 10637  04A2                     u6230:
 10638  04A2                     l4183:
 10639                           
 10640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10641  04A2  3001               	movlw	1
 10642  04A3  07BC               	addwf	sprintf@prec^(0+128),f
 10643  04A4  1803               	skipnc
 10644  04A5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10645  04A6  3000               	movlw	0
 10646  04A7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10647  04A8                     l4185:
 10648                           
 10649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10650  04A8  01BE               	clrf	sprintf@c^(0+128)
 10651  04A9  0ABE               	incf	sprintf@c^(0+128),f
 10652  04AA                     l4191:
 10653                           
 10654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10655  04AA  083E               	movf	sprintf@c^(0+128),w
 10656  04AB  00A0               	movwf	??_sprintf^(0+128)
 10657  04AC  3001               	movlw	1
 10658  04AD                     u6245:
 10659  04AD  1003               	clrc
 10660  04AE  0DA0               	rlf	??_sprintf^(0+128),f
 10661  04AF  3EFF               	addlw	-1
 10662  04B0  1D03               	skipz
 10663  04B1  2CAD               	goto	u6245
 10664  04B2  1003               	clrc
 10665  04B3  0D20               	rlf	??_sprintf^(0+128),w
 10666  04B4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10667  04B5  0084               	movwf	4
 10668  04B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10669  04BB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10670  04BC  160A  118A  200A  120A  118A  	fcall	stringdir
 10671  04C1  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
 10672  04C2  160A  118A  200A  120A  118A  	fcall	stringdir
 10673  04C7  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
 10674  04C8  160A  118A  200A  120A  118A  	fcall	stringdir
 10675  04CD  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
 10676  04CE  0824               	movf	(??_sprintf+4)^(0+128),w
 10677  04CF  0235               	subwf	(sprintf@val+3)^(0+128),w
 10678  04D0  1D03               	skipz
 10679  04D1  2CDC               	goto	u6255
 10680  04D2  0823               	movf	(??_sprintf+3)^(0+128),w
 10681  04D3  0234               	subwf	(sprintf@val+2)^(0+128),w
 10682  04D4  1D03               	skipz
 10683  04D5  2CDC               	goto	u6255
 10684  04D6  0822               	movf	(??_sprintf+2)^(0+128),w
 10685  04D7  0233               	subwf	(sprintf@val+1)^(0+128),w
 10686  04D8  1D03               	skipz
 10687  04D9  2CDC               	goto	u6255
 10688  04DA  0821               	movf	(??_sprintf+1)^(0+128),w
 10689  04DB  0232               	subwf	sprintf@val^(0+128),w
 10690  04DC                     u6255:
 10691  04DC  1803               	skipnc
 10692  04DD  2CDF               	goto	u6251
 10693  04DE  2CE0               	goto	u6250
 10694  04DF                     u6251:
 10695  04DF  2CE1               	goto	l4195
 10696  04E0                     u6250:
 10697  04E0  2CEB               	goto	l4197
 10698  04E1                     l4195:
 10699  04E1  3001               	movlw	1
 10700  04E2  00A0               	movwf	??_sprintf^(0+128)
 10701  04E3  0820               	movf	??_sprintf^(0+128),w
 10702  04E4  07BE               	addwf	sprintf@c^(0+128),f
 10703  04E5  300A               	movlw	10
 10704  04E6  063E               	xorwf	sprintf@c^(0+128),w
 10705  04E7  1D03               	btfss	3,2
 10706  04E8  2CEA               	goto	u6261
 10707  04E9  2CEB               	goto	u6260
 10708  04EA                     u6261:
 10709  04EA  2CAA               	goto	l4191
 10710  04EB                     u6260:
 10711  04EB                     l4197:
 10712                           
 10713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10714  04EB  083D               	movf	(sprintf@prec+1)^(0+128),w
 10715  04EC  3A80               	xorlw	128
 10716  04ED  3C80               	sublw	128
 10717  04EE  1D03               	skipz
 10718  04EF  2CF2               	goto	u6275
 10719  04F0  083C               	movf	sprintf@prec^(0+128),w
 10720  04F1  023E               	subwf	sprintf@c^(0+128),w
 10721  04F2                     u6275:
 10722  04F2  1803               	skipnc
 10723  04F3  2CF5               	goto	u6271
 10724  04F4  2CF6               	goto	u6270
 10725  04F5                     u6271:
 10726  04F5  2CFD               	goto	l4201
 10727  04F6                     u6270:
 10728  04F6                     l4199:
 10729                           
 10730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10731  04F6  1683               	bsf	3,5	;RP0=1, select bank1
 10732  04F7  1303               	bcf	3,6	;RP1=0, select bank1
 10733  04F8  083C               	movf	sprintf@prec^(0+128),w
 10734  04F9  00A0               	movwf	??_sprintf^(0+128)
 10735  04FA  0820               	movf	??_sprintf^(0+128),w
 10736  04FB  00BE               	movwf	sprintf@c^(0+128)
 10737  04FC  2D15               	goto	l4205
 10738  04FD                     l4201:
 10739  04FD  1683               	bsf	3,5	;RP0=1, select bank1
 10740  04FE  1303               	bcf	3,6	;RP1=0, select bank1
 10741  04FF  083D               	movf	(sprintf@prec+1)^(0+128),w
 10742  0500  3A80               	xorlw	128
 10743  0501  00A0               	movwf	??_sprintf^(0+128)
 10744  0502  3080               	movlw	128
 10745  0503  0220               	subwf	??_sprintf^(0+128),w
 10746  0504  1D03               	skipz
 10747  0505  2D08               	goto	u6285
 10748  0506  083E               	movf	sprintf@c^(0+128),w
 10749  0507  023C               	subwf	sprintf@prec^(0+128),w
 10750  0508                     u6285:
 10751  0508  1803               	skipnc
 10752  0509  2D0B               	goto	u6281
 10753  050A  2D0C               	goto	u6280
 10754  050B                     u6281:
 10755  050B  2D15               	goto	l4205
 10756  050C                     u6280:
 10757  050C                     l4203:
 10758                           
 10759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10760  050C  1683               	bsf	3,5	;RP0=1, select bank1
 10761  050D  1303               	bcf	3,6	;RP1=0, select bank1
 10762  050E  083E               	movf	sprintf@c^(0+128),w
 10763  050F  00A0               	movwf	??_sprintf^(0+128)
 10764  0510  01A1               	clrf	(??_sprintf^(0+128)+1)
 10765  0511  0820               	movf	??_sprintf^(0+128),w
 10766  0512  00BC               	movwf	sprintf@prec^(0+128)
 10767  0513  0821               	movf	(??_sprintf+1)^(0+128),w
 10768  0514  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10769  0515                     l4205:
 10770                           
 10771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10772  0515  1683               	bsf	3,5	;RP0=1, select bank1
 10773  0516  1303               	bcf	3,6	;RP1=0, select bank1
 10774  0517  082C               	movf	sprintf@width^(0+128),w
 10775  0518  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10776  0519  1903               	btfsc	3,2
 10777  051A  2D1C               	goto	u6291
 10778  051B  2D1D               	goto	u6290
 10779  051C                     u6291:
 10780  051C  2D2F               	goto	l4211
 10781  051D                     u6290:
 10782  051D                     l4207:
 10783  051D  3003               	movlw	3
 10784  051E  052A               	andwf	sprintf@flag^(0+128),w
 10785  051F  00A0               	movwf	??_sprintf^(0+128)
 10786  0520  3000               	movlw	0
 10787  0521  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10788  0522  00A1               	movwf	(??_sprintf+1)^(0+128)
 10789  0523  0820               	movf	??_sprintf^(0+128),w
 10790  0524  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10791  0525  1903               	btfsc	3,2
 10792  0526  2D28               	goto	u6301
 10793  0527  2D29               	goto	u6300
 10794  0528                     u6301:
 10795  0528  2D2F               	goto	l4211
 10796  0529                     u6300:
 10797  0529                     l4209:
 10798                           
 10799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10800  0529  30FF               	movlw	255
 10801  052A  07AC               	addwf	sprintf@width^(0+128),f
 10802  052B  1803               	skipnc
 10803  052C  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10804  052D  30FF               	movlw	255
 10805  052E  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10806  052F                     l4211:
 10807                           
 10808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10809  052F  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 10810  0530  2D32               	goto	u6311
 10811  0531  2D33               	goto	u6310
 10812  0532                     u6311:
 10813  0532  2D4E               	goto	l4219
 10814  0533                     u6310:
 10815  0533                     l4213:
 10816                           
 10817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10818  0533  083D               	movf	(sprintf@prec+1)^(0+128),w
 10819  0534  3A80               	xorlw	128
 10820  0535  00A0               	movwf	??_sprintf^(0+128)
 10821  0536  082D               	movf	(sprintf@width+1)^(0+128),w
 10822  0537  3A80               	xorlw	128
 10823  0538  0220               	subwf	??_sprintf^(0+128),w
 10824  0539  1D03               	skipz
 10825  053A  2D3D               	goto	u6325
 10826  053B  082C               	movf	sprintf@width^(0+128),w
 10827  053C  023C               	subwf	sprintf@prec^(0+128),w
 10828  053D                     u6325:
 10829  053D  1803               	skipnc
 10830  053E  2D40               	goto	u6321
 10831  053F  2D41               	goto	u6320
 10832  0540                     u6321:
 10833  0540  2D4A               	goto	l4217
 10834  0541                     u6320:
 10835  0541                     l4215:
 10836                           
 10837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10838  0541  1683               	bsf	3,5	;RP0=1, select bank1
 10839  0542  1303               	bcf	3,6	;RP1=0, select bank1
 10840  0543  083C               	movf	sprintf@prec^(0+128),w
 10841  0544  02AC               	subwf	sprintf@width^(0+128),f
 10842  0545  083D               	movf	(sprintf@prec+1)^(0+128),w
 10843  0546  1C03               	skipc
 10844  0547  03AD               	decf	(sprintf@width+1)^(0+128),f
 10845  0548  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10846  0549  2D4E               	goto	l4219
 10847  054A                     l4217:
 10848                           
 10849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10850  054A  1683               	bsf	3,5	;RP0=1, select bank1
 10851  054B  1303               	bcf	3,6	;RP1=0, select bank1
 10852  054C  01AC               	clrf	sprintf@width^(0+128)
 10853  054D  01AD               	clrf	(sprintf@width+1)^(0+128)
 10854  054E                     l4219:
 10855                           
 10856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10857  054E  082D               	movf	(sprintf@width+1)^(0+128),w
 10858  054F  3A80               	xorlw	128
 10859  0550  3C80               	sublw	128
 10860  0551  1D03               	skipz
 10861  0552  2D55               	goto	u6335
 10862  0553  082C               	movf	sprintf@width^(0+128),w
 10863  0554  023E               	subwf	sprintf@c^(0+128),w
 10864  0555                     u6335:
 10865  0555  1803               	skipnc
 10866  0556  2D58               	goto	u6331
 10867  0557  2D59               	goto	u6330
 10868  0558                     u6331:
 10869  0558  2D65               	goto	l4223
 10870  0559                     u6330:
 10871  0559                     l4221:
 10872                           
 10873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10874  0559  1683               	bsf	3,5	;RP0=1, select bank1
 10875  055A  1303               	bcf	3,6	;RP1=0, select bank1
 10876  055B  083E               	movf	sprintf@c^(0+128),w
 10877  055C  00A0               	movwf	??_sprintf^(0+128)
 10878  055D  01A1               	clrf	(??_sprintf^(0+128)+1)
 10879  055E  0820               	movf	??_sprintf^(0+128),w
 10880  055F  02AC               	subwf	sprintf@width^(0+128),f
 10881  0560  0821               	movf	(??_sprintf+1)^(0+128),w
 10882  0561  1C03               	skipc
 10883  0562  03AD               	decf	(sprintf@width+1)^(0+128),f
 10884  0563  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10885  0564  2D69               	goto	l4225
 10886  0565                     l4223:
 10887                           
 10888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10889  0565  1683               	bsf	3,5	;RP0=1, select bank1
 10890  0566  1303               	bcf	3,6	;RP1=0, select bank1
 10891  0567  01AC               	clrf	sprintf@width^(0+128)
 10892  0568  01AD               	clrf	(sprintf@width+1)^(0+128)
 10893  0569                     l4225:
 10894                           
 10895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10896  0569  082C               	movf	sprintf@width^(0+128),w
 10897  056A  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10898  056B  1903               	btfsc	3,2
 10899  056C  2D6E               	goto	u6341
 10900  056D  2D6F               	goto	u6340
 10901  056E                     u6341:
 10902  056E  2D86               	goto	l4233
 10903  056F                     u6340:
 10904  056F                     l4227:
 10905                           
 10906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10907  056F  3020               	movlw	32
 10908  0570  00A0               	movwf	??_sprintf^(0+128)
 10909  0571  083B               	movf	sprintf@sp^(0+128),w
 10910  0572  0084               	movwf	4
 10911  0573  0820               	movf	??_sprintf^(0+128),w
 10912  0574  1383               	bcf	3,7	;select IRP bank0
 10913  0575  0080               	movwf	0
 10914  0576                     l4229:
 10915  0576  3001               	movlw	1
 10916  0577  00A0               	movwf	??_sprintf^(0+128)
 10917  0578  0820               	movf	??_sprintf^(0+128),w
 10918  0579  07BB               	addwf	sprintf@sp^(0+128),f
 10919  057A                     l4231:
 10920  057A  30FF               	movlw	255
 10921  057B  07AC               	addwf	sprintf@width^(0+128),f
 10922  057C  1803               	skipnc
 10923  057D  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10924  057E  30FF               	movlw	255
 10925  057F  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10926  0580  082C               	movf	sprintf@width^(0+128),w
 10927  0581  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10928  0582  1D03               	btfss	3,2
 10929  0583  2D85               	goto	u6351
 10930  0584  2D86               	goto	u6350
 10931  0585                     u6351:
 10932  0585  2D6F               	goto	l4227
 10933  0586                     u6350:
 10934  0586                     l4233:
 10935                           
 10936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10937  0586  3003               	movlw	3
 10938  0587  052A               	andwf	sprintf@flag^(0+128),w
 10939  0588  00A0               	movwf	??_sprintf^(0+128)
 10940  0589  3000               	movlw	0
 10941  058A  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10942  058B  00A1               	movwf	(??_sprintf+1)^(0+128)
 10943  058C  0820               	movf	??_sprintf^(0+128),w
 10944  058D  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10945  058E  1903               	btfsc	3,2
 10946  058F  2D91               	goto	u6361
 10947  0590  2D92               	goto	u6360
 10948  0591                     u6361:
 10949  0591  2E0D               	goto	l4245
 10950  0592                     u6360:
 10951  0592                     l4235:
 10952                           
 10953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10954  0592  302D               	movlw	45
 10955  0593  00A0               	movwf	??_sprintf^(0+128)
 10956  0594  083B               	movf	sprintf@sp^(0+128),w
 10957  0595  0084               	movwf	4
 10958  0596  0820               	movf	??_sprintf^(0+128),w
 10959  0597  1383               	bcf	3,7	;select IRP bank0
 10960  0598  0080               	movwf	0
 10961  0599                     l4237:
 10962  0599  3001               	movlw	1
 10963  059A  00A0               	movwf	??_sprintf^(0+128)
 10964  059B  0820               	movf	??_sprintf^(0+128),w
 10965  059C  07BB               	addwf	sprintf@sp^(0+128),f
 10966  059D  2E0D               	goto	l4245
 10967  059E                     l4239:
 10968                           
 10969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10970  059E  3000               	movlw	0
 10971  059F  1283               	bcf	3,5	;RP0=0, select bank0
 10972  05A0  1303               	bcf	3,6	;RP1=0, select bank0
 10973  05A1  00AB               	movwf	___llmod@divisor+3
 10974  05A2  3000               	movlw	0
 10975  05A3  00AA               	movwf	___llmod@divisor+2
 10976  05A4  3000               	movlw	0
 10977  05A5  00A9               	movwf	___llmod@divisor+1
 10978  05A6  300A               	movlw	10
 10979  05A7  00A8               	movwf	___llmod@divisor
 10980  05A8  1683               	bsf	3,5	;RP0=1, select bank1
 10981  05A9  1303               	bcf	3,6	;RP1=0, select bank1
 10982  05AA  083C               	movf	sprintf@prec^(0+128),w
 10983  05AB  00A0               	movwf	??_sprintf^(0+128)
 10984  05AC  3001               	movlw	1
 10985  05AD                     u6375:
 10986  05AD  1003               	clrc
 10987  05AE  0DA0               	rlf	??_sprintf^(0+128),f
 10988  05AF  3EFF               	addlw	-1
 10989  05B0  1D03               	skipz
 10990  05B1  2DAD               	goto	u6375
 10991  05B2  1003               	clrc
 10992  05B3  0D20               	rlf	??_sprintf^(0+128),w
 10993  05B4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10994  05B5  0084               	movwf	4
 10995  05B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10996  05BB  1283               	bcf	3,5	;RP0=0, select bank0
 10997  05BC  1303               	bcf	3,6	;RP1=0, select bank0
 10998  05BD  00A0               	movwf	___lldiv@divisor
 10999  05BE  160A  118A  200A  120A  118A  	fcall	stringdir
 11000  05C3  00A1               	movwf	___lldiv@divisor+1
 11001  05C4  160A  118A  200A  120A  118A  	fcall	stringdir
 11002  05C9  00A2               	movwf	___lldiv@divisor+2
 11003  05CA  160A  118A  200A  120A  118A  	fcall	stringdir
 11004  05CF  00A3               	movwf	___lldiv@divisor+3
 11005  05D0  1683               	bsf	3,5	;RP0=1, select bank1
 11006  05D1  1303               	bcf	3,6	;RP1=0, select bank1
 11007  05D2  0835               	movf	(sprintf@val+3)^(0+128),w
 11008  05D3  1283               	bcf	3,5	;RP0=0, select bank0
 11009  05D4  1303               	bcf	3,6	;RP1=0, select bank0
 11010  05D5  00A7               	movwf	___lldiv@dividend+3
 11011  05D6  1683               	bsf	3,5	;RP0=1, select bank1
 11012  05D7  1303               	bcf	3,6	;RP1=0, select bank1
 11013  05D8  0834               	movf	(sprintf@val+2)^(0+128),w
 11014  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 11015  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 11016  05DB  00A6               	movwf	___lldiv@dividend+2
 11017  05DC  1683               	bsf	3,5	;RP0=1, select bank1
 11018  05DD  1303               	bcf	3,6	;RP1=0, select bank1
 11019  05DE  0833               	movf	(sprintf@val+1)^(0+128),w
 11020  05DF  1283               	bcf	3,5	;RP0=0, select bank0
 11021  05E0  1303               	bcf	3,6	;RP1=0, select bank0
 11022  05E1  00A5               	movwf	___lldiv@dividend+1
 11023  05E2  1683               	bsf	3,5	;RP0=1, select bank1
 11024  05E3  1303               	bcf	3,6	;RP1=0, select bank1
 11025  05E4  0832               	movf	sprintf@val^(0+128),w
 11026  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 11027  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 11028  05E7  00A4               	movwf	___lldiv@dividend
 11029  05E8  160A  118A  21BC  120A  118A  	fcall	___lldiv
 11030  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 11031  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 11032  05EF  0823               	movf	?___lldiv+3,w
 11033  05F0  00AF               	movwf	___llmod@dividend+3
 11034  05F1  0822               	movf	?___lldiv+2,w
 11035  05F2  00AE               	movwf	___llmod@dividend+2
 11036  05F3  0821               	movf	?___lldiv+1,w
 11037  05F4  00AD               	movwf	___llmod@dividend+1
 11038  05F5  0820               	movf	?___lldiv,w
 11039  05F6  00AC               	movwf	___llmod@dividend
 11040  05F7  160A  158A  2751  120A  118A  	fcall	___llmod
 11041  05FC  1283               	bcf	3,5	;RP0=0, select bank0
 11042  05FD  1303               	bcf	3,6	;RP1=0, select bank0
 11043  05FE  0828               	movf	?___llmod,w
 11044  05FF  3E30               	addlw	48
 11045  0600  1683               	bsf	3,5	;RP0=1, select bank1
 11046  0601  1303               	bcf	3,6	;RP1=0, select bank1
 11047  0602  00A1               	movwf	(??_sprintf+1)^(0+128)
 11048  0603  0821               	movf	(??_sprintf+1)^(0+128),w
 11049  0604  00BE               	movwf	sprintf@c^(0+128)
 11050  0605                     l4241:
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11053  0605  083E               	movf	sprintf@c^(0+128),w
 11054  0606  00A0               	movwf	??_sprintf^(0+128)
 11055  0607  083B               	movf	sprintf@sp^(0+128),w
 11056  0608  0084               	movwf	4
 11057  0609  0820               	movf	??_sprintf^(0+128),w
 11058  060A  1383               	bcf	3,7	;select IRP bank0
 11059  060B  0080               	movwf	0
 11060  060C  2D99               	goto	l4237
 11061  060D                     l4245:
 11062                           
 11063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11064  060D  30FF               	movlw	255
 11065  060E  07BC               	addwf	sprintf@prec^(0+128),f
 11066  060F  1803               	skipnc
 11067  0610  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 11068  0611  30FF               	movlw	255
 11069  0612  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 11070  0613  0A3C               	incf	sprintf@prec^(0+128),w
 11071  0614  1D03               	skipz
 11072  0615  2E1A               	goto	u6381
 11073  0616  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 11074  0617  1D03               	btfss	3,2
 11075  0618  2E1A               	goto	u6381
 11076  0619  2E1B               	goto	u6380
 11077  061A                     u6381:
 11078  061A  2D9E               	goto	l4239
 11079  061B                     u6380:
 11080  061B                     l4247:
 11081                           
 11082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11083  061B  3001               	movlw	1
 11084  061C  1283               	bcf	3,5	;RP0=0, select bank0
 11085  061D  1303               	bcf	3,6	;RP1=0, select bank0
 11086  061E  07E0               	addwf	sprintf@f,f
 11087  061F  30FF               	movlw	-1
 11088  0620  0760               	addwf	sprintf@f,w
 11089  0621  0084               	movwf	4
 11090  0622  160A  118A  200A  120A  118A  	fcall	stringdir
 11091  0627  1683               	bsf	3,5	;RP0=1, select bank1
 11092  0628  1303               	bcf	3,6	;RP1=0, select bank1
 11093  0629  00A0               	movwf	??_sprintf^(0+128)
 11094  062A  0820               	movf	??_sprintf^(0+128),w
 11095  062B  00BE               	movwf	sprintf@c^(0+128)
 11096  062C  083E               	movf	sprintf@c^(0+128),w
 11097  062D  1D03               	btfss	3,2
 11098  062E  2E30               	goto	u6391
 11099  062F  2E33               	goto	u6390
 11100  0630                     u6391:
 11101  0630  120A  158A  2A95   	goto	l3969
 11102  0633                     u6390:
 11103  0633                     l4249:
 11104                           
 11105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11106  0633  083B               	movf	sprintf@sp^(0+128),w
 11107  0634  0084               	movwf	4
 11108  0635  1383               	bcf	3,7	;select IRP bank0
 11109  0636  0180               	clrf	0
 11110  0637                     l457:
 11111  0637  0008               	return
 11112  0638                     __end_of_sprintf:

Data Sizes:
    Strings     52
    Constant    118
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      78
    BANK1            80     31      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), data(BANK1[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> data(BANK1[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->___llmod
    _sprintf->___lltoft
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___bmul->___awmod
    ___bmul->___lwdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _Write_USART_String->_Write_USART
    _Lcd_Write_String->_LCD_CMD
    _LCD_CMD->_Puerto
    _Lcd_Set_Cursor->_datosLCD
    _Lcd_Init->_datosLCD
    _LCD_Limpia->_datosLCD
    _datosLCD->_Puerto
    _ADC_2->___awtoft
    _ADC_1->___awtoft
    ___ftmul->___awmod
    ___ftmul->___awtoft
    ___ftmul->___lwdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _ADC_2->___ftdiv
    _ADC_1->___ftdiv
    ___ftmul->___bmul
    ___ftdiv->___ftmul
    ___awtoft->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   64743
                                             73 BANK0      3     3      0
                              _ADC_1
                              _ADC_2
                         _LCD_Limpia
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _Write_USART
                 _Write_USART_String
                           __baudios
                         _config_ADC
                           _config_P
                       _config_rcsta
                       _config_txsta
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   41139
                                             64 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8442
                                             29 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    6833
                                             29 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              9 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              3 COMMON     6     0      6
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              3 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2565
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                             38 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4109
                                             58 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3883
                                             45 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              3 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_P                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     539
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     279
                                              4 COMMON     2     2      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     601
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Limpia                                           0     0      0     279
                           _datosLCD
 ---------------------------------------------------------------------------------
 (2) _datosLCD                                             3     3      0     279
                                              4 COMMON     3     3      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (3) _Puerto                                               1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_2                                                2     2      0   10833
                                             45 BANK0      2     2      0
                          _Canal_ADC
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _ADC_1                                                2     2      0   10833
                                             45 BANK0      2     2      0
                          _Canal_ADC
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4966
                                             13 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3078
                                             29 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2661
                                              8 COMMON     2     2      0
                                              3 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2398
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Canal_ADC                                            2     0      2     128
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_1
     _Canal_ADC
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _ADC_2
     _Canal_ADC
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _LCD_Limpia
     _datosLCD
       _Puerto
   _Lcd_Init
     _datosLCD
       _Puerto
   _Lcd_Set_Cursor
     _datosLCD
       _Puerto
   _Lcd_Write_String
     _LCD_CMD
       _Puerto
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _config_ADC
   _config_P
   _config_rcsta
   _config_txsta
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      35       7       66.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 19:25:33 2021

                          pc 0002                  ?_LCD_Limpia 0070               ___bmul@product 002B  
                         l90 17E3                           l97 1D0A                 ___awdiv@sign 0026  
                         fsr 0004          ___wmul@multiplicand 0075                 ___ftadd@exp1 0059  
               ___ftadd@exp2 0058         __size_of_Write_USART 000C                 ___ftadd@sign 0057  
                        l103 1158                          l200 1414                          l201 141B  
                        l210 145A                          l202 1422                          l211 1461  
                        l203 1429                          l212 1468                          l204 1430  
                        l213 146F                          l205 1437                          l109 11BB  
                        l214 1476                          l206 143E                          l150 1EA2  
                        l207 1445                          l215 14B4                          l151 1EA3  
                        l208 144C                          l160 1EC5                          l152 1EA9  
                        l232 1CB4                          l209 1453                          l153 1EAA  
                        l241 1CE2                          l162 1EC6                          l154 1EB0  
                        l146 1E92                          l250 1DF0                          l155 1EB1  
                        l147 1E95                          l171 1CF9                          l235 1CD6  
                        l156 1EB7                          l148 1E9B                          l180 1DC5  
                        l244 1CEC                          l420 0289                          l157 1EB8  
                        l149 1E9C                          l165 07FD                          l158 1EBE  
                        l174 12F6                          l238 1CC4                          l159 1EBF  
                        l168 1D55                          l193 1CAF                          l186 1F0A  
                        l427 02CD                          l197 1406                          l461 1D87  
                        l365 0FFF                          l710 09A0                          l358 07E0  
                        l199 140D                          l711 09AA                          l463 1D9F  
                        l712 09AF                          l721 0A20                          l457 0637  
                        l707 0A8A                          l387 0B69                          l644 128C  
                        l670 0904                          l750 1534                          l663 0828  
                        l671 0917                          l487 1D33                          l903 1F50  
                        l832 1FA6                          l840 1E50                          l497 1223  
                        l913 10F6                          l657 1FFF                          l690 1337  
                        l738 1633                          l770 1718                          l746 1571  
                        l667 0954                          l747 14E3                          l923 1D1C  
                        l764 1E88                          l781 1CE0                          l757 1564  
                        l686 1378                          l678 0947                          l791 1404  
                        l697 1352                          l698 135C                          l699 1378  
                        l787 1D7A                          l798 13E7                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RE0 0048  
                        _RD3 0043                          _RE1 0049                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        _ISR 1DF1                          fsr0 0004                          indf 0000  
               ___awmod@sign 0079  __size_of_Write_USART_String 002B              __end_of_LCD_CMD 07FE  
                       ?_ISR 0070                 ___ftdiv@cntr 0047                 ___ftdiv@sign 004C  
                       l4001 0B4B                         l2331 1FB1                         l4011 0B6B  
                       l4003 0B51                         l2501 1F3F                         l2341 1FC5  
                       l2333 1FB3                         l2325 1FA7                         l4101 0195  
                       l4021 0BB0                         l4013 0B8F                         l4005 0B63  
                       l2271 1D25                         l2503 1F46                         l2511 10C3  
                       l2351 1FE4                         l2343 1FCC                         l2335 1FB7  
                       l2327 1FA8                         l4103 019B                         l4031 0BE6  
                       l4023 0BB4                         l4015 0B9D                         l4007 0B67  
                       l2273 1D29                         l2505 1F4C                         l2521 10DF  
                       l2513 10C6                         l2353 1FEB                         l2345 1FD0  
                       l2337 1FBC                         l2329 1FAC                         l4201 04FD  
                       l4121 01E3                         l4105 01A7                         l4113 01BC  
                       l4041 0C4E                         l4033 0BED                         l4025 0BC9  
                       l4017 0BA1                         l2531 1CE2                         l2275 1D2B  
                       l2267 1D20                         l2523 10E5                         l2515 10CD  
                       l2347 1FD4                         l2339 1FC2                         l2355 1FF1  
                       l4211 052F                         l4203 050C                         l4131 029E  
                       l4123 023E                         l4115 01C9                         l4107 01AE  
                       l4051 0CBF                         l4043 0C52                         l4035 0C12  
                       l4027 0BDE                         l4019 0BA5                         l3501 1E8A  
                       l2533 1CE8                         l2701 0843                         l2277 1D32  
                       l2269 1D21                         l2525 10EC                         l2517 10D1  
                       l2509 10BD                         l2357 1FF6                         l2349 1FDE  
                       l4221 0559                         l4213 0533                         l4205 0515  
                       l4141 02D6                         l4133 02A4                         l4125 027D  
                       l4117 01D7                         l4109 01B7                         l4061 0D2F  
                       l4053 0CC8                         l4045 0C58                         l4037 0C18  
                       l4029 0BE2                         l4301 17D8                         l2535 1405  
                       l3511 1EAE                         l3503 1E8E                         l3343 1DC6  
                       l2711 0865                         l2519 10D5                         l2527 10F2  
                       l2359 1FFB                         l4231 057A                         l4223 0565  
                       l4215 0541                         l4207 051D                         l4151 034B  
                       l4143 02DB                         l4135 02B1                         l4127 0291  
                       l4119 01DE                         l4071 006F                         l4063 0021  
                       l4055 0CDF                         l4047 0C71                         l4039 0C2B  
                       l4303 17DE                         l3513 1EB5                         l3505 1E99  
                       l3345 1DC8                         l3601 09EF                         l2721 08AC  
                       l2713 0899                         l2705 084C                         l2641 1D19  
                       l3521 1227                         l4241 0605                         l4233 0586  
                       l4225 0569                         l4217 054A                         l4209 0529  
                       l4161 0454                         l4153 03A6                         l4145 02E2  
                       l4137 02C0                         l4129 029A                         l4081 00B3  
                       l4073 0078                         l4065 002A                         l4049 0CAA  
                       l4057 0CE7                         l4305 17E9                         l2539 147D  
                       l3515 1EBC                         l3507 1EA0                         l3347 1DD9  
                       l3611 0A1A                         l3603 09F5                         l2731 091B  
                       l2723 08B5                         l2715 08A1                         l2491 1F1F  
                       l2483 1F0B                         l2643 1D1B                         l2635 1D0C  
                       l3531 123B                         l3523 122B                         l4235 0592  
                       l4227 056F                         l4219 054E                         l4171 047D  
                       l4163 045B                         l4155 03E5                         l4147 02E6  
                       l4139 02C7                         l4075 0080                         l4067 0049  
                       l4083 00BA                         l4059 0CF6                         l4307 17EE  
                       l3517 1EC3                         l3509 1EA7                         l3701 1D3E  
                       l3349 1DDD                         l3621 0A49                         l3613 0A24  
                       l3605 09FF                         l2725 08E1                         l2717 08A3  
                       l2661 14EA                         l2653 14D1                         l2493 1F23  
                       l2485 1F0F                         l2637 1D0D                         l3541 1251  
                       l3533 123F                         l3525 1230                         l4237 0599  
                       l4245 060D                         l4229 0576                         l4181 049A  
                       l4173 0481                         l4165 045F                         l4157 03F1  
                       l4149 02FE                         l4093 0139                         l4085 0135  
                       l4069 0058                         l4261 171E                         l3471 12FC  
                       l3703 1D41                         l3623 0A59                         l3615 0A34  
                       l3607 0A05                         l2911 13DC                         l2903 13C3  
                       l2751 1D7B                         l2727 0903                         l2719 08A8  
                       l2671 151B                         l2663 14F9                         l2647 14B5  
                       l2495 1F27                         l2487 1F15                         l3711 063B  
                       l2639 1D13                         l3551 1271                         l3543 1255  
                       l3535 1241                         l3527 1232                         l3519 1224  
                       l4239 059E                         l4191 04AA                         l4183 04A2  
                       l4175 0485                         l4167 0465                         l4159 044C  
                       l4087 0137                         l4079 0098                         l4247 061B  
                       l4271 1741                         l4263 1723                         l4361 1482  
                       l3481 131F                         l3473 1303                         l3801 0807  
                       l3641 165F                         l3633 1634                         l3705 1D45  
                       l3625 0A5D                         l3617 0A38                         l3609 0A0E  
                       l2913 13EC                         l2905 13D5                         l2761 1D9B  
                       l2753 1D7D                         l2745 093C                         l2737 0923  
                       l2729 0911                         l2673 1525                         l2665 14FB  
                       l2649 14C8                         l2497 1F38                         l2489 1F18  
                       l3713 0641                         l3721 071E                         l3553 1278  
                       l3545 1259                         l3537 1247                         l3529 1236  
                       l4185 04A8                         l4177 0489                         l4097 0170  
                       l4169 046C                         l4249 0633                         l4281 1793  
                       l4273 1749                         l4265 1732                         l3491 134C  
                       l3483 1325                         l3803 080C                         l3811 1585  
                       l3651 1695                         l3635 1647                         l3707 1D48  
                       l2851 1E73                         l2843 1E51                         l3627 0A6D  
                       l3619 0A48                         l3563 0955                         l2915 13F1  
                       l2755 1D81                         l2747 094C                         l2739 0935  
                       l2675 1526                         l2667 1504                         l2659 14E4  
                       l2499 1F3E                         l3723 0724                         l3715 0704  
                       l3547 126A                         l3539 124A                         l3555 127E  
                       l4195 04E1                         l4179 0494                         l4099 017A  
                       l4291 17B9                         l4283 179B                         l4275 1752  
                       l4267 1737                         l4259 1719                         l3493 1356  
                       l3485 132F                         l3477 130A                         l3469 12F7  
                       l3805 080E                         l3821 15A4                         l3661 16B9  
                       l3653 169B                         l3645 1666                         l3709 1D4C  
                       l3901 12C1                         l2853 1E75                         l2845 1E55  
                       l3629 0A6F                         l3581 09A5                         l3573 098B  
                       l3565 0974                         l2917 13FC                         l2757 1D8E  
                       l2693 1559                         l2685 1540                         l2677 152E  
                       l2669 150D                         l3725 0793                         l3557 1283  
                       l3549 1270                         l3733 0D48                         l4197 04EB  
                       l4293 17C2                         l4285 17A4                         l4277 1757  
                       l4269 173C                         l3495 135E                         l3487 133E  
                       l3479 1318                         l3831 15D7                         l3823 15AA  
                       l3815 158C                         l3671 16D7                         l3663 16C1  
                       l3655 16A1                         l3647 1693                         l3639 164E  
                       l3911 12F1                         l3903 12CC                         l2855 1E77  
                       l2847 1E62                         l2863 1CD7                         l3591 09C3  
                       l3583 09A9                         l3575 0990                         l3567 097A  
                       l2759 1D95                         l2695 1569                         l2679 1538  
                       l2687 1552                         l3559 1288                         l3751 0E86  
                       l3735 0D4C                         l4199 04F6                         l4359 0B81  
                       l4295 17C8                         l4287 17AD                         l4279 175C  
                       l3497 1372                         l3489 1348                         l3841 1609  
                       l3833 15DE                         l3825 15AF                         l3817 159D  
                       l3809 1572                         l3673 16E7                         l3665 16C9  
                       l3657 16A5                         l3649 1694                         l3913 1CED  
                       l3905 12D1                         l3921 1DB4                         l2961 1D00  
                       l2857 1E85                         l2849 1E66                         l2865 1CDE  
                       l3593 09CD                         l3585 09AE                         l3577 0996  
                       l3569 0984                         l2881 138C                         l3729 07AD  
                       l3745 0E13                         l3737 0D4E                         l4297 17CE  
                       l4289 17B3                         l3499 1377                         l3843 160A  
                       l3835 15E9                         l3827 15C1                         l3675 16EF  
                       l3667 16CF                         l3659 16A9                         l3907 12E0  
                       l3923 1DBA                         l3915 1DA3                         l3691 07F2  
                       l3683 07E2                         l3931 1EE6                         l2963 1CAC  
                       l2971 1CC3                         l2859 1E87                         l2867 1CE0  
                       l3595 09D3                         l3587 09B0                         l3579 09A1  
                       l3851 1D56                         l2891 13AE                         l2699 0829  
                       l3763 0F6C                         l3747 0E1A                         l3739 0D55  
                       l3755 0EA7                         l4299 17D4                         l3845 1612  
                       l3837 15F1                         l3829 15D3                         l3677 16F7  
                       l3669 16D3                         l3941 1103                         l3909 12E6  
                       l3925 1DBF                         l3917 1DA8                         l3693 07F5  
                       l3685 07E5                         l3933 1EEC                         l2965 1CB0  
                       l2957 1CFA                         l3597 09DC                         l3589 09B6  
                       l3853 1D5F                         l2893 13B5                         l2885 1395  
                       l3781 11E2                         l3773 11BC                         l3861 1F5B  
                       l3765 0F73                         l3757 0EAE                         l3847 1618  
                       l3839 15FF                         l3679 16FD                         l3943 1104  
                       l3935 10F7                         l3951 1159                         l3919 1DAD  
                       l3695 07F9                         l3687 07EB                         l3927 1EC7  
                       l2959 1CFE                         l2967 1CCD                         l3599 09E8  
                       l3855 1D61                         l2895 13B7                         l2887 13A7  
                       l2879 1379                         l3791 1215                         l3783 11EB  
                       l3775 11CE                         l3871 1F8F                         l3863 1F5E  
                       l3945 110B                         l3937 10FF                         l3961 116E  
                       l3953 1162                         l3697 1D35                         l3689 07EE  
                       l3929 1ECA                         l2969 1CBD                         l2897 13BB  
                       l2889 13A8                         l3785 11FD                         l3777 11D1  
                       l3793 121B                         l3873 1F98                         l3865 1F6B  
                       l3881 1E23                         l3769 0FDF                         l3947 110F  
                       l3939 1102                         l3963 1172                         l3955 1165  
                       l3699 1D38                         l3891 1296                         l3787 120B  
                       l3779 11DE                         l3867 1F6F                         l3875 1F9E  
                       l3859 1F51                         l3883 1E30                         l3971 0A9B  
                       l3797 0800                         l3949 1153                         l3965 11B6  
                       l3957 1166                         l3893 129C                         l3789 120C  
                       l3869 1F81                         l3885 1E38                         l3981 0AC1  
                       l3973 0AA2                         l3799 0803                         l3959 1167  
                       l3895 12AB                         l3879 1E1E                         l3991 0B11  
                       l3983 0AD6                         l3975 0AA7                         l3967 0A8E  
                       l3897 12B0                         l3889 128D                         l3993 0B14  
                       l3985 0AED                         l3977 0AAB                         l3969 0A95  
                       l3899 12BB                         l3995 0B1A                         l3987 0AF3  
                       l3979 0ABD                         l3997 0B1F                         l3989 0B03  
                       l3999 0B34                         STR_1 10AA                         STR_2 1086  
                       STR_3 1099                         u4000 13EC                         u4001 13EB  
                       u4010 13F1                         u3210 1F27                         u4011 13F0  
                       u3211 1F26                         u3205 1F19                         u3230 1F38  
                       u3310 10F2                         u3231 1F37                         u3311 10F1  
                       u3320 1CE8                         u2600 1D25                         u3400 1D13  
                       u5000 1236                         u3321 1CE7                         u2601 1D24  
                       u3225 1F28                         u3305 10E6                         u3401 1D12  
                       u5001 1235                         u2610 1D32                         u3250 1F4C  
                       u3410 1D19                         u5010 1247                         u2611 1D31  
                       u3251 1F4B                         u3235 1F34                         u3411 1D18  
                       u5011 1246                         u5100 097A                         u3420 14C8  
                       u3260 10C3                         u5101 0979                         u3421 14C7  
                       u3245 1F40                         u3261 10C2                         u5110 0984  
                       u3510 1551                         u3430 14E2                         u3190 1F15  
                       u5030 1259                         u5111 0983                         u3511 1550  
                       u3431 14E1                         u3191 1F14                         u5031 1258  
                       u5200 09DB                         u5120 0990                         u3600 091B  
                       u3520 1558                         u3280 10D5                         u2800 1FF6  
                       u2720 1FAC                         u6000 0021                         u5201 09DA  
                       u5121 098F                         u3601 091A                         u3521 1557  
                       u3505 1541                         u3281 10D4                         u5025 124B  
                       u2801 1FF5                         u2721 1FAB                         u6001 0D3F  
                       u5130 0996                         u3610 0922                         u3450 151B  
                       u3290 10DF                         u5050 126A                         u2730 1FB7  
                       u6010 002A                         u5131 0995                         u3611 0921  
                       u3451 151A                         u3291 10DE                         u3275 10C7  
                       u5051 1269                         u2731 1FB6                         u6011 0029  
                       u5300 0A38                         u5220 09EE                         u5140 09A0  
                       u3700 1D9B                         u3540 1569                         u2740 1FC2  
                       u6100 01C9                         u6020 0049                         u5301 0A37  
                       u5221 09ED                         u5141 099F                         u3701 1D9A  
                       u3541 1568                         u3445 1506                         u5045 125A  
                       u2741 1FC1                         u6101 01C8                         u6021 0048  
                       u6005 0D3A                         u5230 09F5                         u5150 09A9  
                       u3630 0934                         u3550 0843                         u3470 1534  
                       u5070 127E                         u6110 01D7                         u6030 0058  
                       u5311 0A52                         u5231 09F4                         u5215 09DD  
                       u5151 09A8                         u3631 0933                         u3551 0842  
                       u3535 155B                         u3471 1533                         u3455 1517  
                       u3295 10DB                         u5071 127D                         u5055 1266  
                       u6111 01D6                         u6031 0057                         u5320 0A5D  
                       u5312 0A59                         u5160 09AE                         u3640 093B  
                       u3560 0864                         u3480 1538                         u5080 1283  
                       u2760 1FD4                         u6200 046B                         u6040 006F  
                       u5321 0A5C                         u5161 09AD                         u3641 093A  
                       u3625 0924                         u3561 0863                         u3481 1537  
                       u3465 1527                         u5081 1282                         u5065 1272  
                       u2761 1FD3                         u6201 046A                         u6105 01C5  
                       u6041 006E                         u5410 16CF                         u5330 1647  
                       u5250 0A05                         u5170 09C3                         u5090 0974  
                       u3490 153F                         u2770 1FDE                         u6210 0485  
                       u6130 0290                         u5411 16CE                         u5331 1646  
                       u5251 0A04                         u5171 09C2                         u5091 0973  
                       u3491 153E                         u2771 1FDD                         u2755 1FC6  
                       u6211 0484                         u6131 028F                         u6035 0054  
                       u5420 16D7                         u5340 165F                         u3900 1CDE  
                       u5260 0A0D                         u3660 094C                         u3580 08E1  
                       u5500 0D55                         u6300 0529                         u6220 049A  
                       u6140 02B1                         u6060 016F                         u5421 16D6  
                       u5405 16C2                         u5341 165E                         u3901 1CDD  
                       u5261 0A0C                         u5245 09F6                         u3661 094B  
                       u3581 08E0                         u5501 0D54                         u6301 0528  
                       u6221 0499                         u6141 02B0                         u6125 01E6  
                       u6061 016E                         u5350 1676                         u5190 09D3  
                       u3670 1D81                         u3590 0917                         u2790 1FF1  
                       u5510 0E1A                         u6310 0533                         u6230 04A2  
                       u6150 02C0                         u6070 017A                         u5431 16E0  
                       u5191 09D2                         u3671 1D80                         u3655 093E  
                       u3591 0916                         u3575 08AE                         u2791 1FF0  
                       u2775 1FDA                         u5511 0E19                         u6311 0532  
                       u6231 04A1                         u6151 02BF                         u6071 0179  
                       u6055 013C                         u4800 1303                         u5432 16E7  
                       u5360 1688                         u4720 1DF0                         u5280 0A20  
                       u3920 138C                         u5600 121B                         u5520 0EAE  
                       u6320 0541                         u6160 02DB                         u6080 0195  
                       u6400 17D4                         u4801 1302                         u4721 1DEF  
                       u5281 0A1F                         u5185 09C4                         u3921 138B  
                       u5601 121A                         u3585 08DD                         u2785 1FE5  
                       u5521 0EAD                         u6321 0540                         u6161 02DA  
                       u6145 02AD                         u6081 0194                         u6065 016B  
                       u6401 17D3                         u5610 0807                         u5370 16A9  
                       u5290 0A24                         u3930 13A0                         u5530 0F73  
                       u6330 0559                         u6250 04E0                         u6090 01A7  
                       u6410 17DE                         u5611 0806                         u5371 16A8  
                       u5355 1672                         u5291 0A23                         u5275 0A0F  
                       u5531 0F72                         u6331 0558                         u6251 04DF  
                       u6155 02BC                         u6091 01A6                         u6411 17DD  
                       u4900 1377                         u4820 131E                         u5620 1585  
                       u5460 16FD                         u5700 1D5F                         u3940 13BB  
                       u5540 11CE                         u6340 056F                         u6260 04EB  
                       u6420 17E9                         _RCIF 0065                         u4901 1376  
                       u4821 131D                         u5621 1584                         u5461 16FC  
                       u5445 16E8                         u5381 16B2                         u5365 1684  
                       u5701 1D5E                         u3941 13BA                         u5541 11CD  
                       u3685 1D88                         u6341 056E                         u6325 053D  
                       u6261 04EA                         u6245 04AD                         u6421 17E8  
                       u5630 159D                         u5382 16B9                         u4910 1E8E  
                       u3870 1E55                         u3950 13C2                         u5710 1F5B  
                       u5470 0641                         u6350 0586                         u6270 04F6  
                       u6190 0453                         u4815 1311                         u5631 159C  
                       u5455 16F0                         u4911 1E8D                         u3871 1E54  
                       u3951 13C1                         u3935 139C                         u5711 1F5A  
                       u3695 1D8F                         u5471 0640                         u6351 0585  
                       u6335 0555                         u6271 04F5                         u6255 04DC  
                       u6191 0452                         u6175 034E                         u4840 133D  
                       u5640 15BA                         u4920 1E99                         u5800 1DBA  
                       u3880 1E66                         u5560 11E2                         u5480 0724  
                       u6360 0592                         u6280 050C                         u4841 133C  
                       u4921 1E98                         u5801 1DB9                         u3881 1E65  
                       u5561 11E1                         u5481 0723                         u6361 0591  
                       u6281 050B                         u6185 03F4                         u5650 15CC  
                       u4930 1EA0                         u5810 1ED4                         u3890 1E85  
                       u3970 13D4                         u5730 1F6F                         u5490 0D4C  
                       u6290 051D                         i1l83 1E17                         u4835 1330  
                       u5395 16BA                         u4931 1E9F                         u6507 12B8  
                       u3891 1E84                         u3971 13D3                         u5555 11D3  
                       u5731 1F6E                         u5491 0D4B                         u6291 051C  
                       u6275 04F2                         u4860 134C                         u4940 1EA7  
                       u5820 1EF8                         u3980 13DB                         u5580 11FD  
                       u5740 1F81                         u6380 061B                         u5900 0B62  
                       u4861 134B                         u5645 15B6                         u4941 1EA6  
                       u6517 12C3                         u3981 13DA                         u3965 13C4  
                       u5581 11FC                         u5741 1F80                         u5725 1F60  
                       u6381 061A                         u6285 0508                         u5901 0B61  
                       u6437 17F6                         u4870 1352                         u4790 12FC  
                       u5670 15FF                         u4950 1EAE                         u5830 1F0A  
                       u6390 0633                         u5910 0B9D                         u4871 1351  
                       u4855 1341                         u4791 12FB                         u5671 15FE  
                       u5655 15C8                         u6607 1108                         u4951 1EAD  
                       u6527 12CE                         u6447 07F0                         u5831 1F09  
                       u3895 1E81                         u5575 11E4                         u6391 0630  
                       u6375 05AD                         u5911 0B9A                         u4880 1356  
                       u5840 1158                         u4960 1EB5                         u5760 1F9E  
                       u5920 0BA1                         u4881 1355                         u5665 15EA  
                       u5841 1157                         u4961 1EB4                         u6537 12DB  
                       u6457 07F7                         u5585 11F9                         u5761 1F9D  
                       u5745 1F7D                         u5921 0BA0                         u4890 1369  
                       u5690 1618                         u5850 11BB                         u4970 1EBC  
                       u5930 0BC9                         u5691 1617                         u5675 15FB  
                       u5851 11BA                         u4971 1EBB                         u6547 12E8  
                       u6467 07FB                         u3995 13DE                         u5595 120D  
                       u5755 1F90                         u5931 0BC8                         u4980 1EC3  
                       u5780 1E38                         u5940 0BED                         u5860 0A9B  
                       u5685 160B                         u4981 1EC2                         u6557 12F3  
                       u6477 1291                         u5781 1E37                         u5941 0BEC  
                       u5861 0A9A                         u5790 1DA8                         u4990 122B  
                       u5950 0C01                         u5870 0ABD                         u4895 1365  
                       u6567 1D43                         u6487 12A0                         u5791 1DA7  
                       u5775 1E24                         u4991 122A                         u5871 0ABC  
                       u5960 0C52                         u5880 0B03                         u6577 1D4A  
                       u6497 12AD                         u5961 0C51                         u5881 0B02  
                       u5970 0CBF                         u5890 0B11                         u6587 1D50  
                       u5971 0CBE                         u5955 0BFC                         u5891 0B10  
                       u5980 0CDF                         u6597 116B                         u5981 0CDE  
                       u5990 0CF6                         u5991 0CF5                         u5995 0CF2  
                       _TRMT 04C1                         _data 00C5            ?_Lcd_Write_String 0076  
                       _main 1719                 ___ftpack@arg 0073                 ___ftpack@exp 0076  
                       btemp 007E                         _volt 00C2                         start 000C  
             ??_config_rcsta 0073           ??_Lcd_Write_String 0020               ??_config_txsta 0073  
               _sprintf$1024 00A6            ___bmul@multiplier 002C                 ___ftmul@cntr 003B  
               ___ftmul@sign 003C                        ??_ISR 0070                 ___fttol@exp1 0053  
               ___fttol@lval 004F                        ?_main 0070                        _ADC_1 10F7  
                      _ADC_2 1159              __end_of___awdiv 128D              __end_of___ftadd 0A8B  
            __end_of___awmod 2000              __end_of___ftdiv 1634              __end_of___ftneg 1CE1  
                      _ANSEL 0188              __end_of___lldiv 1224              __end_of___ftmul 1719  
            ___awdiv@divisor 0020              __end_of___llmod 1FA7              __end_of___ftsub 1D7B  
            __end_of___fttol 1405              __end_of___lwdiv 1F51                        i1l253 1CB5  
                      i1l256 1CBC              __end_of___lwmod 10F7              ___awdiv@counter 0025  
                      _RCREG 001A                        _SPBRG 0099                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009      __size_of_Lcd_Set_Cursor 0026  
                      _TRISA 0085                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019                 ___lltoft@exp 0079                ___awtoft@sign 0026  
            __end_of_dpowers 1086                        _scale 0D45              __end_of_isdigit 1D1D  
              ___ftpack@sign 0077                        _volt2 00BF                        pclath 000A  
        __size_of_LCD_Limpia 000D                        status 0003                        wtemp0 007E  
            __end_of_sprintf 0638           __size_of_Canal_ADC 00B0             __end_of_Lcd_Init 12F7  
            __initialization 000F                   _Read_USART 1CB5                 __end_of_main 1800  
                     ??_main 0069                       ?_ADC_1 0070                       ?_ADC_2 0070  
              ___fttol@sign1 004E                    ??_LCD_CMD 0074         __size_of__tdiv_to_l_ 00BD  
                     _ADCON1 009F             ___llmod@dividend 002C                       ?_scale 003D  
                     _ADRESH 001E             ___awdiv@dividend 0022             __end_of___awtoft 0829  
           __end_of___ftpack 1379                       _ANSELH 0189             __end_of__baudios 1CB5  
           __end_of___lltoft 1E51                       i1l3351 1DF1                       i1l3361 1E0D  
                     i1l3353 1DF7                       i1l3363 1E13                       i1l3355 1DF8  
                     i1l3357 1E00                       i1l3359 1E06                       i1l2951 1CB5  
                     i1l2953 1CBB                       u410_20 1CBB                       u410_21 1CBA  
                     u473_20 1DF7                       u473_21 1DF6                       u474_20 1E06  
                     u474_21 1E05                       u475_20 1E13                       u475_21 1E12  
           __end_of_datosLCD 1D56             __end_of__powers_ 1037             __end_of_config_P 1D0B  
                     _Puerto 1E89                       ___bmul 1D1D                       ___ftge 1E51  
                     ___wmul 1D7B                    ??___awdiv 0024                    ??___ftadd 0053  
                  ??___awmod 0077                    ??___ftdiv 0043                    ??___ftneg 0076  
                  ??___lldiv 0073                    ??___ftmul 0033                    ??___llmod 0079  
                  ??___ftsub 007A                    ??___fttol 004A                    ??___lwdiv 0079  
                  ??___lwmod 0077                       _fround 0638             ___awdiv@quotient 0027  
            ___awmod@divisor 0073              ___awmod@counter 0078        ___ftmul@f3_as_product 0038  
                  ??_isdigit 0073         __end_of_config_rcsta 1CC5                       saved_w 007E  
          __end_of_Canal_ADC 14B5         __end_of_config_txsta 1CD7                    ??_sprintf 00A0  
            Lcd_Set_Cursor@a 0021              Lcd_Set_Cursor@x 0020              Lcd_Set_Cursor@y 0077  
    __end_of__initialization 001D                   ___ftadd@f1 004D                   ___ftadd@f2 0050  
                 ___ftge@ff1 0073                   ___ftge@ff2 0076                __end_of_ADC_1 1159  
              __end_of_ADC_2 11BC                   ___ftdiv@f1 0040                   ___ftdiv@f2 003D  
                 ___ftdiv@f3 0048                   ___ftneg@f1 0073                   ___awtoft@c 0023  
        ___bmul@multiplicand 0029                   ___ftmul@f1 002D                   ___ftmul@f2 0030  
                ?_Read_USART 0070                   ___ftsub@f1 005D                   ___ftsub@f2 005A  
                 ___fttol@f1 0046               __pcstackCOMMON 0070                   ___lltoft@c 0023  
               ??_LCD_Limpia 0077                __end_of_scale 1000                      ??_ADC_1 004D  
                    ??_ADC_2 004D               _Lcd_Set_Cursor 1DA0                   __div_to_l_ 0829  
                  ?_Lcd_Init 0070              __div_to_l_@exp1 002D              __div_to_l_@cntr 002C  
                    ??_scale 0040              __div_to_l_@quot 0028                 sprintf@width 00AC  
               Write_USART@a 0073                   __pbssBANK0 006C                   __pbssBANK1 00BF  
         __end_of_LCD_Limpia 1CFA                __div_to_l_@f1 0073                __div_to_l_@f2 0076  
                 __pmaintext 1719                      ?_Puerto 0070                      ?___bmul 0029  
                    ?___ftge 0073                      ?___wmul 0073                ??_Write_USART 0073  
                 __pintentry 0004                      ?_fround 003D    __size_of_Lcd_Write_String 0044  
                  ?___awtoft 0023                    ?___ftpack 0073       __end_of_Lcd_Set_Cursor 1DC6  
                  ?__baudios 0070                    ?___lltoft 0023                      _LCD_CMD 07E1  
 __end_of_Write_USART_String 1DF1                   _config_ADC 1CAC                    ?_datosLCD 0070  
                 ??_Lcd_Init 0077          __size_of_Read_USART 0008                    ?_config_P 0070  
                 __stringtab 1000            __end_of__npowers_ 105E                   _scale$1023 0042  
            __size_of_Puerto 003E                      Puerto@x 0073              __size_of___bmul 0017  
            __size_of___ftge 0038                      ___awdiv 1224                      ___ftadd 0955  
                    ___awmod 1FA7                      ___ftdiv 1572                      ___ftneg 1CD7  
                    ___lldiv 11BC              __size_of___wmul 0025                      ___ftmul 1634  
                    ___llmod 1F51                      ___ftsub 1D56                      ___fttol 1379  
                    ___lwdiv 1F0B                      ___lwmod 10BD                   ??___awtoft 0078  
      __size_of_config_rcsta 0008                   ??___ftpack 0020                   ??__baudios 0073  
            __size_of_fround 01A9              ?_Lcd_Set_Cursor 0077                   ??___lltoft 0078  
                    __ptext1 0A8B                      __ptext2 0D45        __size_of_config_txsta 000A  
                    __ptext3 1FA7                      __ptext4 1224                      __ptext5 1D0B  
                    __ptext6 0638                      __ptext7 10BD                      __ptext8 1F0B  
                    __ptext9 1D1D                 __size_of_ISR 002D                  ?__div_to_l_ 0073  
                    _dpowers 105E          __end_of_Write_USART 1CED                      _isdigit 1D0B  
           ___awmod@dividend 0075                   ??_datosLCD 0074                      _sprintf 0A8B  
                 ??_config_P 0073                      clrloop0 1CC6         end_of_initialization 001D  
            ___lldiv@divisor 0020              ___lldiv@counter 0078                 _config_rcsta 1CBD  
               _config_txsta 1CCD                    _RCSTAbits 0018                      psplit$0 C0039  
             __tdiv_to_l_@f1 0073               __tdiv_to_l_@f2 0076                ??__tdiv_to_l_ 0020  
                ?_config_ADC 0070                    _Canal_ADC 1405            Lcd_Write_String@a 0076  
          Lcd_Write_String@i 0078                  ___ftdiv@exp 004B                    _TXSTAbits 0098  
        __size_of__div_to_l_ 012C                 ??_Read_USART 0070                  ___ftmul@exp 0037  
             __end_of_Puerto 1EC7               __end_of___bmul 1D34               __end_of___ftge 1E89  
                _Write_USART 1CE1               __end_of___wmul 1DA0             _Lcd_Write_String 1EC7  
          pnum$text1_split_1 0039               __end_of_fround 07E1          start_initialization 000F  
                __end_of_ISR 1E1E          __end_of__tdiv_to_l_ 1572           __end_of_Read_USART 1CBD  
                 ?_Canal_ADC 0073            __size_of_Lcd_Init 006A              ___llmod@divisor 0028  
            ___llmod@counter 0030          __size_of_config_ADC 0004                     ??_Puerto 0073  
                   ??___bmul 002A                     ??___ftge 0079                     ??___wmul 0077  
                   ??_fround 0040                sprintf@tmpval 00AE                     LCD_CMD@a 0075  
                   ?_LCD_CMD 0070                   fround@prec 004C            __size_of___awtoft 0029  
          __size_of___ftpack 0082            __size_of__baudios 0005            __size_of___lltoft 0033  
                __pbssCOMMON 007A                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0            __size_of_datosLCD 0022            __size_of_config_P 0011  
                sprintf@flag 00AA                  sprintf@eexp 00B6                  sprintf@fval 00B8  
         _Write_USART_String 1DC6                  sprintf@prec 00BC             ___lwdiv@dividend 0022  
           ??_Lcd_Set_Cursor 0078          ?_Write_USART_String 0074                     ?___awdiv 0020  
                   ?___ftadd 004D                     ?___awmod 0073                     ?___ftdiv 003D  
                   ?___ftneg 0073                     ?___lldiv 0020                     ?___ftmul 002D  
                   ?___llmod 0028                     ?___ftsub 005A                    __npowers_ 1037  
                   ?___fttol 0046                     ?___lwdiv 0020                     ?___lwmod 0073  
                  __pstrings 1000                  __tdiv_to_l_ 14B5               __size_of_ADC_1 0062  
             __size_of_ADC_2 0063                 ??__div_to_l_ 0020                     ?_isdigit 0070  
                  _entregado 006D         ??_Write_USART_String 0076             ___lwdiv@quotient 0024  
                   ?_sprintf 0060               __size_of_scale 02BB                  ??_Canal_ADC 0075  
          interrupt_function 0004                    datosLCD@x 0076               ___wmul@product 0077  
                  clear_ram0 1CC5           __end_of__div_to_l_ 0955                   _ADCON0bits 001F  
                __stringbase 100F            ___wmul@multiplier 0073                 ??_config_ADC 0073  
           __size_of_LCD_CMD 001D                     _LecUSART 007A                     _Lcd_Init 128D  
   __end_of_Lcd_Write_String 1F0B           __end_of_config_ADC 1CB0                 ?_Write_USART 0070  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftdiv 00C2             __size_of___ftneg 000A             __size_of___lldiv 0068  
           __size_of___ftmul 00E5             __size_of___llmod 0056             __size_of___ftsub 0025  
           __size_of___fttol 008C             __size_of___lwdiv 0046             __size_of___lwmod 003A  
                   ___awtoft 0800                     ___ftpack 12F7                     __baudios 1CB0  
                _fround$1021 0049                  _fround$1022 0046           __end_of__stringtab 1010  
                   ___lltoft 1E1E                  _isdigit$825 0073                   Canal_ADC@x 0073  
                 sprintf@val 00B2             __size_of_isdigit 0012                     _datosLCD 1D34  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0026                     __ptext10 14B5  
                   __ptext11 0829                     __ptext20 1E51                     __ptext12 1D7B  
                   __ptext21 1CCD                     __ptext13 1E1E                     __ptext30 1DA0  
                   __ptext22 1CBD                     __ptext14 1F51                     __ptext31 128D  
                   __ptext23 1CFA                     __ptext15 11BC                     __ptext40 12F7  
                   __ptext32 1CED                     __ptext24 1CAC                     __ptext16 1379  
                   __ptext41 1405                     __ptext33 1D34                     __ptext25 1CB0  
                   __ptext17 1D56                     __ptext42 1DF1                     __ptext34 1E89  
                   __ptext26 1DC6                     __ptext18 0955                     __ptext43 1CB5  
                   __ptext35 1159                     __ptext27 1CE1                     __ptext19 1CD7  
                   __ptext36 10F7                     __ptext28 1EC7                     __ptext37 1634  
                   __ptext29 07E1                     __ptext38 1572                     __ptext39 0800  
                   __powers_ 1010                     _config_P 1CFA                     _contador 006C  
           __size_of_sprintf FBAD                __size_of_main 00E7                    pnum$text1 000C  
                 _LCD_Limpia 1CED          Write_USART_String@a 0074          Write_USART_String@i 0077  
                   isdigit@c 0074                     scale@scl 0045                     intlevel1 0000  
                  sprintf@ap 00A9             __tdiv_to_l_@exp1 0029             __tdiv_to_l_@cntr 0028  
                  sprintf@sp 00BB             __tdiv_to_l_@quot 0024             ___lwmod@dividend 0075  
           ___lldiv@dividend 0024                    stringcode 100A                 ?__tdiv_to_l_ 0073  
                   sprintf@c 00BE                     sprintf@f 0060             ___lldiv@quotient 0074  
            ___lwmod@divisor 0073              ___lwmod@counter 0078                     stringdir 100A  
                   stringtab 1000                ?_config_rcsta 0070                ?_config_txsta 0070  
