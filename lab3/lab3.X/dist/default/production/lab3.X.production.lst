

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 17:41:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	strings
   481  0800                     __pstrings:
   482  0800                     stringtab:
   483  0800                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0800  1BFF               	btfsc	btemp+1,7
   487  0801  280A               	ljmp	stringcode
   488  0802  1383               	bcf	3,7
   489  0803  187F               	btfsc	btemp+1,0
   490  0804  1783               	bsf	3,7
   491  0805  0800               	movf	0,w
   492  0806  0A84               	incf	4,f
   493  0807  1903               	skipnz
   494  0808  0AFF               	incf	btemp+1,f
   495  0809  0008               	return
   496  080A                     stringcode:
   497  080A                     stringdir:
   498  080A  3008               	movlw	high stringdir
   499  080B  008A               	movwf	10
   500  080C  0804               	movf	4,w
   501  080D  0A84               	incf	4,f
   502  080E  0782               	addwf	2,f
   503  080F                     __stringbase:
   504  080F  3400               	retlw	0
   505  0810                     __end_of__stringtab:
   506  0810                     __powers_:
   507  0810  3400               	retlw	0
   508  0811  3400               	retlw	0
   509  0812  3480               	retlw	128
   510  0813  343F               	retlw	63
   511  0814  3400               	retlw	0
   512  0815  3400               	retlw	0
   513  0816  3420               	retlw	32
   514  0817  3441               	retlw	65
   515  0818  3400               	retlw	0
   516  0819  3400               	retlw	0
   517  081A  34C8               	retlw	200
   518  081B  3442               	retlw	66
   519  081C  3400               	retlw	0
   520  081D  3400               	retlw	0
   521  081E  347A               	retlw	122
   522  081F  3444               	retlw	68
   523  0820  3400               	retlw	0
   524  0821  3440               	retlw	64
   525  0822  341C               	retlw	28
   526  0823  3446               	retlw	70
   527  0824  3400               	retlw	0
   528  0825  3450               	retlw	80
   529  0826  34C3               	retlw	195
   530  0827  3447               	retlw	71
   531  0828  3400               	retlw	0
   532  0829  3424               	retlw	36
   533  082A  3474               	retlw	116
   534  082B  3449               	retlw	73
   535  082C  3480               	retlw	128
   536  082D  3496               	retlw	150
   537  082E  3418               	retlw	24
   538  082F  344B               	retlw	75
   539  0830  3420               	retlw	32
   540  0831  34BC               	retlw	188
   541  0832  34BE               	retlw	190
   542  0833  344C               	retlw	76
   543  0834  3428               	retlw	40
   544  0835  346B               	retlw	107
   545  0836  346E               	retlw	110
   546  0837  344E               	retlw	78
   547  0838  34F9               	retlw	249
   548  0839  3402               	retlw	2
   549  083A  3415               	retlw	21
   550  083B  3450               	retlw	80
   551  083C  34EC               	retlw	236
   552  083D  3478               	retlw	120
   553  083E  34AD               	retlw	173
   554  083F  3460               	retlw	96
   555  0840  34CA               	retlw	202
   556  0841  34F2               	retlw	242
   557  0842  3449               	retlw	73
   558  0843  3471               	retlw	113
   559  0844                     __end_of__powers_:
   560  0844                     __npowers_:
   561  0844  3400               	retlw	0
   562  0845  3400               	retlw	0
   563  0846  3480               	retlw	128
   564  0847  343F               	retlw	63
   565  0848  34CD               	retlw	205
   566  0849  34CC               	retlw	204
   567  084A  34CC               	retlw	204
   568  084B  343D               	retlw	61
   569  084C  340A               	retlw	10
   570  084D  34D7               	retlw	215
   571  084E  3423               	retlw	35
   572  084F  343C               	retlw	60
   573  0850  346F               	retlw	111
   574  0851  3412               	retlw	18
   575  0852  3483               	retlw	131
   576  0853  343A               	retlw	58
   577  0854  3417               	retlw	23
   578  0855  34B7               	retlw	183
   579  0856  34D1               	retlw	209
   580  0857  3438               	retlw	56
   581  0858  34AC               	retlw	172
   582  0859  34C5               	retlw	197
   583  085A  3427               	retlw	39
   584  085B  3437               	retlw	55
   585  085C  34BD               	retlw	189
   586  085D  3437               	retlw	55
   587  085E  3486               	retlw	134
   588  085F  3435               	retlw	53
   589  0860  3495               	retlw	149
   590  0861  34BF               	retlw	191
   591  0862  34D6               	retlw	214
   592  0863  3433               	retlw	51
   593  0864  3477               	retlw	119
   594  0865  34CC               	retlw	204
   595  0866  342B               	retlw	43
   596  0867  3432               	retlw	50
   597  0868  345F               	retlw	95
   598  0869  3470               	retlw	112
   599  086A  3489               	retlw	137
   600  086B  3430               	retlw	48
   601  086C  34FF               	retlw	255
   602  086D  34E6               	retlw	230
   603  086E  34DB               	retlw	219
   604  086F  342E               	retlw	46
   605  0870  3408               	retlw	8
   606  0871  34E5               	retlw	229
   607  0872  343C               	retlw	60
   608  0873  341E               	retlw	30
   609  0874  3460               	retlw	96
   610  0875  3442               	retlw	66
   611  0876  34A2               	retlw	162
   612  0877  340D               	retlw	13
   613  0878                     __end_of__npowers_:
   614  0878                     _dpowers:
   615  0878  3401               	retlw	1
   616  0879  3400               	retlw	0
   617  087A  3400               	retlw	0
   618  087B  3400               	retlw	0
   619  087C  340A               	retlw	10
   620  087D  3400               	retlw	0
   621  087E  3400               	retlw	0
   622  087F  3400               	retlw	0
   623  0880  3464               	retlw	100
   624  0881  3400               	retlw	0
   625  0882  3400               	retlw	0
   626  0883  3400               	retlw	0
   627  0884  34E8               	retlw	232
   628  0885  3403               	retlw	3
   629  0886  3400               	retlw	0
   630  0887  3400               	retlw	0
   631  0888  3410               	retlw	16
   632  0889  3427               	retlw	39
   633  088A  3400               	retlw	0
   634  088B  3400               	retlw	0
   635  088C  34A0               	retlw	160
   636  088D  3486               	retlw	134
   637  088E  3401               	retlw	1
   638  088F  3400               	retlw	0
   639  0890  3440               	retlw	64
   640  0891  3442               	retlw	66
   641  0892  340F               	retlw	15
   642  0893  3400               	retlw	0
   643  0894  3480               	retlw	128
   644  0895  3496               	retlw	150
   645  0896  3498               	retlw	152
   646  0897  3400               	retlw	0
   647  0898  3400               	retlw	0
   648  0899  34E1               	retlw	225
   649  089A  34F5               	retlw	245
   650  089B  3405               	retlw	5
   651  089C  3400               	retlw	0
   652  089D  34CA               	retlw	202
   653  089E  349A               	retlw	154
   654  089F  343B               	retlw	59
   655  08A0                     __end_of_dpowers:
   656  001A                     _RCREG	set	26
   657  0018                     _RCSTAbits	set	24
   658  0019                     _TXREG	set	25
   659  001E                     _ADRESH	set	30
   660  001F                     _ADCON0bits	set	31
   661  0007                     _PORTC	set	7
   662  0009                     _PORTE	set	9
   663  0008                     _PORTD	set	8
   664  0065                     _RCIF	set	101
   665  0049                     _RE1	set	73
   666  0048                     _RE0	set	72
   667  0047                     _RD7	set	71
   668  0046                     _RD6	set	70
   669  0045                     _RD5	set	69
   670  0044                     _RD4	set	68
   671  0043                     _RD3	set	67
   672  0042                     _RD2	set	66
   673  0041                     _RD1	set	65
   674  0040                     _RD0	set	64
   675  0099                     _SPBRG	set	153
   676  009F                     _ADCON1	set	159
   677  0098                     _TXSTAbits	set	152
   678  0085                     _TRISA	set	133
   679  0089                     _TRISE	set	137
   680  0088                     _TRISD	set	136
   681  04C1                     _TRMT	set	1217
   682  0189                     _ANSELH	set	393
   683  0188                     _ANSEL	set	392
   684  08A0                     STR_3:
   685  08A0  3453               	retlw	83	;'S'
   686  08A1  3431               	retlw	49	;'1'
   687  08A2  3420               	retlw	32	;' '
   688  08A3  3420               	retlw	32	;' '
   689  08A4  3420               	retlw	32	;' '
   690  08A5  3420               	retlw	32	;' '
   691  08A6  3420               	retlw	32	;' '
   692  08A7  3420               	retlw	32	;' '
   693  08A8  3420               	retlw	32	;' '
   694  08A9  3420               	retlw	32	;' '
   695  08AA  3453               	retlw	83	;'S'
   696  08AB  3432               	retlw	50	;'2'
   697  08AC  3420               	retlw	32	;' '
   698  08AD  3420               	retlw	32	;' '
   699  08AE  3420               	retlw	32	;' '
   700  08AF  3420               	retlw	32	;' '
   701  08B0  3420               	retlw	32	;' '
   702  08B1  3420               	retlw	32	;' '
   703  08B2  3420               	retlw	32	;' '
   704  08B3  3420               	retlw	32	;' '
   705  08B4  3443               	retlw	67	;'C'
   706  08B5  344F               	retlw	79	;'O'
   707  08B6  344E               	retlw	78	;'N'
   708  08B7  3454               	retlw	84	;'T'
   709  08B8  3400               	retlw	0
   710  08B9                     STR_1:
   711  08B9  3453               	retlw	83	;'S'
   712  08BA  3431               	retlw	49	;'1'
   713  08BB  3420               	retlw	32	;' '
   714  08BC  3420               	retlw	32	;' '
   715  08BD  3420               	retlw	32	;' '
   716  08BE  3453               	retlw	83	;'S'
   717  08BF  3432               	retlw	50	;'2'
   718  08C0  3420               	retlw	32	;' '
   719  08C1  3420               	retlw	32	;' '
   720  08C2  3420               	retlw	32	;' '
   721  08C3  3443               	retlw	67	;'C'
   722  08C4  344F               	retlw	79	;'O'
   723  08C5  344E               	retlw	78	;'N'
   724  08C6  3454               	retlw	84	;'T'
   725  08C7  3400               	retlw	0
   726  08C8                     STR_2:
   727  08C8  3425               	retlw	37	;'%'
   728  08C9  3431               	retlw	49	;'1'
   729  08CA  342E               	retlw	46	;'.'
   730  08CB  3432               	retlw	50	;'2'
   731  08CC  3466               	retlw	102	;'f'
   732  08CD  3420               	retlw	32	;' '
   733  08CE  3420               	retlw	32	;' '
   734  08CF  3420               	retlw	32	;' '
   735  08D0  3425               	retlw	37	;'%'
   736  08D1  3431               	retlw	49	;'1'
   737  08D2  342E               	retlw	46	;'.'
   738  08D3  3432               	retlw	50	;'2'
   739  08D4  3466               	retlw	102	;'f'
   740  08D5  3400               	retlw	0
   741                           
   742                           	psect	cinit
   743  07F3                     start_initialization:	
   744                           ; #config settings
   745                           
   746  07F3                     __initialization:
   747                           
   748                           ; Clear objects allocated to BANK1
   749  07F3  1383               	bcf	3,7	;select IRP bank0
   750  07F4  30CC               	movlw	low __pbssBANK1
   751  07F5  0084               	movwf	4
   752  07F6  30E4               	movlw	low (__pbssBANK1+24)
   753  07F7  160A  158A  2044  120A  118A  	fcall	clear_ram0
   754  07FC                     end_of_initialization:	
   755                           ;End of C runtime variable initialization code
   756                           
   757  07FC                     __end_of__initialization:
   758  07FC  0183               	clrf	3
   759  07FD  160A  158A  2DEA   	ljmp	_main	;jump to C main() function
   760                           
   761                           	psect	bssBANK1
   762  00CC                     __pbssBANK1:
   763  00CC                     _volt2:
   764  00CC                     	ds	4
   765  00D0                     _volt:
   766  00D0                     	ds	4
   767  00D4                     _data:
   768  00D4                     	ds	16
   769                           
   770                           	psect	clrtext
   771  1844                     clear_ram0:	
   772                           ;	Called with FSR containing the base address, and
   773                           ;	W with the last address+1
   774                           
   775  1844  0064               	clrwdt	;clear the watchdog before getting into this loop
   776  1845                     clrloop0:
   777  1845  0180               	clrf	0	;clear RAM location pointed to by FSR
   778  1846  0A84               	incf	4,f	;increment pointer
   779  1847  0604               	xorwf	4,w	;XOR with final address
   780  1848  1903               	btfsc	3,2	;have we reached the end yet?
   781  1849  3400               	retlw	0	;all done for this memory range, return
   782  184A  0604               	xorwf	4,w	;XOR again to restore value
   783  184B  2845               	goto	clrloop0	;do the next byte
   784                           
   785                           	psect	cstackBANK1
   786  00A0                     __pcstackBANK1:
   787  00A0                     ?_sprintf:
   788  00A0                     sprintf@f:	
   789                           ; 2 bytes @ 0x0
   790                           
   791                           
   792                           ; 1 bytes @ 0x0
   793  00A0                     	ds	9
   794  00A9                     ??_sprintf:
   795                           
   796                           ; 1 bytes @ 0x9
   797  00A9                     	ds	5
   798  00AE                     _sprintf$1066:
   799                           
   800                           ; 4 bytes @ 0xE
   801  00AE                     	ds	4
   802  00B2                     sprintf@ap:
   803                           
   804                           ; 1 bytes @ 0x12
   805  00B2                     	ds	1
   806  00B3                     sprintf@val:
   807                           
   808                           ; 4 bytes @ 0x13
   809  00B3                     	ds	4
   810  00B7                     sprintf@flag:
   811                           
   812                           ; 2 bytes @ 0x17
   813  00B7                     	ds	2
   814  00B9                     sprintf@width:
   815                           
   816                           ; 2 bytes @ 0x19
   817  00B9                     	ds	2
   818  00BB                     sprintf@tmpval:
   819                           
   820                           ; 4 bytes @ 0x1B
   821  00BB                     	ds	4
   822  00BF                     sprintf@eexp:
   823                           
   824                           ; 2 bytes @ 0x1F
   825  00BF                     	ds	2
   826  00C1                     sprintf@fval:
   827                           
   828                           ; 4 bytes @ 0x21
   829  00C1                     	ds	4
   830  00C5                     sprintf@sp:
   831                           
   832                           ; 1 bytes @ 0x25
   833  00C5                     	ds	1
   834  00C6                     sprintf@prec:
   835                           
   836                           ; 2 bytes @ 0x26
   837  00C6                     	ds	2
   838  00C8                     sprintf@c:
   839                           
   840                           ; 1 bytes @ 0x28
   841  00C8                     	ds	1
   842  00C9                     ??_main:
   843                           
   844                           ; 1 bytes @ 0x29
   845  00C9                     	ds	3
   846                           
   847                           	psect	cstackCOMMON
   848  0070                     __pcstackCOMMON:
   849  0070                     ?_isdigit:
   850  0070                     ?___fleq:	
   851                           ; 1 bit 
   852                           
   853  0070                     ?___flge:	
   854                           ; 1 bit 
   855                           
   856  0070                     ?_config_P:	
   857                           ; 1 bit 
   858                           
   859  0070                     ??_config_P:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_config_ADC:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ??_config_ADC:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?__baudios:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??__baudios:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_config_txsta:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ??_config_txsta:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_config_rcsta:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ??_config_rcsta:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_Lcd_Init:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_LCD_Limpia:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_Write_USART:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ??_Write_USART:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ??_isdigit:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_main:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Puerto:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ??_Puerto:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_LCD_CMD:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_datosLCD:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_Canal_ADC:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?__Umul8_16:	
   920                           ; 2 bytes @ 0x0
   921                           
   922  0070                     ?___wmul:	
   923                           ; 2 bytes @ 0x0
   924                           
   925  0070                     ?___awmod:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  0070                     ?___lwmod:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0070                     ?_ADC_1:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  0070                     ?_ADC_2:	
   935                           ; 4 bytes @ 0x0
   936                           
   937  0070                     ?__tdiv_to_l_:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  0070                     ?__div_to_l_:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0070                     ?___lldiv:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0070                     ?___flneg:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0070                     ?___llmod:	
   950                           ; 4 bytes @ 0x0
   951                           
   952  0070                     ?___xxtofl:	
   953                           ; 4 bytes @ 0x0
   954                           
   955  0070                     Puerto@x:	
   956                           ; 4 bytes @ 0x0
   957                           
   958  0070                     Write_USART@a:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     __Umul8_16@multiplicand:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     _isdigit$882:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     Canal_ADC@x:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ___wmul@multiplier:	
   971                           ; 2 bytes @ 0x0
   972                           
   973  0070                     ___awmod@divisor:	
   974                           ; 2 bytes @ 0x0
   975                           
   976  0070                     ___lwmod@divisor:	
   977                           ; 2 bytes @ 0x0
   978                           
   979  0070                     ___lldiv@divisor:	
   980                           ; 2 bytes @ 0x0
   981                           
   982  0070                     __div_to_l_@f1:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0070                     ___fleq@ff1:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0070                     ___flge@ff1:	
   989                           ; 4 bytes @ 0x0
   990                           
   991  0070                     ___flneg@f1:	
   992                           ; 4 bytes @ 0x0
   993                           
   994  0070                     __tdiv_to_l_@f1:	
   995                           ; 4 bytes @ 0x0
   996                           
   997  0070                     ___llmod@divisor:	
   998                           ; 4 bytes @ 0x0
   999                           
  1000  0070                     ___xxtofl@val:	
  1001                           ; 4 bytes @ 0x0
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x0
  1005  0070                     	ds	1
  1006  0071                     ?_Write_USART_String:
  1007  0071                     ??_LCD_CMD:	
  1008                           ; 1 bytes @ 0x1
  1009                           
  1010  0071                     ??_datosLCD:	
  1011                           ; 1 bytes @ 0x1
  1012                           
  1013  0071                     isdigit@c:	
  1014                           ; 1 bytes @ 0x1
  1015                           
  1016  0071                     Write_USART_String@a:	
  1017                           ; 1 bytes @ 0x1
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x1
  1021  0071                     	ds	1
  1022  0072                     ??_Canal_ADC:
  1023  0072                     ??__Umul8_16:	
  1024                           ; 1 bytes @ 0x2
  1025                           
  1026  0072                     LCD_CMD@a:	
  1027                           ; 1 bytes @ 0x2
  1028                           
  1029  0072                     ___wmul@multiplicand:	
  1030                           ; 1 bytes @ 0x2
  1031                           
  1032  0072                     ___awmod@dividend:	
  1033                           ; 2 bytes @ 0x2
  1034                           
  1035  0072                     ___lwmod@dividend:	
  1036                           ; 2 bytes @ 0x2
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x2
  1040  0072                     	ds	1
  1041  0073                     ?_Lcd_Write_String:
  1042  0073                     ??_Write_USART_String:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     datosLCD@x:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048  0073                     Lcd_Write_String@a:	
  1049                           ; 1 bytes @ 0x3
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x3
  1053  0073                     	ds	1
  1054  0074                     ??_Lcd_Init:
  1055  0074                     ??_LCD_Limpia:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     ?_Lcd_Set_Cursor:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     ??___wmul:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064  0074                     ??___awmod:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067  0074                     ??___flneg:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     ??___lwmod:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ??___xxtofl:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     Lcd_Set_Cursor@y:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     Write_USART_String@i:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     ___wmul@product:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085  0074                     __Umul8_16@product:	
  1086                           ; 2 bytes @ 0x4
  1087                           
  1088  0074                     ___lldiv@dividend:	
  1089                           ; 2 bytes @ 0x4
  1090                           
  1091  0074                     __div_to_l_@f2:	
  1092                           ; 4 bytes @ 0x4
  1093                           
  1094  0074                     ___fleq@ff2:	
  1095                           ; 4 bytes @ 0x4
  1096                           
  1097  0074                     ___flge@ff2:	
  1098                           ; 4 bytes @ 0x4
  1099                           
  1100  0074                     __tdiv_to_l_@f2:	
  1101                           ; 4 bytes @ 0x4
  1102                           
  1103  0074                     ___llmod@dividend:	
  1104                           ; 4 bytes @ 0x4
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x4
  1108  0074                     	ds	1
  1109  0075                     ??_Lcd_Set_Cursor:
  1110  0075                     ??_Lcd_Write_String:	
  1111                           ; 1 bytes @ 0x5
  1112                           
  1113  0075                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116  0075                     ___lwmod@counter:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x5
  1121  0075                     	ds	1
  1122  0076                     ?___lwdiv:
  1123  0076                     Lcd_Set_Cursor@x:	
  1124                           ; 2 bytes @ 0x6
  1125                           
  1126  0076                     ___awmod@sign:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129  0076                     ___lwdiv@divisor:	
  1130                           ; 1 bytes @ 0x6
  1131                           
  1132  0076                     __Umul8_16@word_mpld:	
  1133                           ; 2 bytes @ 0x6
  1134                           
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  0076                     	ds	1
  1138  0077                     ?___awdiv:
  1139  0077                     Lcd_Set_Cursor@a:	
  1140                           ; 2 bytes @ 0x7
  1141                           
  1142  0077                     ___awdiv@divisor:	
  1143                           ; 1 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x7
  1147  0077                     	ds	1
  1148  0078                     ??__tdiv_to_l_:
  1149  0078                     ??__div_to_l_:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0078                     ??___lldiv:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0078                     ??___fleq:	
  1156                           ; 1 bytes @ 0x8
  1157                           
  1158  0078                     ??___flge:	
  1159                           ; 1 bytes @ 0x8
  1160                           
  1161  0078                     ??___llmod:	
  1162                           ; 1 bytes @ 0x8
  1163                           
  1164  0078                     __Umul8_16@multiplier:	
  1165                           ; 1 bytes @ 0x8
  1166                           
  1167  0078                     ___xxtofl@sign:	
  1168                           ; 1 bytes @ 0x8
  1169                           
  1170  0078                     Lcd_Write_String@i:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173  0078                     ___lwdiv@dividend:	
  1174                           ; 2 bytes @ 0x8
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x8
  1178  0078                     	ds	1
  1179  0079                     ___llmod@counter:
  1180  0079                     ___xxtofl@exp:	
  1181                           ; 1 bytes @ 0x9
  1182                           
  1183  0079                     ___awdiv@dividend:	
  1184                           ; 1 bytes @ 0x9
  1185                           
  1186  0079                     ___lldiv@quotient:	
  1187                           ; 2 bytes @ 0x9
  1188                           
  1189                           
  1190                           ; 4 bytes @ 0x9
  1191  0079                     	ds	1
  1192  007A                     ??___lwdiv:
  1193  007A                     ___xxtofl@arg:	
  1194                           ; 1 bytes @ 0xA
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0xA
  1198  007A                     	ds	1
  1199  007B                     ??___awdiv:
  1200  007B                     ___lwdiv@quotient:	
  1201                           ; 1 bytes @ 0xB
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0xB
  1205  007B                     	ds	2
  1206  007D                     ___lldiv@counter:
  1207  007D                     ___lwdiv@counter:	
  1208                           ; 1 bytes @ 0xD
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0xD
  1212  007D                     	ds	1
  1213  007E                     ??___flsub:
  1214                           
  1215                           	psect	cstackBANK0
  1216  0020                     __pcstackBANK0:	
  1217                           ; 1 bytes @ 0xE
  1218                           
  1219  0020                     ___awdiv@counter:
  1220  0020                     __div_to_l_@quot:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0020                     __tdiv_to_l_@quot:	
  1224                           ; 4 bytes @ 0x0
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x0
  1228  0020                     	ds	1
  1229  0021                     ___awdiv@sign:
  1230                           
  1231                           ; 1 bytes @ 0x1
  1232  0021                     	ds	1
  1233  0022                     ___awdiv@quotient:
  1234                           
  1235                           ; 2 bytes @ 0x2
  1236  0022                     	ds	2
  1237  0024                     ?___flmul:
  1238  0024                     __div_to_l_@cntr:	
  1239                           ; 4 bytes @ 0x4
  1240                           
  1241  0024                     __tdiv_to_l_@cntr:	
  1242                           ; 1 bytes @ 0x4
  1243                           
  1244  0024                     ___flmul@b:	
  1245                           ; 1 bytes @ 0x4
  1246                           
  1247                           
  1248                           ; 4 bytes @ 0x4
  1249  0024                     	ds	1
  1250  0025                     __div_to_l_@exp1:
  1251  0025                     __tdiv_to_l_@exp1:	
  1252                           ; 1 bytes @ 0x5
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x5
  1256  0025                     	ds	3
  1257  0028                     ___flmul@a:
  1258                           
  1259                           ; 4 bytes @ 0x8
  1260  0028                     	ds	4
  1261  002C                     ??___flmul:
  1262                           
  1263                           ; 1 bytes @ 0xC
  1264  002C                     	ds	5
  1265  0031                     ___flmul@sign:
  1266                           
  1267                           ; 1 bytes @ 0x11
  1268  0031                     	ds	1
  1269  0032                     ___flmul@grs:
  1270                           
  1271                           ; 4 bytes @ 0x12
  1272  0032                     	ds	4
  1273  0036                     ___flmul@aexp:
  1274                           
  1275                           ; 1 bytes @ 0x16
  1276  0036                     	ds	1
  1277  0037                     ___flmul@bexp:
  1278                           
  1279                           ; 1 bytes @ 0x17
  1280  0037                     	ds	1
  1281  0038                     ___flmul@prod:
  1282                           
  1283                           ; 4 bytes @ 0x18
  1284  0038                     	ds	4
  1285  003C                     ___flmul@temp:
  1286                           
  1287                           ; 2 bytes @ 0x1C
  1288  003C                     	ds	2
  1289  003E                     ?_fround:
  1290  003E                     ?_scale:	
  1291                           ; 4 bytes @ 0x1E
  1292                           
  1293  003E                     ?___fldiv:	
  1294                           ; 4 bytes @ 0x1E
  1295                           
  1296  003E                     ___fldiv@a:	
  1297                           ; 4 bytes @ 0x1E
  1298                           
  1299                           
  1300                           ; 4 bytes @ 0x1E
  1301  003E                     	ds	4
  1302  0042                     ??_fround:
  1303  0042                     ??_scale:	
  1304                           ; 1 bytes @ 0x22
  1305                           
  1306  0042                     ___fldiv@b:	
  1307                           ; 1 bytes @ 0x22
  1308                           
  1309                           
  1310                           ; 4 bytes @ 0x22
  1311  0042                     	ds	4
  1312  0046                     ??___fldiv:
  1313                           
  1314                           ; 1 bytes @ 0x26
  1315  0046                     	ds	3
  1316  0049                     _fround$1064:
  1317                           
  1318                           ; 4 bytes @ 0x29
  1319  0049                     	ds	2
  1320  004B                     ___fldiv@rem:
  1321                           
  1322                           ; 4 bytes @ 0x2B
  1323  004B                     	ds	1
  1324  004C                     _scale$1065:
  1325                           
  1326                           ; 4 bytes @ 0x2C
  1327  004C                     	ds	1
  1328  004D                     _fround$1063:
  1329                           
  1330                           ; 4 bytes @ 0x2D
  1331  004D                     	ds	2
  1332  004F                     ___fldiv@sign:
  1333                           
  1334                           ; 1 bytes @ 0x2F
  1335  004F                     	ds	1
  1336  0050                     scale@scl:
  1337  0050                     ___fldiv@new_exp:	
  1338                           ; 1 bytes @ 0x30
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0x30
  1342  0050                     	ds	1
  1343  0051                     ?___fltol:
  1344  0051                     fround@prec:	
  1345                           ; 4 bytes @ 0x31
  1346                           
  1347  0051                     ___fltol@f1:	
  1348                           ; 1 bytes @ 0x31
  1349                           
  1350                           
  1351                           ; 4 bytes @ 0x31
  1352  0051                     	ds	1
  1353  0052                     ?___fladd:
  1354  0052                     ___fladd@b:	
  1355                           ; 4 bytes @ 0x32
  1356                           
  1357  0052                     ___fldiv@grs:	
  1358                           ; 4 bytes @ 0x32
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x32
  1362  0052                     	ds	3
  1363  0055                     ??___fltol:
  1364                           
  1365                           ; 1 bytes @ 0x35
  1366  0055                     	ds	1
  1367  0056                     ___fldiv@bexp:
  1368  0056                     ___fladd@a:	
  1369                           ; 1 bytes @ 0x36
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x36
  1373  0056                     	ds	1
  1374  0057                     ___fldiv@aexp:
  1375                           
  1376                           ; 1 bytes @ 0x37
  1377  0057                     	ds	1
  1378  0058                     ??_ADC_1:
  1379  0058                     ??_ADC_2:	
  1380                           ; 1 bytes @ 0x38
  1381                           
  1382                           
  1383                           ; 1 bytes @ 0x38
  1384  0058                     	ds	2
  1385  005A                     ??___fladd:
  1386  005A                     ___fltol@sign1:	
  1387                           ; 1 bytes @ 0x3A
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x3A
  1391  005A                     	ds	1
  1392  005B                     ___fltol@exp1:
  1393                           
  1394                           ; 1 bytes @ 0x3B
  1395  005B                     	ds	7
  1396  0062                     ___fladd@signs:
  1397                           
  1398                           ; 1 bytes @ 0x42
  1399  0062                     	ds	1
  1400  0063                     ___fladd@aexp:
  1401                           
  1402                           ; 1 bytes @ 0x43
  1403  0063                     	ds	1
  1404  0064                     ___fladd@bexp:
  1405                           
  1406                           ; 1 bytes @ 0x44
  1407  0064                     	ds	1
  1408  0065                     ___fladd@grs:
  1409                           
  1410                           ; 1 bytes @ 0x45
  1411  0065                     	ds	1
  1412  0066                     ?___flsub:
  1413  0066                     ___flsub@a:	
  1414                           ; 4 bytes @ 0x46
  1415                           
  1416                           
  1417                           ; 4 bytes @ 0x46
  1418  0066                     	ds	4
  1419  006A                     ___flsub@b:
  1420                           
  1421                           ; 4 bytes @ 0x4A
  1422  006A                     	ds	4
  1423                           
  1424                           	psect	maintext
  1425  1DEA                     __pmaintext:	
  1426 ;;
  1427 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1428 ;;
  1429 ;; *************** function _main *****************
  1430 ;; Defined at:
  1431 ;;		line 73 in file "lab03.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : B00/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       0       3       0       0
  1448 ;;      Totals:         0       0       3       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		_ADC_1
  1453 ;;		_ADC_2
  1454 ;;		_LCD_Limpia
  1455 ;;		_Lcd_Init
  1456 ;;		_Lcd_Set_Cursor
  1457 ;;		_Lcd_Write_String
  1458 ;;		_Write_USART
  1459 ;;		_Write_USART_String
  1460 ;;		__baudios
  1461 ;;		_config_ADC
  1462 ;;		_config_P
  1463 ;;		_config_rcsta
  1464 ;;		_config_txsta
  1465 ;;		_sprintf
  1466 ;; This function is called by:
  1467 ;;		Startup code after reset
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _main
  1473  1DEA                     _main:
  1474  1DEA                     l3913:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1477                           
  1478                           
  1479                           ;lab03.c: 74:     config_P();
  1480  1DEA  160A  158A  206F  160A  158A  	fcall	_config_P
  1481  1DEF                     l3915:
  1482                           
  1483                           ;lab03.c: 75:     config_ADC();
  1484  1DEF  160A  158A  2033  160A  158A  	fcall	_config_ADC
  1485  1DF4                     l3917:
  1486                           
  1487                           ;lab03.c: 76:     _baudios();
  1488  1DF4  160A  158A  2037  160A  158A  	fcall	__baudios
  1489                           
  1490                           ;lab03.c: 77:     config_txsta();
  1491  1DF9  160A  158A  204C  160A  158A  	fcall	_config_txsta
  1492                           
  1493                           ;lab03.c: 78:     config_rcsta();
  1494  1DFE  160A  158A  203C  160A  158A  	fcall	_config_rcsta
  1495  1E03                     l3919:
  1496                           
  1497                           ;lab03.c: 79:     Lcd_Init();
  1498  1E03  120A  118A  200E  160A  158A  	fcall	_Lcd_Init
  1499  1E08                     l3921:
  1500                           
  1501                           ;lab03.c: 80:     LCD_Limpia();
  1502  1E08  160A  158A  2062  160A  158A  	fcall	_LCD_Limpia
  1503  1E0D                     l3923:
  1504                           
  1505                           ;lab03.c: 92:         LCD_Limpia();
  1506  1E0D  160A  158A  2062  160A  158A  	fcall	_LCD_Limpia
  1507  1E12                     l3925:
  1508                           
  1509                           ;lab03.c: 93:         Lcd_Set_Cursor(1, 1);
  1510  1E12  01F4               	clrf	Lcd_Set_Cursor@y
  1511  1E13  0AF4               	incf	Lcd_Set_Cursor@y,f
  1512  1E14  3001               	movlw	1
  1513  1E15  160A  158A  20BF  160A  158A  	fcall	_Lcd_Set_Cursor
  1514  1E1A                     l3927:
  1515                           
  1516                           ;lab03.c: 94:         Lcd_Write_String("S1   S2   CONT");
  1517  1E1A  30AA               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1518  1E1B  00F3               	movwf	Lcd_Write_String@a
  1519  1E1C  3080               	movlw	128
  1520  1E1D  00F4               	movwf	Lcd_Write_String@a+1
  1521  1E1E  160A  158A  21F6  160A  158A  	fcall	_Lcd_Write_String
  1522  1E23                     l3929:
  1523                           
  1524                           ;lab03.c: 96:         ADC_1();
  1525  1E23  160A  158A  23DD  160A  158A  	fcall	_ADC_1
  1526  1E28                     l3931:
  1527                           
  1528                           ;lab03.c: 97:         ADC_2();
  1529  1E28  160A  158A  2454  160A  158A  	fcall	_ADC_2
  1530  1E2D                     l3933:
  1531                           
  1532                           ;lab03.c: 99:         sprintf(data, "%1.2f   " "%1.2f" ,volt,volt2 );
  1533  1E2D  30B9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1534  1E2E  1683               	bsf	3,5	;RP0=1, select bank1
  1535  1E2F  1303               	bcf	3,6	;RP1=0, select bank1
  1536  1E30  00C9               	movwf	??_main^(0+128)
  1537  1E31  0849               	movf	??_main^(0+128),w
  1538  1E32  00A0               	movwf	sprintf@f^(0+128)
  1539  1E33  0853               	movf	(_volt+3)^(0+128),w
  1540  1E34  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1541  1E35  0852               	movf	(_volt+2)^(0+128),w
  1542  1E36  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1543  1E37  0851               	movf	(_volt+1)^(0+128),w
  1544  1E38  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1545  1E39  0850               	movf	_volt^(0+128),w
  1546  1E3A  00A1               	movwf	(?_sprintf^(0+128)+1)
  1547  1E3B  084F               	movf	(_volt2+3)^(0+128),w
  1548  1E3C  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1549  1E3D  084E               	movf	(_volt2+2)^(0+128),w
  1550  1E3E  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1551  1E3F  084D               	movf	(_volt2+1)^(0+128),w
  1552  1E40  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1553  1E41  084C               	movf	_volt2^(0+128),w
  1554  1E42  00A5               	movwf	(?_sprintf^(0+128)+5)
  1555  1E43  30D4               	movlw	(low (_data| 0))& (0+255)
  1556  1E44  120A  118A  2078  160A  158A  	fcall	_sprintf
  1557  1E49                     l3935:
  1558                           
  1559                           ;lab03.c: 101:         Lcd_Set_Cursor(2, 1);
  1560  1E49  01F4               	clrf	Lcd_Set_Cursor@y
  1561  1E4A  0AF4               	incf	Lcd_Set_Cursor@y,f
  1562  1E4B  3002               	movlw	2
  1563  1E4C  160A  158A  20BF  160A  158A  	fcall	_Lcd_Set_Cursor
  1564  1E51                     l3937:
  1565                           
  1566                           ;lab03.c: 102:         Lcd_Write_String(data);
  1567  1E51  30D4               	movlw	(low (_data| 0))& (0+255)
  1568  1E52  00F3               	movwf	Lcd_Write_String@a
  1569  1E53  3000               	movlw	0
  1570  1E54  00F4               	movwf	Lcd_Write_String@a+1
  1571  1E55  160A  158A  21F6  160A  158A  	fcall	_Lcd_Write_String
  1572  1E5A                     l3939:
  1573                           
  1574                           ;lab03.c: 103:         Write_USART_String("S1        S2        CONT");
  1575  1E5A  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1576  1E5B  00F1               	movwf	Write_USART_String@a
  1577  1E5C  3080               	movlw	128
  1578  1E5D  00F2               	movwf	Write_USART_String@a+1
  1579  1E5E  160A  158A  2153  160A  158A  	fcall	_Write_USART_String
  1580  1E63                     l3941:
  1581                           
  1582                           ;lab03.c: 105:         Write_USART(13);
  1583  1E63  300D               	movlw	13
  1584  1E64  160A  158A  2056  160A  158A  	fcall	_Write_USART
  1585  1E69                     l3943:
  1586                           
  1587                           ;lab03.c: 106:         Write_USART(10);
  1588  1E69  300A               	movlw	10
  1589  1E6A  160A  158A  2056  160A  158A  	fcall	_Write_USART
  1590  1E6F                     l3945:
  1591                           
  1592                           ;lab03.c: 108:         Write_USART_String(data);
  1593  1E6F  30D4               	movlw	(low (_data| 0))& (0+255)
  1594  1E70  00F1               	movwf	Write_USART_String@a
  1595  1E71  3000               	movlw	0
  1596  1E72  00F2               	movwf	Write_USART_String@a+1
  1597  1E73  160A  158A  2153  160A  158A  	fcall	_Write_USART_String
  1598  1E78                     l3947:
  1599                           
  1600                           ;lab03.c: 109:         Write_USART(13);
  1601  1E78  300D               	movlw	13
  1602  1E79  160A  158A  2056  160A  158A  	fcall	_Write_USART
  1603  1E7E                     l3949:
  1604                           
  1605                           ;lab03.c: 110:         Write_USART(10);
  1606  1E7E  300A               	movlw	10
  1607  1E7F  160A  158A  2056  160A  158A  	fcall	_Write_USART
  1608  1E84                     l3951:
  1609                           
  1610                           ;lab03.c: 112:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1611  1E84  3006               	movlw	6
  1612  1E85  1683               	bsf	3,5	;RP0=1, select bank1
  1613  1E86  1303               	bcf	3,6	;RP1=0, select bank1
  1614  1E87  00CB               	movwf	(??_main^(0+128)+2)
  1615  1E88  3013               	movlw	19
  1616  1E89  00CA               	movwf	(??_main^(0+128)+1)
  1617  1E8A  30AD               	movlw	173
  1618  1E8B  00C9               	movwf	??_main^(0+128)
  1619  1E8C                     u6347:
  1620  1E8C  0BC9               	decfsz	??_main^(0+128),f
  1621  1E8D  2E8C               	goto	u6347
  1622  1E8E  0BCA               	decfsz	(??_main^(0+128)+1),f
  1623  1E8F  2E8C               	goto	u6347
  1624  1E90  0BCB               	decfsz	(??_main^(0+128)+2),f
  1625  1E91  2E8C               	goto	u6347
  1626  1E92  2E0D               	goto	l3923
  1627  1E93  120A  118A  2800   	ljmp	start
  1628  1E96                     __end_of_main:
  1629                           
  1630                           	psect	text1
  1631  0078                     __ptext1:	
  1632 ;; *************** function _sprintf *****************
  1633 ;; Defined at:
  1634 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  sp              1    wreg     PTR unsigned char 
  1637 ;;		 -> data(16), 
  1638 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1639 ;;		 -> STR_2(14), 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  1642 ;;		 -> data(16), 
  1643 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1644 ;;  tmpval          4   27[BANK1 ] struct .
  1645 ;;  val             4   19[BANK1 ] unsigned long 
  1646 ;;  prec            2   38[BANK1 ] int 
  1647 ;;  eexp            2   31[BANK1 ] int 
  1648 ;;  width           2   25[BANK1 ] int 
  1649 ;;  flag            2   23[BANK1 ] unsigned short 
  1650 ;;  cp              2    0        PTR const unsigned char 
  1651 ;;  len             2    0        unsigned int 
  1652 ;;  c               1   40[BANK1 ] unsigned char 
  1653 ;;  ap              1   18[BANK1 ] PTR void [1]
  1654 ;;		 -> ?_sprintf(2), 
  1655 ;;  d               1    0        unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    0[BANK1 ] int 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       9       0       0
  1666 ;;      Locals:         0       0      27       0       0
  1667 ;;      Temps:          0       0       5       0       0
  1668 ;;      Totals:         0       0      41       0       0
  1669 ;;Total ram usage:       41 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    3
  1672 ;; This function calls:
  1673 ;;		___awdiv
  1674 ;;		___fladd
  1675 ;;		___fleq
  1676 ;;		___flge
  1677 ;;		___flmul
  1678 ;;		___flneg
  1679 ;;		___flsub
  1680 ;;		___fltol
  1681 ;;		___lldiv
  1682 ;;		___llmod
  1683 ;;		___wmul
  1684 ;;		___xxtofl
  1685 ;;		__div_to_l_
  1686 ;;		__tdiv_to_l_
  1687 ;;		_fround
  1688 ;;		_isdigit
  1689 ;;		_scale
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function _sprintf
  1697  0078                     _sprintf:
  1698                           
  1699                           ;incstack = 0
  1700                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1701                           ;sprintf@sp stored from wreg
  1702  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1704  007A  00C5               	movwf	sprintf@sp^(0+128)
  1705  007B                     l3643:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1708  007B  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1709  007C  00A9               	movwf	??_sprintf^(0+128)
  1710  007D  0829               	movf	??_sprintf^(0+128),w
  1711  007E  00B2               	movwf	sprintf@ap^(0+128)
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1714  007F  2FDC               	goto	l3893
  1715  0080                     l3645:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1718  0080  3025               	movlw	37
  1719  0081  0648               	xorwf	sprintf@c^(0+128),w
  1720  0082  1903               	btfsc	3,2
  1721  0083  2885               	goto	u5861
  1722  0084  2886               	goto	u5860
  1723  0085                     u5861:
  1724  0085  2892               	goto	l3651
  1725  0086                     u5860:
  1726  0086                     l3647:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1729  0086  0848               	movf	sprintf@c^(0+128),w
  1730  0087  00A9               	movwf	??_sprintf^(0+128)
  1731  0088  0845               	movf	sprintf@sp^(0+128),w
  1732  0089  0084               	movwf	4
  1733  008A  0829               	movf	??_sprintf^(0+128),w
  1734  008B  1383               	bcf	3,7	;select IRP bank0
  1735  008C  0080               	movwf	0
  1736  008D                     l3649:
  1737  008D  3001               	movlw	1
  1738  008E  00A9               	movwf	??_sprintf^(0+128)
  1739  008F  0829               	movf	??_sprintf^(0+128),w
  1740  0090  07C5               	addwf	sprintf@sp^(0+128),f
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1743  0091  2FDC               	goto	l3893
  1744  0092                     l3651:
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1747  0092  01B9               	clrf	sprintf@width^(0+128)
  1748  0093  01BA               	clrf	(sprintf@width+1)^(0+128)
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1751  0094  01B7               	clrf	sprintf@flag^(0+128)
  1752  0095  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1753  0096                     l3653:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1756  0096  0820               	movf	sprintf@f^(0+128),w
  1757  0097  0084               	movwf	4
  1758  0098  120A  158A  200A  120A  118A  	fcall	stringdir
  1759  009D  160A  118A  2003  120A  118A  	fcall	_isdigit
  1760  00A2  1C03               	btfss	3,0
  1761  00A3  28A5               	goto	u5871
  1762  00A4  28A6               	goto	u5870
  1763  00A5                     u5871:
  1764  00A5  28E6               	goto	l3665
  1765  00A6                     u5870:
  1766  00A6                     l3655:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1769  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1770  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1771  00A8  01B9               	clrf	sprintf@width^(0+128)
  1772  00A9  01BA               	clrf	(sprintf@width+1)^(0+128)
  1773  00AA                     l3657:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1776  00AA  300A               	movlw	10
  1777  00AB  00F0               	movwf	___wmul@multiplier
  1778  00AC  3000               	movlw	0
  1779  00AD  00F1               	movwf	___wmul@multiplier+1
  1780  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1781  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1782  00B0  083A               	movf	(sprintf@width+1)^(0+128),w
  1783  00B1  00F3               	movwf	___wmul@multiplicand+1
  1784  00B2  0839               	movf	sprintf@width^(0+128),w
  1785  00B3  00F2               	movwf	___wmul@multiplicand
  1786  00B4  160A  158A  2107  120A  118A  	fcall	___wmul
  1787  00B9  0871               	movf	?___wmul+1,w
  1788  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1789  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1790  00BC  00BA               	movwf	(sprintf@width+1)^(0+128)
  1791  00BD  0870               	movf	?___wmul,w
  1792  00BE  00B9               	movwf	sprintf@width^(0+128)
  1793  00BF                     l3659:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1796  00BF  0820               	movf	sprintf@f^(0+128),w
  1797  00C0  0084               	movwf	4
  1798  00C1  120A  158A  200A  120A  118A  	fcall	stringdir
  1799  00C6  3ED0               	addlw	208
  1800  00C7  00A9               	movwf	??_sprintf^(0+128)
  1801  00C8  30FF               	movlw	255
  1802  00C9  1803               	skipnc
  1803  00CA  3000               	movlw	0
  1804  00CB  00AA               	movwf	(??_sprintf^(0+128)+1)
  1805  00CC  0829               	movf	??_sprintf^(0+128),w
  1806  00CD  07B9               	addwf	sprintf@width^(0+128),f
  1807  00CE  1803               	skipnc
  1808  00CF  0ABA               	incf	(sprintf@width+1)^(0+128),f
  1809  00D0  082A               	movf	(??_sprintf+1)^(0+128),w
  1810  00D1  07BA               	addwf	(sprintf@width+1)^(0+128),f
  1811  00D2                     l3661:
  1812  00D2  3001               	movlw	1
  1813  00D3  00A9               	movwf	??_sprintf^(0+128)
  1814  00D4  0829               	movf	??_sprintf^(0+128),w
  1815  00D5  07A0               	addwf	sprintf@f^(0+128),f
  1816  00D6                     l3663:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1819  00D6  0820               	movf	sprintf@f^(0+128),w
  1820  00D7  0084               	movwf	4
  1821  00D8  120A  158A  200A  120A  118A  	fcall	stringdir
  1822  00DD  160A  118A  2003  120A  118A  	fcall	_isdigit
  1823  00E2  1803               	btfsc	3,0
  1824  00E3  28E5               	goto	u5881
  1825  00E4  28E6               	goto	u5880
  1826  00E5                     u5881:
  1827  00E5  28AA               	goto	l3657
  1828  00E6                     u5880:
  1829  00E6                     l3665:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1832  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1833  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1834  00E8  0820               	movf	sprintf@f^(0+128),w
  1835  00E9  0084               	movwf	4
  1836  00EA  120A  158A  200A  120A  118A  	fcall	stringdir
  1837  00EF  3A2E               	xorlw	46
  1838  00F0  1D03               	skipz
  1839  00F1  28F3               	goto	u5891
  1840  00F2  28F4               	goto	u5890
  1841  00F3                     u5891:
  1842  00F3  2939               	goto	l3681
  1843  00F4                     u5890:
  1844  00F4                     l3667:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1847  00F4  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1848  00F5                     l3669:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1851  00F5  3001               	movlw	1
  1852  00F6  00A9               	movwf	??_sprintf^(0+128)
  1853  00F7  0829               	movf	??_sprintf^(0+128),w
  1854  00F8  07A0               	addwf	sprintf@f^(0+128),f
  1855  00F9                     l3671:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1858  00F9  01C6               	clrf	sprintf@prec^(0+128)
  1859  00FA  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1862  00FB  2928               	goto	l3679
  1863  00FC                     l3673:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1866  00FC  300A               	movlw	10
  1867  00FD  00F0               	movwf	___wmul@multiplier
  1868  00FE  3000               	movlw	0
  1869  00FF  00F1               	movwf	___wmul@multiplier+1
  1870  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1872  0102  0847               	movf	(sprintf@prec+1)^(0+128),w
  1873  0103  00F3               	movwf	___wmul@multiplicand+1
  1874  0104  0846               	movf	sprintf@prec^(0+128),w
  1875  0105  00F2               	movwf	___wmul@multiplicand
  1876  0106  160A  158A  2107  120A  118A  	fcall	___wmul
  1877  010B  0871               	movf	?___wmul+1,w
  1878  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1879  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1880  010E  00C7               	movwf	(sprintf@prec+1)^(0+128)
  1881  010F  0870               	movf	?___wmul,w
  1882  0110  00C6               	movwf	sprintf@prec^(0+128)
  1883  0111                     l3675:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1886  0111  0820               	movf	sprintf@f^(0+128),w
  1887  0112  0084               	movwf	4
  1888  0113  120A  158A  200A  120A  118A  	fcall	stringdir
  1889  0118  3ED0               	addlw	208
  1890  0119  00A9               	movwf	??_sprintf^(0+128)
  1891  011A  30FF               	movlw	255
  1892  011B  1803               	skipnc
  1893  011C  3000               	movlw	0
  1894  011D  00AA               	movwf	(??_sprintf^(0+128)+1)
  1895  011E  0829               	movf	??_sprintf^(0+128),w
  1896  011F  07C6               	addwf	sprintf@prec^(0+128),f
  1897  0120  1803               	skipnc
  1898  0121  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  1899  0122  082A               	movf	(??_sprintf+1)^(0+128),w
  1900  0123  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  1901  0124                     l3677:
  1902  0124  3001               	movlw	1
  1903  0125  00A9               	movwf	??_sprintf^(0+128)
  1904  0126  0829               	movf	??_sprintf^(0+128),w
  1905  0127  07A0               	addwf	sprintf@f^(0+128),f
  1906  0128                     l3679:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1909  0128  0820               	movf	sprintf@f^(0+128),w
  1910  0129  0084               	movwf	4
  1911  012A  120A  158A  200A  120A  118A  	fcall	stringdir
  1912  012F  160A  118A  2003  120A  118A  	fcall	_isdigit
  1913  0134  1803               	btfsc	3,0
  1914  0135  2937               	goto	u5901
  1915  0136  2938               	goto	u5900
  1916  0137                     u5901:
  1917  0137  28FC               	goto	l3673
  1918  0138                     u5900:
  1919  0138  293F               	goto	l3687
  1920  0139                     l3681:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1923  0139  01C6               	clrf	sprintf@prec^(0+128)
  1924  013A  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1925  013B                     l3683:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1928  013B  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1929  013C  293F               	goto	l3687
  1930  013D                     l363:	
  1931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1932                           
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1935  013D  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1938  013E  295B               	goto	l3689
  1939  013F                     l3687:
  1940  013F  3001               	movlw	1
  1941  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0142  07A0               	addwf	sprintf@f^(0+128),f
  1944  0143  30FF               	movlw	-1
  1945  0144  0720               	addwf	sprintf@f^(0+128),w
  1946  0145  0084               	movwf	4
  1947  0146  120A  158A  200A  120A  118A  	fcall	stringdir
  1948  014B  00C8               	movwf	sprintf@c^(0+128)
  1949  014C  00A9               	movwf	??_sprintf^(0+128)
  1950  014D  01AA               	clrf	(??_sprintf^(0+128)+1)
  1951                           
  1952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 1, Range of values is 0 to 0
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte            4     3 (average)
  1958                           ; direct_byte           11     8 (fixed)
  1959                           ; jumptable            260     6 (fixed)
  1960                           ;	Chosen strategy is simple_byte
  1961  014E  082A               	movf	(??_sprintf+1)^(0+128),w
  1962  014F  3A00               	xorlw	0	; case 0
  1963  0150  1903               	skipnz
  1964  0151  2953               	goto	l4007
  1965  0152  2FDC               	goto	l3893
  1966  0153                     l4007:
  1967                           
  1968                           ; Switch size 1, requested type "simple"
  1969                           ; Number of cases is 2, Range of values is 0 to 102
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; simple_byte            7     4 (average)
  1973                           ; jumptable            260     6 (fixed)
  1974                           ;	Chosen strategy is simple_byte
  1975  0153  0829               	movf	??_sprintf^(0+128),w
  1976  0154  3A00               	xorlw	0	; case 0
  1977  0155  1903               	skipnz
  1978  0156  2FEE               	goto	l3895
  1979  0157  3A66               	xorlw	102	; case 102
  1980  0158  1903               	skipnz
  1981  0159  293D               	goto	l363
  1982  015A  2FDC               	goto	l3893
  1983  015B                     l3689:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1986  015B  3000               	movlw	0
  1987  015C  0537               	andwf	sprintf@flag^(0+128),w
  1988  015D  00A9               	movwf	??_sprintf^(0+128)
  1989  015E  3007               	movlw	7
  1990  015F  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1991  0160  00AA               	movwf	(??_sprintf+1)^(0+128)
  1992  0161  0829               	movf	??_sprintf^(0+128),w
  1993  0162  042A               	iorwf	(??_sprintf^(0+128)+1),w
  1994  0163  1903               	btfsc	3,2
  1995  0164  2966               	goto	u5911
  1996  0165  2967               	goto	u5910
  1997  0166                     u5911:
  1998  0166  2F19               	goto	l3847
  1999  0167                     u5910:
  2000  0167                     l3691:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2003  0167  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2004  0168  296A               	goto	u5921
  2005  0169  296B               	goto	u5920
  2006  016A                     u5921:
  2007  016A  296F               	goto	l3695
  2008  016B                     u5920:
  2009  016B                     l3693:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2012  016B  3006               	movlw	6
  2013  016C  00C6               	movwf	sprintf@prec^(0+128)
  2014  016D  3000               	movlw	0
  2015  016E  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2016  016F                     l3695:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2019  016F  0832               	movf	sprintf@ap^(0+128),w
  2020  0170  0084               	movwf	4
  2021  0171  1383               	bcf	3,7	;select IRP bank0
  2022  0172  0800               	movf	0,w
  2023  0173  00C1               	movwf	sprintf@fval^(0+128)
  2024  0174  0A84               	incf	4,f
  2025  0175  0800               	movf	0,w
  2026  0176  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2027  0177  0A84               	incf	4,f
  2028  0178  0800               	movf	0,w
  2029  0179  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2030  017A  0A84               	incf	4,f
  2031  017B  0800               	movf	0,w
  2032  017C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2033  017D                     l3697:
  2034  017D  3004               	movlw	4
  2035  017E  00A9               	movwf	??_sprintf^(0+128)
  2036  017F  0829               	movf	??_sprintf^(0+128),w
  2037  0180  07B2               	addwf	sprintf@ap^(0+128),f
  2038  0181                     l3699:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2041  0181  0844               	movf	(sprintf@fval+3)^(0+128),w
  2042  0182  00F3               	movwf	___flge@ff1+3
  2043  0183  0843               	movf	(sprintf@fval+2)^(0+128),w
  2044  0184  00F2               	movwf	___flge@ff1+2
  2045  0185  0842               	movf	(sprintf@fval+1)^(0+128),w
  2046  0186  00F1               	movwf	___flge@ff1+1
  2047  0187  0841               	movf	sprintf@fval^(0+128),w
  2048  0188  00F0               	movwf	___flge@ff1
  2049  0189  3000               	movlw	0
  2050  018A  00F7               	movwf	___flge@ff2+3
  2051  018B  3000               	movlw	0
  2052  018C  00F6               	movwf	___flge@ff2+2
  2053  018D  3000               	movlw	0
  2054  018E  00F5               	movwf	___flge@ff2+1
  2055  018F  3000               	movlw	0
  2056  0190  00F4               	movwf	___flge@ff2
  2057  0191  160A  158A  2548  120A  118A  	fcall	___flge
  2058  0196  1803               	btfsc	3,0
  2059  0197  2999               	goto	u5931
  2060  0198  299A               	goto	u5930
  2061  0199                     u5931:
  2062  0199  29B7               	goto	l3705
  2063  019A                     u5930:
  2064  019A                     l3701:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2067  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2068  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2069  019C  0844               	movf	(sprintf@fval+3)^(0+128),w
  2070  019D  00F3               	movwf	___flneg@f1+3
  2071  019E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2072  019F  00F2               	movwf	___flneg@f1+2
  2073  01A0  0842               	movf	(sprintf@fval+1)^(0+128),w
  2074  01A1  00F1               	movwf	___flneg@f1+1
  2075  01A2  0841               	movf	sprintf@fval^(0+128),w
  2076  01A3  00F0               	movwf	___flneg@f1
  2077  01A4  120A  118A  2003  120A  118A  	fcall	___flneg
  2078  01A9  0873               	movf	?___flneg+3,w
  2079  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2080  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2081  01AC  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2082  01AD  0872               	movf	?___flneg+2,w
  2083  01AE  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2084  01AF  0871               	movf	?___flneg+1,w
  2085  01B0  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2086  01B1  0870               	movf	?___flneg,w
  2087  01B2  00C1               	movwf	sprintf@fval^(0+128)
  2088  01B3                     l3703:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2091  01B3  3003               	movlw	3
  2092  01B4  04B7               	iorwf	sprintf@flag^(0+128),f
  2093  01B5  3000               	movlw	0
  2094  01B6  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2095  01B7                     l3705:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2098  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2099  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2100  01B9  01BF               	clrf	sprintf@eexp^(0+128)
  2101  01BA  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2102  01BB                     l3707:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2105  01BB  0844               	movf	(sprintf@fval+3)^(0+128),w
  2106  01BC  00F3               	movwf	___fleq@ff1+3
  2107  01BD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2108  01BE  00F2               	movwf	___fleq@ff1+2
  2109  01BF  0842               	movf	(sprintf@fval+1)^(0+128),w
  2110  01C0  00F1               	movwf	___fleq@ff1+1
  2111  01C1  0841               	movf	sprintf@fval^(0+128),w
  2112  01C2  00F0               	movwf	___fleq@ff1
  2113  01C3  3000               	movlw	0
  2114  01C4  00F7               	movwf	___fleq@ff2+3
  2115  01C5  3000               	movlw	0
  2116  01C6  00F6               	movwf	___fleq@ff2+2
  2117  01C7  3000               	movlw	0
  2118  01C8  00F5               	movwf	___fleq@ff2+1
  2119  01C9  3000               	movlw	0
  2120  01CA  00F4               	movwf	___fleq@ff2
  2121  01CB  160A  158A  227C  120A  118A  	fcall	___fleq
  2122  01D0  1803               	btfsc	3,0
  2123  01D1  29D3               	goto	u5941
  2124  01D2  29D4               	goto	u5940
  2125  01D3                     u5941:
  2126  01D3  2AC4               	goto	l3733
  2127  01D4                     u5940:
  2128  01D4                     l3709:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2131  01D4  1003               	clrc
  2132  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2133  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2134  01D7  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2135  01D8  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2136  01D9  3E82               	addlw	130
  2137  01DA  00BF               	movwf	sprintf@eexp^(0+128)
  2138  01DB  30FF               	movlw	255
  2139  01DC  1803               	skipnc
  2140  01DD  3000               	movlw	0
  2141  01DE  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  2142  01DF                     l3711:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2145  01DF  30FF               	movlw	255
  2146  01E0  07BF               	addwf	sprintf@eexp^(0+128),f
  2147  01E1  1803               	skipnc
  2148  01E2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2149  01E3  30FF               	movlw	255
  2150  01E4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2151  01E5                     l3713:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2154  01E5  3003               	movlw	3
  2155  01E6  00F0               	movwf	___wmul@multiplier
  2156  01E7  3000               	movlw	0
  2157  01E8  00F1               	movwf	___wmul@multiplier+1
  2158  01E9  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2159  01EA  00F3               	movwf	___wmul@multiplicand+1
  2160  01EB  083F               	movf	sprintf@eexp^(0+128),w
  2161  01EC  00F2               	movwf	___wmul@multiplicand
  2162  01ED  160A  158A  2107  120A  118A  	fcall	___wmul
  2163  01F2  0871               	movf	?___wmul+1,w
  2164  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2165  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2166  01F5  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2167  01F6  0870               	movf	?___wmul,w
  2168  01F7  00BF               	movwf	sprintf@eexp^(0+128)
  2169  01F8                     l3715:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2172  01F8  300A               	movlw	10
  2173  01F9  00F7               	movwf	___awdiv@divisor
  2174  01FA  3000               	movlw	0
  2175  01FB  00F8               	movwf	___awdiv@divisor+1
  2176  01FC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2177  01FD  00FA               	movwf	___awdiv@dividend+1
  2178  01FE  083F               	movf	sprintf@eexp^(0+128),w
  2179  01FF  00F9               	movwf	___awdiv@dividend
  2180  0200  120A  158A  20D7  120A  118A  	fcall	___awdiv
  2181  0205  0878               	movf	?___awdiv+1,w
  2182  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2183  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0208  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2185  0209  0877               	movf	?___awdiv,w
  2186  020A  00BF               	movwf	sprintf@eexp^(0+128)
  2187  020B                     l3717:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2190  020B  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2191  020C  2A0E               	goto	u5951
  2192  020D  2A0F               	goto	u5950
  2193  020E                     u5951:
  2194  020E  2A15               	goto	l3721
  2195  020F                     u5950:
  2196  020F                     l3719:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2199  020F  30FF               	movlw	255
  2200  0210  07BF               	addwf	sprintf@eexp^(0+128),f
  2201  0211  1803               	skipnc
  2202  0212  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2203  0213  30FF               	movlw	255
  2204  0214  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2205  0215                     l3721:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2208  0215  033F               	decf	sprintf@eexp^(0+128),w
  2209  0216  3AFF               	xorlw	255
  2210  0217  120A  158A  2140  120A  118A  	fcall	_scale
  2211  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2212  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2213  021E  0841               	movf	?_scale+3,w
  2214  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0221  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2217  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0224  0840               	movf	?_scale+2,w
  2220  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0227  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2223  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2225  022A  083F               	movf	?_scale+1,w
  2226  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2227  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2228  022D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2229  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2230  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0230  083E               	movf	?_scale,w
  2232  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0233  00BB               	movwf	sprintf@tmpval^(0+128)
  2235  0234                     l3723:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2238  0234  0844               	movf	(sprintf@fval+3)^(0+128),w
  2239  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0237  00A7               	movwf	___flmul@b+3
  2242  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2244  023A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2245  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2246  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2247  023D  00A6               	movwf	___flmul@b+2
  2248  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2249  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0240  0842               	movf	(sprintf@fval+1)^(0+128),w
  2251  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0243  00A5               	movwf	___flmul@b+1
  2254  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0246  0841               	movf	sprintf@fval^(0+128),w
  2257  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0249  00A4               	movwf	___flmul@b
  2260  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2261  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2262  024C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2263  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2264  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2265  024F  00AB               	movwf	___flmul@a+3
  2266  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0252  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2269  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0255  00AA               	movwf	___flmul@a+2
  2272  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0258  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2275  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2276  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2277  025B  00A9               	movwf	___flmul@a+1
  2278  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2279  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2280  025E  083B               	movf	sprintf@tmpval^(0+128),w
  2281  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0261  00A8               	movwf	___flmul@a
  2284  0262  120A  158A  249F  120A  118A  	fcall	___flmul
  2285  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0269  0827               	movf	?___flmul+3,w
  2288  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2289  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2290  026C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2291  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2292  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2293  026F  0826               	movf	?___flmul+2,w
  2294  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0272  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2297  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2299  0275  0825               	movf	?___flmul+1,w
  2300  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0278  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2303  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2304  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2305  027B  0824               	movf	?___flmul,w
  2306  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2307  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2308  027E  00BB               	movwf	sprintf@tmpval^(0+128)
  2309  027F                     l3725:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2312  027F  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2313  0280  00F3               	movwf	___flge@ff1+3
  2314  0281  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2315  0282  00F2               	movwf	___flge@ff1+2
  2316  0283  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2317  0284  00F1               	movwf	___flge@ff1+1
  2318  0285  083B               	movf	sprintf@tmpval^(0+128),w
  2319  0286  00F0               	movwf	___flge@ff1
  2320  0287  303F               	movlw	63
  2321  0288  00F7               	movwf	___flge@ff2+3
  2322  0289  3080               	movlw	128
  2323  028A  00F6               	movwf	___flge@ff2+2
  2324  028B  3000               	movlw	0
  2325  028C  00F5               	movwf	___flge@ff2+1
  2326  028D  3000               	movlw	0
  2327  028E  00F4               	movwf	___flge@ff2
  2328  028F  160A  158A  2548  120A  118A  	fcall	___flge
  2329  0294  1803               	btfsc	3,0
  2330  0295  2A97               	goto	u5961
  2331  0296  2A98               	goto	u5960
  2332  0297                     u5961:
  2333  0297  2AA1               	goto	l3729
  2334  0298                     u5960:
  2335  0298                     l3727:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2338  0298  30FF               	movlw	255
  2339  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2340  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2341  029B  07BF               	addwf	sprintf@eexp^(0+128),f
  2342  029C  1803               	skipnc
  2343  029D  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2344  029E  30FF               	movlw	255
  2345  029F  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2346  02A0  2AC4               	goto	l3733
  2347  02A1                     l3729:
  2348  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2349  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2350  02A3  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2351  02A4  00F3               	movwf	___flge@ff1+3
  2352  02A5  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2353  02A6  00F2               	movwf	___flge@ff1+2
  2354  02A7  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2355  02A8  00F1               	movwf	___flge@ff1+1
  2356  02A9  083B               	movf	sprintf@tmpval^(0+128),w
  2357  02AA  00F0               	movwf	___flge@ff1
  2358  02AB  3041               	movlw	65
  2359  02AC  00F7               	movwf	___flge@ff2+3
  2360  02AD  3020               	movlw	32
  2361  02AE  00F6               	movwf	___flge@ff2+2
  2362  02AF  3000               	movlw	0
  2363  02B0  00F5               	movwf	___flge@ff2+1
  2364  02B1  3000               	movlw	0
  2365  02B2  00F4               	movwf	___flge@ff2
  2366  02B3  160A  158A  2548  120A  118A  	fcall	___flge
  2367  02B8  1C03               	btfss	3,0
  2368  02B9  2ABB               	goto	u5971
  2369  02BA  2ABC               	goto	u5970
  2370  02BB                     u5971:
  2371  02BB  2AC4               	goto	l3733
  2372  02BC                     u5970:
  2373  02BC                     l3731:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2376  02BC  3001               	movlw	1
  2377  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2378  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2379  02BF  07BF               	addwf	sprintf@eexp^(0+128),f
  2380  02C0  1803               	skipnc
  2381  02C1  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2382  02C2  3000               	movlw	0
  2383  02C3  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2384  02C4                     l3733:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2387  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2388  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2389  02C6  0847               	movf	(sprintf@prec+1)^(0+128),w
  2390  02C7  3A80               	xorlw	128
  2391  02C8  00FF               	movwf	btemp+1
  2392  02C9  3080               	movlw	128
  2393  02CA  027F               	subwf	btemp+1,w
  2394  02CB  1D03               	skipz
  2395  02CC  2ACF               	goto	u5985
  2396  02CD  300D               	movlw	13
  2397  02CE  0246               	subwf	sprintf@prec^(0+128),w
  2398  02CF                     u5985:
  2399  02CF  1803               	skipnc
  2400  02D0  2AD2               	goto	u5981
  2401  02D1  2AD3               	goto	u5980
  2402  02D2                     u5981:
  2403  02D2  2B1A               	goto	l3737
  2404  02D3                     u5980:
  2405  02D3                     l3735:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2408  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2409  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2410  02D5  0846               	movf	sprintf@prec^(0+128),w
  2411  02D6  160A  118A  236D  120A  118A  	fcall	_fround
  2412  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2413  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2414  02DD  0841               	movf	?_fround+3,w
  2415  02DE  00D5               	movwf	___fladd@b+3
  2416  02DF  0840               	movf	?_fround+2,w
  2417  02E0  00D4               	movwf	___fladd@b+2
  2418  02E1  083F               	movf	?_fround+1,w
  2419  02E2  00D3               	movwf	___fladd@b+1
  2420  02E3  083E               	movf	?_fround,w
  2421  02E4  00D2               	movwf	___fladd@b
  2422  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2423  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2424  02E7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2425  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2426  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2427  02EA  00D9               	movwf	___fladd@a+3
  2428  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2429  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2430  02ED  0843               	movf	(sprintf@fval+2)^(0+128),w
  2431  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2432  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2433  02F0  00D8               	movwf	___fladd@a+2
  2434  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2435  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2436  02F3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2437  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2438  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2439  02F6  00D7               	movwf	___fladd@a+1
  2440  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2441  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2442  02F9  0841               	movf	sprintf@fval^(0+128),w
  2443  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2444  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2445  02FC  00D6               	movwf	___fladd@a
  2446  02FD  160A  118A  2578  120A  118A  	fcall	___fladd
  2447  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0304  0855               	movf	?___fladd+3,w
  2450  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0307  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2453  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2455  030A  0854               	movf	?___fladd+2,w
  2456  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2457  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2458  030D  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2459  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2460  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0310  0853               	movf	?___fladd+1,w
  2462  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0313  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2465  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0316  0852               	movf	?___fladd,w
  2468  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2470  0319  00C1               	movwf	sprintf@fval^(0+128)
  2471  031A                     l3737:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2474  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2475  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2476  031C  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2477  031D  3A80               	xorlw	128
  2478  031E  00FF               	movwf	btemp+1
  2479  031F  3080               	movlw	128
  2480  0320  027F               	subwf	btemp+1,w
  2481  0321  1D03               	skipz
  2482  0322  2B25               	goto	u5995
  2483  0323  300A               	movlw	10
  2484  0324  023F               	subwf	sprintf@eexp^(0+128),w
  2485  0325                     u5995:
  2486  0325  1803               	skipnc
  2487  0326  2B28               	goto	u5991
  2488  0327  2B29               	goto	u5990
  2489  0328                     u5991:
  2490  0328  2B7A               	goto	l3745
  2491  0329                     u5990:
  2492  0329                     l3739:
  2493  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2494  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2495  032B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2496  032C  00F3               	movwf	___fleq@ff1+3
  2497  032D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2498  032E  00F2               	movwf	___fleq@ff1+2
  2499  032F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2500  0330  00F1               	movwf	___fleq@ff1+1
  2501  0331  0841               	movf	sprintf@fval^(0+128),w
  2502  0332  00F0               	movwf	___fleq@ff1
  2503  0333  3000               	movlw	0
  2504  0334  00F7               	movwf	___fleq@ff2+3
  2505  0335  3000               	movlw	0
  2506  0336  00F6               	movwf	___fleq@ff2+2
  2507  0337  3000               	movlw	0
  2508  0338  00F5               	movwf	___fleq@ff2+1
  2509  0339  3000               	movlw	0
  2510  033A  00F4               	movwf	___fleq@ff2
  2511  033B  160A  158A  227C  120A  118A  	fcall	___fleq
  2512  0340  1803               	btfsc	3,0
  2513  0341  2B43               	goto	u6001
  2514  0342  2B44               	goto	u6000
  2515  0343                     u6001:
  2516  0343  2BEC               	goto	l3759
  2517  0344                     u6000:
  2518  0344                     l3741:
  2519  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2521  0346  0844               	movf	(sprintf@fval+3)^(0+128),w
  2522  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0349  00D4               	movwf	___fltol@f1+3
  2525  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2526  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2527  034C  0843               	movf	(sprintf@fval+2)^(0+128),w
  2528  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2529  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2530  034F  00D3               	movwf	___fltol@f1+2
  2531  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2533  0352  0842               	movf	(sprintf@fval+1)^(0+128),w
  2534  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0355  00D2               	movwf	___fltol@f1+1
  2537  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0358  0841               	movf	sprintf@fval^(0+128),w
  2540  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2541  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2542  035B  00D1               	movwf	___fltol@f1
  2543  035C  160A  158A  24CC  120A  118A  	fcall	___fltol
  2544  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0363  0854               	movf	?___fltol+3,w
  2547  0364  0453               	iorwf	?___fltol+2,w
  2548  0365  0452               	iorwf	?___fltol+1,w
  2549  0366  0451               	iorwf	?___fltol,w
  2550  0367  1D03               	skipz
  2551  0368  2B6A               	goto	u6011
  2552  0369  2B6B               	goto	u6010
  2553  036A                     u6011:
  2554  036A  2BEC               	goto	l3759
  2555  036B                     u6010:
  2556  036B                     l3743:
  2557  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2558  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2559  036D  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2560  036E  3A80               	xorlw	128
  2561  036F  00FF               	movwf	btemp+1
  2562  0370  3080               	movlw	128
  2563  0371  027F               	subwf	btemp+1,w
  2564  0372  1D03               	skipz
  2565  0373  2B76               	goto	u6025
  2566  0374  3002               	movlw	2
  2567  0375  023F               	subwf	sprintf@eexp^(0+128),w
  2568  0376                     u6025:
  2569  0376  1C03               	skipc
  2570  0377  2B79               	goto	u6021
  2571  0378  2B7A               	goto	u6020
  2572  0379                     u6021:
  2573  0379  2BEC               	goto	l3759
  2574  037A                     u6020:
  2575  037A                     l3745:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2578  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2579  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2580  037C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2581  037D  00F3               	movwf	___flge@ff1+3
  2582  037E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2583  037F  00F2               	movwf	___flge@ff1+2
  2584  0380  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2585  0381  00F1               	movwf	___flge@ff1+1
  2586  0382  083B               	movf	sprintf@tmpval^(0+128),w
  2587  0383  00F0               	movwf	___flge@ff1
  2588  0384  3040               	movlw	64
  2589  0385  00F7               	movwf	___flge@ff2+3
  2590  0386  3089               	movlw	137
  2591  0387  00F6               	movwf	___flge@ff2+2
  2592  0388  3070               	movlw	112
  2593  0389  00F5               	movwf	___flge@ff2+1
  2594  038A  305F               	movlw	95
  2595  038B  00F4               	movwf	___flge@ff2
  2596  038C  160A  158A  2548  120A  118A  	fcall	___flge
  2597  0391  1803               	btfsc	3,0
  2598  0392  2B94               	goto	u6031
  2599  0393  2B95               	goto	u6030
  2600  0394                     u6031:
  2601  0394  2B9E               	goto	l3749
  2602  0395                     u6030:
  2603  0395                     l3747:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2606  0395  30F7               	movlw	247
  2607  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0398  07BF               	addwf	sprintf@eexp^(0+128),f
  2610  0399  1803               	skipnc
  2611  039A  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2612  039B  30FF               	movlw	255
  2613  039C  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2616  039D  2BA6               	goto	l3751
  2617  039E                     l3749:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2620  039E  30F8               	movlw	248
  2621  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2622  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2623  03A1  07BF               	addwf	sprintf@eexp^(0+128),f
  2624  03A2  1803               	skipnc
  2625  03A3  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2626  03A4  30FF               	movlw	255
  2627  03A5  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2628  03A6                     l3751:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2631  03A6  083F               	movf	sprintf@eexp^(0+128),w
  2632  03A7  120A  158A  2140  120A  118A  	fcall	_scale
  2633  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2634  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2635  03AE  0841               	movf	?_scale+3,w
  2636  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2637  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2638  03B1  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2639  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2640  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2641  03B4  0840               	movf	?_scale+2,w
  2642  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2643  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2644  03B7  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2645  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2646  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2647  03BA  083F               	movf	?_scale+1,w
  2648  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2649  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2650  03BD  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2651  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2652  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2653  03C0  083E               	movf	?_scale,w
  2654  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2655  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2656  03C3  00BB               	movwf	sprintf@tmpval^(0+128)
  2657  03C4                     l3753:
  2658  03C4  0844               	movf	(sprintf@fval+3)^(0+128),w
  2659  03C5  00F3               	movwf	__div_to_l_@f1+3
  2660  03C6  0843               	movf	(sprintf@fval+2)^(0+128),w
  2661  03C7  00F2               	movwf	__div_to_l_@f1+2
  2662  03C8  0842               	movf	(sprintf@fval+1)^(0+128),w
  2663  03C9  00F1               	movwf	__div_to_l_@f1+1
  2664  03CA  0841               	movf	sprintf@fval^(0+128),w
  2665  03CB  00F0               	movwf	__div_to_l_@f1
  2666  03CC  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2667  03CD  00F7               	movwf	__div_to_l_@f2+3
  2668  03CE  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2669  03CF  00F6               	movwf	__div_to_l_@f2+2
  2670  03D0  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2671  03D1  00F5               	movwf	__div_to_l_@f2+1
  2672  03D2  083B               	movf	sprintf@tmpval^(0+128),w
  2673  03D3  00F4               	movwf	__div_to_l_@f2
  2674  03D4  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2675  03D9  0873               	movf	?__div_to_l_+3,w
  2676  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2677  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2678  03DC  00B6               	movwf	(sprintf@val+3)^(0+128)
  2679  03DD  0872               	movf	?__div_to_l_+2,w
  2680  03DE  00B5               	movwf	(sprintf@val+2)^(0+128)
  2681  03DF  0871               	movf	?__div_to_l_+1,w
  2682  03E0  00B4               	movwf	(sprintf@val+1)^(0+128)
  2683  03E1  0870               	movf	?__div_to_l_,w
  2684  03E2  00B3               	movwf	sprintf@val^(0+128)
  2685  03E3                     l3757:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2688  03E3  3000               	movlw	0
  2689  03E4  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2690  03E5  3000               	movlw	0
  2691  03E6  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2692  03E7  3000               	movlw	0
  2693  03E8  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2694  03E9  3000               	movlw	0
  2695  03EA  00C1               	movwf	sprintf@fval^(0+128)
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2698  03EB  2C70               	goto	l3765
  2699  03EC                     l3759:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2702  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2703  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2704  03EE  0844               	movf	(sprintf@fval+3)^(0+128),w
  2705  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2706  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2707  03F1  00D4               	movwf	___fltol@f1+3
  2708  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2709  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2710  03F4  0843               	movf	(sprintf@fval+2)^(0+128),w
  2711  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2712  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2713  03F7  00D3               	movwf	___fltol@f1+2
  2714  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2715  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2716  03FA  0842               	movf	(sprintf@fval+1)^(0+128),w
  2717  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2718  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2719  03FD  00D2               	movwf	___fltol@f1+1
  2720  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2721  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2722  0400  0841               	movf	sprintf@fval^(0+128),w
  2723  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0403  00D1               	movwf	___fltol@f1
  2726  0404  160A  158A  24CC  120A  118A  	fcall	___fltol
  2727  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2728  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2729  040B  0854               	movf	?___fltol+3,w
  2730  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2731  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2732  040E  00B6               	movwf	(sprintf@val+3)^(0+128)
  2733  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0411  0853               	movf	?___fltol+2,w
  2736  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2737  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2738  0414  00B5               	movwf	(sprintf@val+2)^(0+128)
  2739  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0417  0852               	movf	?___fltol+1,w
  2742  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2743  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2744  041A  00B4               	movwf	(sprintf@val+1)^(0+128)
  2745  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2746  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2747  041D  0851               	movf	?___fltol,w
  2748  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2749  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0420  00B3               	movwf	sprintf@val^(0+128)
  2751  0421                     l3761:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2754  0421  0836               	movf	(sprintf@val+3)^(0+128),w
  2755  0422  00F3               	movwf	___xxtofl@val+3
  2756  0423  0835               	movf	(sprintf@val+2)^(0+128),w
  2757  0424  00F2               	movwf	___xxtofl@val+2
  2758  0425  0834               	movf	(sprintf@val+1)^(0+128),w
  2759  0426  00F1               	movwf	___xxtofl@val+1
  2760  0427  0833               	movf	sprintf@val^(0+128),w
  2761  0428  00F0               	movwf	___xxtofl@val
  2762  0429  3000               	movlw	0
  2763  042A  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2764  042F  0873               	movf	?___xxtofl+3,w
  2765  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0432  00E9               	movwf	___flsub@a+3
  2768  0433  0872               	movf	?___xxtofl+2,w
  2769  0434  00E8               	movwf	___flsub@a+2
  2770  0435  0871               	movf	?___xxtofl+1,w
  2771  0436  00E7               	movwf	___flsub@a+1
  2772  0437  0870               	movf	?___xxtofl,w
  2773  0438  00E6               	movwf	___flsub@a
  2774  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2775  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2776  043B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2777  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2778  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2779  043E  00ED               	movwf	___flsub@b+3
  2780  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2782  0441  0843               	movf	(sprintf@fval+2)^(0+128),w
  2783  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0444  00EC               	movwf	___flsub@b+2
  2786  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2787  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2788  0447  0842               	movf	(sprintf@fval+1)^(0+128),w
  2789  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2791  044A  00EB               	movwf	___flsub@b+1
  2792  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2793  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2794  044D  0841               	movf	sprintf@fval^(0+128),w
  2795  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2796  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2797  0450  00EA               	movwf	___flsub@b
  2798  0451  160A  158A  20E3  120A  118A  	fcall	___flsub
  2799  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0458  0869               	movf	?___flsub+3,w
  2802  0459  1683               	bsf	3,5	;RP0=1, select bank1
  2803  045A  1303               	bcf	3,6	;RP1=0, select bank1
  2804  045B  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2805  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2806  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2807  045E  0868               	movf	?___flsub+2,w
  2808  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0460  1303               	bcf	3,6	;RP1=0, select bank1
  2810  0461  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2811  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0464  0867               	movf	?___flsub+1,w
  2814  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2815  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2816  0467  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2817  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2819  046A  0866               	movf	?___flsub,w
  2820  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2821  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2822  046D  00C1               	movwf	sprintf@fval^(0+128)
  2823  046E                     l3763:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2826  046E  01BF               	clrf	sprintf@eexp^(0+128)
  2827  046F  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2828  0470                     l3765:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2831  0470  01C8               	clrf	sprintf@c^(0+128)
  2832  0471  0AC8               	incf	sprintf@c^(0+128),f
  2833  0472                     l3771:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2836  0472  0848               	movf	sprintf@c^(0+128),w
  2837  0473  00A9               	movwf	??_sprintf^(0+128)
  2838  0474  3001               	movlw	1
  2839  0475                     u6045:
  2840  0475  1003               	clrc
  2841  0476  0DA9               	rlf	??_sprintf^(0+128),f
  2842  0477  3EFF               	addlw	-1
  2843  0478  1D03               	skipz
  2844  0479  2C75               	goto	u6045
  2845  047A  1003               	clrc
  2846  047B  0D29               	rlf	??_sprintf^(0+128),w
  2847  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2848  047D  0084               	movwf	4
  2849  047E  120A  158A  200A  120A  118A  	fcall	stringdir
  2850  0483  00AA               	movwf	(??_sprintf+1)^(0+128)
  2851  0484  120A  158A  200A  120A  118A  	fcall	stringdir
  2852  0489  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
  2853  048A  120A  158A  200A  120A  118A  	fcall	stringdir
  2854  048F  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
  2855  0490  120A  158A  200A  120A  118A  	fcall	stringdir
  2856  0495  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
  2857  0496  082D               	movf	(??_sprintf+4)^(0+128),w
  2858  0497  0236               	subwf	(sprintf@val+3)^(0+128),w
  2859  0498  1D03               	skipz
  2860  0499  2CA4               	goto	u6055
  2861  049A  082C               	movf	(??_sprintf+3)^(0+128),w
  2862  049B  0235               	subwf	(sprintf@val+2)^(0+128),w
  2863  049C  1D03               	skipz
  2864  049D  2CA4               	goto	u6055
  2865  049E  082B               	movf	(??_sprintf+2)^(0+128),w
  2866  049F  0234               	subwf	(sprintf@val+1)^(0+128),w
  2867  04A0  1D03               	skipz
  2868  04A1  2CA4               	goto	u6055
  2869  04A2  082A               	movf	(??_sprintf+1)^(0+128),w
  2870  04A3  0233               	subwf	sprintf@val^(0+128),w
  2871  04A4                     u6055:
  2872  04A4  1803               	skipnc
  2873  04A5  2CA7               	goto	u6051
  2874  04A6  2CA8               	goto	u6050
  2875  04A7                     u6051:
  2876  04A7  2CA9               	goto	l3775
  2877  04A8                     u6050:
  2878  04A8  2CB3               	goto	l3777
  2879  04A9                     l3775:
  2880  04A9  3001               	movlw	1
  2881  04AA  00A9               	movwf	??_sprintf^(0+128)
  2882  04AB  0829               	movf	??_sprintf^(0+128),w
  2883  04AC  07C8               	addwf	sprintf@c^(0+128),f
  2884  04AD  300A               	movlw	10
  2885  04AE  0648               	xorwf	sprintf@c^(0+128),w
  2886  04AF  1D03               	btfss	3,2
  2887  04B0  2CB2               	goto	u6061
  2888  04B1  2CB3               	goto	u6060
  2889  04B2                     u6061:
  2890  04B2  2C72               	goto	l3771
  2891  04B3                     u6060:
  2892  04B3                     l3777:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2895  04B3  0848               	movf	sprintf@c^(0+128),w
  2896  04B4  0746               	addwf	sprintf@prec^(0+128),w
  2897  04B5  00A9               	movwf	??_sprintf^(0+128)
  2898  04B6  0847               	movf	(sprintf@prec+1)^(0+128),w
  2899  04B7  1803               	skipnc
  2900  04B8  0A47               	incf	(sprintf@prec+1)^(0+128),w
  2901  04B9  00AA               	movwf	(??_sprintf^(0+128)+1)
  2902  04BA  083F               	movf	sprintf@eexp^(0+128),w
  2903  04BB  0729               	addwf	??_sprintf^(0+128),w
  2904  04BC  00AB               	movwf	(??_sprintf+2)^(0+128)
  2905  04BD  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2906  04BE  1803               	skipnc
  2907  04BF  0A40               	incf	(sprintf@eexp+1)^(0+128),w
  2908  04C0  072A               	addwf	(??_sprintf+1)^(0+128),w
  2909  04C1  00AC               	movwf	(??_sprintf+3)^(0+128)
  2910  04C2  082B               	movf	(??_sprintf+2)^(0+128),w
  2911  04C3  02B9               	subwf	sprintf@width^(0+128),f
  2912  04C4  082C               	movf	(??_sprintf+3)^(0+128),w
  2913  04C5  1C03               	skipc
  2914  04C6  03BA               	decf	(sprintf@width+1)^(0+128),f
  2915  04C7  02BA               	subwf	(sprintf@width+1)^(0+128),f
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  2918  04C8  0846               	movf	sprintf@prec^(0+128),w
  2919  04C9  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  2920  04CA  1903               	btfsc	3,2
  2921  04CB  2CCD               	goto	u6071
  2922  04CC  2CCE               	goto	u6070
  2923  04CD                     u6071:
  2924  04CD  2CD4               	goto	l3781
  2925  04CE                     u6070:
  2926  04CE                     l3779:
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2929  04CE  30FF               	movlw	255
  2930  04CF  07B9               	addwf	sprintf@width^(0+128),f
  2931  04D0  1803               	skipnc
  2932  04D1  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2933  04D2  30FF               	movlw	255
  2934  04D3  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2935  04D4                     l3781:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2938  04D4  3003               	movlw	3
  2939  04D5  0537               	andwf	sprintf@flag^(0+128),w
  2940  04D6  00A9               	movwf	??_sprintf^(0+128)
  2941  04D7  3000               	movlw	0
  2942  04D8  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2943  04D9  00AA               	movwf	(??_sprintf+1)^(0+128)
  2944  04DA  0829               	movf	??_sprintf^(0+128),w
  2945  04DB  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2946  04DC  1903               	btfsc	3,2
  2947  04DD  2CDF               	goto	u6081
  2948  04DE  2CE0               	goto	u6080
  2949  04DF                     u6081:
  2950  04DF  2CF5               	goto	l3791
  2951  04E0                     u6080:
  2952  04E0                     l3783:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2955  04E0  30FF               	movlw	255
  2956  04E1  07B9               	addwf	sprintf@width^(0+128),f
  2957  04E2  1803               	skipnc
  2958  04E3  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2959  04E4  30FF               	movlw	255
  2960  04E5  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2961  04E6  2CF5               	goto	l3791
  2962  04E7                     l3785:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2965  04E7  3020               	movlw	32
  2966  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2967  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2968  04EA  00A9               	movwf	??_sprintf^(0+128)
  2969  04EB  0845               	movf	sprintf@sp^(0+128),w
  2970  04EC  0084               	movwf	4
  2971  04ED  0829               	movf	??_sprintf^(0+128),w
  2972  04EE  1383               	bcf	3,7	;select IRP bank0
  2973  04EF  0080               	movwf	0
  2974  04F0                     l3787:
  2975  04F0  3001               	movlw	1
  2976  04F1  00A9               	movwf	??_sprintf^(0+128)
  2977  04F2  0829               	movf	??_sprintf^(0+128),w
  2978  04F3  07C5               	addwf	sprintf@sp^(0+128),f
  2979  04F4  2CE0               	goto	l3783
  2980  04F5                     l3791:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2983  04F5  083A               	movf	(sprintf@width+1)^(0+128),w
  2984  04F6  3A80               	xorlw	128
  2985  04F7  00FF               	movwf	btemp+1
  2986  04F8  3080               	movlw	128
  2987  04F9  027F               	subwf	btemp+1,w
  2988  04FA  1D03               	skipz
  2989  04FB  2CFE               	goto	u6095
  2990  04FC  3001               	movlw	1
  2991  04FD  0239               	subwf	sprintf@width^(0+128),w
  2992  04FE                     u6095:
  2993  04FE  1803               	skipnc
  2994  04FF  2D01               	goto	u6091
  2995  0500  2D02               	goto	u6090
  2996  0501                     u6091:
  2997  0501  2CE7               	goto	l3785
  2998  0502                     u6090:
  2999  0502                     l3793:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3002  0502  3003               	movlw	3
  3003  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0504  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0505  0537               	andwf	sprintf@flag^(0+128),w
  3006  0506  00A9               	movwf	??_sprintf^(0+128)
  3007  0507  3000               	movlw	0
  3008  0508  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3009  0509  00AA               	movwf	(??_sprintf+1)^(0+128)
  3010  050A  0829               	movf	??_sprintf^(0+128),w
  3011  050B  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3012  050C  1903               	btfsc	3,2
  3013  050D  2D0F               	goto	u6101
  3014  050E  2D10               	goto	u6100
  3015  050F                     u6101:
  3016  050F  2D82               	goto	l394
  3017  0510                     u6100:
  3018  0510                     l3795:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3021  0510  302D               	movlw	45
  3022  0511  00A9               	movwf	??_sprintf^(0+128)
  3023  0512  0845               	movf	sprintf@sp^(0+128),w
  3024  0513  0084               	movwf	4
  3025  0514  0829               	movf	??_sprintf^(0+128),w
  3026  0515  1383               	bcf	3,7	;select IRP bank0
  3027  0516  0080               	movwf	0
  3028  0517                     l3797:
  3029  0517  3001               	movlw	1
  3030  0518  00A9               	movwf	??_sprintf^(0+128)
  3031  0519  0829               	movf	??_sprintf^(0+128),w
  3032  051A  07C5               	addwf	sprintf@sp^(0+128),f
  3033  051B  2D82               	goto	l394
  3034  051C                     l3799:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3037  051C  0848               	movf	sprintf@c^(0+128),w
  3038  051D  00A9               	movwf	??_sprintf^(0+128)
  3039  051E  3001               	movlw	1
  3040  051F                     u6115:
  3041  051F  1003               	clrc
  3042  0520  0DA9               	rlf	??_sprintf^(0+128),f
  3043  0521  3EFF               	addlw	-1
  3044  0522  1D03               	skipz
  3045  0523  2D1F               	goto	u6115
  3046  0524  1003               	clrc
  3047  0525  0D29               	rlf	??_sprintf^(0+128),w
  3048  0526  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3049  0527  0084               	movwf	4
  3050  0528  120A  158A  200A  120A  118A  	fcall	stringdir
  3051  052D  00F0               	movwf	___lldiv@divisor
  3052  052E  120A  158A  200A  120A  118A  	fcall	stringdir
  3053  0533  00F1               	movwf	___lldiv@divisor+1
  3054  0534  120A  158A  200A  120A  118A  	fcall	stringdir
  3055  0539  00F2               	movwf	___lldiv@divisor+2
  3056  053A  120A  158A  200A  120A  118A  	fcall	stringdir
  3057  053F  00F3               	movwf	___lldiv@divisor+3
  3058  0540  0836               	movf	(sprintf@val+3)^(0+128),w
  3059  0541  00F7               	movwf	___lldiv@dividend+3
  3060  0542  0835               	movf	(sprintf@val+2)^(0+128),w
  3061  0543  00F6               	movwf	___lldiv@dividend+2
  3062  0544  0834               	movf	(sprintf@val+1)^(0+128),w
  3063  0545  00F5               	movwf	___lldiv@dividend+1
  3064  0546  0833               	movf	sprintf@val^(0+128),w
  3065  0547  00F4               	movwf	___lldiv@dividend
  3066  0548  160A  158A  2377  120A  118A  	fcall	___lldiv
  3067  054D  0873               	movf	?___lldiv+3,w
  3068  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3069  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3070  0550  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3071  0551  0872               	movf	?___lldiv+2,w
  3072  0552  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3073  0553  0871               	movf	?___lldiv+1,w
  3074  0554  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3075  0555  0870               	movf	?___lldiv,w
  3076  0556  00BB               	movwf	sprintf@tmpval^(0+128)
  3077  0557                     l3801:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3080  0557  3000               	movlw	0
  3081  0558  00F3               	movwf	___llmod@divisor+3
  3082  0559  3000               	movlw	0
  3083  055A  00F2               	movwf	___llmod@divisor+2
  3084  055B  3000               	movlw	0
  3085  055C  00F1               	movwf	___llmod@divisor+1
  3086  055D  300A               	movlw	10
  3087  055E  00F0               	movwf	___llmod@divisor
  3088  055F  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3089  0560  00F7               	movwf	___llmod@dividend+3
  3090  0561  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3091  0562  00F6               	movwf	___llmod@dividend+2
  3092  0563  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3093  0564  00F5               	movwf	___llmod@dividend+1
  3094  0565  083B               	movf	sprintf@tmpval^(0+128),w
  3095  0566  00F4               	movwf	___llmod@dividend
  3096  0567  160A  158A  22CA  120A  118A  	fcall	___llmod
  3097  056C  0873               	movf	?___llmod+3,w
  3098  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3099  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3100  056F  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3101  0570  0872               	movf	?___llmod+2,w
  3102  0571  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3103  0572  0871               	movf	?___llmod+1,w
  3104  0573  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3105  0574  0870               	movf	?___llmod,w
  3106  0575  00BB               	movwf	sprintf@tmpval^(0+128)
  3107  0576                     l3803:
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3110  0576  083B               	movf	sprintf@tmpval^(0+128),w
  3111  0577  3E30               	addlw	48
  3112  0578  00A9               	movwf	??_sprintf^(0+128)
  3113  0579  0845               	movf	sprintf@sp^(0+128),w
  3114  057A  0084               	movwf	4
  3115  057B  0829               	movf	??_sprintf^(0+128),w
  3116  057C  1383               	bcf	3,7	;select IRP bank0
  3117  057D  0080               	movwf	0
  3118  057E  3001               	movlw	1
  3119  057F  00A9               	movwf	??_sprintf^(0+128)
  3120  0580  0829               	movf	??_sprintf^(0+128),w
  3121  0581  07C5               	addwf	sprintf@sp^(0+128),f
  3122  0582                     l394:	
  3123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3124                           
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3127  0582  3001               	movlw	1
  3128  0583  02C8               	subwf	sprintf@c^(0+128),f
  3129  0584  0A48               	incf	sprintf@c^(0+128),w
  3130  0585  1D03               	btfss	3,2
  3131  0586  2D88               	goto	u6121
  3132  0587  2D89               	goto	u6120
  3133  0588                     u6121:
  3134  0588  2D1C               	goto	l3799
  3135  0589                     u6120:
  3136  0589  2D9D               	goto	l3811
  3137  058A                     l3805:
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3140  058A  3030               	movlw	48
  3141  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3142  058C  1303               	bcf	3,6	;RP1=0, select bank1
  3143  058D  00A9               	movwf	??_sprintf^(0+128)
  3144  058E  0845               	movf	sprintf@sp^(0+128),w
  3145  058F  0084               	movwf	4
  3146  0590  0829               	movf	??_sprintf^(0+128),w
  3147  0591  1383               	bcf	3,7	;select IRP bank0
  3148  0592  0080               	movwf	0
  3149  0593                     l3807:
  3150  0593  3001               	movlw	1
  3151  0594  00A9               	movwf	??_sprintf^(0+128)
  3152  0595  0829               	movf	??_sprintf^(0+128),w
  3153  0596  07C5               	addwf	sprintf@sp^(0+128),f
  3154  0597                     l3809:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3157  0597  30FF               	movlw	255
  3158  0598  07BF               	addwf	sprintf@eexp^(0+128),f
  3159  0599  1803               	skipnc
  3160  059A  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3161  059B  30FF               	movlw	255
  3162  059C  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3163  059D                     l3811:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3166  059D  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3167  059E  3A80               	xorlw	128
  3168  059F  00FF               	movwf	btemp+1
  3169  05A0  3080               	movlw	128
  3170  05A1  027F               	subwf	btemp+1,w
  3171  05A2  1D03               	skipz
  3172  05A3  2DA6               	goto	u6135
  3173  05A4  3001               	movlw	1
  3174  05A5  023F               	subwf	sprintf@eexp^(0+128),w
  3175  05A6                     u6135:
  3176  05A6  1803               	skipnc
  3177  05A7  2DA9               	goto	u6131
  3178  05A8  2DAA               	goto	u6130
  3179  05A9                     u6131:
  3180  05A9  2D8A               	goto	l3805
  3181  05AA                     u6130:
  3182  05AA                     l3813:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3185  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3186  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3187  05AC  0847               	movf	(sprintf@prec+1)^(0+128),w
  3188  05AD  3A80               	xorlw	128
  3189  05AE  00FF               	movwf	btemp+1
  3190  05AF  3080               	movlw	128
  3191  05B0  027F               	subwf	btemp+1,w
  3192  05B1  1D03               	skipz
  3193  05B2  2DB5               	goto	u6145
  3194  05B3  3009               	movlw	9
  3195  05B4  0246               	subwf	sprintf@prec^(0+128),w
  3196  05B5                     u6145:
  3197  05B5  1C03               	skipc
  3198  05B6  2DB8               	goto	u6141
  3199  05B7  2DB9               	goto	u6140
  3200  05B8                     u6141:
  3201  05B8  2DC0               	goto	l3817
  3202  05B9                     u6140:
  3203  05B9                     l3815:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3206  05B9  3008               	movlw	8
  3207  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  3208  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  3209  05BC  00A9               	movwf	??_sprintf^(0+128)
  3210  05BD  0829               	movf	??_sprintf^(0+128),w
  3211  05BE  00C8               	movwf	sprintf@c^(0+128)
  3212  05BF  2DC6               	goto	l401
  3213  05C0                     l3817:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3216  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3217  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3218  05C2  0846               	movf	sprintf@prec^(0+128),w
  3219  05C3  00A9               	movwf	??_sprintf^(0+128)
  3220  05C4  0829               	movf	??_sprintf^(0+128),w
  3221  05C5  00C8               	movwf	sprintf@c^(0+128)
  3222  05C6                     l401:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3225  05C6  0848               	movf	sprintf@c^(0+128),w
  3226  05C7  00A9               	movwf	??_sprintf^(0+128)
  3227  05C8  01AA               	clrf	(??_sprintf^(0+128)+1)
  3228  05C9  0829               	movf	??_sprintf^(0+128),w
  3229  05CA  02C6               	subwf	sprintf@prec^(0+128),f
  3230  05CB  082A               	movf	(??_sprintf+1)^(0+128),w
  3231  05CC  1C03               	skipc
  3232  05CD  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3233  05CE  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3234  05CF                     l3819:
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3237  05CF  0848               	movf	sprintf@c^(0+128),w
  3238  05D0  1903               	btfsc	3,2
  3239  05D1  2DD3               	goto	u6151
  3240  05D2  2DD4               	goto	u6150
  3241  05D3                     u6151:
  3242  05D3  2DDF               	goto	l3825
  3243  05D4                     u6150:
  3244  05D4                     l3821:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3247  05D4  302E               	movlw	46
  3248  05D5  00A9               	movwf	??_sprintf^(0+128)
  3249  05D6  0845               	movf	sprintf@sp^(0+128),w
  3250  05D7  0084               	movwf	4
  3251  05D8  0829               	movf	??_sprintf^(0+128),w
  3252  05D9  1383               	bcf	3,7	;select IRP bank0
  3253  05DA  0080               	movwf	0
  3254  05DB                     l3823:
  3255  05DB  3001               	movlw	1
  3256  05DC  00A9               	movwf	??_sprintf^(0+128)
  3257  05DD  0829               	movf	??_sprintf^(0+128),w
  3258  05DE  07C5               	addwf	sprintf@sp^(0+128),f
  3259  05DF                     l3825:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3262  05DF  0848               	movf	sprintf@c^(0+128),w
  3263  05E0  120A  158A  2140  120A  118A  	fcall	_scale
  3264  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3265  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3266  05E7  0841               	movf	?_scale+3,w
  3267  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3268  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3269  05EA  00B1               	movwf	(_sprintf$1066+3)^(0+128)
  3270  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3271  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3272  05ED  0840               	movf	?_scale+2,w
  3273  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3274  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3275  05F0  00B0               	movwf	(_sprintf$1066+2)^(0+128)
  3276  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3277  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3278  05F3  083F               	movf	?_scale+1,w
  3279  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3280  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3281  05F6  00AF               	movwf	(_sprintf$1066+1)^(0+128)
  3282  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3283  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3284  05F9  083E               	movf	?_scale,w
  3285  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3286  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3287  05FC  00AE               	movwf	_sprintf$1066^(0+128)
  3288  05FD                     l3827:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3291  05FD  0831               	movf	(_sprintf$1066+3)^(0+128),w
  3292  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3293  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0600  00AB               	movwf	___flmul@a+3
  3295  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3297  0603  0830               	movf	(_sprintf$1066+2)^(0+128),w
  3298  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0606  00AA               	movwf	___flmul@a+2
  3301  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3302  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3303  0609  082F               	movf	(_sprintf$1066+1)^(0+128),w
  3304  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3305  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3306  060C  00A9               	movwf	___flmul@a+1
  3307  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3308  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3309  060F  082E               	movf	_sprintf$1066^(0+128),w
  3310  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0612  00A8               	movwf	___flmul@a
  3313  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3314  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3315  0615  0844               	movf	(sprintf@fval+3)^(0+128),w
  3316  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0618  00A7               	movwf	___flmul@b+3
  3319  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3320  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3321  061B  0843               	movf	(sprintf@fval+2)^(0+128),w
  3322  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3323  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3324  061E  00A6               	movwf	___flmul@b+2
  3325  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3327  0621  0842               	movf	(sprintf@fval+1)^(0+128),w
  3328  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0624  00A5               	movwf	___flmul@b+1
  3331  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0627  0841               	movf	sprintf@fval^(0+128),w
  3334  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3336  062A  00A4               	movwf	___flmul@b
  3337  062B  120A  158A  249F  120A  118A  	fcall	___flmul
  3338  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0632  0827               	movf	?___flmul+3,w
  3341  0633  00D4               	movwf	___fltol@f1+3
  3342  0634  0826               	movf	?___flmul+2,w
  3343  0635  00D3               	movwf	___fltol@f1+2
  3344  0636  0825               	movf	?___flmul+1,w
  3345  0637  00D2               	movwf	___fltol@f1+1
  3346  0638  0824               	movf	?___flmul,w
  3347  0639  00D1               	movwf	___fltol@f1
  3348  063A  160A  158A  24CC  120A  118A  	fcall	___fltol
  3349  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0641  0854               	movf	?___fltol+3,w
  3352  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3353  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3354  0644  00B6               	movwf	(sprintf@val+3)^(0+128)
  3355  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0647  0853               	movf	?___fltol+2,w
  3358  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3360  064A  00B5               	movwf	(sprintf@val+2)^(0+128)
  3361  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3362  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3363  064D  0852               	movf	?___fltol+1,w
  3364  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3365  064F  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0650  00B4               	movwf	(sprintf@val+1)^(0+128)
  3367  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0653  0851               	movf	?___fltol,w
  3370  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3371  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3372  0656  00B3               	movwf	sprintf@val^(0+128)
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3375  0657  2EF9               	goto	l3837
  3376  0658                     l3829:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3379  0658  0848               	movf	sprintf@c^(0+128),w
  3380  0659  00A9               	movwf	??_sprintf^(0+128)
  3381  065A  3001               	movlw	1
  3382  065B                     u6165:
  3383  065B  1003               	clrc
  3384  065C  0DA9               	rlf	??_sprintf^(0+128),f
  3385  065D  3EFF               	addlw	-1
  3386  065E  1D03               	skipz
  3387  065F  2E5B               	goto	u6165
  3388  0660  1003               	clrc
  3389  0661  0D29               	rlf	??_sprintf^(0+128),w
  3390  0662  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3391  0663  0084               	movwf	4
  3392  0664  120A  158A  200A  120A  118A  	fcall	stringdir
  3393  0669  00F0               	movwf	___lldiv@divisor
  3394  066A  120A  158A  200A  120A  118A  	fcall	stringdir
  3395  066F  00F1               	movwf	___lldiv@divisor+1
  3396  0670  120A  158A  200A  120A  118A  	fcall	stringdir
  3397  0675  00F2               	movwf	___lldiv@divisor+2
  3398  0676  120A  158A  200A  120A  118A  	fcall	stringdir
  3399  067B  00F3               	movwf	___lldiv@divisor+3
  3400  067C  0836               	movf	(sprintf@val+3)^(0+128),w
  3401  067D  00F7               	movwf	___lldiv@dividend+3
  3402  067E  0835               	movf	(sprintf@val+2)^(0+128),w
  3403  067F  00F6               	movwf	___lldiv@dividend+2
  3404  0680  0834               	movf	(sprintf@val+1)^(0+128),w
  3405  0681  00F5               	movwf	___lldiv@dividend+1
  3406  0682  0833               	movf	sprintf@val^(0+128),w
  3407  0683  00F4               	movwf	___lldiv@dividend
  3408  0684  160A  158A  2377  120A  118A  	fcall	___lldiv
  3409  0689  0873               	movf	?___lldiv+3,w
  3410  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3411  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3412  068C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3413  068D  0872               	movf	?___lldiv+2,w
  3414  068E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3415  068F  0871               	movf	?___lldiv+1,w
  3416  0690  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3417  0691  0870               	movf	?___lldiv,w
  3418  0692  00BB               	movwf	sprintf@tmpval^(0+128)
  3419  0693                     l3831:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3422  0693  3000               	movlw	0
  3423  0694  00F3               	movwf	___llmod@divisor+3
  3424  0695  3000               	movlw	0
  3425  0696  00F2               	movwf	___llmod@divisor+2
  3426  0697  3000               	movlw	0
  3427  0698  00F1               	movwf	___llmod@divisor+1
  3428  0699  300A               	movlw	10
  3429  069A  00F0               	movwf	___llmod@divisor
  3430  069B  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3431  069C  00F7               	movwf	___llmod@dividend+3
  3432  069D  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3433  069E  00F6               	movwf	___llmod@dividend+2
  3434  069F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3435  06A0  00F5               	movwf	___llmod@dividend+1
  3436  06A1  083B               	movf	sprintf@tmpval^(0+128),w
  3437  06A2  00F4               	movwf	___llmod@dividend
  3438  06A3  160A  158A  22CA  120A  118A  	fcall	___llmod
  3439  06A8  0873               	movf	?___llmod+3,w
  3440  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3441  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  3442  06AB  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3443  06AC  0872               	movf	?___llmod+2,w
  3444  06AD  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3445  06AE  0871               	movf	?___llmod+1,w
  3446  06AF  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3447  06B0  0870               	movf	?___llmod,w
  3448  06B1  00BB               	movwf	sprintf@tmpval^(0+128)
  3449  06B2                     l3833:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3452  06B2  083B               	movf	sprintf@tmpval^(0+128),w
  3453  06B3  3E30               	addlw	48
  3454  06B4  00A9               	movwf	??_sprintf^(0+128)
  3455  06B5  0845               	movf	sprintf@sp^(0+128),w
  3456  06B6  0084               	movwf	4
  3457  06B7  0829               	movf	??_sprintf^(0+128),w
  3458  06B8  1383               	bcf	3,7	;select IRP bank0
  3459  06B9  0080               	movwf	0
  3460  06BA  3001               	movlw	1
  3461  06BB  00A9               	movwf	??_sprintf^(0+128)
  3462  06BC  0829               	movf	??_sprintf^(0+128),w
  3463  06BD  07C5               	addwf	sprintf@sp^(0+128),f
  3464  06BE                     l3835:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3467  06BE  0848               	movf	sprintf@c^(0+128),w
  3468  06BF  00A9               	movwf	??_sprintf^(0+128)
  3469  06C0  3001               	movlw	1
  3470  06C1                     u6175:
  3471  06C1  1003               	clrc
  3472  06C2  0DA9               	rlf	??_sprintf^(0+128),f
  3473  06C3  3EFF               	addlw	-1
  3474  06C4  1D03               	skipz
  3475  06C5  2EC1               	goto	u6175
  3476  06C6  1003               	clrc
  3477  06C7  0D29               	rlf	??_sprintf^(0+128),w
  3478  06C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3479  06C9  0084               	movwf	4
  3480  06CA  120A  158A  200A  120A  118A  	fcall	stringdir
  3481  06CF  00F0               	movwf	___llmod@divisor
  3482  06D0  120A  158A  200A  120A  118A  	fcall	stringdir
  3483  06D5  00F1               	movwf	___llmod@divisor+1
  3484  06D6  120A  158A  200A  120A  118A  	fcall	stringdir
  3485  06DB  00F2               	movwf	___llmod@divisor+2
  3486  06DC  120A  158A  200A  120A  118A  	fcall	stringdir
  3487  06E1  00F3               	movwf	___llmod@divisor+3
  3488  06E2  0836               	movf	(sprintf@val+3)^(0+128),w
  3489  06E3  00F7               	movwf	___llmod@dividend+3
  3490  06E4  0835               	movf	(sprintf@val+2)^(0+128),w
  3491  06E5  00F6               	movwf	___llmod@dividend+2
  3492  06E6  0834               	movf	(sprintf@val+1)^(0+128),w
  3493  06E7  00F5               	movwf	___llmod@dividend+1
  3494  06E8  0833               	movf	sprintf@val^(0+128),w
  3495  06E9  00F4               	movwf	___llmod@dividend
  3496  06EA  160A  158A  22CA  120A  118A  	fcall	___llmod
  3497  06EF  0873               	movf	?___llmod+3,w
  3498  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3499  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  3500  06F2  00B6               	movwf	(sprintf@val+3)^(0+128)
  3501  06F3  0872               	movf	?___llmod+2,w
  3502  06F4  00B5               	movwf	(sprintf@val+2)^(0+128)
  3503  06F5  0871               	movf	?___llmod+1,w
  3504  06F6  00B4               	movwf	(sprintf@val+1)^(0+128)
  3505  06F7  0870               	movf	?___llmod,w
  3506  06F8  00B3               	movwf	sprintf@val^(0+128)
  3507  06F9                     l3837:
  3508                           
  3509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3510  06F9  3001               	movlw	1
  3511  06FA  02C8               	subwf	sprintf@c^(0+128),f
  3512  06FB  0A48               	incf	sprintf@c^(0+128),w
  3513  06FC  1D03               	btfss	3,2
  3514  06FD  2EFF               	goto	u6181
  3515  06FE  2F00               	goto	u6180
  3516  06FF                     u6181:
  3517  06FF  2E58               	goto	l3829
  3518  0700                     u6180:
  3519  0700  2F12               	goto	l3845
  3520  0701                     l3839:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3523  0701  3030               	movlw	48
  3524  0702  00A9               	movwf	??_sprintf^(0+128)
  3525  0703  0845               	movf	sprintf@sp^(0+128),w
  3526  0704  0084               	movwf	4
  3527  0705  0829               	movf	??_sprintf^(0+128),w
  3528  0706  1383               	bcf	3,7	;select IRP bank0
  3529  0707  0080               	movwf	0
  3530  0708                     l3841:
  3531  0708  3001               	movlw	1
  3532  0709  00A9               	movwf	??_sprintf^(0+128)
  3533  070A  0829               	movf	??_sprintf^(0+128),w
  3534  070B  07C5               	addwf	sprintf@sp^(0+128),f
  3535  070C                     l3843:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3538  070C  30FF               	movlw	255
  3539  070D  07C6               	addwf	sprintf@prec^(0+128),f
  3540  070E  1803               	skipnc
  3541  070F  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3542  0710  30FF               	movlw	255
  3543  0711  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3544  0712                     l3845:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3547  0712  0846               	movf	sprintf@prec^(0+128),w
  3548  0713  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3549  0714  1D03               	btfss	3,2
  3550  0715  2F17               	goto	u6191
  3551  0716  2F18               	goto	u6190
  3552  0717                     u6191:
  3553  0717  2F01               	goto	l3839
  3554  0718                     u6190:
  3555  0718  2FDC               	goto	l3893
  3556  0719                     l3847:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3559  0719  0846               	movf	sprintf@prec^(0+128),w
  3560  071A  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3561  071B  1D03               	btfss	3,2
  3562  071C  2F1E               	goto	u6201
  3563  071D  2F1F               	goto	u6200
  3564  071E                     u6201:
  3565  071E  2F2D               	goto	l409
  3566  071F                     u6200:
  3567  071F                     l3849:
  3568  071F  0836               	movf	(sprintf@val+3)^(0+128),w
  3569  0720  0435               	iorwf	(sprintf@val+2)^(0+128),w
  3570  0721  0434               	iorwf	(sprintf@val+1)^(0+128),w
  3571  0722  0433               	iorwf	sprintf@val^(0+128),w
  3572  0723  1D03               	skipz
  3573  0724  2F26               	goto	u6211
  3574  0725  2F27               	goto	u6210
  3575  0726                     u6211:
  3576  0726  2F2D               	goto	l409
  3577  0727                     u6210:
  3578  0727                     l3851:
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3581  0727  3001               	movlw	1
  3582  0728  07C6               	addwf	sprintf@prec^(0+128),f
  3583  0729  1803               	skipnc
  3584  072A  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3585  072B  3000               	movlw	0
  3586  072C  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3587  072D                     l409:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3590  072D  0847               	movf	(sprintf@prec+1)^(0+128),w
  3591  072E  3A80               	xorlw	128
  3592  072F  3C80               	sublw	128
  3593  0730  1D03               	skipz
  3594  0731  2F34               	goto	u6225
  3595  0732  0846               	movf	sprintf@prec^(0+128),w
  3596  0733  0248               	subwf	sprintf@c^(0+128),w
  3597  0734                     u6225:
  3598  0734  1803               	skipnc
  3599  0735  2F37               	goto	u6221
  3600  0736  2F38               	goto	u6220
  3601  0737                     u6221:
  3602  0737  2F3F               	goto	l3855
  3603  0738                     u6220:
  3604  0738                     l3853:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3607  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3609  073A  0846               	movf	sprintf@prec^(0+128),w
  3610  073B  00A9               	movwf	??_sprintf^(0+128)
  3611  073C  0829               	movf	??_sprintf^(0+128),w
  3612  073D  00C8               	movwf	sprintf@c^(0+128)
  3613  073E  2F57               	goto	l3859
  3614  073F                     l3855:
  3615  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0741  0847               	movf	(sprintf@prec+1)^(0+128),w
  3618  0742  3A80               	xorlw	128
  3619  0743  00A9               	movwf	??_sprintf^(0+128)
  3620  0744  3080               	movlw	128
  3621  0745  0229               	subwf	??_sprintf^(0+128),w
  3622  0746  1D03               	skipz
  3623  0747  2F4A               	goto	u6235
  3624  0748  0848               	movf	sprintf@c^(0+128),w
  3625  0749  0246               	subwf	sprintf@prec^(0+128),w
  3626  074A                     u6235:
  3627  074A  1803               	skipnc
  3628  074B  2F4D               	goto	u6231
  3629  074C  2F4E               	goto	u6230
  3630  074D                     u6231:
  3631  074D  2F57               	goto	l3859
  3632  074E                     u6230:
  3633  074E                     l3857:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3636  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3637  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3638  0750  0848               	movf	sprintf@c^(0+128),w
  3639  0751  00A9               	movwf	??_sprintf^(0+128)
  3640  0752  01AA               	clrf	(??_sprintf^(0+128)+1)
  3641  0753  0829               	movf	??_sprintf^(0+128),w
  3642  0754  00C6               	movwf	sprintf@prec^(0+128)
  3643  0755  082A               	movf	(??_sprintf+1)^(0+128),w
  3644  0756  00C7               	movwf	(sprintf@prec+1)^(0+128)
  3645  0757                     l3859:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3648  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3650  0759  0839               	movf	sprintf@width^(0+128),w
  3651  075A  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3652  075B  1903               	btfsc	3,2
  3653  075C  2F5E               	goto	u6241
  3654  075D  2F5F               	goto	u6240
  3655  075E                     u6241:
  3656  075E  2F71               	goto	l3865
  3657  075F                     u6240:
  3658  075F                     l3861:
  3659  075F  3003               	movlw	3
  3660  0760  0537               	andwf	sprintf@flag^(0+128),w
  3661  0761  00A9               	movwf	??_sprintf^(0+128)
  3662  0762  3000               	movlw	0
  3663  0763  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3664  0764  00AA               	movwf	(??_sprintf+1)^(0+128)
  3665  0765  0829               	movf	??_sprintf^(0+128),w
  3666  0766  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3667  0767  1903               	btfsc	3,2
  3668  0768  2F6A               	goto	u6251
  3669  0769  2F6B               	goto	u6250
  3670  076A                     u6251:
  3671  076A  2F71               	goto	l3865
  3672  076B                     u6250:
  3673  076B                     l3863:
  3674                           
  3675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3676  076B  30FF               	movlw	255
  3677  076C  07B9               	addwf	sprintf@width^(0+128),f
  3678  076D  1803               	skipnc
  3679  076E  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3680  076F  30FF               	movlw	255
  3681  0770  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3682  0771                     l3865:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3685  0771  1F38               	btfss	(sprintf@flag+1)^(0+128),6
  3686  0772  2F74               	goto	u6261
  3687  0773  2F75               	goto	u6260
  3688  0774                     u6261:
  3689  0774  2F90               	goto	l3873
  3690  0775                     u6260:
  3691  0775                     l3867:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3694  0775  0847               	movf	(sprintf@prec+1)^(0+128),w
  3695  0776  3A80               	xorlw	128
  3696  0777  00A9               	movwf	??_sprintf^(0+128)
  3697  0778  083A               	movf	(sprintf@width+1)^(0+128),w
  3698  0779  3A80               	xorlw	128
  3699  077A  0229               	subwf	??_sprintf^(0+128),w
  3700  077B  1D03               	skipz
  3701  077C  2F7F               	goto	u6275
  3702  077D  0839               	movf	sprintf@width^(0+128),w
  3703  077E  0246               	subwf	sprintf@prec^(0+128),w
  3704  077F                     u6275:
  3705  077F  1803               	skipnc
  3706  0780  2F82               	goto	u6271
  3707  0781  2F83               	goto	u6270
  3708  0782                     u6271:
  3709  0782  2F8C               	goto	l3871
  3710  0783                     u6270:
  3711  0783                     l3869:
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3714  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0784  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0785  0846               	movf	sprintf@prec^(0+128),w
  3717  0786  02B9               	subwf	sprintf@width^(0+128),f
  3718  0787  0847               	movf	(sprintf@prec+1)^(0+128),w
  3719  0788  1C03               	skipc
  3720  0789  03BA               	decf	(sprintf@width+1)^(0+128),f
  3721  078A  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3722  078B  2F90               	goto	l3873
  3723  078C                     l3871:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3726  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3727  078D  1303               	bcf	3,6	;RP1=0, select bank1
  3728  078E  01B9               	clrf	sprintf@width^(0+128)
  3729  078F  01BA               	clrf	(sprintf@width+1)^(0+128)
  3730  0790                     l3873:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3733  0790  083A               	movf	(sprintf@width+1)^(0+128),w
  3734  0791  3A80               	xorlw	128
  3735  0792  3C80               	sublw	128
  3736  0793  1D03               	skipz
  3737  0794  2F97               	goto	u6285
  3738  0795  0839               	movf	sprintf@width^(0+128),w
  3739  0796  0248               	subwf	sprintf@c^(0+128),w
  3740  0797                     u6285:
  3741  0797  1803               	skipnc
  3742  0798  2F9A               	goto	u6281
  3743  0799  2F9B               	goto	u6280
  3744  079A                     u6281:
  3745  079A  2FA7               	goto	l3877
  3746  079B                     u6280:
  3747  079B                     l3875:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3750  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3751  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3752  079D  0848               	movf	sprintf@c^(0+128),w
  3753  079E  00A9               	movwf	??_sprintf^(0+128)
  3754  079F  01AA               	clrf	(??_sprintf^(0+128)+1)
  3755  07A0  0829               	movf	??_sprintf^(0+128),w
  3756  07A1  02B9               	subwf	sprintf@width^(0+128),f
  3757  07A2  082A               	movf	(??_sprintf+1)^(0+128),w
  3758  07A3  1C03               	skipc
  3759  07A4  03BA               	decf	(sprintf@width+1)^(0+128),f
  3760  07A5  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3761  07A6  2FAB               	goto	l3879
  3762  07A7                     l3877:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3765  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3766  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3767  07A9  01B9               	clrf	sprintf@width^(0+128)
  3768  07AA  01BA               	clrf	(sprintf@width+1)^(0+128)
  3769  07AB                     l3879:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3772  07AB  0839               	movf	sprintf@width^(0+128),w
  3773  07AC  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3774  07AD  1903               	btfsc	3,2
  3775  07AE  2FB0               	goto	u6291
  3776  07AF  2FB1               	goto	u6290
  3777  07B0                     u6291:
  3778  07B0  2FC8               	goto	l3887
  3779  07B1                     u6290:
  3780  07B1                     l3881:
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3783  07B1  3020               	movlw	32
  3784  07B2  00A9               	movwf	??_sprintf^(0+128)
  3785  07B3  0845               	movf	sprintf@sp^(0+128),w
  3786  07B4  0084               	movwf	4
  3787  07B5  0829               	movf	??_sprintf^(0+128),w
  3788  07B6  1383               	bcf	3,7	;select IRP bank0
  3789  07B7  0080               	movwf	0
  3790  07B8                     l3883:
  3791  07B8  3001               	movlw	1
  3792  07B9  00A9               	movwf	??_sprintf^(0+128)
  3793  07BA  0829               	movf	??_sprintf^(0+128),w
  3794  07BB  07C5               	addwf	sprintf@sp^(0+128),f
  3795  07BC                     l3885:
  3796  07BC  30FF               	movlw	255
  3797  07BD  07B9               	addwf	sprintf@width^(0+128),f
  3798  07BE  1803               	skipnc
  3799  07BF  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3800  07C0  30FF               	movlw	255
  3801  07C1  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3802  07C2  0839               	movf	sprintf@width^(0+128),w
  3803  07C3  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3804  07C4  1D03               	btfss	3,2
  3805  07C5  2FC7               	goto	u6301
  3806  07C6  2FC8               	goto	u6300
  3807  07C7                     u6301:
  3808  07C7  2FB1               	goto	l3881
  3809  07C8                     u6300:
  3810  07C8                     l3887:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3813  07C8  3003               	movlw	3
  3814  07C9  0537               	andwf	sprintf@flag^(0+128),w
  3815  07CA  00A9               	movwf	??_sprintf^(0+128)
  3816  07CB  3000               	movlw	0
  3817  07CC  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3818  07CD  00AA               	movwf	(??_sprintf+1)^(0+128)
  3819  07CE  0829               	movf	??_sprintf^(0+128),w
  3820  07CF  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3821  07D0  1903               	btfsc	3,2
  3822  07D1  2FD3               	goto	u6311
  3823  07D2  2FD4               	goto	u6310
  3824  07D3                     u6311:
  3825  07D3  2FDC               	goto	l3893
  3826  07D4                     u6310:
  3827  07D4                     l3889:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3830  07D4  302D               	movlw	45
  3831  07D5  00A9               	movwf	??_sprintf^(0+128)
  3832  07D6  0845               	movf	sprintf@sp^(0+128),w
  3833  07D7  0084               	movwf	4
  3834  07D8  0829               	movf	??_sprintf^(0+128),w
  3835  07D9  1383               	bcf	3,7	;select IRP bank0
  3836  07DA  0080               	movwf	0
  3837  07DB  288D               	goto	l3649
  3838  07DC                     l3893:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3841  07DC  3001               	movlw	1
  3842  07DD  07A0               	addwf	sprintf@f^(0+128),f
  3843  07DE  30FF               	movlw	-1
  3844  07DF  0720               	addwf	sprintf@f^(0+128),w
  3845  07E0  0084               	movwf	4
  3846  07E1  120A  158A  200A  120A  118A  	fcall	stringdir
  3847  07E6  00A9               	movwf	??_sprintf^(0+128)
  3848  07E7  0829               	movf	??_sprintf^(0+128),w
  3849  07E8  00C8               	movwf	sprintf@c^(0+128)
  3850  07E9  0848               	movf	sprintf@c^(0+128),w
  3851  07EA  1D03               	btfss	3,2
  3852  07EB  2FED               	goto	u6321
  3853  07EC  2FEE               	goto	u6320
  3854  07ED                     u6321:
  3855  07ED  2880               	goto	l3645
  3856  07EE                     u6320:
  3857  07EE                     l3895:
  3858                           
  3859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3860  07EE  0845               	movf	sprintf@sp^(0+128),w
  3861  07EF  0084               	movwf	4
  3862  07F0  1383               	bcf	3,7	;select IRP bank0
  3863  07F1  0180               	clrf	0
  3864  07F2                     l424:
  3865  07F2  0008               	return
  3866  07F3                     __end_of_sprintf:
  3867                           
  3868                           	psect	text2
  3869  0940                     __ptext2:	
  3870 ;; *************** function _scale *****************
  3871 ;; Defined at:
  3872 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  scl             1    wreg     char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  scl             1   48[BANK0 ] char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  4   30[BANK0 ] char 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       4       0       0       0
  3887 ;;      Locals:         0       5       0       0       0
  3888 ;;      Temps:          0      10       0       0       0
  3889 ;;      Totals:         0      19       0       0       0
  3890 ;;Total ram usage:       19 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		___awdiv
  3895 ;;		___awmod
  3896 ;;		___flmul
  3897 ;; This function is called by:
  3898 ;;		_sprintf
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _scale
  3904  0940                     _scale:
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3908                           ;scale@scl stored from wreg
  3909  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0942  00D0               	movwf	scale@scl
  3912  0943                     l3067:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3915  0943  1FD0               	btfss	scale@scl,7
  3916  0944  2946               	goto	u4531
  3917  0945  2947               	goto	u4530
  3918  0946                     u4531:
  3919  0946  2AF4               	goto	l3089
  3920  0947                     u4530:
  3921  0947                     l3069:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3924  0947  09D0               	comf	scale@scl,f
  3925  0948  0AD0               	incf	scale@scl,f
  3926  0949                     l3071:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3929  0949  0850               	movf	scale@scl,w
  3930  094A  3A80               	xorlw	128
  3931  094B  3E12               	addlw	-238
  3932  094C  1C03               	skipc
  3933  094D  294F               	goto	u4541
  3934  094E  2950               	goto	u4540
  3935  094F                     u4541:
  3936  094F  2A38               	goto	l3079
  3937  0950                     u4540:
  3938  0950                     l3073:
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3941  0950  300A               	movlw	10
  3942  0951  00F7               	movwf	___awdiv@divisor
  3943  0952  3000               	movlw	0
  3944  0953  00F8               	movwf	___awdiv@divisor+1
  3945  0954  0850               	movf	scale@scl,w
  3946  0955  00F2               	movwf	___awmod@dividend
  3947  0956  01F3               	clrf	___awmod@dividend+1
  3948  0957  1BF2               	btfsc	___awmod@dividend,7
  3949  0958  03F3               	decf	___awmod@dividend+1,f
  3950  0959  3064               	movlw	100
  3951  095A  00F0               	movwf	___awmod@divisor
  3952  095B  3000               	movlw	0
  3953  095C  00F1               	movwf	___awmod@divisor+1
  3954  095D  160A  158A  231E  120A  158A  	fcall	___awmod
  3955  0962  0871               	movf	?___awmod+1,w
  3956  0963  00FA               	movwf	___awdiv@dividend+1
  3957  0964  0870               	movf	?___awmod,w
  3958  0965  00F9               	movwf	___awdiv@dividend
  3959  0966  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3960  096B  0877               	movf	?___awdiv,w
  3961  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3962  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3963  096E  00C2               	movwf	??_scale
  3964  096F  3001               	movlw	1
  3965  0970                     u4555:
  3966  0970  1003               	clrc
  3967  0971  0DC2               	rlf	??_scale,f
  3968  0972  3EFF               	addlw	-1
  3969  0973  1D03               	skipz
  3970  0974  2970               	goto	u4555
  3971  0975  1003               	clrc
  3972  0976  0D42               	rlf	??_scale,w
  3973  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3974  0978  0084               	movwf	4
  3975  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  3976  097E  00C3               	movwf	??_scale+1
  3977  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  3978  0984  00C4               	movwf	??_scale+2
  3979  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  3980  098A  00C5               	movwf	??_scale+3
  3981  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  3982  0990  00C6               	movwf	??_scale+4
  3983  0991  0846               	movf	??_scale+4,w
  3984  0992  00A7               	movwf	___flmul@b+3
  3985  0993  0845               	movf	??_scale+3,w
  3986  0994  00A6               	movwf	___flmul@b+2
  3987  0995  0844               	movf	??_scale+2,w
  3988  0996  00A5               	movwf	___flmul@b+1
  3989  0997  0843               	movf	??_scale+1,w
  3990  0998  00A4               	movwf	___flmul@b
  3991  0999  3064               	movlw	100
  3992  099A  00F7               	movwf	___awdiv@divisor
  3993  099B  3000               	movlw	0
  3994  099C  00F8               	movwf	___awdiv@divisor+1
  3995  099D  0850               	movf	scale@scl,w
  3996  099E  00F9               	movwf	___awdiv@dividend
  3997  099F  01FA               	clrf	___awdiv@dividend+1
  3998  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3999  09A1  03FA               	decf	___awdiv@dividend+1,f
  4000  09A2  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4001  09A7  0877               	movf	?___awdiv,w
  4002  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4003  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4004  09AA  00C7               	movwf	??_scale+5
  4005  09AB  3001               	movlw	1
  4006  09AC                     u4565:
  4007  09AC  1003               	clrc
  4008  09AD  0DC7               	rlf	??_scale+5,f
  4009  09AE  3EFF               	addlw	-1
  4010  09AF  1D03               	skipz
  4011  09B0  29AC               	goto	u4565
  4012  09B1  1003               	clrc
  4013  09B2  0D47               	rlf	??_scale+5,w
  4014  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4015  09B4  0084               	movwf	4
  4016  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4017  09BA  00C8               	movwf	??_scale+6
  4018  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4019  09C0  00C9               	movwf	??_scale+7
  4020  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4021  09C6  00CA               	movwf	??_scale+8
  4022  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4023  09CC  00CB               	movwf	??_scale+9
  4024  09CD  084B               	movf	??_scale+9,w
  4025  09CE  00AB               	movwf	___flmul@a+3
  4026  09CF  084A               	movf	??_scale+8,w
  4027  09D0  00AA               	movwf	___flmul@a+2
  4028  09D1  0849               	movf	??_scale+7,w
  4029  09D2  00A9               	movwf	___flmul@a+1
  4030  09D3  0848               	movf	??_scale+6,w
  4031  09D4  00A8               	movwf	___flmul@a
  4032  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4033  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4034  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4035  09DC  0827               	movf	?___flmul+3,w
  4036  09DD  00CF               	movwf	_scale$1065+3
  4037  09DE  0826               	movf	?___flmul+2,w
  4038  09DF  00CE               	movwf	_scale$1065+2
  4039  09E0  0825               	movf	?___flmul+1,w
  4040  09E1  00CD               	movwf	_scale$1065+1
  4041  09E2  0824               	movf	?___flmul,w
  4042  09E3  00CC               	movwf	_scale$1065
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4045  09E4  300A               	movlw	10
  4046  09E5  00F0               	movwf	___awmod@divisor
  4047  09E6  3000               	movlw	0
  4048  09E7  00F1               	movwf	___awmod@divisor+1
  4049  09E8  0850               	movf	scale@scl,w
  4050  09E9  00F2               	movwf	___awmod@dividend
  4051  09EA  01F3               	clrf	___awmod@dividend+1
  4052  09EB  1BF2               	btfsc	___awmod@dividend,7
  4053  09EC  03F3               	decf	___awmod@dividend+1,f
  4054  09ED  160A  158A  231E  120A  158A  	fcall	___awmod
  4055  09F2  0870               	movf	?___awmod,w
  4056  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4057  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4058  09F5  00C2               	movwf	??_scale
  4059  09F6  3001               	movlw	1
  4060  09F7                     u4575:
  4061  09F7  1003               	clrc
  4062  09F8  0DC2               	rlf	??_scale,f
  4063  09F9  3EFF               	addlw	-1
  4064  09FA  1D03               	skipz
  4065  09FB  29F7               	goto	u4575
  4066  09FC  1003               	clrc
  4067  09FD  0D42               	rlf	??_scale,w
  4068  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4069  09FF  0084               	movwf	4
  4070  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4071  0A05  00C3               	movwf	??_scale+1
  4072  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4073  0A0B  00C4               	movwf	??_scale+2
  4074  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4075  0A11  00C5               	movwf	??_scale+3
  4076  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4077  0A17  00C6               	movwf	??_scale+4
  4078  0A18  0846               	movf	??_scale+4,w
  4079  0A19  00A7               	movwf	___flmul@b+3
  4080  0A1A  0845               	movf	??_scale+3,w
  4081  0A1B  00A6               	movwf	___flmul@b+2
  4082  0A1C  0844               	movf	??_scale+2,w
  4083  0A1D  00A5               	movwf	___flmul@b+1
  4084  0A1E  0843               	movf	??_scale+1,w
  4085  0A1F  00A4               	movwf	___flmul@b
  4086  0A20  084F               	movf	_scale$1065+3,w
  4087  0A21  00AB               	movwf	___flmul@a+3
  4088  0A22  084E               	movf	_scale$1065+2,w
  4089  0A23  00AA               	movwf	___flmul@a+2
  4090  0A24  084D               	movf	_scale$1065+1,w
  4091  0A25  00A9               	movwf	___flmul@a+1
  4092  0A26  084C               	movf	_scale$1065,w
  4093  0A27  00A8               	movwf	___flmul@a
  4094  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4095  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4096  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4097  0A2F  0827               	movf	?___flmul+3,w
  4098  0A30  00C1               	movwf	?_scale+3
  4099  0A31  0826               	movf	?___flmul+2,w
  4100  0A32  00C0               	movwf	?_scale+2
  4101  0A33  0825               	movf	?___flmul+1,w
  4102  0A34  00BF               	movwf	?_scale+1
  4103  0A35  0824               	movf	?___flmul,w
  4104  0A36  00BE               	movwf	?_scale
  4105  0A37  2C9E               	goto	l341
  4106  0A38                     l3079:
  4107  0A38  0850               	movf	scale@scl,w
  4108  0A39  3A80               	xorlw	128
  4109  0A3A  3E75               	addlw	-139
  4110  0A3B  1C03               	skipc
  4111  0A3C  2A3E               	goto	u4581
  4112  0A3D  2A3F               	goto	u4580
  4113  0A3E                     u4581:
  4114  0A3E  2AC7               	goto	l3085
  4115  0A3F                     u4580:
  4116  0A3F                     l3081:
  4117                           
  4118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4119  0A3F  300A               	movlw	10
  4120  0A40  00F0               	movwf	___awmod@divisor
  4121  0A41  3000               	movlw	0
  4122  0A42  00F1               	movwf	___awmod@divisor+1
  4123  0A43  0850               	movf	scale@scl,w
  4124  0A44  00F2               	movwf	___awmod@dividend
  4125  0A45  01F3               	clrf	___awmod@dividend+1
  4126  0A46  1BF2               	btfsc	___awmod@dividend,7
  4127  0A47  03F3               	decf	___awmod@dividend+1,f
  4128  0A48  160A  158A  231E  120A  158A  	fcall	___awmod
  4129  0A4D  0870               	movf	?___awmod,w
  4130  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0A50  00C2               	movwf	??_scale
  4133  0A51  3001               	movlw	1
  4134  0A52                     u4595:
  4135  0A52  1003               	clrc
  4136  0A53  0DC2               	rlf	??_scale,f
  4137  0A54  3EFF               	addlw	-1
  4138  0A55  1D03               	skipz
  4139  0A56  2A52               	goto	u4595
  4140  0A57  1003               	clrc
  4141  0A58  0D42               	rlf	??_scale,w
  4142  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4143  0A5A  0084               	movwf	4
  4144  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4145  0A60  00C3               	movwf	??_scale+1
  4146  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4147  0A66  00C4               	movwf	??_scale+2
  4148  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4149  0A6C  00C5               	movwf	??_scale+3
  4150  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4151  0A72  00C6               	movwf	??_scale+4
  4152  0A73  0846               	movf	??_scale+4,w
  4153  0A74  00A7               	movwf	___flmul@b+3
  4154  0A75  0845               	movf	??_scale+3,w
  4155  0A76  00A6               	movwf	___flmul@b+2
  4156  0A77  0844               	movf	??_scale+2,w
  4157  0A78  00A5               	movwf	___flmul@b+1
  4158  0A79  0843               	movf	??_scale+1,w
  4159  0A7A  00A4               	movwf	___flmul@b
  4160  0A7B  300A               	movlw	10
  4161  0A7C  00F7               	movwf	___awdiv@divisor
  4162  0A7D  3000               	movlw	0
  4163  0A7E  00F8               	movwf	___awdiv@divisor+1
  4164  0A7F  0850               	movf	scale@scl,w
  4165  0A80  00F9               	movwf	___awdiv@dividend
  4166  0A81  01FA               	clrf	___awdiv@dividend+1
  4167  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4168  0A83  03FA               	decf	___awdiv@dividend+1,f
  4169  0A84  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4170  0A89  0877               	movf	?___awdiv,w
  4171  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4173  0A8C  00C7               	movwf	??_scale+5
  4174  0A8D  3001               	movlw	1
  4175  0A8E                     u4605:
  4176  0A8E  1003               	clrc
  4177  0A8F  0DC7               	rlf	??_scale+5,f
  4178  0A90  3EFF               	addlw	-1
  4179  0A91  1D03               	skipz
  4180  0A92  2A8E               	goto	u4605
  4181  0A93  1003               	clrc
  4182  0A94  0D47               	rlf	??_scale+5,w
  4183  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4184  0A96  0084               	movwf	4
  4185  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4186  0A9C  00C8               	movwf	??_scale+6
  4187  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4188  0AA2  00C9               	movwf	??_scale+7
  4189  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4190  0AA8  00CA               	movwf	??_scale+8
  4191  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4192  0AAE  00CB               	movwf	??_scale+9
  4193  0AAF  084B               	movf	??_scale+9,w
  4194  0AB0  00AB               	movwf	___flmul@a+3
  4195  0AB1  084A               	movf	??_scale+8,w
  4196  0AB2  00AA               	movwf	___flmul@a+2
  4197  0AB3  0849               	movf	??_scale+7,w
  4198  0AB4  00A9               	movwf	___flmul@a+1
  4199  0AB5  0848               	movf	??_scale+6,w
  4200  0AB6  00A8               	movwf	___flmul@a
  4201  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4202  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0ABE  0827               	movf	?___flmul+3,w
  4205  0ABF  00C1               	movwf	?_scale+3
  4206  0AC0  0826               	movf	?___flmul+2,w
  4207  0AC1  00C0               	movwf	?_scale+2
  4208  0AC2  0825               	movf	?___flmul+1,w
  4209  0AC3  00BF               	movwf	?_scale+1
  4210  0AC4  0824               	movf	?___flmul,w
  4211  0AC5  00BE               	movwf	?_scale
  4212  0AC6  2C9E               	goto	l341
  4213  0AC7                     l3085:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4216  0AC7  0850               	movf	scale@scl,w
  4217  0AC8  00C2               	movwf	??_scale
  4218  0AC9  3001               	movlw	1
  4219  0ACA                     u4615:
  4220  0ACA  1003               	clrc
  4221  0ACB  0DC2               	rlf	??_scale,f
  4222  0ACC  3EFF               	addlw	-1
  4223  0ACD  1D03               	skipz
  4224  0ACE  2ACA               	goto	u4615
  4225  0ACF  1003               	clrc
  4226  0AD0  0D42               	rlf	??_scale,w
  4227  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4228  0AD2  0084               	movwf	4
  4229  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4230  0AD8  00C3               	movwf	??_scale+1
  4231  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4232  0ADE  00C4               	movwf	??_scale+2
  4233  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4234  0AE4  00C5               	movwf	??_scale+3
  4235  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4236  0AEA  00C6               	movwf	??_scale+4
  4237  0AEB  0846               	movf	??_scale+4,w
  4238  0AEC  00C1               	movwf	?_scale+3
  4239  0AED  0845               	movf	??_scale+3,w
  4240  0AEE  00C0               	movwf	?_scale+2
  4241  0AEF  0844               	movf	??_scale+2,w
  4242  0AF0  00BF               	movwf	?_scale+1
  4243  0AF1  0843               	movf	??_scale+1,w
  4244  0AF2  00BE               	movwf	?_scale
  4245  0AF3  2C9E               	goto	l341
  4246  0AF4                     l3089:
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4249  0AF4  0850               	movf	scale@scl,w
  4250  0AF5  3A80               	xorlw	128
  4251  0AF6  3E12               	addlw	-238
  4252  0AF7  1C03               	skipc
  4253  0AF8  2AFA               	goto	u4621
  4254  0AF9  2AFB               	goto	u4620
  4255  0AFA                     u4621:
  4256  0AFA  2BE3               	goto	l3097
  4257  0AFB                     u4620:
  4258  0AFB                     l3091:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4261  0AFB  300A               	movlw	10
  4262  0AFC  00F7               	movwf	___awdiv@divisor
  4263  0AFD  3000               	movlw	0
  4264  0AFE  00F8               	movwf	___awdiv@divisor+1
  4265  0AFF  0850               	movf	scale@scl,w
  4266  0B00  00F2               	movwf	___awmod@dividend
  4267  0B01  01F3               	clrf	___awmod@dividend+1
  4268  0B02  1BF2               	btfsc	___awmod@dividend,7
  4269  0B03  03F3               	decf	___awmod@dividend+1,f
  4270  0B04  3064               	movlw	100
  4271  0B05  00F0               	movwf	___awmod@divisor
  4272  0B06  3000               	movlw	0
  4273  0B07  00F1               	movwf	___awmod@divisor+1
  4274  0B08  160A  158A  231E  120A  158A  	fcall	___awmod
  4275  0B0D  0871               	movf	?___awmod+1,w
  4276  0B0E  00FA               	movwf	___awdiv@dividend+1
  4277  0B0F  0870               	movf	?___awmod,w
  4278  0B10  00F9               	movwf	___awdiv@dividend
  4279  0B11  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4280  0B16  0877               	movf	?___awdiv,w
  4281  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0B19  00C2               	movwf	??_scale
  4284  0B1A  3001               	movlw	1
  4285  0B1B                     u4635:
  4286  0B1B  1003               	clrc
  4287  0B1C  0DC2               	rlf	??_scale,f
  4288  0B1D  3EFF               	addlw	-1
  4289  0B1E  1D03               	skipz
  4290  0B1F  2B1B               	goto	u4635
  4291  0B20  1003               	clrc
  4292  0B21  0D42               	rlf	??_scale,w
  4293  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4294  0B23  0084               	movwf	4
  4295  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4296  0B29  00C3               	movwf	??_scale+1
  4297  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4298  0B2F  00C4               	movwf	??_scale+2
  4299  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4300  0B35  00C5               	movwf	??_scale+3
  4301  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4302  0B3B  00C6               	movwf	??_scale+4
  4303  0B3C  0846               	movf	??_scale+4,w
  4304  0B3D  00A7               	movwf	___flmul@b+3
  4305  0B3E  0845               	movf	??_scale+3,w
  4306  0B3F  00A6               	movwf	___flmul@b+2
  4307  0B40  0844               	movf	??_scale+2,w
  4308  0B41  00A5               	movwf	___flmul@b+1
  4309  0B42  0843               	movf	??_scale+1,w
  4310  0B43  00A4               	movwf	___flmul@b
  4311  0B44  3064               	movlw	100
  4312  0B45  00F7               	movwf	___awdiv@divisor
  4313  0B46  3000               	movlw	0
  4314  0B47  00F8               	movwf	___awdiv@divisor+1
  4315  0B48  0850               	movf	scale@scl,w
  4316  0B49  00F9               	movwf	___awdiv@dividend
  4317  0B4A  01FA               	clrf	___awdiv@dividend+1
  4318  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4319  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4320  0B4D  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4321  0B52  0877               	movf	?___awdiv,w
  4322  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0B55  00C7               	movwf	??_scale+5
  4325  0B56  3001               	movlw	1
  4326  0B57                     u4645:
  4327  0B57  1003               	clrc
  4328  0B58  0DC7               	rlf	??_scale+5,f
  4329  0B59  3EFF               	addlw	-1
  4330  0B5A  1D03               	skipz
  4331  0B5B  2B57               	goto	u4645
  4332  0B5C  1003               	clrc
  4333  0B5D  0D47               	rlf	??_scale+5,w
  4334  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4335  0B5F  0084               	movwf	4
  4336  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4337  0B65  00C8               	movwf	??_scale+6
  4338  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4339  0B6B  00C9               	movwf	??_scale+7
  4340  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4341  0B71  00CA               	movwf	??_scale+8
  4342  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4343  0B77  00CB               	movwf	??_scale+9
  4344  0B78  084B               	movf	??_scale+9,w
  4345  0B79  00AB               	movwf	___flmul@a+3
  4346  0B7A  084A               	movf	??_scale+8,w
  4347  0B7B  00AA               	movwf	___flmul@a+2
  4348  0B7C  0849               	movf	??_scale+7,w
  4349  0B7D  00A9               	movwf	___flmul@a+1
  4350  0B7E  0848               	movf	??_scale+6,w
  4351  0B7F  00A8               	movwf	___flmul@a
  4352  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4353  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0B87  0827               	movf	?___flmul+3,w
  4356  0B88  00CF               	movwf	_scale$1065+3
  4357  0B89  0826               	movf	?___flmul+2,w
  4358  0B8A  00CE               	movwf	_scale$1065+2
  4359  0B8B  0825               	movf	?___flmul+1,w
  4360  0B8C  00CD               	movwf	_scale$1065+1
  4361  0B8D  0824               	movf	?___flmul,w
  4362  0B8E  00CC               	movwf	_scale$1065
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4365  0B8F  300A               	movlw	10
  4366  0B90  00F0               	movwf	___awmod@divisor
  4367  0B91  3000               	movlw	0
  4368  0B92  00F1               	movwf	___awmod@divisor+1
  4369  0B93  0850               	movf	scale@scl,w
  4370  0B94  00F2               	movwf	___awmod@dividend
  4371  0B95  01F3               	clrf	___awmod@dividend+1
  4372  0B96  1BF2               	btfsc	___awmod@dividend,7
  4373  0B97  03F3               	decf	___awmod@dividend+1,f
  4374  0B98  160A  158A  231E  120A  158A  	fcall	___awmod
  4375  0B9D  0870               	movf	?___awmod,w
  4376  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4377  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4378  0BA0  00C2               	movwf	??_scale
  4379  0BA1  3001               	movlw	1
  4380  0BA2                     u4655:
  4381  0BA2  1003               	clrc
  4382  0BA3  0DC2               	rlf	??_scale,f
  4383  0BA4  3EFF               	addlw	-1
  4384  0BA5  1D03               	skipz
  4385  0BA6  2BA2               	goto	u4655
  4386  0BA7  1003               	clrc
  4387  0BA8  0D42               	rlf	??_scale,w
  4388  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4389  0BAA  0084               	movwf	4
  4390  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4391  0BB0  00C3               	movwf	??_scale+1
  4392  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4393  0BB6  00C4               	movwf	??_scale+2
  4394  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4395  0BBC  00C5               	movwf	??_scale+3
  4396  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4397  0BC2  00C6               	movwf	??_scale+4
  4398  0BC3  0846               	movf	??_scale+4,w
  4399  0BC4  00A7               	movwf	___flmul@b+3
  4400  0BC5  0845               	movf	??_scale+3,w
  4401  0BC6  00A6               	movwf	___flmul@b+2
  4402  0BC7  0844               	movf	??_scale+2,w
  4403  0BC8  00A5               	movwf	___flmul@b+1
  4404  0BC9  0843               	movf	??_scale+1,w
  4405  0BCA  00A4               	movwf	___flmul@b
  4406  0BCB  084F               	movf	_scale$1065+3,w
  4407  0BCC  00AB               	movwf	___flmul@a+3
  4408  0BCD  084E               	movf	_scale$1065+2,w
  4409  0BCE  00AA               	movwf	___flmul@a+2
  4410  0BCF  084D               	movf	_scale$1065+1,w
  4411  0BD0  00A9               	movwf	___flmul@a+1
  4412  0BD1  084C               	movf	_scale$1065,w
  4413  0BD2  00A8               	movwf	___flmul@a
  4414  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4415  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0BDA  0827               	movf	?___flmul+3,w
  4418  0BDB  00C1               	movwf	?_scale+3
  4419  0BDC  0826               	movf	?___flmul+2,w
  4420  0BDD  00C0               	movwf	?_scale+2
  4421  0BDE  0825               	movf	?___flmul+1,w
  4422  0BDF  00BF               	movwf	?_scale+1
  4423  0BE0  0824               	movf	?___flmul,w
  4424  0BE1  00BE               	movwf	?_scale
  4425  0BE2  2C9E               	goto	l341
  4426  0BE3                     l3097:
  4427  0BE3  0850               	movf	scale@scl,w
  4428  0BE4  3A80               	xorlw	128
  4429  0BE5  3E75               	addlw	-139
  4430  0BE6  1C03               	skipc
  4431  0BE7  2BE9               	goto	u4661
  4432  0BE8  2BEA               	goto	u4660
  4433  0BE9                     u4661:
  4434  0BE9  2C72               	goto	l3103
  4435  0BEA                     u4660:
  4436  0BEA                     l3099:
  4437                           
  4438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4439  0BEA  300A               	movlw	10
  4440  0BEB  00F0               	movwf	___awmod@divisor
  4441  0BEC  3000               	movlw	0
  4442  0BED  00F1               	movwf	___awmod@divisor+1
  4443  0BEE  0850               	movf	scale@scl,w
  4444  0BEF  00F2               	movwf	___awmod@dividend
  4445  0BF0  01F3               	clrf	___awmod@dividend+1
  4446  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4447  0BF2  03F3               	decf	___awmod@dividend+1,f
  4448  0BF3  160A  158A  231E  120A  158A  	fcall	___awmod
  4449  0BF8  0870               	movf	?___awmod,w
  4450  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4451  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4452  0BFB  00C2               	movwf	??_scale
  4453  0BFC  3001               	movlw	1
  4454  0BFD                     u4675:
  4455  0BFD  1003               	clrc
  4456  0BFE  0DC2               	rlf	??_scale,f
  4457  0BFF  3EFF               	addlw	-1
  4458  0C00  1D03               	skipz
  4459  0C01  2BFD               	goto	u4675
  4460  0C02  1003               	clrc
  4461  0C03  0D42               	rlf	??_scale,w
  4462  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4463  0C05  0084               	movwf	4
  4464  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4465  0C0B  00C3               	movwf	??_scale+1
  4466  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4467  0C11  00C4               	movwf	??_scale+2
  4468  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4469  0C17  00C5               	movwf	??_scale+3
  4470  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4471  0C1D  00C6               	movwf	??_scale+4
  4472  0C1E  0846               	movf	??_scale+4,w
  4473  0C1F  00A7               	movwf	___flmul@b+3
  4474  0C20  0845               	movf	??_scale+3,w
  4475  0C21  00A6               	movwf	___flmul@b+2
  4476  0C22  0844               	movf	??_scale+2,w
  4477  0C23  00A5               	movwf	___flmul@b+1
  4478  0C24  0843               	movf	??_scale+1,w
  4479  0C25  00A4               	movwf	___flmul@b
  4480  0C26  300A               	movlw	10
  4481  0C27  00F7               	movwf	___awdiv@divisor
  4482  0C28  3000               	movlw	0
  4483  0C29  00F8               	movwf	___awdiv@divisor+1
  4484  0C2A  0850               	movf	scale@scl,w
  4485  0C2B  00F9               	movwf	___awdiv@dividend
  4486  0C2C  01FA               	clrf	___awdiv@dividend+1
  4487  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4488  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4489  0C2F  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4490  0C34  0877               	movf	?___awdiv,w
  4491  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0C37  00C7               	movwf	??_scale+5
  4494  0C38  3001               	movlw	1
  4495  0C39                     u4685:
  4496  0C39  1003               	clrc
  4497  0C3A  0DC7               	rlf	??_scale+5,f
  4498  0C3B  3EFF               	addlw	-1
  4499  0C3C  1D03               	skipz
  4500  0C3D  2C39               	goto	u4685
  4501  0C3E  1003               	clrc
  4502  0C3F  0D47               	rlf	??_scale+5,w
  4503  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4504  0C41  0084               	movwf	4
  4505  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4506  0C47  00C8               	movwf	??_scale+6
  4507  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4508  0C4D  00C9               	movwf	??_scale+7
  4509  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4510  0C53  00CA               	movwf	??_scale+8
  4511  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4512  0C59  00CB               	movwf	??_scale+9
  4513  0C5A  084B               	movf	??_scale+9,w
  4514  0C5B  00AB               	movwf	___flmul@a+3
  4515  0C5C  084A               	movf	??_scale+8,w
  4516  0C5D  00AA               	movwf	___flmul@a+2
  4517  0C5E  0849               	movf	??_scale+7,w
  4518  0C5F  00A9               	movwf	___flmul@a+1
  4519  0C60  0848               	movf	??_scale+6,w
  4520  0C61  00A8               	movwf	___flmul@a
  4521  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4522  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4523  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0C69  0827               	movf	?___flmul+3,w
  4525  0C6A  00C1               	movwf	?_scale+3
  4526  0C6B  0826               	movf	?___flmul+2,w
  4527  0C6C  00C0               	movwf	?_scale+2
  4528  0C6D  0825               	movf	?___flmul+1,w
  4529  0C6E  00BF               	movwf	?_scale+1
  4530  0C6F  0824               	movf	?___flmul,w
  4531  0C70  00BE               	movwf	?_scale
  4532  0C71  2C9E               	goto	l341
  4533  0C72                     l3103:
  4534                           
  4535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4536  0C72  0850               	movf	scale@scl,w
  4537  0C73  00C2               	movwf	??_scale
  4538  0C74  3001               	movlw	1
  4539  0C75                     u4695:
  4540  0C75  1003               	clrc
  4541  0C76  0DC2               	rlf	??_scale,f
  4542  0C77  3EFF               	addlw	-1
  4543  0C78  1D03               	skipz
  4544  0C79  2C75               	goto	u4695
  4545  0C7A  1003               	clrc
  4546  0C7B  0D42               	rlf	??_scale,w
  4547  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4548  0C7D  0084               	movwf	4
  4549  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4550  0C83  00C3               	movwf	??_scale+1
  4551  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4552  0C89  00C4               	movwf	??_scale+2
  4553  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4554  0C8F  00C5               	movwf	??_scale+3
  4555  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4556  0C95  00C6               	movwf	??_scale+4
  4557  0C96  0846               	movf	??_scale+4,w
  4558  0C97  00C1               	movwf	?_scale+3
  4559  0C98  0845               	movf	??_scale+3,w
  4560  0C99  00C0               	movwf	?_scale+2
  4561  0C9A  0844               	movf	??_scale+2,w
  4562  0C9B  00BF               	movwf	?_scale+1
  4563  0C9C  0843               	movf	??_scale+1,w
  4564  0C9D  00BE               	movwf	?_scale
  4565  0C9E                     l341:
  4566  0C9E  0008               	return
  4567  0C9F                     __end_of_scale:
  4568                           
  4569                           	psect	text3
  4570  1B1E                     __ptext3:	
  4571 ;; *************** function ___awmod *****************
  4572 ;; Defined at:
  4573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  divisor         2    0[COMMON] int 
  4576 ;;  dividend        2    2[COMMON] int 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  sign            1    6[COMMON] unsigned char 
  4579 ;;  counter         1    5[COMMON] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2    0[COMMON] int 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4589 ;;      Params:         4       0       0       0       0
  4590 ;;      Locals:         2       0       0       0       0
  4591 ;;      Temps:          1       0       0       0       0
  4592 ;;      Totals:         7       0       0       0       0
  4593 ;;Total ram usage:        7 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_scale
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function ___awmod
  4604  1B1E                     ___awmod:
  4605  1B1E                     l2587:	
  4606                           ;incstack = 0
  4607                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4608                           
  4609  1B1E  01F6               	clrf	___awmod@sign
  4610  1B1F                     l2589:
  4611  1B1F  1FF3               	btfss	___awmod@dividend+1,7
  4612  1B20  2B22               	goto	u3391
  4613  1B21  2B23               	goto	u3390
  4614  1B22                     u3391:
  4615  1B22  2B2A               	goto	l2595
  4616  1B23                     u3390:
  4617  1B23                     l2591:
  4618  1B23  09F2               	comf	___awmod@dividend,f
  4619  1B24  09F3               	comf	___awmod@dividend+1,f
  4620  1B25  0AF2               	incf	___awmod@dividend,f
  4621  1B26  1903               	skipnz
  4622  1B27  0AF3               	incf	___awmod@dividend+1,f
  4623  1B28                     l2593:
  4624  1B28  01F6               	clrf	___awmod@sign
  4625  1B29  0AF6               	incf	___awmod@sign,f
  4626  1B2A                     l2595:
  4627  1B2A  1FF1               	btfss	___awmod@divisor+1,7
  4628  1B2B  2B2D               	goto	u3401
  4629  1B2C  2B2E               	goto	u3400
  4630  1B2D                     u3401:
  4631  1B2D  2B33               	goto	l2599
  4632  1B2E                     u3400:
  4633  1B2E                     l2597:
  4634  1B2E  09F0               	comf	___awmod@divisor,f
  4635  1B2F  09F1               	comf	___awmod@divisor+1,f
  4636  1B30  0AF0               	incf	___awmod@divisor,f
  4637  1B31  1903               	skipnz
  4638  1B32  0AF1               	incf	___awmod@divisor+1,f
  4639  1B33                     l2599:
  4640  1B33  0870               	movf	___awmod@divisor,w
  4641  1B34  0471               	iorwf	___awmod@divisor+1,w
  4642  1B35  1903               	btfsc	3,2
  4643  1B36  2B38               	goto	u3411
  4644  1B37  2B39               	goto	u3410
  4645  1B38                     u3411:
  4646  1B38  2B68               	goto	l2617
  4647  1B39                     u3410:
  4648  1B39                     l2601:
  4649  1B39  01F5               	clrf	___awmod@counter
  4650  1B3A  0AF5               	incf	___awmod@counter,f
  4651  1B3B  2B47               	goto	l2607
  4652  1B3C                     l2603:
  4653  1B3C  3001               	movlw	1
  4654  1B3D                     u3425:
  4655  1B3D  1003               	clrc
  4656  1B3E  0DF0               	rlf	___awmod@divisor,f
  4657  1B3F  0DF1               	rlf	___awmod@divisor+1,f
  4658  1B40  3EFF               	addlw	-1
  4659  1B41  1D03               	skipz
  4660  1B42  2B3D               	goto	u3425
  4661  1B43                     l2605:
  4662  1B43  3001               	movlw	1
  4663  1B44  00F4               	movwf	??___awmod
  4664  1B45  0874               	movf	??___awmod,w
  4665  1B46  07F5               	addwf	___awmod@counter,f
  4666  1B47                     l2607:
  4667  1B47  1FF1               	btfss	___awmod@divisor+1,7
  4668  1B48  2B4A               	goto	u3431
  4669  1B49  2B4B               	goto	u3430
  4670  1B4A                     u3431:
  4671  1B4A  2B3C               	goto	l2603
  4672  1B4B                     u3430:
  4673  1B4B                     l2609:
  4674  1B4B  0871               	movf	___awmod@divisor+1,w
  4675  1B4C  0273               	subwf	___awmod@dividend+1,w
  4676  1B4D  1D03               	skipz
  4677  1B4E  2B51               	goto	u3445
  4678  1B4F  0870               	movf	___awmod@divisor,w
  4679  1B50  0272               	subwf	___awmod@dividend,w
  4680  1B51                     u3445:
  4681  1B51  1C03               	skipc
  4682  1B52  2B54               	goto	u3441
  4683  1B53  2B55               	goto	u3440
  4684  1B54                     u3441:
  4685  1B54  2B5B               	goto	l2613
  4686  1B55                     u3440:
  4687  1B55                     l2611:
  4688  1B55  0870               	movf	___awmod@divisor,w
  4689  1B56  02F2               	subwf	___awmod@dividend,f
  4690  1B57  0871               	movf	___awmod@divisor+1,w
  4691  1B58  1C03               	skipc
  4692  1B59  03F3               	decf	___awmod@dividend+1,f
  4693  1B5A  02F3               	subwf	___awmod@dividend+1,f
  4694  1B5B                     l2613:
  4695  1B5B  3001               	movlw	1
  4696  1B5C                     u3455:
  4697  1B5C  1003               	clrc
  4698  1B5D  0CF1               	rrf	___awmod@divisor+1,f
  4699  1B5E  0CF0               	rrf	___awmod@divisor,f
  4700  1B5F  3EFF               	addlw	-1
  4701  1B60  1D03               	skipz
  4702  1B61  2B5C               	goto	u3455
  4703  1B62                     l2615:
  4704  1B62  3001               	movlw	1
  4705  1B63  02F5               	subwf	___awmod@counter,f
  4706  1B64  1D03               	btfss	3,2
  4707  1B65  2B67               	goto	u3461
  4708  1B66  2B68               	goto	u3460
  4709  1B67                     u3461:
  4710  1B67  2B4B               	goto	l2609
  4711  1B68                     u3460:
  4712  1B68                     l2617:
  4713  1B68  0876               	movf	___awmod@sign,w
  4714  1B69  1903               	btfsc	3,2
  4715  1B6A  2B6C               	goto	u3471
  4716  1B6B  2B6D               	goto	u3470
  4717  1B6C                     u3471:
  4718  1B6C  2B72               	goto	l2621
  4719  1B6D                     u3470:
  4720  1B6D                     l2619:
  4721  1B6D  09F2               	comf	___awmod@dividend,f
  4722  1B6E  09F3               	comf	___awmod@dividend+1,f
  4723  1B6F  0AF2               	incf	___awmod@dividend,f
  4724  1B70  1903               	skipnz
  4725  1B71  0AF3               	incf	___awmod@dividend+1,f
  4726  1B72                     l2621:
  4727  1B72  0873               	movf	___awmod@dividend+1,w
  4728  1B73  00F1               	movwf	?___awmod+1
  4729  1B74  0872               	movf	___awmod@dividend,w
  4730  1B75  00F0               	movwf	?___awmod
  4731  1B76                     l594:
  4732  1B76  0008               	return
  4733  1B77                     __end_of___awmod:
  4734                           
  4735                           	psect	text4
  4736  08D7                     __ptext4:	
  4737 ;; *************** function ___awdiv *****************
  4738 ;; Defined at:
  4739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  divisor         2    7[COMMON] int 
  4742 ;;  dividend        2    9[COMMON] int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  quotient        2    2[BANK0 ] int 
  4745 ;;  sign            1    1[BANK0 ] unsigned char 
  4746 ;;  counter         1    0[BANK0 ] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  2    7[COMMON] int 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4756 ;;      Params:         4       0       0       0       0
  4757 ;;      Locals:         0       4       0       0       0
  4758 ;;      Temps:          1       0       0       0       0
  4759 ;;      Totals:         5       4       0       0       0
  4760 ;;Total ram usage:        9 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_scale
  4766 ;;		_sprintf
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function ___awdiv
  4772  08D7                     ___awdiv:
  4773  08D7                     l2543:	
  4774                           ;incstack = 0
  4775                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4776                           
  4777  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4778  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  4779  08D9  01A1               	clrf	___awdiv@sign
  4780  08DA                     l2545:
  4781  08DA  1FF8               	btfss	___awdiv@divisor+1,7
  4782  08DB  28DD               	goto	u3291
  4783  08DC  28DE               	goto	u3290
  4784  08DD                     u3291:
  4785  08DD  28E5               	goto	l2551
  4786  08DE                     u3290:
  4787  08DE                     l2547:
  4788  08DE  09F7               	comf	___awdiv@divisor,f
  4789  08DF  09F8               	comf	___awdiv@divisor+1,f
  4790  08E0  0AF7               	incf	___awdiv@divisor,f
  4791  08E1  1903               	skipnz
  4792  08E2  0AF8               	incf	___awdiv@divisor+1,f
  4793  08E3                     l2549:
  4794  08E3  01A1               	clrf	___awdiv@sign
  4795  08E4  0AA1               	incf	___awdiv@sign,f
  4796  08E5                     l2551:
  4797  08E5  1FFA               	btfss	___awdiv@dividend+1,7
  4798  08E6  28E8               	goto	u3301
  4799  08E7  28E9               	goto	u3300
  4800  08E8                     u3301:
  4801  08E8  28F2               	goto	l2557
  4802  08E9                     u3300:
  4803  08E9                     l2553:
  4804  08E9  09F9               	comf	___awdiv@dividend,f
  4805  08EA  09FA               	comf	___awdiv@dividend+1,f
  4806  08EB  0AF9               	incf	___awdiv@dividend,f
  4807  08EC  1903               	skipnz
  4808  08ED  0AFA               	incf	___awdiv@dividend+1,f
  4809  08EE                     l2555:
  4810  08EE  3001               	movlw	1
  4811  08EF  00FB               	movwf	??___awdiv
  4812  08F0  087B               	movf	??___awdiv,w
  4813  08F1  06A1               	xorwf	___awdiv@sign,f
  4814  08F2                     l2557:
  4815  08F2  01A2               	clrf	___awdiv@quotient
  4816  08F3  01A3               	clrf	___awdiv@quotient+1
  4817  08F4                     l2559:
  4818  08F4  0877               	movf	___awdiv@divisor,w
  4819  08F5  0478               	iorwf	___awdiv@divisor+1,w
  4820  08F6  1903               	btfsc	3,2
  4821  08F7  28F9               	goto	u3311
  4822  08F8  28FA               	goto	u3310
  4823  08F9                     u3311:
  4824  08F9  2931               	goto	l2579
  4825  08FA                     u3310:
  4826  08FA                     l2561:
  4827  08FA  01A0               	clrf	___awdiv@counter
  4828  08FB  0AA0               	incf	___awdiv@counter,f
  4829  08FC  2908               	goto	l2567
  4830  08FD                     l2563:
  4831  08FD  3001               	movlw	1
  4832  08FE                     u3325:
  4833  08FE  1003               	clrc
  4834  08FF  0DF7               	rlf	___awdiv@divisor,f
  4835  0900  0DF8               	rlf	___awdiv@divisor+1,f
  4836  0901  3EFF               	addlw	-1
  4837  0902  1D03               	skipz
  4838  0903  28FE               	goto	u3325
  4839  0904                     l2565:
  4840  0904  3001               	movlw	1
  4841  0905  00FB               	movwf	??___awdiv
  4842  0906  087B               	movf	??___awdiv,w
  4843  0907  07A0               	addwf	___awdiv@counter,f
  4844  0908                     l2567:
  4845  0908  1FF8               	btfss	___awdiv@divisor+1,7
  4846  0909  290B               	goto	u3331
  4847  090A  290C               	goto	u3330
  4848  090B                     u3331:
  4849  090B  28FD               	goto	l2563
  4850  090C                     u3330:
  4851  090C                     l2569:
  4852  090C  3001               	movlw	1
  4853  090D                     u3345:
  4854  090D  1003               	clrc
  4855  090E  0DA2               	rlf	___awdiv@quotient,f
  4856  090F  0DA3               	rlf	___awdiv@quotient+1,f
  4857  0910  3EFF               	addlw	-1
  4858  0911  1D03               	skipz
  4859  0912  290D               	goto	u3345
  4860  0913  0878               	movf	___awdiv@divisor+1,w
  4861  0914  027A               	subwf	___awdiv@dividend+1,w
  4862  0915  1D03               	skipz
  4863  0916  2919               	goto	u3355
  4864  0917  0877               	movf	___awdiv@divisor,w
  4865  0918  0279               	subwf	___awdiv@dividend,w
  4866  0919                     u3355:
  4867  0919  1C03               	skipc
  4868  091A  291C               	goto	u3351
  4869  091B  291D               	goto	u3350
  4870  091C                     u3351:
  4871  091C  2924               	goto	l2575
  4872  091D                     u3350:
  4873  091D                     l2571:
  4874  091D  0877               	movf	___awdiv@divisor,w
  4875  091E  02F9               	subwf	___awdiv@dividend,f
  4876  091F  0878               	movf	___awdiv@divisor+1,w
  4877  0920  1C03               	skipc
  4878  0921  03FA               	decf	___awdiv@dividend+1,f
  4879  0922  02FA               	subwf	___awdiv@dividend+1,f
  4880  0923                     l2573:
  4881  0923  1422               	bsf	___awdiv@quotient,0
  4882  0924                     l2575:
  4883  0924  3001               	movlw	1
  4884  0925                     u3365:
  4885  0925  1003               	clrc
  4886  0926  0CF8               	rrf	___awdiv@divisor+1,f
  4887  0927  0CF7               	rrf	___awdiv@divisor,f
  4888  0928  3EFF               	addlw	-1
  4889  0929  1D03               	skipz
  4890  092A  2925               	goto	u3365
  4891  092B                     l2577:
  4892  092B  3001               	movlw	1
  4893  092C  02A0               	subwf	___awdiv@counter,f
  4894  092D  1D03               	btfss	3,2
  4895  092E  2930               	goto	u3371
  4896  092F  2931               	goto	u3370
  4897  0930                     u3371:
  4898  0930  290C               	goto	l2569
  4899  0931                     u3370:
  4900  0931                     l2579:
  4901  0931  0821               	movf	___awdiv@sign,w
  4902  0932  1903               	btfsc	3,2
  4903  0933  2935               	goto	u3381
  4904  0934  2936               	goto	u3380
  4905  0935                     u3381:
  4906  0935  293B               	goto	l2583
  4907  0936                     u3380:
  4908  0936                     l2581:
  4909  0936  09A2               	comf	___awdiv@quotient,f
  4910  0937  09A3               	comf	___awdiv@quotient+1,f
  4911  0938  0AA2               	incf	___awdiv@quotient,f
  4912  0939  1903               	skipnz
  4913  093A  0AA3               	incf	___awdiv@quotient+1,f
  4914  093B                     l2583:
  4915  093B  0823               	movf	___awdiv@quotient+1,w
  4916  093C  00F8               	movwf	?___awdiv+1
  4917  093D  0822               	movf	___awdiv@quotient,w
  4918  093E  00F7               	movwf	?___awdiv
  4919  093F                     l581:
  4920  093F  0008               	return
  4921  0940                     __end_of___awdiv:
  4922                           
  4923                           	psect	text5
  4924  1003                     __ptext5:	
  4925 ;; *************** function _isdigit *****************
  4926 ;; Defined at:
  4927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  c               1    wreg     unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  c               1    1[COMMON] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4941 ;;      Params:         0       0       0       0       0
  4942 ;;      Locals:         2       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0
  4944 ;;      Totals:         2       0       0       0       0
  4945 ;;Total ram usage:        2 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_sprintf
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _isdigit
  4956  1003                     _isdigit:
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4960                           ;isdigit@c stored from wreg
  4961  1003  00F1               	movwf	isdigit@c
  4962  1004                     l3107:
  4963  1004  01F0               	clrf	_isdigit$882
  4964  1005                     l3109:
  4965  1005  303A               	movlw	58
  4966  1006  0271               	subwf	isdigit@c,w
  4967  1007  1803               	skipnc
  4968  1008  280A               	goto	u4701
  4969  1009  280B               	goto	u4700
  4970  100A                     u4701:
  4971  100A  2813               	goto	l3115
  4972  100B                     u4700:
  4973  100B                     l3111:
  4974  100B  3030               	movlw	48
  4975  100C  0271               	subwf	isdigit@c,w
  4976  100D  1C03               	skipc
  4977  100E  2810               	goto	u4711
  4978  100F  2811               	goto	u4710
  4979  1010                     u4711:
  4980  1010  2813               	goto	l3115
  4981  1011                     u4710:
  4982  1011                     l3113:
  4983  1011  01F0               	clrf	_isdigit$882
  4984  1012  0AF0               	incf	_isdigit$882,f
  4985  1013                     l3115:
  4986  1013  0C70               	rrf	_isdigit$882,w
  4987  1014                     l915:
  4988  1014  0008               	return
  4989  1015                     __end_of_isdigit:
  4990                           
  4991                           	psect	text6
  4992  136D                     __ptext6:	
  4993 ;; *************** function _fround *****************
  4994 ;; Defined at:
  4995 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  prec            1    wreg     unsigned char 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  prec            1   49[BANK0 ] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  4   30[BANK0 ] unsigned char 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         0       4       0       0       0
  5010 ;;      Locals:         0       9       0       0       0
  5011 ;;      Temps:          0       7       0       0       0
  5012 ;;      Totals:         0      20       0       0       0
  5013 ;;Total ram usage:       20 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    2
  5016 ;; This function calls:
  5017 ;;		___flmul
  5018 ;;		___lwdiv
  5019 ;;		___lwmod
  5020 ;; This function is called by:
  5021 ;;		_sprintf
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           
  5026                           ;psect for function _fround
  5027  136D                     _fround:
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5031                           ;fround@prec stored from wreg
  5032  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5033  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5034  136F  00D1               	movwf	fround@prec
  5035  1370                     l3049:
  5036                           
  5037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5038  1370  306E               	movlw	110
  5039  1371  0251               	subwf	fround@prec,w
  5040  1372  1C03               	skipc
  5041  1373  2B75               	goto	u4451
  5042  1374  2B76               	goto	u4450
  5043  1375                     u4451:
  5044  1375  2C83               	goto	l3057
  5045  1376                     u4450:
  5046  1376                     l3051:
  5047                           
  5048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5049  1376  303F               	movlw	63
  5050  1377  00A7               	movwf	___flmul@b+3
  5051  1378  3000               	movlw	0
  5052  1379  00A6               	movwf	___flmul@b+2
  5053  137A  3000               	movlw	0
  5054  137B  00A5               	movwf	___flmul@b+1
  5055  137C  3000               	movlw	0
  5056  137D  00A4               	movwf	___flmul@b
  5057  137E  3064               	movlw	100
  5058  137F  00F6               	movwf	___lwdiv@divisor
  5059  1380  3000               	movlw	0
  5060  1381  00F7               	movwf	___lwdiv@divisor+1
  5061  1382  0851               	movf	fround@prec,w
  5062  1383  00C2               	movwf	??_fround
  5063  1384  01C3               	clrf	??_fround+1
  5064  1385  0842               	movf	??_fround,w
  5065  1386  00F8               	movwf	___lwdiv@dividend
  5066  1387  0843               	movf	??_fround+1,w
  5067  1388  00F9               	movwf	___lwdiv@dividend+1
  5068  1389  160A  158A  2238  160A  118A  	fcall	___lwdiv
  5069  138E  0876               	movf	?___lwdiv,w
  5070  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5071  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5072  1391  00C4               	movwf	??_fround+2
  5073  1392  3001               	movlw	1
  5074  1393                     u4465:
  5075  1393  1003               	clrc
  5076  1394  0DC4               	rlf	??_fround+2,f
  5077  1395  3EFF               	addlw	-1
  5078  1396  1D03               	skipz
  5079  1397  2B93               	goto	u4465
  5080  1398  1003               	clrc
  5081  1399  0D44               	rlf	??_fround+2,w
  5082  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5083  139B  0084               	movwf	4
  5084  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5085  13A1  00C5               	movwf	??_fround+3
  5086  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5087  13A7  00C6               	movwf	??_fround+4
  5088  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5089  13AD  00C7               	movwf	??_fround+5
  5090  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5091  13B3  00C8               	movwf	??_fround+6
  5092  13B4  0848               	movf	??_fround+6,w
  5093  13B5  00AB               	movwf	___flmul@a+3
  5094  13B6  0847               	movf	??_fround+5,w
  5095  13B7  00AA               	movwf	___flmul@a+2
  5096  13B8  0846               	movf	??_fround+4,w
  5097  13B9  00A9               	movwf	___flmul@a+1
  5098  13BA  0845               	movf	??_fround+3,w
  5099  13BB  00A8               	movwf	___flmul@a
  5100  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5101  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5102  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5103  13C3  0827               	movf	?___flmul+3,w
  5104  13C4  00D0               	movwf	_fround$1063+3
  5105  13C5  0826               	movf	?___flmul+2,w
  5106  13C6  00CF               	movwf	_fround$1063+2
  5107  13C7  0825               	movf	?___flmul+1,w
  5108  13C8  00CE               	movwf	_fround$1063+1
  5109  13C9  0824               	movf	?___flmul,w
  5110  13CA  00CD               	movwf	_fround$1063
  5111                           
  5112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5113  13CB  300A               	movlw	10
  5114  13CC  00F6               	movwf	___lwdiv@divisor
  5115  13CD  3000               	movlw	0
  5116  13CE  00F7               	movwf	___lwdiv@divisor+1
  5117  13CF  0851               	movf	fround@prec,w
  5118  13D0  00C2               	movwf	??_fround
  5119  13D1  01C3               	clrf	??_fround+1
  5120  13D2  0842               	movf	??_fround,w
  5121  13D3  00F2               	movwf	___lwmod@dividend
  5122  13D4  0843               	movf	??_fround+1,w
  5123  13D5  00F3               	movwf	___lwmod@dividend+1
  5124  13D6  3064               	movlw	100
  5125  13D7  00F0               	movwf	___lwmod@divisor
  5126  13D8  3000               	movlw	0
  5127  13D9  00F1               	movwf	___lwmod@divisor+1
  5128  13DA  160A  158A  217E  160A  118A  	fcall	___lwmod
  5129  13DF  0871               	movf	?___lwmod+1,w
  5130  13E0  00F9               	movwf	___lwdiv@dividend+1
  5131  13E1  0870               	movf	?___lwmod,w
  5132  13E2  00F8               	movwf	___lwdiv@dividend
  5133  13E3  160A  158A  2238  160A  118A  	fcall	___lwdiv
  5134  13E8  0876               	movf	?___lwdiv,w
  5135  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5136  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5137  13EB  00C4               	movwf	??_fround+2
  5138  13EC  3001               	movlw	1
  5139  13ED                     u4475:
  5140  13ED  1003               	clrc
  5141  13EE  0DC4               	rlf	??_fround+2,f
  5142  13EF  3EFF               	addlw	-1
  5143  13F0  1D03               	skipz
  5144  13F1  2BED               	goto	u4475
  5145  13F2  1003               	clrc
  5146  13F3  0D44               	rlf	??_fround+2,w
  5147  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5148  13F5  0084               	movwf	4
  5149  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5150  13FB  00C5               	movwf	??_fround+3
  5151  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5152  1401  00C6               	movwf	??_fround+4
  5153  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5154  1407  00C7               	movwf	??_fround+5
  5155  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5156  140D  00C8               	movwf	??_fround+6
  5157  140E  0848               	movf	??_fround+6,w
  5158  140F  00A7               	movwf	___flmul@b+3
  5159  1410  0847               	movf	??_fround+5,w
  5160  1411  00A6               	movwf	___flmul@b+2
  5161  1412  0846               	movf	??_fround+4,w
  5162  1413  00A5               	movwf	___flmul@b+1
  5163  1414  0845               	movf	??_fround+3,w
  5164  1415  00A4               	movwf	___flmul@b
  5165  1416  0850               	movf	_fround$1063+3,w
  5166  1417  00AB               	movwf	___flmul@a+3
  5167  1418  084F               	movf	_fround$1063+2,w
  5168  1419  00AA               	movwf	___flmul@a+2
  5169  141A  084E               	movf	_fround$1063+1,w
  5170  141B  00A9               	movwf	___flmul@a+1
  5171  141C  084D               	movf	_fround$1063,w
  5172  141D  00A8               	movwf	___flmul@a
  5173  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5174  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5175  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5176  1425  0827               	movf	?___flmul+3,w
  5177  1426  00CC               	movwf	_fround$1064+3
  5178  1427  0826               	movf	?___flmul+2,w
  5179  1428  00CB               	movwf	_fround$1064+2
  5180  1429  0825               	movf	?___flmul+1,w
  5181  142A  00CA               	movwf	_fround$1064+1
  5182  142B  0824               	movf	?___flmul,w
  5183  142C  00C9               	movwf	_fround$1064
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5186  142D  300A               	movlw	10
  5187  142E  00F0               	movwf	___lwmod@divisor
  5188  142F  3000               	movlw	0
  5189  1430  00F1               	movwf	___lwmod@divisor+1
  5190  1431  0851               	movf	fround@prec,w
  5191  1432  00C2               	movwf	??_fround
  5192  1433  01C3               	clrf	??_fround+1
  5193  1434  0842               	movf	??_fround,w
  5194  1435  00F2               	movwf	___lwmod@dividend
  5195  1436  0843               	movf	??_fround+1,w
  5196  1437  00F3               	movwf	___lwmod@dividend+1
  5197  1438  160A  158A  217E  160A  118A  	fcall	___lwmod
  5198  143D  0870               	movf	?___lwmod,w
  5199  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5200  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5201  1440  00C4               	movwf	??_fround+2
  5202  1441  3001               	movlw	1
  5203  1442                     u4485:
  5204  1442  1003               	clrc
  5205  1443  0DC4               	rlf	??_fround+2,f
  5206  1444  3EFF               	addlw	-1
  5207  1445  1D03               	skipz
  5208  1446  2C42               	goto	u4485
  5209  1447  1003               	clrc
  5210  1448  0D44               	rlf	??_fround+2,w
  5211  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5212  144A  0084               	movwf	4
  5213  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5214  1450  00C5               	movwf	??_fround+3
  5215  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5216  1456  00C6               	movwf	??_fround+4
  5217  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5218  145C  00C7               	movwf	??_fround+5
  5219  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5220  1462  00C8               	movwf	??_fround+6
  5221  1463  0848               	movf	??_fround+6,w
  5222  1464  00A7               	movwf	___flmul@b+3
  5223  1465  0847               	movf	??_fround+5,w
  5224  1466  00A6               	movwf	___flmul@b+2
  5225  1467  0846               	movf	??_fround+4,w
  5226  1468  00A5               	movwf	___flmul@b+1
  5227  1469  0845               	movf	??_fround+3,w
  5228  146A  00A4               	movwf	___flmul@b
  5229  146B  084C               	movf	_fround$1064+3,w
  5230  146C  00AB               	movwf	___flmul@a+3
  5231  146D  084B               	movf	_fround$1064+2,w
  5232  146E  00AA               	movwf	___flmul@a+2
  5233  146F  084A               	movf	_fround$1064+1,w
  5234  1470  00A9               	movwf	___flmul@a+1
  5235  1471  0849               	movf	_fround$1064,w
  5236  1472  00A8               	movwf	___flmul@a
  5237  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5238  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5239  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5240  147A  0827               	movf	?___flmul+3,w
  5241  147B  00C1               	movwf	?_fround+3
  5242  147C  0826               	movf	?___flmul+2,w
  5243  147D  00C0               	movwf	?_fround+2
  5244  147E  0825               	movf	?___flmul+1,w
  5245  147F  00BF               	movwf	?_fround+1
  5246  1480  0824               	movf	?___flmul,w
  5247  1481  00BE               	movwf	?_fround
  5248  1482  2D77               	goto	l334
  5249  1483                     l3057:
  5250  1483  300B               	movlw	11
  5251  1484  0251               	subwf	fround@prec,w
  5252  1485  1C03               	skipc
  5253  1486  2C88               	goto	u4491
  5254  1487  2C89               	goto	u4490
  5255  1488                     u4491:
  5256  1488  2D34               	goto	l3063
  5257  1489                     u4490:
  5258  1489                     l3059:
  5259                           
  5260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5261  1489  303F               	movlw	63
  5262  148A  00A7               	movwf	___flmul@b+3
  5263  148B  3000               	movlw	0
  5264  148C  00A6               	movwf	___flmul@b+2
  5265  148D  3000               	movlw	0
  5266  148E  00A5               	movwf	___flmul@b+1
  5267  148F  3000               	movlw	0
  5268  1490  00A4               	movwf	___flmul@b
  5269  1491  300A               	movlw	10
  5270  1492  00F6               	movwf	___lwdiv@divisor
  5271  1493  3000               	movlw	0
  5272  1494  00F7               	movwf	___lwdiv@divisor+1
  5273  1495  0851               	movf	fround@prec,w
  5274  1496  00C2               	movwf	??_fround
  5275  1497  01C3               	clrf	??_fround+1
  5276  1498  0842               	movf	??_fround,w
  5277  1499  00F8               	movwf	___lwdiv@dividend
  5278  149A  0843               	movf	??_fround+1,w
  5279  149B  00F9               	movwf	___lwdiv@dividend+1
  5280  149C  160A  158A  2238  160A  118A  	fcall	___lwdiv
  5281  14A1  0876               	movf	?___lwdiv,w
  5282  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5283  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5284  14A4  00C4               	movwf	??_fround+2
  5285  14A5  3001               	movlw	1
  5286  14A6                     u4505:
  5287  14A6  1003               	clrc
  5288  14A7  0DC4               	rlf	??_fround+2,f
  5289  14A8  3EFF               	addlw	-1
  5290  14A9  1D03               	skipz
  5291  14AA  2CA6               	goto	u4505
  5292  14AB  1003               	clrc
  5293  14AC  0D44               	rlf	??_fround+2,w
  5294  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5295  14AE  0084               	movwf	4
  5296  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5297  14B4  00C5               	movwf	??_fround+3
  5298  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5299  14BA  00C6               	movwf	??_fround+4
  5300  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5301  14C0  00C7               	movwf	??_fround+5
  5302  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5303  14C6  00C8               	movwf	??_fround+6
  5304  14C7  0848               	movf	??_fround+6,w
  5305  14C8  00AB               	movwf	___flmul@a+3
  5306  14C9  0847               	movf	??_fround+5,w
  5307  14CA  00AA               	movwf	___flmul@a+2
  5308  14CB  0846               	movf	??_fround+4,w
  5309  14CC  00A9               	movwf	___flmul@a+1
  5310  14CD  0845               	movf	??_fround+3,w
  5311  14CE  00A8               	movwf	___flmul@a
  5312  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5313  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5314  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5315  14D6  0827               	movf	?___flmul+3,w
  5316  14D7  00D0               	movwf	_fround$1063+3
  5317  14D8  0826               	movf	?___flmul+2,w
  5318  14D9  00CF               	movwf	_fround$1063+2
  5319  14DA  0825               	movf	?___flmul+1,w
  5320  14DB  00CE               	movwf	_fround$1063+1
  5321  14DC  0824               	movf	?___flmul,w
  5322  14DD  00CD               	movwf	_fround$1063
  5323                           
  5324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5325  14DE  300A               	movlw	10
  5326  14DF  00F0               	movwf	___lwmod@divisor
  5327  14E0  3000               	movlw	0
  5328  14E1  00F1               	movwf	___lwmod@divisor+1
  5329  14E2  0851               	movf	fround@prec,w
  5330  14E3  00C2               	movwf	??_fround
  5331  14E4  01C3               	clrf	??_fround+1
  5332  14E5  0842               	movf	??_fround,w
  5333  14E6  00F2               	movwf	___lwmod@dividend
  5334  14E7  0843               	movf	??_fround+1,w
  5335  14E8  00F3               	movwf	___lwmod@dividend+1
  5336  14E9  160A  158A  217E  160A  118A  	fcall	___lwmod
  5337  14EE  0870               	movf	?___lwmod,w
  5338  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5339  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5340  14F1  00C4               	movwf	??_fround+2
  5341  14F2  3001               	movlw	1
  5342  14F3                     u4515:
  5343  14F3  1003               	clrc
  5344  14F4  0DC4               	rlf	??_fround+2,f
  5345  14F5  3EFF               	addlw	-1
  5346  14F6  1D03               	skipz
  5347  14F7  2CF3               	goto	u4515
  5348  14F8  1003               	clrc
  5349  14F9  0D44               	rlf	??_fround+2,w
  5350  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5351  14FB  0084               	movwf	4
  5352  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5353  1501  00C5               	movwf	??_fround+3
  5354  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5355  1507  00C6               	movwf	??_fround+4
  5356  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5357  150D  00C7               	movwf	??_fround+5
  5358  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5359  1513  00C8               	movwf	??_fround+6
  5360  1514  0848               	movf	??_fround+6,w
  5361  1515  00A7               	movwf	___flmul@b+3
  5362  1516  0847               	movf	??_fround+5,w
  5363  1517  00A6               	movwf	___flmul@b+2
  5364  1518  0846               	movf	??_fround+4,w
  5365  1519  00A5               	movwf	___flmul@b+1
  5366  151A  0845               	movf	??_fround+3,w
  5367  151B  00A4               	movwf	___flmul@b
  5368  151C  0850               	movf	_fround$1063+3,w
  5369  151D  00AB               	movwf	___flmul@a+3
  5370  151E  084F               	movf	_fround$1063+2,w
  5371  151F  00AA               	movwf	___flmul@a+2
  5372  1520  084E               	movf	_fround$1063+1,w
  5373  1521  00A9               	movwf	___flmul@a+1
  5374  1522  084D               	movf	_fround$1063,w
  5375  1523  00A8               	movwf	___flmul@a
  5376  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5377  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5378  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5379  152B  0827               	movf	?___flmul+3,w
  5380  152C  00C1               	movwf	?_fround+3
  5381  152D  0826               	movf	?___flmul+2,w
  5382  152E  00C0               	movwf	?_fround+2
  5383  152F  0825               	movf	?___flmul+1,w
  5384  1530  00BF               	movwf	?_fround+1
  5385  1531  0824               	movf	?___flmul,w
  5386  1532  00BE               	movwf	?_fround
  5387  1533  2D77               	goto	l334
  5388  1534                     l3063:
  5389                           
  5390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5391  1534  303F               	movlw	63
  5392  1535  00A7               	movwf	___flmul@b+3
  5393  1536  3000               	movlw	0
  5394  1537  00A6               	movwf	___flmul@b+2
  5395  1538  3000               	movlw	0
  5396  1539  00A5               	movwf	___flmul@b+1
  5397  153A  3000               	movlw	0
  5398  153B  00A4               	movwf	___flmul@b
  5399  153C  0851               	movf	fround@prec,w
  5400  153D  00C2               	movwf	??_fround
  5401  153E  3001               	movlw	1
  5402  153F                     u4525:
  5403  153F  1003               	clrc
  5404  1540  0DC2               	rlf	??_fround,f
  5405  1541  3EFF               	addlw	-1
  5406  1542  1D03               	skipz
  5407  1543  2D3F               	goto	u4525
  5408  1544  1003               	clrc
  5409  1545  0D42               	rlf	??_fround,w
  5410  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5411  1547  0084               	movwf	4
  5412  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5413  154D  00C3               	movwf	??_fround+1
  5414  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5415  1553  00C4               	movwf	??_fround+2
  5416  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5417  1559  00C5               	movwf	??_fround+3
  5418  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5419  155F  00C6               	movwf	??_fround+4
  5420  1560  0846               	movf	??_fround+4,w
  5421  1561  00AB               	movwf	___flmul@a+3
  5422  1562  0845               	movf	??_fround+3,w
  5423  1563  00AA               	movwf	___flmul@a+2
  5424  1564  0844               	movf	??_fround+2,w
  5425  1565  00A9               	movwf	___flmul@a+1
  5426  1566  0843               	movf	??_fround+1,w
  5427  1567  00A8               	movwf	___flmul@a
  5428  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5429  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5430  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5431  156F  0827               	movf	?___flmul+3,w
  5432  1570  00C1               	movwf	?_fround+3
  5433  1571  0826               	movf	?___flmul+2,w
  5434  1572  00C0               	movwf	?_fround+2
  5435  1573  0825               	movf	?___flmul+1,w
  5436  1574  00BF               	movwf	?_fround+1
  5437  1575  0824               	movf	?___flmul,w
  5438  1576  00BE               	movwf	?_fround
  5439  1577                     l334:
  5440  1577  0008               	return
  5441  1578                     __end_of_fround:
  5442                           
  5443                           	psect	text7
  5444  197E                     __ptext7:	
  5445 ;; *************** function ___lwmod *****************
  5446 ;; Defined at:
  5447 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  divisor         2    0[COMMON] unsigned int 
  5450 ;;  dividend        2    2[COMMON] unsigned int 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  counter         1    5[COMMON] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  2    0[COMMON] unsigned int 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5462 ;;      Params:         4       0       0       0       0
  5463 ;;      Locals:         1       0       0       0       0
  5464 ;;      Temps:          1       0       0       0       0
  5465 ;;      Totals:         6       0       0       0       0
  5466 ;;Total ram usage:        6 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_fround
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           
  5476                           ;psect for function ___lwmod
  5477  197E                     ___lwmod:
  5478  197E                     l2651:	
  5479                           ;incstack = 0
  5480                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5481                           
  5482  197E  0870               	movf	___lwmod@divisor,w
  5483  197F  0471               	iorwf	___lwmod@divisor+1,w
  5484  1980  1903               	btfsc	3,2
  5485  1981  2983               	goto	u3551
  5486  1982  2984               	goto	u3550
  5487  1983                     u3551:
  5488  1983  29B3               	goto	l2669
  5489  1984                     u3550:
  5490  1984                     l2653:
  5491  1984  01F5               	clrf	___lwmod@counter
  5492  1985  0AF5               	incf	___lwmod@counter,f
  5493  1986  2992               	goto	l2659
  5494  1987                     l2655:
  5495  1987  3001               	movlw	1
  5496  1988                     u3565:
  5497  1988  1003               	clrc
  5498  1989  0DF0               	rlf	___lwmod@divisor,f
  5499  198A  0DF1               	rlf	___lwmod@divisor+1,f
  5500  198B  3EFF               	addlw	-1
  5501  198C  1D03               	skipz
  5502  198D  2988               	goto	u3565
  5503  198E                     l2657:
  5504  198E  3001               	movlw	1
  5505  198F  00F4               	movwf	??___lwmod
  5506  1990  0874               	movf	??___lwmod,w
  5507  1991  07F5               	addwf	___lwmod@counter,f
  5508  1992                     l2659:
  5509  1992  1FF1               	btfss	___lwmod@divisor+1,7
  5510  1993  2995               	goto	u3571
  5511  1994  2996               	goto	u3570
  5512  1995                     u3571:
  5513  1995  2987               	goto	l2655
  5514  1996                     u3570:
  5515  1996                     l2661:
  5516  1996  0871               	movf	___lwmod@divisor+1,w
  5517  1997  0273               	subwf	___lwmod@dividend+1,w
  5518  1998  1D03               	skipz
  5519  1999  299C               	goto	u3585
  5520  199A  0870               	movf	___lwmod@divisor,w
  5521  199B  0272               	subwf	___lwmod@dividend,w
  5522  199C                     u3585:
  5523  199C  1C03               	skipc
  5524  199D  299F               	goto	u3581
  5525  199E  29A0               	goto	u3580
  5526  199F                     u3581:
  5527  199F  29A6               	goto	l2665
  5528  19A0                     u3580:
  5529  19A0                     l2663:
  5530  19A0  0870               	movf	___lwmod@divisor,w
  5531  19A1  02F2               	subwf	___lwmod@dividend,f
  5532  19A2  0871               	movf	___lwmod@divisor+1,w
  5533  19A3  1C03               	skipc
  5534  19A4  03F3               	decf	___lwmod@dividend+1,f
  5535  19A5  02F3               	subwf	___lwmod@dividend+1,f
  5536  19A6                     l2665:
  5537  19A6  3001               	movlw	1
  5538  19A7                     u3595:
  5539  19A7  1003               	clrc
  5540  19A8  0CF1               	rrf	___lwmod@divisor+1,f
  5541  19A9  0CF0               	rrf	___lwmod@divisor,f
  5542  19AA  3EFF               	addlw	-1
  5543  19AB  1D03               	skipz
  5544  19AC  29A7               	goto	u3595
  5545  19AD                     l2667:
  5546  19AD  3001               	movlw	1
  5547  19AE  02F5               	subwf	___lwmod@counter,f
  5548  19AF  1D03               	btfss	3,2
  5549  19B0  29B2               	goto	u3601
  5550  19B1  29B3               	goto	u3600
  5551  19B2                     u3601:
  5552  19B2  2996               	goto	l2661
  5553  19B3                     u3600:
  5554  19B3                     l2669:
  5555  19B3  0873               	movf	___lwmod@dividend+1,w
  5556  19B4  00F1               	movwf	?___lwmod+1
  5557  19B5  0872               	movf	___lwmod@dividend,w
  5558  19B6  00F0               	movwf	?___lwmod
  5559  19B7                     l744:
  5560  19B7  0008               	return
  5561  19B8                     __end_of___lwmod:
  5562                           
  5563                           	psect	text8
  5564  1A38                     __ptext8:	
  5565 ;; *************** function ___lwdiv *****************
  5566 ;; Defined at:
  5567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  divisor         2    6[COMMON] unsigned int 
  5570 ;;  dividend        2    8[COMMON] unsigned int 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  quotient        2   11[COMMON] unsigned int 
  5573 ;;  counter         1   13[COMMON] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  2    6[COMMON] unsigned int 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         4       0       0       0       0
  5584 ;;      Locals:         3       0       0       0       0
  5585 ;;      Temps:          1       0       0       0       0
  5586 ;;      Totals:         8       0       0       0       0
  5587 ;;Total ram usage:        8 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_fround
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function ___lwdiv
  5598  1A38                     ___lwdiv:
  5599  1A38                     l2625:	
  5600                           ;incstack = 0
  5601                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5602                           
  5603  1A38  01FB               	clrf	___lwdiv@quotient
  5604  1A39  01FC               	clrf	___lwdiv@quotient+1
  5605  1A3A                     l2627:
  5606  1A3A  0876               	movf	___lwdiv@divisor,w
  5607  1A3B  0477               	iorwf	___lwdiv@divisor+1,w
  5608  1A3C  1903               	btfsc	3,2
  5609  1A3D  2A3F               	goto	u3481
  5610  1A3E  2A40               	goto	u3480
  5611  1A3F                     u3481:
  5612  1A3F  2A77               	goto	l2647
  5613  1A40                     u3480:
  5614  1A40                     l2629:
  5615  1A40  01FD               	clrf	___lwdiv@counter
  5616  1A41  0AFD               	incf	___lwdiv@counter,f
  5617  1A42  2A4E               	goto	l2635
  5618  1A43                     l2631:
  5619  1A43  3001               	movlw	1
  5620  1A44                     u3495:
  5621  1A44  1003               	clrc
  5622  1A45  0DF6               	rlf	___lwdiv@divisor,f
  5623  1A46  0DF7               	rlf	___lwdiv@divisor+1,f
  5624  1A47  3EFF               	addlw	-1
  5625  1A48  1D03               	skipz
  5626  1A49  2A44               	goto	u3495
  5627  1A4A                     l2633:
  5628  1A4A  3001               	movlw	1
  5629  1A4B  00FA               	movwf	??___lwdiv
  5630  1A4C  087A               	movf	??___lwdiv,w
  5631  1A4D  07FD               	addwf	___lwdiv@counter,f
  5632  1A4E                     l2635:
  5633  1A4E  1FF7               	btfss	___lwdiv@divisor+1,7
  5634  1A4F  2A51               	goto	u3501
  5635  1A50  2A52               	goto	u3500
  5636  1A51                     u3501:
  5637  1A51  2A43               	goto	l2631
  5638  1A52                     u3500:
  5639  1A52                     l2637:
  5640  1A52  3001               	movlw	1
  5641  1A53                     u3515:
  5642  1A53  1003               	clrc
  5643  1A54  0DFB               	rlf	___lwdiv@quotient,f
  5644  1A55  0DFC               	rlf	___lwdiv@quotient+1,f
  5645  1A56  3EFF               	addlw	-1
  5646  1A57  1D03               	skipz
  5647  1A58  2A53               	goto	u3515
  5648  1A59  0877               	movf	___lwdiv@divisor+1,w
  5649  1A5A  0279               	subwf	___lwdiv@dividend+1,w
  5650  1A5B  1D03               	skipz
  5651  1A5C  2A5F               	goto	u3525
  5652  1A5D  0876               	movf	___lwdiv@divisor,w
  5653  1A5E  0278               	subwf	___lwdiv@dividend,w
  5654  1A5F                     u3525:
  5655  1A5F  1C03               	skipc
  5656  1A60  2A62               	goto	u3521
  5657  1A61  2A63               	goto	u3520
  5658  1A62                     u3521:
  5659  1A62  2A6A               	goto	l2643
  5660  1A63                     u3520:
  5661  1A63                     l2639:
  5662  1A63  0876               	movf	___lwdiv@divisor,w
  5663  1A64  02F8               	subwf	___lwdiv@dividend,f
  5664  1A65  0877               	movf	___lwdiv@divisor+1,w
  5665  1A66  1C03               	skipc
  5666  1A67  03F9               	decf	___lwdiv@dividend+1,f
  5667  1A68  02F9               	subwf	___lwdiv@dividend+1,f
  5668  1A69                     l2641:
  5669  1A69  147B               	bsf	___lwdiv@quotient,0
  5670  1A6A                     l2643:
  5671  1A6A  3001               	movlw	1
  5672  1A6B                     u3535:
  5673  1A6B  1003               	clrc
  5674  1A6C  0CF7               	rrf	___lwdiv@divisor+1,f
  5675  1A6D  0CF6               	rrf	___lwdiv@divisor,f
  5676  1A6E  3EFF               	addlw	-1
  5677  1A6F  1D03               	skipz
  5678  1A70  2A6B               	goto	u3535
  5679  1A71                     l2645:
  5680  1A71  3001               	movlw	1
  5681  1A72  02FD               	subwf	___lwdiv@counter,f
  5682  1A73  1D03               	btfss	3,2
  5683  1A74  2A76               	goto	u3541
  5684  1A75  2A77               	goto	u3540
  5685  1A76                     u3541:
  5686  1A76  2A52               	goto	l2637
  5687  1A77                     u3540:
  5688  1A77                     l2647:
  5689  1A77  087C               	movf	___lwdiv@quotient+1,w
  5690  1A78  00F7               	movwf	?___lwdiv+1
  5691  1A79  087B               	movf	___lwdiv@quotient,w
  5692  1A7A  00F6               	movwf	?___lwdiv
  5693  1A7B                     l734:
  5694  1A7B  0008               	return
  5695  1A7C                     __end_of___lwdiv:
  5696                           
  5697                           	psect	text9
  5698  1015                     __ptext9:	
  5699 ;; *************** function __tdiv_to_l_ *****************
  5700 ;; Defined at:
  5701 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  f1              4    0[COMMON] float 
  5704 ;;  f2              4    4[COMMON] float 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  quot            4    0[BANK0 ] unsigned long 
  5707 ;;  exp1            1    5[BANK0 ] unsigned char 
  5708 ;;  cntr            1    4[BANK0 ] unsigned char 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  4    0[COMMON] unsigned long 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5718 ;;      Params:         8       0       0       0       0
  5719 ;;      Locals:         0       6       0       0       0
  5720 ;;      Temps:          4       0       0       0       0
  5721 ;;      Totals:        12       6       0       0       0
  5722 ;;Total ram usage:       18 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_sprintf
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function __tdiv_to_l_
  5733  1015                     __tdiv_to_l_:
  5734  1015                     l3119:	
  5735                           ;incstack = 0
  5736                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5737                           
  5738  1015  0870               	movf	__tdiv_to_l_@f1,w
  5739  1016  00F8               	movwf	??__tdiv_to_l_
  5740  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  5741  1018  00F9               	movwf	??__tdiv_to_l_+1
  5742  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  5743  101A  00FA               	movwf	??__tdiv_to_l_+2
  5744  101B  1003               	clrc
  5745  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  5746  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  5747  101E  00FB               	movwf	??__tdiv_to_l_+3
  5748  101F  087B               	movf	??__tdiv_to_l_+3,w
  5749  1020  1283               	bcf	3,5	;RP0=0, select bank0
  5750  1021  1303               	bcf	3,6	;RP1=0, select bank0
  5751  1022  00A5               	movwf	__tdiv_to_l_@exp1
  5752  1023  0825               	movf	__tdiv_to_l_@exp1,w
  5753  1024  1D03               	btfss	3,2
  5754  1025  2827               	goto	u4721
  5755  1026  2828               	goto	u4720
  5756  1027                     u4721:
  5757  1027  2831               	goto	l3125
  5758  1028                     u4720:
  5759  1028                     l3121:
  5760  1028  3000               	movlw	0
  5761  1029  00F3               	movwf	?__tdiv_to_l_+3
  5762  102A  3000               	movlw	0
  5763  102B  00F2               	movwf	?__tdiv_to_l_+2
  5764  102C  3000               	movlw	0
  5765  102D  00F1               	movwf	?__tdiv_to_l_+1
  5766  102E  3000               	movlw	0
  5767  102F  00F0               	movwf	?__tdiv_to_l_
  5768  1030  28D1               	goto	l645
  5769  1031                     l3125:
  5770  1031  0874               	movf	__tdiv_to_l_@f2,w
  5771  1032  00F8               	movwf	??__tdiv_to_l_
  5772  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  5773  1034  00F9               	movwf	??__tdiv_to_l_+1
  5774  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  5775  1036  00FA               	movwf	??__tdiv_to_l_+2
  5776  1037  1003               	clrc
  5777  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  5778  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  5779  103A  00FB               	movwf	??__tdiv_to_l_+3
  5780  103B  087B               	movf	??__tdiv_to_l_+3,w
  5781  103C  00A4               	movwf	__tdiv_to_l_@cntr
  5782  103D  0824               	movf	__tdiv_to_l_@cntr,w
  5783  103E  1D03               	btfss	3,2
  5784  103F  2841               	goto	u4731
  5785  1040  2842               	goto	u4730
  5786  1041                     u4731:
  5787  1041  2843               	goto	l646
  5788  1042                     u4730:
  5789  1042  2828               	goto	l3121
  5790  1043                     l646:
  5791  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5792  1044                     l3131:
  5793  1044  30FF               	movlw	255
  5794  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  5795  1046  30FF               	movlw	255
  5796  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5797  1048  3000               	movlw	0
  5798  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5799  104A                     l3133:
  5800  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5801  104B  30FF               	movlw	255
  5802  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  5803  104D  30FF               	movlw	255
  5804  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5805  104F  3000               	movlw	0
  5806  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5807  1051  3000               	movlw	0
  5808  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  5809  1053  3000               	movlw	0
  5810  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  5811  1055  3000               	movlw	0
  5812  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  5813  1057  3000               	movlw	0
  5814  1058  00A0               	movwf	__tdiv_to_l_@quot
  5815  1059                     l3135:
  5816  1059  307F               	movlw	127
  5817  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  5818  105B                     l3137:
  5819  105B  3098               	movlw	152
  5820  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  5821  105D  00F8               	movwf	??__tdiv_to_l_
  5822  105E  0878               	movf	??__tdiv_to_l_,w
  5823  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5824  1060  3018               	movlw	24
  5825  1061  00F8               	movwf	??__tdiv_to_l_
  5826  1062  0878               	movf	??__tdiv_to_l_,w
  5827  1063  00A4               	movwf	__tdiv_to_l_@cntr
  5828  1064                     l3139:
  5829  1064  3001               	movlw	1
  5830  1065  00F8               	movwf	??__tdiv_to_l_
  5831  1066                     u4745:
  5832  1066  1003               	clrc
  5833  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  5834  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5835  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5836  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5837  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  5838  106C  2866               	goto	u4745
  5839  106D                     l3141:
  5840  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  5841  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  5842  106F  1D03               	skipz
  5843  1070  2877               	goto	u4755
  5844  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  5845  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  5846  1073  1D03               	skipz
  5847  1074  2877               	goto	u4755
  5848  1075  0874               	movf	__tdiv_to_l_@f2,w
  5849  1076  0270               	subwf	__tdiv_to_l_@f1,w
  5850  1077                     u4755:
  5851  1077  1C03               	skipc
  5852  1078  287A               	goto	u4751
  5853  1079  287B               	goto	u4750
  5854  107A                     u4751:
  5855  107A  2886               	goto	l3147
  5856  107B                     u4750:
  5857  107B                     l3143:
  5858  107B  0874               	movf	__tdiv_to_l_@f2,w
  5859  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  5860  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  5861  107E  1C03               	skipc
  5862  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5863  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5864  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  5865  1082  1C03               	skipc
  5866  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  5867  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5868  1085                     l3145:
  5869  1085  1420               	bsf	__tdiv_to_l_@quot,0
  5870  1086                     l3147:
  5871  1086  3001               	movlw	1
  5872  1087                     u4765:
  5873  1087  1003               	clrc
  5874  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  5875  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5876  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5877  108B  3EFF               	addlw	-1
  5878  108C  1D03               	skipz
  5879  108D  2887               	goto	u4765
  5880  108E                     l3149:
  5881  108E  3001               	movlw	1
  5882  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  5883  1090  1D03               	btfss	3,2
  5884  1091  2893               	goto	u4771
  5885  1092  2894               	goto	u4770
  5886  1093                     u4771:
  5887  1093  2864               	goto	l3139
  5888  1094                     u4770:
  5889  1094                     l649:
  5890  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5891  1095  2897               	goto	u4781
  5892  1096  2898               	goto	u4780
  5893  1097                     u4781:
  5894  1097  28B2               	goto	l3159
  5895  1098                     u4780:
  5896  1098                     l3151:
  5897  1098  0825               	movf	__tdiv_to_l_@exp1,w
  5898  1099  3A80               	xorlw	128
  5899  109A  3E97               	addlw	151
  5900  109B  1803               	skipnc
  5901  109C  289E               	goto	u4791
  5902  109D  289F               	goto	u4790
  5903  109E                     u4791:
  5904  109E  28A0               	goto	l3157
  5905  109F                     u4790:
  5906  109F  2828               	goto	l3121
  5907  10A0                     l3157:
  5908  10A0  3001               	movlw	1
  5909  10A1                     u4805:
  5910  10A1  1003               	clrc
  5911  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5912  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5913  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5914  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  5915  10A6  3EFF               	addlw	-1
  5916  10A7  1D03               	skipz
  5917  10A8  28A1               	goto	u4805
  5918  10A9  3001               	movlw	1
  5919  10AA  00F8               	movwf	??__tdiv_to_l_
  5920  10AB  0878               	movf	??__tdiv_to_l_,w
  5921  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  5922  10AD  1D03               	btfss	3,2
  5923  10AE  28B0               	goto	u4811
  5924  10AF  28B1               	goto	u4810
  5925  10B0                     u4811:
  5926  10B0  28A0               	goto	l3157
  5927  10B1                     u4810:
  5928  10B1  28C9               	goto	l3167
  5929  10B2                     l3159:
  5930  10B2  3018               	movlw	24
  5931  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  5932  10B4  1C03               	skipc
  5933  10B5  28B7               	goto	u4821
  5934  10B6  28B8               	goto	u4820
  5935  10B7                     u4821:
  5936  10B7  28C4               	goto	l656
  5937  10B8                     u4820:
  5938  10B8  2828               	goto	l3121
  5939  10B9                     l3165:
  5940  10B9  3001               	movlw	1
  5941  10BA  00F8               	movwf	??__tdiv_to_l_
  5942  10BB                     u4835:
  5943  10BB  1003               	clrc
  5944  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  5945  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5946  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5947  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5948  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  5949  10C1  28BB               	goto	u4835
  5950  10C2  3001               	movlw	1
  5951  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  5952  10C4                     l656:
  5953  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  5954  10C5  1D03               	btfss	3,2
  5955  10C6  28C8               	goto	u4841
  5956  10C7  28C9               	goto	u4840
  5957  10C8                     u4841:
  5958  10C8  28B9               	goto	l3165
  5959  10C9                     u4840:
  5960  10C9                     l3167:
  5961  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  5962  10CA  00F3               	movwf	?__tdiv_to_l_+3
  5963  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  5964  10CC  00F2               	movwf	?__tdiv_to_l_+2
  5965  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  5966  10CE  00F1               	movwf	?__tdiv_to_l_+1
  5967  10CF  0820               	movf	__tdiv_to_l_@quot,w
  5968  10D0  00F0               	movwf	?__tdiv_to_l_
  5969  10D1                     l645:
  5970  10D1  0008               	return
  5971  10D2                     __end_of__tdiv_to_l_:
  5972                           
  5973                           	psect	text10
  5974  10D2                     __ptext10:	
  5975 ;; *************** function __div_to_l_ *****************
  5976 ;; Defined at:
  5977 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  f1              4    0[COMMON] unsigned long 
  5980 ;;  f2              4    4[COMMON] unsigned long 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  quot            4    0[BANK0 ] unsigned long 
  5983 ;;  exp1            1    5[BANK0 ] unsigned char 
  5984 ;;  cntr            1    4[BANK0 ] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  4    0[COMMON] unsigned long 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5994 ;;      Params:         8       0       0       0       0
  5995 ;;      Locals:         0       6       0       0       0
  5996 ;;      Temps:          1       0       0       0       0
  5997 ;;      Totals:         9       6       0       0       0
  5998 ;;Total ram usage:       15 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_sprintf
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function __div_to_l_
  6009  10D2                     __div_to_l_:
  6010  10D2                     l3171:	
  6011                           ;incstack = 0
  6012                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6013                           
  6014  10D2  1003               	clrc
  6015  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  6016  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  6017  10D5  00F8               	movwf	??__div_to_l_
  6018  10D6  0878               	movf	??__div_to_l_,w
  6019  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  6020  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  6021  10D9  00A5               	movwf	__div_to_l_@exp1
  6022  10DA  0825               	movf	__div_to_l_@exp1,w
  6023  10DB  1D03               	btfss	3,2
  6024  10DC  28DE               	goto	u4851
  6025  10DD  28DF               	goto	u4850
  6026  10DE                     u4851:
  6027  10DE  28E8               	goto	l3177
  6028  10DF                     u4850:
  6029  10DF                     l3173:
  6030  10DF  3000               	movlw	0
  6031  10E0  00F3               	movwf	?__div_to_l_+3
  6032  10E1  3000               	movlw	0
  6033  10E2  00F2               	movwf	?__div_to_l_+2
  6034  10E3  3000               	movlw	0
  6035  10E4  00F1               	movwf	?__div_to_l_+1
  6036  10E5  3000               	movlw	0
  6037  10E6  00F0               	movwf	?__div_to_l_
  6038  10E7  298F               	goto	l598
  6039  10E8                     l3177:
  6040  10E8  1003               	clrc
  6041  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  6042  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  6043  10EB  00F8               	movwf	??__div_to_l_
  6044  10EC  0878               	movf	??__div_to_l_,w
  6045  10ED  00A4               	movwf	__div_to_l_@cntr
  6046  10EE  0824               	movf	__div_to_l_@cntr,w
  6047  10EF  1D03               	btfss	3,2
  6048  10F0  28F2               	goto	u4861
  6049  10F1  28F3               	goto	u4860
  6050  10F2                     u4861:
  6051  10F2  28F4               	goto	l599
  6052  10F3                     u4860:
  6053  10F3  28DF               	goto	l3173
  6054  10F4                     l599:
  6055  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  6056  10F5                     l3183:
  6057  10F5  30FF               	movlw	255
  6058  10F6  05F0               	andwf	__div_to_l_@f1,f
  6059  10F7  30FF               	movlw	255
  6060  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  6061  10F9  30FF               	movlw	255
  6062  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  6063  10FB  3000               	movlw	0
  6064  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  6065  10FD                     l3185:
  6066  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  6067  10FE  30FF               	movlw	255
  6068  10FF  05F4               	andwf	__div_to_l_@f2,f
  6069  1100  30FF               	movlw	255
  6070  1101  05F5               	andwf	__div_to_l_@f2+1,f
  6071  1102  30FF               	movlw	255
  6072  1103  05F6               	andwf	__div_to_l_@f2+2,f
  6073  1104  3000               	movlw	0
  6074  1105  05F7               	andwf	__div_to_l_@f2+3,f
  6075  1106  3000               	movlw	0
  6076  1107  00A3               	movwf	__div_to_l_@quot+3
  6077  1108  3000               	movlw	0
  6078  1109  00A2               	movwf	__div_to_l_@quot+2
  6079  110A  3000               	movlw	0
  6080  110B  00A1               	movwf	__div_to_l_@quot+1
  6081  110C  3000               	movlw	0
  6082  110D  00A0               	movwf	__div_to_l_@quot
  6083  110E                     l3187:
  6084  110E  307F               	movlw	127
  6085  110F  02A5               	subwf	__div_to_l_@exp1,f
  6086  1110                     l3189:
  6087  1110  30A0               	movlw	160
  6088  1111  0724               	addwf	__div_to_l_@cntr,w
  6089  1112  00F8               	movwf	??__div_to_l_
  6090  1113  0878               	movf	??__div_to_l_,w
  6091  1114  02A5               	subwf	__div_to_l_@exp1,f
  6092  1115  3020               	movlw	32
  6093  1116  00F8               	movwf	??__div_to_l_
  6094  1117  0878               	movf	??__div_to_l_,w
  6095  1118  00A4               	movwf	__div_to_l_@cntr
  6096  1119                     l3191:
  6097  1119  3001               	movlw	1
  6098  111A  00F8               	movwf	??__div_to_l_
  6099  111B                     u4875:
  6100  111B  1003               	clrc
  6101  111C  0DA0               	rlf	__div_to_l_@quot,f
  6102  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  6103  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  6104  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  6105  1120  0BF8               	decfsz	??__div_to_l_,f
  6106  1121  291B               	goto	u4875
  6107  1122                     l3193:
  6108  1122  0877               	movf	__div_to_l_@f2+3,w
  6109  1123  0273               	subwf	__div_to_l_@f1+3,w
  6110  1124  1D03               	skipz
  6111  1125  2930               	goto	u4885
  6112  1126  0876               	movf	__div_to_l_@f2+2,w
  6113  1127  0272               	subwf	__div_to_l_@f1+2,w
  6114  1128  1D03               	skipz
  6115  1129  2930               	goto	u4885
  6116  112A  0875               	movf	__div_to_l_@f2+1,w
  6117  112B  0271               	subwf	__div_to_l_@f1+1,w
  6118  112C  1D03               	skipz
  6119  112D  2930               	goto	u4885
  6120  112E  0874               	movf	__div_to_l_@f2,w
  6121  112F  0270               	subwf	__div_to_l_@f1,w
  6122  1130                     u4885:
  6123  1130  1C03               	skipc
  6124  1131  2933               	goto	u4881
  6125  1132  2934               	goto	u4880
  6126  1133                     u4881:
  6127  1133  2943               	goto	l3199
  6128  1134                     u4880:
  6129  1134                     l3195:
  6130  1134  0874               	movf	__div_to_l_@f2,w
  6131  1135  02F0               	subwf	__div_to_l_@f1,f
  6132  1136  0875               	movf	__div_to_l_@f2+1,w
  6133  1137  1C03               	skipc
  6134  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  6135  1139  02F1               	subwf	__div_to_l_@f1+1,f
  6136  113A  0876               	movf	__div_to_l_@f2+2,w
  6137  113B  1C03               	skipc
  6138  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  6139  113D  02F2               	subwf	__div_to_l_@f1+2,f
  6140  113E  0877               	movf	__div_to_l_@f2+3,w
  6141  113F  1C03               	skipc
  6142  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  6143  1141  02F3               	subwf	__div_to_l_@f1+3,f
  6144  1142                     l3197:
  6145  1142  1420               	bsf	__div_to_l_@quot,0
  6146  1143                     l3199:
  6147  1143  3001               	movlw	1
  6148  1144  00F8               	movwf	??__div_to_l_
  6149  1145                     u4895:
  6150  1145  1003               	clrc
  6151  1146  0DF0               	rlf	__div_to_l_@f1,f
  6152  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  6153  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  6154  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  6155  114A  0BF8               	decfsz	??__div_to_l_,f
  6156  114B  2945               	goto	u4895
  6157  114C                     l3201:
  6158  114C  3001               	movlw	1
  6159  114D  02A4               	subwf	__div_to_l_@cntr,f
  6160  114E  1D03               	btfss	3,2
  6161  114F  2951               	goto	u4901
  6162  1150  2952               	goto	u4900
  6163  1151                     u4901:
  6164  1151  2919               	goto	l3191
  6165  1152                     u4900:
  6166  1152                     l602:
  6167  1152  1FA5               	btfss	__div_to_l_@exp1,7
  6168  1153  2955               	goto	u4911
  6169  1154  2956               	goto	u4910
  6170  1155                     u4911:
  6171  1155  2970               	goto	l3211
  6172  1156                     u4910:
  6173  1156                     l3203:
  6174  1156  0825               	movf	__div_to_l_@exp1,w
  6175  1157  3A80               	xorlw	128
  6176  1158  3E9F               	addlw	159
  6177  1159  1803               	skipnc
  6178  115A  295C               	goto	u4921
  6179  115B  295D               	goto	u4920
  6180  115C                     u4921:
  6181  115C  295E               	goto	l3209
  6182  115D                     u4920:
  6183  115D  28DF               	goto	l3173
  6184  115E                     l3209:
  6185  115E  3001               	movlw	1
  6186  115F                     u4935:
  6187  115F  1003               	clrc
  6188  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  6189  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  6190  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  6191  1163  0CA0               	rrf	__div_to_l_@quot,f
  6192  1164  3EFF               	addlw	-1
  6193  1165  1D03               	skipz
  6194  1166  295F               	goto	u4935
  6195  1167  3001               	movlw	1
  6196  1168  00F8               	movwf	??__div_to_l_
  6197  1169  0878               	movf	??__div_to_l_,w
  6198  116A  07A5               	addwf	__div_to_l_@exp1,f
  6199  116B  1D03               	btfss	3,2
  6200  116C  296E               	goto	u4941
  6201  116D  296F               	goto	u4940
  6202  116E                     u4941:
  6203  116E  295E               	goto	l3209
  6204  116F                     u4940:
  6205  116F  2987               	goto	l3219
  6206  1170                     l3211:
  6207  1170  3020               	movlw	32
  6208  1171  0225               	subwf	__div_to_l_@exp1,w
  6209  1172  1C03               	skipc
  6210  1173  2975               	goto	u4951
  6211  1174  2976               	goto	u4950
  6212  1175                     u4951:
  6213  1175  2982               	goto	l609
  6214  1176                     u4950:
  6215  1176  28DF               	goto	l3173
  6216  1177                     l3217:
  6217  1177  3001               	movlw	1
  6218  1178  00F8               	movwf	??__div_to_l_
  6219  1179                     u4965:
  6220  1179  1003               	clrc
  6221  117A  0DA0               	rlf	__div_to_l_@quot,f
  6222  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  6223  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  6224  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  6225  117E  0BF8               	decfsz	??__div_to_l_,f
  6226  117F  2979               	goto	u4965
  6227  1180  3001               	movlw	1
  6228  1181  02A5               	subwf	__div_to_l_@exp1,f
  6229  1182                     l609:
  6230  1182  0825               	movf	__div_to_l_@exp1,w
  6231  1183  1D03               	btfss	3,2
  6232  1184  2986               	goto	u4971
  6233  1185  2987               	goto	u4970
  6234  1186                     u4971:
  6235  1186  2977               	goto	l3217
  6236  1187                     u4970:
  6237  1187                     l3219:
  6238  1187  0823               	movf	__div_to_l_@quot+3,w
  6239  1188  00F3               	movwf	?__div_to_l_+3
  6240  1189  0822               	movf	__div_to_l_@quot+2,w
  6241  118A  00F2               	movwf	?__div_to_l_+2
  6242  118B  0821               	movf	__div_to_l_@quot+1,w
  6243  118C  00F1               	movwf	?__div_to_l_+1
  6244  118D  0820               	movf	__div_to_l_@quot,w
  6245  118E  00F0               	movwf	?__div_to_l_
  6246  118F                     l598:
  6247  118F  0008               	return
  6248  1190                     __end_of__div_to_l_:
  6249                           
  6250                           	psect	text11
  6251  1907                     __ptext11:	
  6252 ;; *************** function ___wmul *****************
  6253 ;; Defined at:
  6254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  multiplier      2    0[COMMON] unsigned int 
  6257 ;;  multiplicand    2    2[COMMON] unsigned int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  product         2    4[COMMON] unsigned int 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  2    0[COMMON] unsigned int 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6269 ;;      Params:         4       0       0       0       0
  6270 ;;      Locals:         2       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0
  6272 ;;      Totals:         6       0       0       0       0
  6273 ;;Total ram usage:        6 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_sprintf
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           
  6283                           ;psect for function ___wmul
  6284  1907                     ___wmul:
  6285  1907                     l3223:	
  6286                           ;incstack = 0
  6287                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6288                           
  6289  1907  01F4               	clrf	___wmul@product
  6290  1908  01F5               	clrf	___wmul@product+1
  6291  1909                     l3225:
  6292  1909  1C70               	btfss	___wmul@multiplier,0
  6293  190A  290C               	goto	u4981
  6294  190B  290D               	goto	u4980
  6295  190C                     u4981:
  6296  190C  2913               	goto	l428
  6297  190D                     u4980:
  6298  190D                     l3227:
  6299  190D  0872               	movf	___wmul@multiplicand,w
  6300  190E  07F4               	addwf	___wmul@product,f
  6301  190F  1803               	skipnc
  6302  1910  0AF5               	incf	___wmul@product+1,f
  6303  1911  0873               	movf	___wmul@multiplicand+1,w
  6304  1912  07F5               	addwf	___wmul@product+1,f
  6305  1913                     l428:
  6306  1913  3001               	movlw	1
  6307  1914                     u4995:
  6308  1914  1003               	clrc
  6309  1915  0DF2               	rlf	___wmul@multiplicand,f
  6310  1916  0DF3               	rlf	___wmul@multiplicand+1,f
  6311  1917  3EFF               	addlw	-1
  6312  1918  1D03               	skipz
  6313  1919  2914               	goto	u4995
  6314  191A                     l3229:
  6315  191A  3001               	movlw	1
  6316  191B                     u5005:
  6317  191B  1003               	clrc
  6318  191C  0CF1               	rrf	___wmul@multiplier+1,f
  6319  191D  0CF0               	rrf	___wmul@multiplier,f
  6320  191E  3EFF               	addlw	-1
  6321  191F  1D03               	skipz
  6322  1920  291B               	goto	u5005
  6323  1921                     l3231:
  6324  1921  0870               	movf	___wmul@multiplier,w
  6325  1922  0471               	iorwf	___wmul@multiplier+1,w
  6326  1923  1D03               	btfss	3,2
  6327  1924  2926               	goto	u5011
  6328  1925  2927               	goto	u5010
  6329  1926                     u5011:
  6330  1926  2909               	goto	l3225
  6331  1927                     u5010:
  6332  1927                     l3233:
  6333  1927  0875               	movf	___wmul@product+1,w
  6334  1928  00F1               	movwf	?___wmul+1
  6335  1929  0874               	movf	___wmul@product,w
  6336  192A  00F0               	movwf	?___wmul
  6337  192B                     l430:
  6338  192B  0008               	return
  6339  192C                     __end_of___wmul:
  6340                           
  6341                           	psect	text12
  6342  1ACA                     __ptext12:	
  6343 ;; *************** function ___llmod *****************
  6344 ;; Defined at:
  6345 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  divisor         4    0[COMMON] unsigned long 
  6348 ;;  dividend        4    4[COMMON] unsigned long 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  counter         1    9[COMMON] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  4    0[COMMON] unsigned long 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6360 ;;      Params:         8       0       0       0       0
  6361 ;;      Locals:         1       0       0       0       0
  6362 ;;      Temps:          1       0       0       0       0
  6363 ;;      Totals:        10       0       0       0       0
  6364 ;;Total ram usage:       10 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_sprintf
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function ___llmod
  6375  1ACA                     ___llmod:
  6376  1ACA                     l3337:	
  6377                           ;incstack = 0
  6378                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6379                           
  6380  1ACA  0873               	movf	___llmod@divisor+3,w
  6381  1ACB  0472               	iorwf	___llmod@divisor+2,w
  6382  1ACC  0471               	iorwf	___llmod@divisor+1,w
  6383  1ACD  0470               	iorwf	___llmod@divisor,w
  6384  1ACE  1903               	skipnz
  6385  1ACF  2AD1               	goto	u5301
  6386  1AD0  2AD2               	goto	u5300
  6387  1AD1                     u5301:
  6388  1AD1  2B15               	goto	l3353
  6389  1AD2                     u5300:
  6390  1AD2                     l3339:
  6391  1AD2  01F9               	clrf	___llmod@counter
  6392  1AD3  0AF9               	incf	___llmod@counter,f
  6393  1AD4  2AE2               	goto	l3343
  6394  1AD5                     l3341:
  6395  1AD5  3001               	movlw	1
  6396  1AD6  00F8               	movwf	??___llmod
  6397  1AD7                     u5315:
  6398  1AD7  1003               	clrc
  6399  1AD8  0DF0               	rlf	___llmod@divisor,f
  6400  1AD9  0DF1               	rlf	___llmod@divisor+1,f
  6401  1ADA  0DF2               	rlf	___llmod@divisor+2,f
  6402  1ADB  0DF3               	rlf	___llmod@divisor+3,f
  6403  1ADC  0BF8               	decfsz	??___llmod,f
  6404  1ADD  2AD7               	goto	u5315
  6405  1ADE  3001               	movlw	1
  6406  1ADF  00F8               	movwf	??___llmod
  6407  1AE0  0878               	movf	??___llmod,w
  6408  1AE1  07F9               	addwf	___llmod@counter,f
  6409  1AE2                     l3343:
  6410  1AE2  1FF3               	btfss	___llmod@divisor+3,7
  6411  1AE3  2AE5               	goto	u5321
  6412  1AE4  2AE6               	goto	u5320
  6413  1AE5                     u5321:
  6414  1AE5  2AD5               	goto	l3341
  6415  1AE6                     u5320:
  6416  1AE6                     l3345:
  6417  1AE6  0873               	movf	___llmod@divisor+3,w
  6418  1AE7  0277               	subwf	___llmod@dividend+3,w
  6419  1AE8  1D03               	skipz
  6420  1AE9  2AF4               	goto	u5335
  6421  1AEA  0872               	movf	___llmod@divisor+2,w
  6422  1AEB  0276               	subwf	___llmod@dividend+2,w
  6423  1AEC  1D03               	skipz
  6424  1AED  2AF4               	goto	u5335
  6425  1AEE  0871               	movf	___llmod@divisor+1,w
  6426  1AEF  0275               	subwf	___llmod@dividend+1,w
  6427  1AF0  1D03               	skipz
  6428  1AF1  2AF4               	goto	u5335
  6429  1AF2  0870               	movf	___llmod@divisor,w
  6430  1AF3  0274               	subwf	___llmod@dividend,w
  6431  1AF4                     u5335:
  6432  1AF4  1C03               	skipc
  6433  1AF5  2AF7               	goto	u5331
  6434  1AF6  2AF8               	goto	u5330
  6435  1AF7                     u5331:
  6436  1AF7  2B06               	goto	l3349
  6437  1AF8                     u5330:
  6438  1AF8                     l3347:
  6439  1AF8  0870               	movf	___llmod@divisor,w
  6440  1AF9  02F4               	subwf	___llmod@dividend,f
  6441  1AFA  0871               	movf	___llmod@divisor+1,w
  6442  1AFB  1C03               	skipc
  6443  1AFC  0F71               	incfsz	___llmod@divisor+1,w
  6444  1AFD  02F5               	subwf	___llmod@dividend+1,f
  6445  1AFE  0872               	movf	___llmod@divisor+2,w
  6446  1AFF  1C03               	skipc
  6447  1B00  0F72               	incfsz	___llmod@divisor+2,w
  6448  1B01  02F6               	subwf	___llmod@dividend+2,f
  6449  1B02  0873               	movf	___llmod@divisor+3,w
  6450  1B03  1C03               	skipc
  6451  1B04  0F73               	incfsz	___llmod@divisor+3,w
  6452  1B05  02F7               	subwf	___llmod@dividend+3,f
  6453  1B06                     l3349:
  6454  1B06  3001               	movlw	1
  6455  1B07                     u5345:
  6456  1B07  1003               	clrc
  6457  1B08  0CF3               	rrf	___llmod@divisor+3,f
  6458  1B09  0CF2               	rrf	___llmod@divisor+2,f
  6459  1B0A  0CF1               	rrf	___llmod@divisor+1,f
  6460  1B0B  0CF0               	rrf	___llmod@divisor,f
  6461  1B0C  3EFF               	addlw	-1
  6462  1B0D  1D03               	skipz
  6463  1B0E  2B07               	goto	u5345
  6464  1B0F                     l3351:
  6465  1B0F  3001               	movlw	1
  6466  1B10  02F9               	subwf	___llmod@counter,f
  6467  1B11  1D03               	btfss	3,2
  6468  1B12  2B14               	goto	u5351
  6469  1B13  2B15               	goto	u5350
  6470  1B14                     u5351:
  6471  1B14  2AE6               	goto	l3345
  6472  1B15                     u5350:
  6473  1B15                     l3353:
  6474  1B15  0877               	movf	___llmod@dividend+3,w
  6475  1B16  00F3               	movwf	?___llmod+3
  6476  1B17  0876               	movf	___llmod@dividend+2,w
  6477  1B18  00F2               	movwf	?___llmod+2
  6478  1B19  0875               	movf	___llmod@dividend+1,w
  6479  1B1A  00F1               	movwf	?___llmod+1
  6480  1B1B  0874               	movf	___llmod@dividend,w
  6481  1B1C  00F0               	movwf	?___llmod
  6482  1B1D                     l684:
  6483  1B1D  0008               	return
  6484  1B1E                     __end_of___llmod:
  6485                           
  6486                           	psect	text13
  6487  1B77                     __ptext13:	
  6488 ;; *************** function ___lldiv *****************
  6489 ;; Defined at:
  6490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  divisor         4    0[COMMON] unsigned long 
  6493 ;;  dividend        4    4[COMMON] unsigned long 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  quotient        4    9[COMMON] unsigned long 
  6496 ;;  counter         1   13[COMMON] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  4    0[COMMON] unsigned long 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6506 ;;      Params:         8       0       0       0       0
  6507 ;;      Locals:         5       0       0       0       0
  6508 ;;      Temps:          1       0       0       0       0
  6509 ;;      Totals:        14       0       0       0       0
  6510 ;;Total ram usage:       14 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_sprintf
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           
  6520                           ;psect for function ___lldiv
  6521  1B77                     ___lldiv:
  6522  1B77                     l3237:	
  6523                           ;incstack = 0
  6524                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6525                           
  6526  1B77  3000               	movlw	0
  6527  1B78  00FC               	movwf	___lldiv@quotient+3
  6528  1B79  3000               	movlw	0
  6529  1B7A  00FB               	movwf	___lldiv@quotient+2
  6530  1B7B  3000               	movlw	0
  6531  1B7C  00FA               	movwf	___lldiv@quotient+1
  6532  1B7D  3000               	movlw	0
  6533  1B7E  00F9               	movwf	___lldiv@quotient
  6534  1B7F  0873               	movf	___lldiv@divisor+3,w
  6535  1B80  0472               	iorwf	___lldiv@divisor+2,w
  6536  1B81  0471               	iorwf	___lldiv@divisor+1,w
  6537  1B82  0470               	iorwf	___lldiv@divisor,w
  6538  1B83  1903               	skipnz
  6539  1B84  2B86               	goto	u5021
  6540  1B85  2B87               	goto	u5020
  6541  1B86                     u5021:
  6542  1B86  2BD4               	goto	l3257
  6543  1B87                     u5020:
  6544  1B87                     l3239:
  6545  1B87  01FD               	clrf	___lldiv@counter
  6546  1B88  0AFD               	incf	___lldiv@counter,f
  6547  1B89  2B97               	goto	l3243
  6548  1B8A                     l3241:
  6549  1B8A  3001               	movlw	1
  6550  1B8B  00F8               	movwf	??___lldiv
  6551  1B8C                     u5035:
  6552  1B8C  1003               	clrc
  6553  1B8D  0DF0               	rlf	___lldiv@divisor,f
  6554  1B8E  0DF1               	rlf	___lldiv@divisor+1,f
  6555  1B8F  0DF2               	rlf	___lldiv@divisor+2,f
  6556  1B90  0DF3               	rlf	___lldiv@divisor+3,f
  6557  1B91  0BF8               	decfsz	??___lldiv,f
  6558  1B92  2B8C               	goto	u5035
  6559  1B93  3001               	movlw	1
  6560  1B94  00F8               	movwf	??___lldiv
  6561  1B95  0878               	movf	??___lldiv,w
  6562  1B96  07FD               	addwf	___lldiv@counter,f
  6563  1B97                     l3243:
  6564  1B97  1FF3               	btfss	___lldiv@divisor+3,7
  6565  1B98  2B9A               	goto	u5041
  6566  1B99  2B9B               	goto	u5040
  6567  1B9A                     u5041:
  6568  1B9A  2B8A               	goto	l3241
  6569  1B9B                     u5040:
  6570  1B9B                     l3245:
  6571  1B9B  3001               	movlw	1
  6572  1B9C  00F8               	movwf	??___lldiv
  6573  1B9D                     u5055:
  6574  1B9D  1003               	clrc
  6575  1B9E  0DF9               	rlf	___lldiv@quotient,f
  6576  1B9F  0DFA               	rlf	___lldiv@quotient+1,f
  6577  1BA0  0DFB               	rlf	___lldiv@quotient+2,f
  6578  1BA1  0DFC               	rlf	___lldiv@quotient+3,f
  6579  1BA2  0BF8               	decfsz	??___lldiv,f
  6580  1BA3  2B9D               	goto	u5055
  6581  1BA4                     l3247:
  6582  1BA4  0873               	movf	___lldiv@divisor+3,w
  6583  1BA5  0277               	subwf	___lldiv@dividend+3,w
  6584  1BA6  1D03               	skipz
  6585  1BA7  2BB2               	goto	u5065
  6586  1BA8  0872               	movf	___lldiv@divisor+2,w
  6587  1BA9  0276               	subwf	___lldiv@dividend+2,w
  6588  1BAA  1D03               	skipz
  6589  1BAB  2BB2               	goto	u5065
  6590  1BAC  0871               	movf	___lldiv@divisor+1,w
  6591  1BAD  0275               	subwf	___lldiv@dividend+1,w
  6592  1BAE  1D03               	skipz
  6593  1BAF  2BB2               	goto	u5065
  6594  1BB0  0870               	movf	___lldiv@divisor,w
  6595  1BB1  0274               	subwf	___lldiv@dividend,w
  6596  1BB2                     u5065:
  6597  1BB2  1C03               	skipc
  6598  1BB3  2BB5               	goto	u5061
  6599  1BB4  2BB6               	goto	u5060
  6600  1BB5                     u5061:
  6601  1BB5  2BC5               	goto	l3253
  6602  1BB6                     u5060:
  6603  1BB6                     l3249:
  6604  1BB6  0870               	movf	___lldiv@divisor,w
  6605  1BB7  02F4               	subwf	___lldiv@dividend,f
  6606  1BB8  0871               	movf	___lldiv@divisor+1,w
  6607  1BB9  1C03               	skipc
  6608  1BBA  0F71               	incfsz	___lldiv@divisor+1,w
  6609  1BBB  02F5               	subwf	___lldiv@dividend+1,f
  6610  1BBC  0872               	movf	___lldiv@divisor+2,w
  6611  1BBD  1C03               	skipc
  6612  1BBE  0F72               	incfsz	___lldiv@divisor+2,w
  6613  1BBF  02F6               	subwf	___lldiv@dividend+2,f
  6614  1BC0  0873               	movf	___lldiv@divisor+3,w
  6615  1BC1  1C03               	skipc
  6616  1BC2  0F73               	incfsz	___lldiv@divisor+3,w
  6617  1BC3  02F7               	subwf	___lldiv@dividend+3,f
  6618  1BC4                     l3251:
  6619  1BC4  1479               	bsf	___lldiv@quotient,0
  6620  1BC5                     l3253:
  6621  1BC5  3001               	movlw	1
  6622  1BC6                     u5075:
  6623  1BC6  1003               	clrc
  6624  1BC7  0CF3               	rrf	___lldiv@divisor+3,f
  6625  1BC8  0CF2               	rrf	___lldiv@divisor+2,f
  6626  1BC9  0CF1               	rrf	___lldiv@divisor+1,f
  6627  1BCA  0CF0               	rrf	___lldiv@divisor,f
  6628  1BCB  3EFF               	addlw	-1
  6629  1BCC  1D03               	skipz
  6630  1BCD  2BC6               	goto	u5075
  6631  1BCE                     l3255:
  6632  1BCE  3001               	movlw	1
  6633  1BCF  02FD               	subwf	___lldiv@counter,f
  6634  1BD0  1D03               	btfss	3,2
  6635  1BD1  2BD3               	goto	u5081
  6636  1BD2  2BD4               	goto	u5080
  6637  1BD3                     u5081:
  6638  1BD3  2B9B               	goto	l3245
  6639  1BD4                     u5080:
  6640  1BD4                     l3257:
  6641  1BD4  087C               	movf	___lldiv@quotient+3,w
  6642  1BD5  00F3               	movwf	?___lldiv+3
  6643  1BD6  087B               	movf	___lldiv@quotient+2,w
  6644  1BD7  00F2               	movwf	?___lldiv+2
  6645  1BD8  087A               	movf	___lldiv@quotient+1,w
  6646  1BD9  00F1               	movwf	?___lldiv+1
  6647  1BDA  0879               	movf	___lldiv@quotient,w
  6648  1BDB  00F0               	movwf	?___lldiv
  6649  1BDC                     l464:
  6650  1BDC  0008               	return
  6651  1BDD                     __end_of___lldiv:
  6652                           
  6653                           	psect	text14
  6654  1CCC                     __ptext14:	
  6655 ;; *************** function ___fltol *****************
  6656 ;; Defined at:
  6657 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  f1              4   49[BANK0 ] unsigned long 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  exp1            1   59[BANK0 ] unsigned char 
  6662 ;;  sign1           1   58[BANK0 ] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  4   49[BANK0 ] long 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6672 ;;      Params:         0       4       0       0       0
  6673 ;;      Locals:         0       2       0       0       0
  6674 ;;      Temps:          0       5       0       0       0
  6675 ;;      Totals:         0      11       0       0       0
  6676 ;;Total ram usage:       11 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_sprintf
  6682 ;;		_Enviar_1
  6683 ;;		_Enviar_2
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function ___fltol
  6689  1CCC                     ___fltol:
  6690  1CCC                     l3301:	
  6691                           ;incstack = 0
  6692                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6693                           
  6694  1CCC  1003               	clrc
  6695  1CCD  1283               	bcf	3,5	;RP0=0, select bank0
  6696  1CCE  1303               	bcf	3,6	;RP1=0, select bank0
  6697  1CCF  0D53               	rlf	___fltol@f1+2,w
  6698  1CD0  0D54               	rlf	___fltol@f1+3,w
  6699  1CD1  00D5               	movwf	??___fltol
  6700  1CD2  0855               	movf	??___fltol,w
  6701  1CD3  00DB               	movwf	___fltol@exp1
  6702  1CD4  085B               	movf	___fltol@exp1,w
  6703  1CD5  1D03               	btfss	3,2
  6704  1CD6  2CD8               	goto	u5201
  6705  1CD7  2CD9               	goto	u5200
  6706  1CD8                     u5201:
  6707  1CD8  2CE2               	goto	l3307
  6708  1CD9                     u5200:
  6709  1CD9                     l3303:
  6710  1CD9  3000               	movlw	0
  6711  1CDA  00D4               	movwf	?___fltol+3
  6712  1CDB  3000               	movlw	0
  6713  1CDC  00D3               	movwf	?___fltol+2
  6714  1CDD  3000               	movlw	0
  6715  1CDE  00D2               	movwf	?___fltol+1
  6716  1CDF  3000               	movlw	0
  6717  1CE0  00D1               	movwf	?___fltol
  6718  1CE1  2D47               	goto	l631
  6719  1CE2                     l3307:
  6720  1CE2  0851               	movf	___fltol@f1,w
  6721  1CE3  00D5               	movwf	??___fltol
  6722  1CE4  0852               	movf	___fltol@f1+1,w
  6723  1CE5  00D6               	movwf	??___fltol+1
  6724  1CE6  0853               	movf	___fltol@f1+2,w
  6725  1CE7  00D7               	movwf	??___fltol+2
  6726  1CE8  0854               	movf	___fltol@f1+3,w
  6727  1CE9  00D8               	movwf	??___fltol+3
  6728  1CEA  301F               	movlw	31
  6729  1CEB                     u5215:
  6730  1CEB  1003               	clrc
  6731  1CEC  0CD8               	rrf	??___fltol+3,f
  6732  1CED  0CD7               	rrf	??___fltol+2,f
  6733  1CEE  0CD6               	rrf	??___fltol+1,f
  6734  1CEF  0CD5               	rrf	??___fltol,f
  6735  1CF0                     u5210:
  6736  1CF0  3EFF               	addlw	-1
  6737  1CF1  1D03               	skipz
  6738  1CF2  2CEB               	goto	u5215
  6739  1CF3  0855               	movf	??___fltol,w
  6740  1CF4  00D9               	movwf	??___fltol+4
  6741  1CF5  0859               	movf	??___fltol+4,w
  6742  1CF6  00DA               	movwf	___fltol@sign1
  6743  1CF7                     l3309:
  6744  1CF7  17D3               	bsf	___fltol@f1+2,7
  6745  1CF8                     l3311:
  6746  1CF8  30FF               	movlw	255
  6747  1CF9  05D1               	andwf	___fltol@f1,f
  6748  1CFA  30FF               	movlw	255
  6749  1CFB  05D2               	andwf	___fltol@f1+1,f
  6750  1CFC  30FF               	movlw	255
  6751  1CFD  05D3               	andwf	___fltol@f1+2,f
  6752  1CFE  3000               	movlw	0
  6753  1CFF  05D4               	andwf	___fltol@f1+3,f
  6754  1D00                     l3313:
  6755  1D00  3096               	movlw	150
  6756  1D01  02DB               	subwf	___fltol@exp1,f
  6757  1D02                     l3315:
  6758  1D02  1FDB               	btfss	___fltol@exp1,7
  6759  1D03  2D05               	goto	u5221
  6760  1D04  2D06               	goto	u5220
  6761  1D05                     u5221:
  6762  1D05  2D20               	goto	l3325
  6763  1D06                     u5220:
  6764  1D06                     l3317:
  6765  1D06  085B               	movf	___fltol@exp1,w
  6766  1D07  3A80               	xorlw	128
  6767  1D08  3E97               	addlw	151
  6768  1D09  1803               	skipnc
  6769  1D0A  2D0C               	goto	u5231
  6770  1D0B  2D0D               	goto	u5230
  6771  1D0C                     u5231:
  6772  1D0C  2D0E               	goto	l3323
  6773  1D0D                     u5230:
  6774  1D0D  2CD9               	goto	l3303
  6775  1D0E                     l3323:
  6776  1D0E  3001               	movlw	1
  6777  1D0F                     u5245:
  6778  1D0F  1003               	clrc
  6779  1D10  0CD4               	rrf	___fltol@f1+3,f
  6780  1D11  0CD3               	rrf	___fltol@f1+2,f
  6781  1D12  0CD2               	rrf	___fltol@f1+1,f
  6782  1D13  0CD1               	rrf	___fltol@f1,f
  6783  1D14  3EFF               	addlw	-1
  6784  1D15  1D03               	skipz
  6785  1D16  2D0F               	goto	u5245
  6786  1D17  3001               	movlw	1
  6787  1D18  00D5               	movwf	??___fltol
  6788  1D19  0855               	movf	??___fltol,w
  6789  1D1A  07DB               	addwf	___fltol@exp1,f
  6790  1D1B  1D03               	btfss	3,2
  6791  1D1C  2D1E               	goto	u5251
  6792  1D1D  2D1F               	goto	u5250
  6793  1D1E                     u5251:
  6794  1D1E  2D0E               	goto	l3323
  6795  1D1F                     u5250:
  6796  1D1F  2D37               	goto	l3333
  6797  1D20                     l3325:
  6798  1D20  3020               	movlw	32
  6799  1D21  025B               	subwf	___fltol@exp1,w
  6800  1D22  1C03               	skipc
  6801  1D23  2D25               	goto	u5261
  6802  1D24  2D26               	goto	u5260
  6803  1D25                     u5261:
  6804  1D25  2D32               	goto	l638
  6805  1D26                     u5260:
  6806  1D26  2CD9               	goto	l3303
  6807  1D27                     l3331:
  6808  1D27  3001               	movlw	1
  6809  1D28  00D5               	movwf	??___fltol
  6810  1D29                     u5275:
  6811  1D29  1003               	clrc
  6812  1D2A  0DD1               	rlf	___fltol@f1,f
  6813  1D2B  0DD2               	rlf	___fltol@f1+1,f
  6814  1D2C  0DD3               	rlf	___fltol@f1+2,f
  6815  1D2D  0DD4               	rlf	___fltol@f1+3,f
  6816  1D2E  0BD5               	decfsz	??___fltol,f
  6817  1D2F  2D29               	goto	u5275
  6818  1D30  3001               	movlw	1
  6819  1D31  02DB               	subwf	___fltol@exp1,f
  6820  1D32                     l638:
  6821  1D32  085B               	movf	___fltol@exp1,w
  6822  1D33  1D03               	btfss	3,2
  6823  1D34  2D36               	goto	u5281
  6824  1D35  2D37               	goto	u5280
  6825  1D36                     u5281:
  6826  1D36  2D27               	goto	l3331
  6827  1D37                     u5280:
  6828  1D37                     l3333:
  6829  1D37  085A               	movf	___fltol@sign1,w
  6830  1D38  1903               	btfsc	3,2
  6831  1D39  2D3B               	goto	u5291
  6832  1D3A  2D3C               	goto	u5290
  6833  1D3B                     u5291:
  6834  1D3B  2D47               	goto	l641
  6835  1D3C                     u5290:
  6836  1D3C                     l3335:
  6837  1D3C  09D1               	comf	___fltol@f1,f
  6838  1D3D  09D2               	comf	___fltol@f1+1,f
  6839  1D3E  09D3               	comf	___fltol@f1+2,f
  6840  1D3F  09D4               	comf	___fltol@f1+3,f
  6841  1D40  0AD1               	incf	___fltol@f1,f
  6842  1D41  1903               	skipnz
  6843  1D42  0AD2               	incf	___fltol@f1+1,f
  6844  1D43  1903               	skipnz
  6845  1D44  0AD3               	incf	___fltol@f1+2,f
  6846  1D45  1903               	skipnz
  6847  1D46  0AD4               	incf	___fltol@f1+3,f
  6848  1D47                     l641:
  6849  1D47                     l631:
  6850  1D47  0008               	return
  6851  1D48                     __end_of___fltol:
  6852                           
  6853                           	psect	text15
  6854  18E3                     __ptext15:	
  6855 ;; *************** function ___flsub *****************
  6856 ;; Defined at:
  6857 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  a               4   70[BANK0 ] long 
  6860 ;;  b               4   74[BANK0 ] long 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  4   70[BANK0 ] long 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6872 ;;      Params:         0       8       0       0       0
  6873 ;;      Locals:         0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0
  6875 ;;      Totals:         0       8       0       0       0
  6876 ;;Total ram usage:        8 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    1
  6879 ;; This function calls:
  6880 ;;		___fladd
  6881 ;; This function is called by:
  6882 ;;		_sprintf
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function ___flsub
  6888  18E3                     ___flsub:
  6889  18E3                     l3357:	
  6890                           ;incstack = 0
  6891                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6892                           
  6893  18E3  3080               	movlw	128
  6894  18E4  1283               	bcf	3,5	;RP0=0, select bank0
  6895  18E5  1303               	bcf	3,6	;RP1=0, select bank0
  6896  18E6  06E9               	xorwf	___flsub@a+3,f
  6897  18E7                     l3359:
  6898  18E7  086D               	movf	___flsub@b+3,w
  6899  18E8  00D5               	movwf	___fladd@b+3
  6900  18E9  086C               	movf	___flsub@b+2,w
  6901  18EA  00D4               	movwf	___fladd@b+2
  6902  18EB  086B               	movf	___flsub@b+1,w
  6903  18EC  00D3               	movwf	___fladd@b+1
  6904  18ED  086A               	movf	___flsub@b,w
  6905  18EE  00D2               	movwf	___fladd@b
  6906  18EF  0869               	movf	___flsub@a+3,w
  6907  18F0  00D9               	movwf	___fladd@a+3
  6908  18F1  0868               	movf	___flsub@a+2,w
  6909  18F2  00D8               	movwf	___fladd@a+2
  6910  18F3  0867               	movf	___flsub@a+1,w
  6911  18F4  00D7               	movwf	___fladd@a+1
  6912  18F5  0866               	movf	___flsub@a,w
  6913  18F6  00D6               	movwf	___fladd@a
  6914  18F7  160A  118A  2578  160A  158A  	fcall	___fladd
  6915  18FC  1283               	bcf	3,5	;RP0=0, select bank0
  6916  18FD  1303               	bcf	3,6	;RP1=0, select bank0
  6917  18FE  0855               	movf	?___fladd+3,w
  6918  18FF  00E9               	movwf	?___flsub+3
  6919  1900  0854               	movf	?___fladd+2,w
  6920  1901  00E8               	movwf	?___flsub+2
  6921  1902  0853               	movf	?___fladd+1,w
  6922  1903  00E7               	movwf	?___flsub+1
  6923  1904  0852               	movf	?___fladd,w
  6924  1905  00E6               	movwf	?___flsub
  6925  1906                     l801:
  6926  1906  0008               	return
  6927  1907                     __end_of___flsub:
  6928                           
  6929                           	psect	text16
  6930  1578                     __ptext16:	
  6931 ;; *************** function ___fladd *****************
  6932 ;; Defined at:
  6933 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  b               4   50[BANK0 ] long 
  6936 ;;  a               4   54[BANK0 ] long 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  grs             1   69[BANK0 ] unsigned char 
  6939 ;;  bexp            1   68[BANK0 ] unsigned char 
  6940 ;;  aexp            1   67[BANK0 ] unsigned char 
  6941 ;;  signs           1   66[BANK0 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  4   50[BANK0 ] unsigned char 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0, btemp+1
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6951 ;;      Params:         0       8       0       0       0
  6952 ;;      Locals:         0       4       0       0       0
  6953 ;;      Temps:          0       8       0       0       0
  6954 ;;      Totals:         0      20       0       0       0
  6955 ;;Total ram usage:       20 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_sprintf
  6961 ;;		___flsub
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           
  6966                           ;psect for function ___fladd
  6967  1578                     ___fladd:
  6968  1578                     l2673:	
  6969                           ;incstack = 0
  6970                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6971                           
  6972  1578  1283               	bcf	3,5	;RP0=0, select bank0
  6973  1579  1303               	bcf	3,6	;RP1=0, select bank0
  6974  157A  0855               	movf	___fladd@b+3,w
  6975  157B  3980               	andlw	128
  6976  157C  00DA               	movwf	??___fladd
  6977  157D  085A               	movf	??___fladd,w
  6978  157E  00E2               	movwf	___fladd@signs
  6979  157F                     l2675:
  6980  157F  0855               	movf	___fladd@b+3,w
  6981  1580  00DA               	movwf	??___fladd
  6982  1581  075A               	addwf	??___fladd,w
  6983  1582  00DB               	movwf	??___fladd+1
  6984  1583  085B               	movf	??___fladd+1,w
  6985  1584  00E4               	movwf	___fladd@bexp
  6986  1585                     l2677:
  6987  1585  1FD4               	btfss	___fladd@b+2,7
  6988  1586  2D88               	goto	u3611
  6989  1587  2D89               	goto	u3610
  6990  1588                     u3611:
  6991  1588  2D8A               	goto	l2681
  6992  1589                     u3610:
  6993  1589                     l2679:
  6994  1589  1464               	bsf	___fladd@bexp,0
  6995  158A                     l2681:
  6996  158A  0864               	movf	___fladd@bexp,w
  6997  158B  1903               	btfsc	3,2
  6998  158C  2D8E               	goto	u3621
  6999  158D  2D8F               	goto	u3620
  7000  158E                     u3621:
  7001  158E  2D9F               	goto	l2691
  7002  158F                     u3620:
  7003  158F                     l2683:
  7004  158F  0A64               	incf	___fladd@bexp,w
  7005  1590  1D03               	btfss	3,2
  7006  1591  2D93               	goto	u3631
  7007  1592  2D94               	goto	u3630
  7008  1593                     u3631:
  7009  1593  2D9C               	goto	l2687
  7010  1594                     u3630:
  7011  1594                     l2685:
  7012  1594  3000               	movlw	0
  7013  1595  00D5               	movwf	___fladd@b+3
  7014  1596  3000               	movlw	0
  7015  1597  00D4               	movwf	___fladd@b+2
  7016  1598  3000               	movlw	0
  7017  1599  00D3               	movwf	___fladd@b+1
  7018  159A  3000               	movlw	0
  7019  159B  00D2               	movwf	___fladd@b
  7020  159C                     l2687:
  7021  159C  17D4               	bsf	___fladd@b+2,7
  7022  159D                     l2689:
  7023  159D  01D5               	clrf	___fladd@b+3
  7024  159E  2DA7               	goto	l2693
  7025  159F                     l2691:
  7026  159F  3000               	movlw	0
  7027  15A0  00D5               	movwf	___fladd@b+3
  7028  15A1  3000               	movlw	0
  7029  15A2  00D4               	movwf	___fladd@b+2
  7030  15A3  3000               	movlw	0
  7031  15A4  00D3               	movwf	___fladd@b+1
  7032  15A5  3000               	movlw	0
  7033  15A6  00D2               	movwf	___fladd@b
  7034  15A7                     l2693:
  7035  15A7  0859               	movf	___fladd@a+3,w
  7036  15A8  3980               	andlw	128
  7037  15A9  00DA               	movwf	??___fladd
  7038  15AA  085A               	movf	??___fladd,w
  7039  15AB  00E3               	movwf	___fladd@aexp
  7040  15AC                     l2695:
  7041  15AC  0863               	movf	___fladd@aexp,w
  7042  15AD  0662               	xorwf	___fladd@signs,w
  7043  15AE  1903               	skipnz
  7044  15AF  2DB1               	goto	u3641
  7045  15B0  2DB2               	goto	u3640
  7046  15B1                     u3641:
  7047  15B1  2DB3               	goto	l2699
  7048  15B2                     u3640:
  7049  15B2                     l2697:
  7050  15B2  1762               	bsf	___fladd@signs,6
  7051  15B3                     l2699:
  7052  15B3  0859               	movf	___fladd@a+3,w
  7053  15B4  00DA               	movwf	??___fladd
  7054  15B5  075A               	addwf	??___fladd,w
  7055  15B6  00DB               	movwf	??___fladd+1
  7056  15B7  085B               	movf	??___fladd+1,w
  7057  15B8  00E3               	movwf	___fladd@aexp
  7058  15B9                     l2701:
  7059  15B9  1FD8               	btfss	___fladd@a+2,7
  7060  15BA  2DBC               	goto	u3651
  7061  15BB  2DBD               	goto	u3650
  7062  15BC                     u3651:
  7063  15BC  2DBE               	goto	l2705
  7064  15BD                     u3650:
  7065  15BD                     l2703:
  7066  15BD  1463               	bsf	___fladd@aexp,0
  7067  15BE                     l2705:
  7068  15BE  0863               	movf	___fladd@aexp,w
  7069  15BF  1903               	btfsc	3,2
  7070  15C0  2DC2               	goto	u3661
  7071  15C1  2DC3               	goto	u3660
  7072  15C2                     u3661:
  7073  15C2  2DD3               	goto	l2715
  7074  15C3                     u3660:
  7075  15C3                     l2707:
  7076  15C3  0A63               	incf	___fladd@aexp,w
  7077  15C4  1D03               	btfss	3,2
  7078  15C5  2DC7               	goto	u3671
  7079  15C6  2DC8               	goto	u3670
  7080  15C7                     u3671:
  7081  15C7  2DD0               	goto	l2711
  7082  15C8                     u3670:
  7083  15C8                     l2709:
  7084  15C8  3000               	movlw	0
  7085  15C9  00D9               	movwf	___fladd@a+3
  7086  15CA  3000               	movlw	0
  7087  15CB  00D8               	movwf	___fladd@a+2
  7088  15CC  3000               	movlw	0
  7089  15CD  00D7               	movwf	___fladd@a+1
  7090  15CE  3000               	movlw	0
  7091  15CF  00D6               	movwf	___fladd@a
  7092  15D0                     l2711:
  7093  15D0  17D8               	bsf	___fladd@a+2,7
  7094  15D1                     l2713:
  7095  15D1  01D9               	clrf	___fladd@a+3
  7096  15D2  2DDB               	goto	l755
  7097  15D3                     l2715:
  7098  15D3  3000               	movlw	0
  7099  15D4  00D9               	movwf	___fladd@a+3
  7100  15D5  3000               	movlw	0
  7101  15D6  00D8               	movwf	___fladd@a+2
  7102  15D7  3000               	movlw	0
  7103  15D8  00D7               	movwf	___fladd@a+1
  7104  15D9  3000               	movlw	0
  7105  15DA  00D6               	movwf	___fladd@a
  7106  15DB                     l755:
  7107  15DB  0864               	movf	___fladd@bexp,w
  7108  15DC  0263               	subwf	___fladd@aexp,w
  7109  15DD  1803               	skipnc
  7110  15DE  2DE0               	goto	u3681
  7111  15DF  2DE1               	goto	u3680
  7112  15E0                     u3681:
  7113  15E0  2E25               	goto	l2751
  7114  15E1                     u3680:
  7115  15E1                     l2717:
  7116  15E1  1F62               	btfss	___fladd@signs,6
  7117  15E2  2DE4               	goto	u3691
  7118  15E3  2DE5               	goto	u3690
  7119  15E4                     u3691:
  7120  15E4  2DE9               	goto	l2721
  7121  15E5                     u3690:
  7122  15E5                     l2719:
  7123  15E5  3080               	movlw	128
  7124  15E6  00DA               	movwf	??___fladd
  7125  15E7  085A               	movf	??___fladd,w
  7126  15E8  06E2               	xorwf	___fladd@signs,f
  7127  15E9                     l2721:
  7128  15E9  0864               	movf	___fladd@bexp,w
  7129  15EA  00DA               	movwf	??___fladd
  7130  15EB  085A               	movf	??___fladd,w
  7131  15EC  00E5               	movwf	___fladd@grs
  7132  15ED                     l2723:
  7133  15ED  0863               	movf	___fladd@aexp,w
  7134  15EE  00DA               	movwf	??___fladd
  7135  15EF  085A               	movf	??___fladd,w
  7136  15F0  00E4               	movwf	___fladd@bexp
  7137  15F1                     l2725:
  7138  15F1  0865               	movf	___fladd@grs,w
  7139  15F2  00DA               	movwf	??___fladd
  7140  15F3  085A               	movf	??___fladd,w
  7141  15F4  00E3               	movwf	___fladd@aexp
  7142  15F5                     l2727:
  7143  15F5  0852               	movf	___fladd@b,w
  7144  15F6  00DA               	movwf	??___fladd
  7145  15F7  085A               	movf	??___fladd,w
  7146  15F8  00E5               	movwf	___fladd@grs
  7147  15F9                     l2729:
  7148  15F9  0856               	movf	___fladd@a,w
  7149  15FA  00DA               	movwf	??___fladd
  7150  15FB  085A               	movf	??___fladd,w
  7151  15FC  00D2               	movwf	___fladd@b
  7152  15FD                     l2731:
  7153  15FD  0865               	movf	___fladd@grs,w
  7154  15FE  00DA               	movwf	??___fladd
  7155  15FF  085A               	movf	??___fladd,w
  7156  1600  00D6               	movwf	___fladd@a
  7157  1601                     l2733:
  7158  1601  0853               	movf	___fladd@b+1,w
  7159  1602  00DA               	movwf	??___fladd
  7160  1603  085A               	movf	??___fladd,w
  7161  1604  00E5               	movwf	___fladd@grs
  7162  1605                     l2735:
  7163  1605  0857               	movf	___fladd@a+1,w
  7164  1606  00DA               	movwf	??___fladd
  7165  1607  085A               	movf	??___fladd,w
  7166  1608  00D3               	movwf	___fladd@b+1
  7167  1609                     l2737:
  7168  1609  0865               	movf	___fladd@grs,w
  7169  160A  00DA               	movwf	??___fladd
  7170  160B  085A               	movf	??___fladd,w
  7171  160C  00D7               	movwf	___fladd@a+1
  7172  160D                     l2739:
  7173  160D  0854               	movf	___fladd@b+2,w
  7174  160E  00DA               	movwf	??___fladd
  7175  160F  085A               	movf	??___fladd,w
  7176  1610  00E5               	movwf	___fladd@grs
  7177  1611                     l2741:
  7178  1611  0858               	movf	___fladd@a+2,w
  7179  1612  00DA               	movwf	??___fladd
  7180  1613  085A               	movf	??___fladd,w
  7181  1614  00D4               	movwf	___fladd@b+2
  7182  1615                     l2743:
  7183  1615  0865               	movf	___fladd@grs,w
  7184  1616  00DA               	movwf	??___fladd
  7185  1617  085A               	movf	??___fladd,w
  7186  1618  00D8               	movwf	___fladd@a+2
  7187  1619                     l2745:
  7188  1619  0855               	movf	___fladd@b+3,w
  7189  161A  00DA               	movwf	??___fladd
  7190  161B  085A               	movf	??___fladd,w
  7191  161C  00E5               	movwf	___fladd@grs
  7192  161D                     l2747:
  7193  161D  0859               	movf	___fladd@a+3,w
  7194  161E  00DA               	movwf	??___fladd
  7195  161F  085A               	movf	??___fladd,w
  7196  1620  00D5               	movwf	___fladd@b+3
  7197  1621                     l2749:
  7198  1621  0865               	movf	___fladd@grs,w
  7199  1622  00DA               	movwf	??___fladd
  7200  1623  085A               	movf	??___fladd,w
  7201  1624  00D9               	movwf	___fladd@a+3
  7202  1625                     l2751:
  7203  1625  01E5               	clrf	___fladd@grs
  7204  1626                     l2753:
  7205  1626  0863               	movf	___fladd@aexp,w
  7206  1627  00DA               	movwf	??___fladd
  7207  1628  01DB               	clrf	??___fladd+1
  7208  1629  085B               	movf	??___fladd+1,w
  7209  162A  00DD               	movwf	??___fladd+3
  7210  162B  0864               	movf	___fladd@bexp,w
  7211  162C  025A               	subwf	??___fladd,w
  7212  162D  00DC               	movwf	??___fladd+2
  7213  162E  1C03               	skipc
  7214  162F  03DD               	decf	??___fladd+3,f
  7215  1630  085D               	movf	??___fladd+3,w
  7216  1631  3A80               	xorlw	128
  7217  1632  00FF               	movwf	btemp+1
  7218  1633  3080               	movlw	128
  7219  1634  027F               	subwf	btemp+1,w
  7220  1635  1D03               	skipz
  7221  1636  2E39               	goto	u3705
  7222  1637  301A               	movlw	26
  7223  1638  025C               	subwf	??___fladd+2,w
  7224  1639                     u3705:
  7225  1639  1C03               	skipc
  7226  163A  2E3C               	goto	u3701
  7227  163B  2E3D               	goto	u3700
  7228  163C                     u3701:
  7229  163C  2E7A               	goto	l2769
  7230  163D                     u3700:
  7231  163D                     l2755:
  7232  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7233  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7234  163F  0855               	movf	___fladd@b+3,w
  7235  1640  0454               	iorwf	___fladd@b+2,w
  7236  1641  0453               	iorwf	___fladd@b+1,w
  7237  1642  0452               	iorwf	___fladd@b,w
  7238  1643  1D03               	skipz
  7239  1644  2E46               	goto	u3711
  7240  1645  2E48               	goto	u3710
  7241  1646                     u3711:
  7242  1646  3001               	movlw	1
  7243  1647  2E49               	goto	u3720
  7244  1648                     u3710:
  7245  1648  3000               	movlw	0
  7246  1649                     u3720:
  7247  1649  00DA               	movwf	??___fladd
  7248  164A  085A               	movf	??___fladd,w
  7249  164B  00E5               	movwf	___fladd@grs
  7250  164C  3000               	movlw	0
  7251  164D  00D5               	movwf	___fladd@b+3
  7252  164E  3000               	movlw	0
  7253  164F  00D4               	movwf	___fladd@b+2
  7254  1650  3000               	movlw	0
  7255  1651  00D3               	movwf	___fladd@b+1
  7256  1652  3000               	movlw	0
  7257  1653  00D2               	movwf	___fladd@b
  7258  1654  0863               	movf	___fladd@aexp,w
  7259  1655  00DA               	movwf	??___fladd
  7260  1656  085A               	movf	??___fladd,w
  7261  1657  00E4               	movwf	___fladd@bexp
  7262  1658  2E82               	goto	l759
  7263  1659                     l761:
  7264  1659  1C65               	btfss	___fladd@grs,0
  7265  165A  2E5C               	goto	u3731
  7266  165B  2E5D               	goto	u3730
  7267  165C                     u3731:
  7268  165C  2E66               	goto	l2759
  7269  165D                     u3730:
  7270  165D                     l2757:
  7271  165D  0865               	movf	___fladd@grs,w
  7272  165E  00DA               	movwf	??___fladd
  7273  165F  1003               	clrc
  7274  1660  0C5A               	rrf	??___fladd,w
  7275  1661  3801               	iorlw	1
  7276  1662  00DB               	movwf	??___fladd+1
  7277  1663  085B               	movf	??___fladd+1,w
  7278  1664  00E5               	movwf	___fladd@grs
  7279  1665  2E68               	goto	l2761
  7280  1666                     l2759:
  7281  1666  1003               	clrc
  7282  1667  0CE5               	rrf	___fladd@grs,f
  7283  1668                     l2761:
  7284  1668  1C52               	btfss	___fladd@b,0
  7285  1669  2E6B               	goto	u3741
  7286  166A  2E6C               	goto	u3740
  7287  166B                     u3741:
  7288  166B  2E6D               	goto	l2765
  7289  166C                     u3740:
  7290  166C                     l2763:
  7291  166C  17E5               	bsf	___fladd@grs,7
  7292  166D                     l2765:
  7293  166D  3001               	movlw	1
  7294  166E  00DA               	movwf	??___fladd
  7295  166F                     u3755:
  7296  166F  0D55               	rlf	___fladd@b+3,w
  7297  1670  0CD5               	rrf	___fladd@b+3,f
  7298  1671  0CD4               	rrf	___fladd@b+2,f
  7299  1672  0CD3               	rrf	___fladd@b+1,f
  7300  1673  0CD2               	rrf	___fladd@b,f
  7301  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7302  1675  2E6F               	goto	u3755
  7303  1676                     l2767:
  7304  1676  3001               	movlw	1
  7305  1677  00DA               	movwf	??___fladd
  7306  1678  085A               	movf	??___fladd,w
  7307  1679  07E4               	addwf	___fladd@bexp,f
  7308  167A                     l2769:
  7309  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7310  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7311  167C  0863               	movf	___fladd@aexp,w
  7312  167D  0264               	subwf	___fladd@bexp,w
  7313  167E  1C03               	skipc
  7314  167F  2E81               	goto	u3761
  7315  1680  2E82               	goto	u3760
  7316  1681                     u3761:
  7317  1681  2E59               	goto	l761
  7318  1682                     u3760:
  7319  1682                     l759:
  7320  1682  1B62               	btfsc	___fladd@signs,6
  7321  1683  2E85               	goto	u3771
  7322  1684  2E86               	goto	u3770
  7323  1685                     u3771:
  7324  1685  2ED1               	goto	l2795
  7325  1686                     u3770:
  7326  1686                     l2771:
  7327  1686  0864               	movf	___fladd@bexp,w
  7328  1687  1D03               	btfss	3,2
  7329  1688  2E8A               	goto	u3781
  7330  1689  2E8B               	goto	u3780
  7331  168A                     u3781:
  7332  168A  2E94               	goto	l2777
  7333  168B                     u3780:
  7334  168B                     l2773:
  7335  168B  3000               	movlw	0
  7336  168C  00D5               	movwf	?___fladd+3
  7337  168D  3000               	movlw	0
  7338  168E  00D4               	movwf	?___fladd+2
  7339  168F  3000               	movlw	0
  7340  1690  00D3               	movwf	?___fladd+1
  7341  1691  3000               	movlw	0
  7342  1692  00D2               	movwf	?___fladd
  7343  1693  2FFF               	goto	l768
  7344  1694                     l2777:
  7345  1694  0856               	movf	___fladd@a,w
  7346  1695  07D2               	addwf	___fladd@b,f
  7347  1696  0857               	movf	___fladd@a+1,w
  7348  1697  1103               	clrz
  7349  1698  1803               	skipnc
  7350  1699  3E01               	addlw	1
  7351  169A  1903               	skipnz
  7352  169B  2E9D               	goto	u3791
  7353  169C  07D3               	addwf	___fladd@b+1,f
  7354  169D                     u3791:
  7355  169D  0858               	movf	___fladd@a+2,w
  7356  169E  1103               	clrz
  7357  169F  1803               	skipnc
  7358  16A0  3E01               	addlw	1
  7359  16A1  1903               	skipnz
  7360  16A2  2EA4               	goto	u3792
  7361  16A3  07D4               	addwf	___fladd@b+2,f
  7362  16A4                     u3792:
  7363  16A4  0859               	movf	___fladd@a+3,w
  7364  16A5  1103               	clrz
  7365  16A6  1803               	skipnc
  7366  16A7  3E01               	addlw	1
  7367  16A8  1903               	skipnz
  7368  16A9  2EAB               	goto	u3793
  7369  16AA  07D5               	addwf	___fladd@b+3,f
  7370  16AB                     u3793:
  7371  16AB                     l2779:
  7372  16AB  1C55               	btfss	___fladd@b+3,0
  7373  16AC  2EAE               	goto	u3801
  7374  16AD  2EAF               	goto	u3800
  7375  16AE                     u3801:
  7376  16AE  2F85               	goto	l2829
  7377  16AF                     u3800:
  7378  16AF                     l2781:
  7379  16AF  1C65               	btfss	___fladd@grs,0
  7380  16B0  2EB2               	goto	u3811
  7381  16B1  2EB3               	goto	u3810
  7382  16B2                     u3811:
  7383  16B2  2EBC               	goto	l2785
  7384  16B3                     u3810:
  7385  16B3                     l2783:
  7386  16B3  0865               	movf	___fladd@grs,w
  7387  16B4  00DA               	movwf	??___fladd
  7388  16B5  1003               	clrc
  7389  16B6  0C5A               	rrf	??___fladd,w
  7390  16B7  3801               	iorlw	1
  7391  16B8  00DB               	movwf	??___fladd+1
  7392  16B9  085B               	movf	??___fladd+1,w
  7393  16BA  00E5               	movwf	___fladd@grs
  7394  16BB  2EBE               	goto	l2787
  7395  16BC                     l2785:
  7396  16BC  1003               	clrc
  7397  16BD  0CE5               	rrf	___fladd@grs,f
  7398  16BE                     l2787:
  7399  16BE  1C52               	btfss	___fladd@b,0
  7400  16BF  2EC1               	goto	u3821
  7401  16C0  2EC2               	goto	u3820
  7402  16C1                     u3821:
  7403  16C1  2EC3               	goto	l2791
  7404  16C2                     u3820:
  7405  16C2                     l2789:
  7406  16C2  17E5               	bsf	___fladd@grs,7
  7407  16C3                     l2791:
  7408  16C3  3001               	movlw	1
  7409  16C4  00DA               	movwf	??___fladd
  7410  16C5                     u3835:
  7411  16C5  0D55               	rlf	___fladd@b+3,w
  7412  16C6  0CD5               	rrf	___fladd@b+3,f
  7413  16C7  0CD4               	rrf	___fladd@b+2,f
  7414  16C8  0CD3               	rrf	___fladd@b+1,f
  7415  16C9  0CD2               	rrf	___fladd@b,f
  7416  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  7417  16CB  2EC5               	goto	u3835
  7418  16CC                     l2793:
  7419  16CC  3001               	movlw	1
  7420  16CD  00DA               	movwf	??___fladd
  7421  16CE  085A               	movf	??___fladd,w
  7422  16CF  07E4               	addwf	___fladd@bexp,f
  7423  16D0  2F85               	goto	l2829
  7424  16D1                     l2795:
  7425  16D1  0855               	movf	___fladd@b+3,w
  7426  16D2  3A80               	xorlw	128
  7427  16D3  00FF               	movwf	btemp+1
  7428  16D4  0859               	movf	___fladd@a+3,w
  7429  16D5  3A80               	xorlw	128
  7430  16D6  027F               	subwf	btemp+1,w
  7431  16D7  1D03               	skipz
  7432  16D8  2EE3               	goto	u3843
  7433  16D9  0858               	movf	___fladd@a+2,w
  7434  16DA  0254               	subwf	___fladd@b+2,w
  7435  16DB  1D03               	skipz
  7436  16DC  2EE3               	goto	u3843
  7437  16DD  0857               	movf	___fladd@a+1,w
  7438  16DE  0253               	subwf	___fladd@b+1,w
  7439  16DF  1D03               	skipz
  7440  16E0  2EE3               	goto	u3843
  7441  16E1  0856               	movf	___fladd@a,w
  7442  16E2  0252               	subwf	___fladd@b,w
  7443  16E3                     u3843:
  7444  16E3  1803               	skipnc
  7445  16E4  2EE6               	goto	u3841
  7446  16E5  2EE7               	goto	u3840
  7447  16E6                     u3841:
  7448  16E6  2F3F               	goto	l2805
  7449  16E7                     u3840:
  7450  16E7                     l2797:
  7451  16E7  30FF               	movlw	255
  7452  16E8  00DA               	movwf	??___fladd
  7453  16E9  30FF               	movlw	255
  7454  16EA  00DB               	movwf	??___fladd+1
  7455  16EB  30FF               	movlw	255
  7456  16EC  00DC               	movwf	??___fladd+2
  7457  16ED  30FF               	movlw	255
  7458  16EE  00DD               	movwf	??___fladd+3
  7459  16EF  0856               	movf	___fladd@a,w
  7460  16F0  00DE               	movwf	??___fladd+4
  7461  16F1  0857               	movf	___fladd@a+1,w
  7462  16F2  00DF               	movwf	??___fladd+5
  7463  16F3  0858               	movf	___fladd@a+2,w
  7464  16F4  00E0               	movwf	??___fladd+6
  7465  16F5  0859               	movf	___fladd@a+3,w
  7466  16F6  00E1               	movwf	??___fladd+7
  7467  16F7  0852               	movf	___fladd@b,w
  7468  16F8  02DE               	subwf	??___fladd+4,f
  7469  16F9  0853               	movf	___fladd@b+1,w
  7470  16FA  1C03               	skipc
  7471  16FB  0F53               	incfsz	___fladd@b+1,w
  7472  16FC  2EFE               	goto	u3851
  7473  16FD  2EFF               	goto	u3852
  7474  16FE                     u3851:
  7475  16FE  02DF               	subwf	??___fladd+5,f
  7476  16FF                     u3852:
  7477  16FF  0854               	movf	___fladd@b+2,w
  7478  1700  1C03               	skipc
  7479  1701  0F54               	incfsz	___fladd@b+2,w
  7480  1702  2F04               	goto	u3853
  7481  1703  2F05               	goto	u3854
  7482  1704                     u3853:
  7483  1704  02E0               	subwf	??___fladd+6,f
  7484  1705                     u3854:
  7485  1705  0855               	movf	___fladd@b+3,w
  7486  1706  1C03               	skipc
  7487  1707  0F55               	incfsz	___fladd@b+3,w
  7488  1708  2F0A               	goto	u3855
  7489  1709  2F0B               	goto	u3856
  7490  170A                     u3855:
  7491  170A  02E1               	subwf	??___fladd+7,f
  7492  170B                     u3856:
  7493  170B  085E               	movf	??___fladd+4,w
  7494  170C  07DA               	addwf	??___fladd,f
  7495  170D  085F               	movf	??___fladd+5,w
  7496  170E  1803               	skipnc
  7497  170F  0F5F               	incfsz	??___fladd+5,w
  7498  1710  2F12               	goto	u3860
  7499  1711  2F13               	goto	u3861
  7500  1712                     u3860:
  7501  1712  07DB               	addwf	??___fladd+1,f
  7502  1713                     u3861:
  7503  1713  0860               	movf	??___fladd+6,w
  7504  1714  1803               	skipnc
  7505  1715  0F60               	incfsz	??___fladd+6,w
  7506  1716  2F18               	goto	u3862
  7507  1717  2F19               	goto	u3863
  7508  1718                     u3862:
  7509  1718  07DC               	addwf	??___fladd+2,f
  7510  1719                     u3863:
  7511  1719  0861               	movf	??___fladd+7,w
  7512  171A  1803               	skipnc
  7513  171B  0A61               	incf	??___fladd+7,w
  7514  171C  07DD               	addwf	??___fladd+3,f
  7515  171D  085D               	movf	??___fladd+3,w
  7516  171E  00D5               	movwf	___fladd@b+3
  7517  171F  085C               	movf	??___fladd+2,w
  7518  1720  00D4               	movwf	___fladd@b+2
  7519  1721  085B               	movf	??___fladd+1,w
  7520  1722  00D3               	movwf	___fladd@b+1
  7521  1723  085A               	movf	??___fladd,w
  7522  1724  00D2               	movwf	___fladd@b
  7523  1725                     l2799:
  7524  1725  3080               	movlw	128
  7525  1726  00DA               	movwf	??___fladd
  7526  1727  085A               	movf	??___fladd,w
  7527  1728  06E2               	xorwf	___fladd@signs,f
  7528  1729  09E5               	comf	___fladd@grs,f
  7529  172A  0AE5               	incf	___fladd@grs,f
  7530  172B                     l2801:
  7531  172B  0865               	movf	___fladd@grs,w
  7532  172C  1D03               	btfss	3,2
  7533  172D  2F2F               	goto	u3871
  7534  172E  2F30               	goto	u3870
  7535  172F                     u3871:
  7536  172F  2F4D               	goto	l776
  7537  1730                     u3870:
  7538  1730                     l2803:
  7539  1730  3001               	movlw	1
  7540  1731  07D2               	addwf	___fladd@b,f
  7541  1732  3000               	movlw	0
  7542  1733  1803               	skipnc
  7543  1734  3001               	movlw	1
  7544  1735  07D3               	addwf	___fladd@b+1,f
  7545  1736  3000               	movlw	0
  7546  1737  1803               	skipnc
  7547  1738  3001               	movlw	1
  7548  1739  07D4               	addwf	___fladd@b+2,f
  7549  173A  3000               	movlw	0
  7550  173B  1803               	skipnc
  7551  173C  3001               	movlw	1
  7552  173D  07D5               	addwf	___fladd@b+3,f
  7553  173E  2F4D               	goto	l776
  7554  173F                     l2805:
  7555  173F  0856               	movf	___fladd@a,w
  7556  1740  02D2               	subwf	___fladd@b,f
  7557  1741  0857               	movf	___fladd@a+1,w
  7558  1742  1C03               	skipc
  7559  1743  0F57               	incfsz	___fladd@a+1,w
  7560  1744  02D3               	subwf	___fladd@b+1,f
  7561  1745  0858               	movf	___fladd@a+2,w
  7562  1746  1C03               	skipc
  7563  1747  0F58               	incfsz	___fladd@a+2,w
  7564  1748  02D4               	subwf	___fladd@b+2,f
  7565  1749  0859               	movf	___fladd@a+3,w
  7566  174A  1C03               	skipc
  7567  174B  0F59               	incfsz	___fladd@a+3,w
  7568  174C  02D5               	subwf	___fladd@b+3,f
  7569  174D                     l776:
  7570  174D  0855               	movf	___fladd@b+3,w
  7571  174E  0454               	iorwf	___fladd@b+2,w
  7572  174F  0453               	iorwf	___fladd@b+1,w
  7573  1750  0452               	iorwf	___fladd@b,w
  7574  1751  1D03               	skipz
  7575  1752  2F54               	goto	u3881
  7576  1753  2F55               	goto	u3880
  7577  1754                     u3881:
  7578  1754  2F81               	goto	l2827
  7579  1755                     u3880:
  7580  1755                     l2807:
  7581  1755  0865               	movf	___fladd@grs,w
  7582  1756  1D03               	btfss	3,2
  7583  1757  2F59               	goto	u3891
  7584  1758  2F5A               	goto	u3890
  7585  1759                     u3891:
  7586  1759  2F81               	goto	l2827
  7587  175A                     u3890:
  7588  175A                     l2809:
  7589  175A  3000               	movlw	0
  7590  175B  00D5               	movwf	?___fladd+3
  7591  175C  3000               	movlw	0
  7592  175D  00D4               	movwf	?___fladd+2
  7593  175E  3000               	movlw	0
  7594  175F  00D3               	movwf	?___fladd+1
  7595  1760  3000               	movlw	0
  7596  1761  00D2               	movwf	?___fladd
  7597  1762  2FFF               	goto	l768
  7598  1763                     l2813:
  7599  1763  3001               	movlw	1
  7600  1764  00DA               	movwf	??___fladd
  7601  1765                     u3905:
  7602  1765  1003               	clrc
  7603  1766  0DD2               	rlf	___fladd@b,f
  7604  1767  0DD3               	rlf	___fladd@b+1,f
  7605  1768  0DD4               	rlf	___fladd@b+2,f
  7606  1769  0DD5               	rlf	___fladd@b+3,f
  7607  176A  0BDA               	decfsz	??___fladd,f
  7608  176B  2F65               	goto	u3905
  7609  176C                     l2815:
  7610  176C  1FE5               	btfss	___fladd@grs,7
  7611  176D  2F6F               	goto	u3911
  7612  176E  2F70               	goto	u3910
  7613  176F                     u3911:
  7614  176F  2F71               	goto	l780
  7615  1770                     u3910:
  7616  1770                     l2817:
  7617  1770  1452               	bsf	___fladd@b,0
  7618  1771                     l780:
  7619  1771  1C65               	btfss	___fladd@grs,0
  7620  1772  2F74               	goto	u3921
  7621  1773  2F75               	goto	u3920
  7622  1774                     u3921:
  7623  1774  2F78               	goto	l2821
  7624  1775                     u3920:
  7625  1775                     l2819:
  7626  1775  1403               	setc
  7627  1776  0DE5               	rlf	___fladd@grs,f
  7628  1777  2F7A               	goto	l2823
  7629  1778                     l2821:
  7630  1778  1003               	clrc
  7631  1779  0DE5               	rlf	___fladd@grs,f
  7632  177A                     l2823:
  7633  177A  0864               	movf	___fladd@bexp,w
  7634  177B  1903               	btfsc	3,2
  7635  177C  2F7E               	goto	u3931
  7636  177D  2F7F               	goto	u3930
  7637  177E                     u3931:
  7638  177E  2F81               	goto	l2827
  7639  177F                     u3930:
  7640  177F                     l2825:
  7641  177F  3001               	movlw	1
  7642  1780  02E4               	subwf	___fladd@bexp,f
  7643  1781                     l2827:
  7644  1781  1FD4               	btfss	___fladd@b+2,7
  7645  1782  2F84               	goto	u3941
  7646  1783  2F85               	goto	u3940
  7647  1784                     u3941:
  7648  1784  2F63               	goto	l2813
  7649  1785                     u3940:
  7650  1785                     l2829:
  7651  1785  01E3               	clrf	___fladd@aexp
  7652  1786                     l2831:
  7653  1786  1FE5               	btfss	___fladd@grs,7
  7654  1787  2F89               	goto	u3951
  7655  1788  2F8A               	goto	u3950
  7656  1789                     u3951:
  7657  1789  2F98               	goto	l2839
  7658  178A                     u3950:
  7659  178A                     l2833:
  7660  178A  0865               	movf	___fladd@grs,w
  7661  178B  397F               	andlw	127
  7662  178C  1903               	btfsc	3,2
  7663  178D  2F8F               	goto	u3961
  7664  178E  2F90               	goto	u3960
  7665  178F                     u3961:
  7666  178F  2F93               	goto	l786
  7667  1790                     u3960:
  7668  1790                     l2835:
  7669  1790  01E3               	clrf	___fladd@aexp
  7670  1791  0AE3               	incf	___fladd@aexp,f
  7671  1792  2F98               	goto	l2839
  7672  1793                     l786:
  7673  1793  1C52               	btfss	___fladd@b,0
  7674  1794  2F96               	goto	u3971
  7675  1795  2F97               	goto	u3970
  7676  1796                     u3971:
  7677  1796  2F98               	goto	l2839
  7678  1797                     u3970:
  7679  1797  2F90               	goto	l2835
  7680  1798                     l2839:
  7681  1798  0863               	movf	___fladd@aexp,w
  7682  1799  1903               	btfsc	3,2
  7683  179A  2F9C               	goto	u3981
  7684  179B  2F9D               	goto	u3980
  7685  179C                     u3981:
  7686  179C  2FD1               	goto	l789
  7687  179D                     u3980:
  7688  179D                     l2841:
  7689  179D  3001               	movlw	1
  7690  179E  07D2               	addwf	___fladd@b,f
  7691  179F  3000               	movlw	0
  7692  17A0  1803               	skipnc
  7693  17A1  3001               	movlw	1
  7694  17A2  07D3               	addwf	___fladd@b+1,f
  7695  17A3  3000               	movlw	0
  7696  17A4  1803               	skipnc
  7697  17A5  3001               	movlw	1
  7698  17A6  07D4               	addwf	___fladd@b+2,f
  7699  17A7  3000               	movlw	0
  7700  17A8  1803               	skipnc
  7701  17A9  3001               	movlw	1
  7702  17AA  07D5               	addwf	___fladd@b+3,f
  7703  17AB                     l2843:
  7704  17AB  1C55               	btfss	___fladd@b+3,0
  7705  17AC  2FAE               	goto	u3991
  7706  17AD  2FAF               	goto	u3990
  7707  17AE                     u3991:
  7708  17AE  2FD1               	goto	l789
  7709  17AF                     u3990:
  7710  17AF                     l2845:
  7711  17AF  0852               	movf	___fladd@b,w
  7712  17B0  00DA               	movwf	??___fladd
  7713  17B1  0853               	movf	___fladd@b+1,w
  7714  17B2  00DB               	movwf	??___fladd+1
  7715  17B3  0854               	movf	___fladd@b+2,w
  7716  17B4  00DC               	movwf	??___fladd+2
  7717  17B5  0855               	movf	___fladd@b+3,w
  7718  17B6  00DD               	movwf	??___fladd+3
  7719  17B7  3001               	movlw	1
  7720  17B8  00DE               	movwf	??___fladd+4
  7721  17B9                     u4005:
  7722  17B9  0D5D               	rlf	??___fladd+3,w
  7723  17BA  0CDD               	rrf	??___fladd+3,f
  7724  17BB  0CDC               	rrf	??___fladd+2,f
  7725  17BC  0CDB               	rrf	??___fladd+1,f
  7726  17BD  0CDA               	rrf	??___fladd,f
  7727  17BE                     u4000:
  7728  17BE  0BDE               	decfsz	??___fladd+4,f
  7729  17BF  2FB9               	goto	u4005
  7730  17C0  085D               	movf	??___fladd+3,w
  7731  17C1  00D5               	movwf	___fladd@b+3
  7732  17C2  085C               	movf	??___fladd+2,w
  7733  17C3  00D4               	movwf	___fladd@b+2
  7734  17C4  085B               	movf	??___fladd+1,w
  7735  17C5  00D3               	movwf	___fladd@b+1
  7736  17C6  085A               	movf	??___fladd,w
  7737  17C7  00D2               	movwf	___fladd@b
  7738  17C8  0A64               	incf	___fladd@bexp,w
  7739  17C9  1903               	btfsc	3,2
  7740  17CA  2FCC               	goto	u4011
  7741  17CB  2FCD               	goto	u4010
  7742  17CC                     u4011:
  7743  17CC  2FD1               	goto	l789
  7744  17CD                     u4010:
  7745  17CD                     l2847:
  7746  17CD  3001               	movlw	1
  7747  17CE  00DA               	movwf	??___fladd
  7748  17CF  085A               	movf	??___fladd,w
  7749  17D0  07E4               	addwf	___fladd@bexp,f
  7750  17D1                     l789:
  7751  17D1  0A64               	incf	___fladd@bexp,w
  7752  17D2  1903               	btfsc	3,2
  7753  17D3  2FD5               	goto	u4021
  7754  17D4  2FD6               	goto	u4020
  7755  17D5                     u4021:
  7756  17D5  2FDB               	goto	l2851
  7757  17D6                     u4020:
  7758  17D6                     l2849:
  7759  17D6  0864               	movf	___fladd@bexp,w
  7760  17D7  1D03               	btfss	3,2
  7761  17D8  2FDA               	goto	u4031
  7762  17D9  2FDB               	goto	u4030
  7763  17DA                     u4031:
  7764  17DA  2FE9               	goto	l2857
  7765  17DB                     u4030:
  7766  17DB                     l2851:
  7767  17DB  3000               	movlw	0
  7768  17DC  00D5               	movwf	___fladd@b+3
  7769  17DD  3000               	movlw	0
  7770  17DE  00D4               	movwf	___fladd@b+2
  7771  17DF  3000               	movlw	0
  7772  17E0  00D3               	movwf	___fladd@b+1
  7773  17E1  3000               	movlw	0
  7774  17E2  00D2               	movwf	___fladd@b
  7775  17E3                     l2853:
  7776  17E3  0864               	movf	___fladd@bexp,w
  7777  17E4  1D03               	btfss	3,2
  7778  17E5  2FE7               	goto	u4041
  7779  17E6  2FE8               	goto	u4040
  7780  17E7                     u4041:
  7781  17E7  2FE9               	goto	l2857
  7782  17E8                     u4040:
  7783  17E8                     l2855:
  7784  17E8  01E2               	clrf	___fladd@signs
  7785  17E9                     l2857:
  7786  17E9  1C64               	btfss	___fladd@bexp,0
  7787  17EA  2FEC               	goto	u4051
  7788  17EB  2FED               	goto	u4050
  7789  17EC                     u4051:
  7790  17EC  2FEF               	goto	l2861
  7791  17ED                     u4050:
  7792  17ED                     l2859:
  7793  17ED  17D4               	bsf	___fladd@b+2,7
  7794  17EE  2FF3               	goto	l797
  7795  17EF                     l2861:
  7796  17EF  307F               	movlw	127
  7797  17F0  00DA               	movwf	??___fladd
  7798  17F1  085A               	movf	??___fladd,w
  7799  17F2  05D4               	andwf	___fladd@b+2,f
  7800  17F3                     l797:
  7801  17F3  0864               	movf	___fladd@bexp,w
  7802  17F4  00DA               	movwf	??___fladd
  7803  17F5  1003               	clrc
  7804  17F6  0C5A               	rrf	??___fladd,w
  7805  17F7  00DB               	movwf	??___fladd+1
  7806  17F8  085B               	movf	??___fladd+1,w
  7807  17F9  00D5               	movwf	___fladd@b+3
  7808  17FA                     l2863:
  7809  17FA  1FE2               	btfss	___fladd@signs,7
  7810  17FB  2FFD               	goto	u4061
  7811  17FC  2FFE               	goto	u4060
  7812  17FD                     u4061:
  7813  17FD  2FFF               	goto	l798
  7814  17FE                     u4060:
  7815  17FE                     l2865:
  7816  17FE  17D5               	bsf	___fladd@b+3,7
  7817  17FF                     l798:
  7818  17FF                     l768:
  7819  17FF  0008               	return
  7820  1800                     __end_of___fladd:
  7821                           
  7822                           	psect	text17
  7823  0003                     __ptext17:	
  7824 ;; *************** function ___flneg *****************
  7825 ;; Defined at:
  7826 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  f1              4    0[COMMON] unsigned char 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  4    0[COMMON] unsigned char 
  7833 ;; Registers used:
  7834 ;;		wreg
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7840 ;;      Params:         4       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0
  7843 ;;      Totals:         4       0       0       0       0
  7844 ;;Total ram usage:        4 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_sprintf
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           
  7854                           ;psect for function ___flneg
  7855  0003                     ___flneg:
  7856  0003                     l3293:	
  7857                           ;incstack = 0
  7858                           ; Regs used in ___flneg: [wreg]
  7859                           
  7860  0003  0873               	movf	___flneg@f1+3,w
  7861  0004  0472               	iorwf	___flneg@f1+2,w
  7862  0005  0471               	iorwf	___flneg@f1+1,w
  7863  0006  0470               	iorwf	___flneg@f1,w
  7864  0007  1903               	skipnz
  7865  0008  280A               	goto	u5191
  7866  0009  280B               	goto	u5190
  7867  000A                     u5191:
  7868  000A  280D               	goto	l3297
  7869  000B                     u5190:
  7870  000B                     l3295:
  7871  000B  3080               	movlw	128
  7872  000C  06F3               	xorwf	___flneg@f1+3,f
  7873  000D                     l3297:
  7874  000D                     l627:
  7875  000D  0008               	return
  7876  000E                     __end_of___flneg:
  7877                           
  7878                           	psect	text18
  7879  1D48                     __ptext18:	
  7880 ;; *************** function ___flge *****************
  7881 ;; Defined at:
  7882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  ff1             4    0[COMMON] unsigned char 
  7885 ;;  ff2             4    4[COMMON] unsigned char 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;		None
  7888 ;; Return value:  Size  Location     Type
  7889 ;;		None               void
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7897 ;;      Params:         8       0       0       0       0
  7898 ;;      Locals:         0       0       0       0       0
  7899 ;;      Temps:          4       0       0       0       0
  7900 ;;      Totals:        12       0       0       0       0
  7901 ;;Total ram usage:       12 bytes
  7902 ;; Hardware stack levels used:    1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_sprintf
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function ___flge
  7912  1D48                     ___flge:
  7913  1D48                     l3273:	
  7914                           ;incstack = 0
  7915                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7916                           
  7917  1D48  3000               	movlw	0
  7918  1D49  0570               	andwf	___flge@ff1,w
  7919  1D4A  00F8               	movwf	??___flge
  7920  1D4B  3000               	movlw	0
  7921  1D4C  0571               	andwf	___flge@ff1+1,w
  7922  1D4D  00F9               	movwf	??___flge+1
  7923  1D4E  3080               	movlw	128
  7924  1D4F  0572               	andwf	___flge@ff1+2,w
  7925  1D50  00FA               	movwf	??___flge+2
  7926  1D51  307F               	movlw	127
  7927  1D52  0573               	andwf	___flge@ff1+3,w
  7928  1D53  00FB               	movwf	??___flge+3
  7929  1D54  087B               	movf	??___flge+3,w
  7930  1D55  047A               	iorwf	??___flge+2,w
  7931  1D56  0479               	iorwf	??___flge+1,w
  7932  1D57  0478               	iorwf	??___flge,w
  7933  1D58  1D03               	skipz
  7934  1D59  2D5B               	goto	u5121
  7935  1D5A  2D5C               	goto	u5120
  7936  1D5B                     u5121:
  7937  1D5B  2D64               	goto	l619
  7938  1D5C                     u5120:
  7939  1D5C                     l3275:
  7940  1D5C  3000               	movlw	0
  7941  1D5D  00F3               	movwf	___flge@ff1+3
  7942  1D5E  3000               	movlw	0
  7943  1D5F  00F2               	movwf	___flge@ff1+2
  7944  1D60  3000               	movlw	0
  7945  1D61  00F1               	movwf	___flge@ff1+1
  7946  1D62  3000               	movlw	0
  7947  1D63  00F0               	movwf	___flge@ff1
  7948  1D64                     l619:
  7949  1D64  3000               	movlw	0
  7950  1D65  0574               	andwf	___flge@ff2,w
  7951  1D66  00F8               	movwf	??___flge
  7952  1D67  3000               	movlw	0
  7953  1D68  0575               	andwf	___flge@ff2+1,w
  7954  1D69  00F9               	movwf	??___flge+1
  7955  1D6A  3080               	movlw	128
  7956  1D6B  0576               	andwf	___flge@ff2+2,w
  7957  1D6C  00FA               	movwf	??___flge+2
  7958  1D6D  307F               	movlw	127
  7959  1D6E  0577               	andwf	___flge@ff2+3,w
  7960  1D6F  00FB               	movwf	??___flge+3
  7961  1D70  087B               	movf	??___flge+3,w
  7962  1D71  047A               	iorwf	??___flge+2,w
  7963  1D72  0479               	iorwf	??___flge+1,w
  7964  1D73  0478               	iorwf	??___flge,w
  7965  1D74  1D03               	skipz
  7966  1D75  2D77               	goto	u5131
  7967  1D76  2D78               	goto	u5130
  7968  1D77                     u5131:
  7969  1D77  2D80               	goto	l3279
  7970  1D78                     u5130:
  7971  1D78                     l3277:
  7972  1D78  3000               	movlw	0
  7973  1D79  00F7               	movwf	___flge@ff2+3
  7974  1D7A  3000               	movlw	0
  7975  1D7B  00F6               	movwf	___flge@ff2+2
  7976  1D7C  3000               	movlw	0
  7977  1D7D  00F5               	movwf	___flge@ff2+1
  7978  1D7E  3000               	movlw	0
  7979  1D7F  00F4               	movwf	___flge@ff2
  7980  1D80                     l3279:
  7981  1D80  1FF3               	btfss	___flge@ff1+3,7
  7982  1D81  2D83               	goto	u5141
  7983  1D82  2D84               	goto	u5140
  7984  1D83                     u5141:
  7985  1D83  2DA8               	goto	l3283
  7986  1D84                     u5140:
  7987  1D84                     l3281:
  7988  1D84  3000               	movlw	0
  7989  1D85  00F8               	movwf	??___flge
  7990  1D86  3000               	movlw	0
  7991  1D87  00F9               	movwf	??___flge+1
  7992  1D88  3000               	movlw	0
  7993  1D89  00FA               	movwf	??___flge+2
  7994  1D8A  3080               	movlw	128
  7995  1D8B  00FB               	movwf	??___flge+3
  7996  1D8C  0870               	movf	___flge@ff1,w
  7997  1D8D  02F8               	subwf	??___flge,f
  7998  1D8E  0871               	movf	___flge@ff1+1,w
  7999  1D8F  1C03               	skipc
  8000  1D90  0F71               	incfsz	___flge@ff1+1,w
  8001  1D91  2D93               	goto	u5151
  8002  1D92  2D94               	goto	u5152
  8003  1D93                     u5151:
  8004  1D93  02F9               	subwf	??___flge+1,f
  8005  1D94                     u5152:
  8006  1D94  0872               	movf	___flge@ff1+2,w
  8007  1D95  1C03               	skipc
  8008  1D96  0F72               	incfsz	___flge@ff1+2,w
  8009  1D97  2D99               	goto	u5153
  8010  1D98  2D9A               	goto	u5154
  8011  1D99                     u5153:
  8012  1D99  02FA               	subwf	??___flge+2,f
  8013  1D9A                     u5154:
  8014  1D9A  0873               	movf	___flge@ff1+3,w
  8015  1D9B  1C03               	skipc
  8016  1D9C  0F73               	incfsz	___flge@ff1+3,w
  8017  1D9D  2D9F               	goto	u5155
  8018  1D9E  2DA0               	goto	u5156
  8019  1D9F                     u5155:
  8020  1D9F  02FB               	subwf	??___flge+3,f
  8021  1DA0                     u5156:
  8022  1DA0  087B               	movf	??___flge+3,w
  8023  1DA1  00F3               	movwf	___flge@ff1+3
  8024  1DA2  087A               	movf	??___flge+2,w
  8025  1DA3  00F2               	movwf	___flge@ff1+2
  8026  1DA4  0879               	movf	??___flge+1,w
  8027  1DA5  00F1               	movwf	___flge@ff1+1
  8028  1DA6  0878               	movf	??___flge,w
  8029  1DA7  00F0               	movwf	___flge@ff1
  8030  1DA8                     l3283:
  8031  1DA8  1FF7               	btfss	___flge@ff2+3,7
  8032  1DA9  2DAB               	goto	u5161
  8033  1DAA  2DAC               	goto	u5160
  8034  1DAB                     u5161:
  8035  1DAB  2DD0               	goto	l622
  8036  1DAC                     u5160:
  8037  1DAC                     l3285:
  8038  1DAC  3000               	movlw	0
  8039  1DAD  00F8               	movwf	??___flge
  8040  1DAE  3000               	movlw	0
  8041  1DAF  00F9               	movwf	??___flge+1
  8042  1DB0  3000               	movlw	0
  8043  1DB1  00FA               	movwf	??___flge+2
  8044  1DB2  3080               	movlw	128
  8045  1DB3  00FB               	movwf	??___flge+3
  8046  1DB4  0874               	movf	___flge@ff2,w
  8047  1DB5  02F8               	subwf	??___flge,f
  8048  1DB6  0875               	movf	___flge@ff2+1,w
  8049  1DB7  1C03               	skipc
  8050  1DB8  0F75               	incfsz	___flge@ff2+1,w
  8051  1DB9  2DBB               	goto	u5171
  8052  1DBA  2DBC               	goto	u5172
  8053  1DBB                     u5171:
  8054  1DBB  02F9               	subwf	??___flge+1,f
  8055  1DBC                     u5172:
  8056  1DBC  0876               	movf	___flge@ff2+2,w
  8057  1DBD  1C03               	skipc
  8058  1DBE  0F76               	incfsz	___flge@ff2+2,w
  8059  1DBF  2DC1               	goto	u5173
  8060  1DC0  2DC2               	goto	u5174
  8061  1DC1                     u5173:
  8062  1DC1  02FA               	subwf	??___flge+2,f
  8063  1DC2                     u5174:
  8064  1DC2  0877               	movf	___flge@ff2+3,w
  8065  1DC3  1C03               	skipc
  8066  1DC4  0F77               	incfsz	___flge@ff2+3,w
  8067  1DC5  2DC7               	goto	u5175
  8068  1DC6  2DC8               	goto	u5176
  8069  1DC7                     u5175:
  8070  1DC7  02FB               	subwf	??___flge+3,f
  8071  1DC8                     u5176:
  8072  1DC8  087B               	movf	??___flge+3,w
  8073  1DC9  00F7               	movwf	___flge@ff2+3
  8074  1DCA  087A               	movf	??___flge+2,w
  8075  1DCB  00F6               	movwf	___flge@ff2+2
  8076  1DCC  0879               	movf	??___flge+1,w
  8077  1DCD  00F5               	movwf	___flge@ff2+1
  8078  1DCE  0878               	movf	??___flge,w
  8079  1DCF  00F4               	movwf	___flge@ff2
  8080  1DD0                     l622:
  8081  1DD0  3080               	movlw	128
  8082  1DD1  06F3               	xorwf	___flge@ff1+3,f
  8083  1DD2  3080               	movlw	128
  8084  1DD3  06F7               	xorwf	___flge@ff2+3,f
  8085  1DD4  0877               	movf	___flge@ff2+3,w
  8086  1DD5  0273               	subwf	___flge@ff1+3,w
  8087  1DD6  1D03               	skipz
  8088  1DD7  2DE2               	goto	u5185
  8089  1DD8  0876               	movf	___flge@ff2+2,w
  8090  1DD9  0272               	subwf	___flge@ff1+2,w
  8091  1DDA  1D03               	skipz
  8092  1DDB  2DE2               	goto	u5185
  8093  1DDC  0875               	movf	___flge@ff2+1,w
  8094  1DDD  0271               	subwf	___flge@ff1+1,w
  8095  1DDE  1D03               	skipz
  8096  1DDF  2DE2               	goto	u5185
  8097  1DE0  0874               	movf	___flge@ff2,w
  8098  1DE1  0270               	subwf	___flge@ff1,w
  8099  1DE2                     u5185:
  8100  1DE2  1803               	skipnc
  8101  1DE3  2DE5               	goto	u5181
  8102  1DE4  2DE6               	goto	u5180
  8103  1DE5                     u5181:
  8104  1DE5  2DE8               	goto	l3289
  8105  1DE6                     u5180:
  8106  1DE6                     l3287:
  8107  1DE6  1003               	clrc
  8108  1DE7  2DE9               	goto	l623
  8109  1DE8                     l3289:
  8110  1DE8  1403               	setc
  8111  1DE9                     l623:
  8112  1DE9  0008               	return
  8113  1DEA                     __end_of___flge:
  8114                           
  8115                           	psect	text19
  8116  1A7C                     __ptext19:	
  8117 ;; *************** function ___fleq *****************
  8118 ;; Defined at:
  8119 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  ff1             4    0[COMMON] unsigned char 
  8122 ;;  ff2             4    4[COMMON] unsigned char 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;		None               void
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8134 ;;      Params:         8       0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0
  8136 ;;      Temps:          4       0       0       0       0
  8137 ;;      Totals:        12       0       0       0       0
  8138 ;;Total ram usage:       12 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_sprintf
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           
  8148                           ;psect for function ___fleq
  8149  1A7C                     ___fleq:
  8150  1A7C                     l3261:	
  8151                           ;incstack = 0
  8152                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8153                           
  8154  1A7C  3000               	movlw	0
  8155  1A7D  0570               	andwf	___fleq@ff1,w
  8156  1A7E  00F8               	movwf	??___fleq
  8157  1A7F  3000               	movlw	0
  8158  1A80  0571               	andwf	___fleq@ff1+1,w
  8159  1A81  00F9               	movwf	??___fleq+1
  8160  1A82  3080               	movlw	128
  8161  1A83  0572               	andwf	___fleq@ff1+2,w
  8162  1A84  00FA               	movwf	??___fleq+2
  8163  1A85  307F               	movlw	127
  8164  1A86  0573               	andwf	___fleq@ff1+3,w
  8165  1A87  00FB               	movwf	??___fleq+3
  8166  1A88  087B               	movf	??___fleq+3,w
  8167  1A89  047A               	iorwf	??___fleq+2,w
  8168  1A8A  0479               	iorwf	??___fleq+1,w
  8169  1A8B  0478               	iorwf	??___fleq,w
  8170  1A8C  1D03               	skipz
  8171  1A8D  2A8F               	goto	u5091
  8172  1A8E  2A90               	goto	u5090
  8173  1A8F                     u5091:
  8174  1A8F  2A98               	goto	l614
  8175  1A90                     u5090:
  8176  1A90                     l3263:
  8177  1A90  3000               	movlw	0
  8178  1A91  00F3               	movwf	___fleq@ff1+3
  8179  1A92  3000               	movlw	0
  8180  1A93  00F2               	movwf	___fleq@ff1+2
  8181  1A94  3000               	movlw	0
  8182  1A95  00F1               	movwf	___fleq@ff1+1
  8183  1A96  3000               	movlw	0
  8184  1A97  00F0               	movwf	___fleq@ff1
  8185  1A98                     l614:
  8186  1A98  3000               	movlw	0
  8187  1A99  0574               	andwf	___fleq@ff2,w
  8188  1A9A  00F8               	movwf	??___fleq
  8189  1A9B  3000               	movlw	0
  8190  1A9C  0575               	andwf	___fleq@ff2+1,w
  8191  1A9D  00F9               	movwf	??___fleq+1
  8192  1A9E  3080               	movlw	128
  8193  1A9F  0576               	andwf	___fleq@ff2+2,w
  8194  1AA0  00FA               	movwf	??___fleq+2
  8195  1AA1  307F               	movlw	127
  8196  1AA2  0577               	andwf	___fleq@ff2+3,w
  8197  1AA3  00FB               	movwf	??___fleq+3
  8198  1AA4  087B               	movf	??___fleq+3,w
  8199  1AA5  047A               	iorwf	??___fleq+2,w
  8200  1AA6  0479               	iorwf	??___fleq+1,w
  8201  1AA7  0478               	iorwf	??___fleq,w
  8202  1AA8  1D03               	skipz
  8203  1AA9  2AAB               	goto	u5101
  8204  1AAA  2AAC               	goto	u5100
  8205  1AAB                     u5101:
  8206  1AAB  2AB4               	goto	l615
  8207  1AAC                     u5100:
  8208  1AAC                     l3265:
  8209  1AAC  3000               	movlw	0
  8210  1AAD  00F7               	movwf	___fleq@ff2+3
  8211  1AAE  3000               	movlw	0
  8212  1AAF  00F6               	movwf	___fleq@ff2+2
  8213  1AB0  3000               	movlw	0
  8214  1AB1  00F5               	movwf	___fleq@ff2+1
  8215  1AB2  3000               	movlw	0
  8216  1AB3  00F4               	movwf	___fleq@ff2
  8217  1AB4                     l615:
  8218  1AB4  0877               	movf	___fleq@ff2+3,w
  8219  1AB5  0673               	xorwf	___fleq@ff1+3,w
  8220  1AB6  1D03               	skipz
  8221  1AB7  2AC2               	goto	u5115
  8222  1AB8  0876               	movf	___fleq@ff2+2,w
  8223  1AB9  0672               	xorwf	___fleq@ff1+2,w
  8224  1ABA  1D03               	skipz
  8225  1ABB  2AC2               	goto	u5115
  8226  1ABC  0875               	movf	___fleq@ff2+1,w
  8227  1ABD  0671               	xorwf	___fleq@ff1+1,w
  8228  1ABE  1D03               	skipz
  8229  1ABF  2AC2               	goto	u5115
  8230  1AC0  0874               	movf	___fleq@ff2,w
  8231  1AC1  0670               	xorwf	___fleq@ff1,w
  8232  1AC2                     u5115:
  8233  1AC2  1903               	skipnz
  8234  1AC3  2AC5               	goto	u5111
  8235  1AC4  2AC6               	goto	u5110
  8236  1AC5                     u5111:
  8237  1AC5  2AC8               	goto	l3269
  8238  1AC6                     u5110:
  8239  1AC6                     l3267:
  8240  1AC6  1003               	clrc
  8241  1AC7  2AC9               	goto	l616
  8242  1AC8                     l3269:
  8243  1AC8  1403               	setc
  8244  1AC9                     l616:
  8245  1AC9  0008               	return
  8246  1ACA                     __end_of___fleq:
  8247                           
  8248                           	psect	text20
  8249  184C                     __ptext20:	
  8250 ;; *************** function _config_txsta *****************
  8251 ;; Defined at:
  8252 ;;		line 9 in file "USART.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		None
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8266 ;;      Params:         0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; This function calls:
  8273 ;;		Nothing
  8274 ;; This function is called by:
  8275 ;;		_main
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _config_txsta
  8281  184C                     _config_txsta:
  8282  184C                     l3559:	
  8283                           ;incstack = 0
  8284                           ; Regs used in _config_txsta: []
  8285                           
  8286                           
  8287                           ;USART.c: 10:     TXSTAbits.CSRC = 0;
  8288  184C  1683               	bsf	3,5	;RP0=1, select bank1
  8289  184D  1303               	bcf	3,6	;RP1=0, select bank1
  8290  184E  1398               	bcf	24,7	;volatile
  8291                           
  8292                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  8293  184F  1318               	bcf	24,6	;volatile
  8294                           
  8295                           ;USART.c: 12:     TXSTAbits.TXEN = 1;
  8296  1850  1698               	bsf	24,5	;volatile
  8297                           
  8298                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  8299  1851  1218               	bcf	24,4	;volatile
  8300                           
  8301                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  8302  1852  1118               	bcf	24,2	;volatile
  8303                           
  8304                           ;USART.c: 15:     TXSTAbits.TRMT = 0;
  8305  1853  1098               	bcf	24,1	;volatile
  8306                           
  8307                           ;USART.c: 16:     TXSTAbits.TX9D = 0;
  8308  1854  1018               	bcf	24,0	;volatile
  8309  1855                     l211:
  8310  1855  0008               	return
  8311  1856                     __end_of_config_txsta:
  8312                           
  8313                           	psect	text21
  8314  183C                     __ptext21:	
  8315 ;; *************** function _config_rcsta *****************
  8316 ;; Defined at:
  8317 ;;		line 19 in file "USART.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		status,2
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8331 ;;      Params:         0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_main
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _config_rcsta
  8346  183C                     _config_rcsta:
  8347  183C                     l3561:	
  8348                           ;incstack = 0
  8349                           ; Regs used in _config_rcsta: [status,2]
  8350                           
  8351                           
  8352                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  8353  183C  1283               	bcf	3,5	;RP0=0, select bank0
  8354  183D  1303               	bcf	3,6	;RP1=0, select bank0
  8355  183E  1798               	bsf	24,7	;volatile
  8356                           
  8357                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  8358  183F  1318               	bcf	24,6	;volatile
  8359                           
  8360                           ;USART.c: 22:     RCSTAbits.SREN = 0;
  8361  1840  1298               	bcf	24,5	;volatile
  8362                           
  8363                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  8364  1841  1618               	bsf	24,4	;volatile
  8365  1842                     l3563:
  8366                           
  8367                           ;USART.c: 24:     RCREG = 0;
  8368  1842  019A               	clrf	26	;volatile
  8369  1843                     l214:
  8370  1843  0008               	return
  8371  1844                     __end_of_config_rcsta:
  8372                           
  8373                           	psect	text22
  8374  186F                     __ptext22:	
  8375 ;; *************** function _config_P *****************
  8376 ;; Defined at:
  8377 ;;		line 118 in file "lab03.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8391 ;;      Params:         0       0       0       0       0
  8392 ;;      Locals:         0       0       0       0       0
  8393 ;;      Temps:          0       0       0       0       0
  8394 ;;      Totals:         0       0       0       0       0
  8395 ;;Total ram usage:        0 bytes
  8396 ;; Hardware stack levels used:    1
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_main
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           
  8405                           ;psect for function _config_P
  8406  186F                     _config_P:
  8407  186F                     l3549:	
  8408                           ;incstack = 0
  8409                           ; Regs used in _config_P: [wreg+status,2]
  8410                           
  8411                           
  8412                           ;lab03.c: 120:     TRISD = 0;
  8413  186F  1683               	bsf	3,5	;RP0=1, select bank1
  8414  1870  1303               	bcf	3,6	;RP1=0, select bank1
  8415  1871  0188               	clrf	8	;volatile
  8416                           
  8417                           ;lab03.c: 121:     TRISE = 0;
  8418  1872  0189               	clrf	9	;volatile
  8419  1873                     l3551:
  8420                           
  8421                           ;lab03.c: 122:     TRISA = 3;
  8422  1873  3003               	movlw	3
  8423  1874  0085               	movwf	5	;volatile
  8424  1875                     l3553:
  8425                           
  8426                           ;lab03.c: 125:     ANSEL = 3;
  8427  1875  3003               	movlw	3
  8428  1876  1683               	bsf	3,5	;RP0=1, select bank3
  8429  1877  1703               	bsf	3,6	;RP1=1, select bank3
  8430  1878  0088               	movwf	8	;volatile
  8431                           
  8432                           ;lab03.c: 126:     ANSELH = 0;
  8433  1879  0189               	clrf	9	;volatile
  8434                           
  8435                           ;lab03.c: 128:     PORTD = 0;
  8436  187A  1283               	bcf	3,5	;RP0=0, select bank0
  8437  187B  1303               	bcf	3,6	;RP1=0, select bank0
  8438  187C  0188               	clrf	8	;volatile
  8439                           
  8440                           ;lab03.c: 129:     PORTE = 0;
  8441  187D  0189               	clrf	9	;volatile
  8442                           
  8443                           ;lab03.c: 130:     PORTC = 0;
  8444  187E  0187               	clrf	7	;volatile
  8445  187F                     l73:
  8446  187F  0008               	return
  8447  1880                     __end_of_config_P:
  8448                           
  8449                           	psect	text23
  8450  1833                     __ptext23:	
  8451 ;; *************** function _config_ADC *****************
  8452 ;; Defined at:
  8453 ;;		line 6 in file "ADC.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		status,2
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8467 ;;      Params:         0       0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0
  8470 ;;      Totals:         0       0       0       0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           
  8481                           ;psect for function _config_ADC
  8482  1833                     _config_ADC:
  8483  1833                     l3555:	
  8484                           ;incstack = 0
  8485                           ; Regs used in _config_ADC: [status,2]
  8486                           
  8487                           
  8488                           ;ADC.c: 7:     ADCON1 = 0b00000000;
  8489  1833  1683               	bsf	3,5	;RP0=1, select bank1
  8490  1834  1303               	bcf	3,6	;RP1=0, select bank1
  8491  1835  019F               	clrf	31	;volatile
  8492  1836                     l169:
  8493  1836  0008               	return
  8494  1837                     __end_of_config_ADC:
  8495                           
  8496                           	psect	text24
  8497  1837                     __ptext24:	
  8498 ;; *************** function __baudios *****************
  8499 ;; Defined at:
  8500 ;;		line 5 in file "USART.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;		None
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8514 ;;      Params:         0       0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0
  8517 ;;      Totals:         0       0       0       0       0
  8518 ;;Total ram usage:        0 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; This function calls:
  8521 ;;		Nothing
  8522 ;; This function is called by:
  8523 ;;		_main
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           
  8528                           ;psect for function __baudios
  8529  1837                     __baudios:
  8530  1837                     l3557:	
  8531                           ;incstack = 0
  8532                           ; Regs used in __baudios: [wreg]
  8533                           
  8534                           
  8535                           ;USART.c: 6:     SPBRG = 12;
  8536  1837  300C               	movlw	12
  8537  1838  1683               	bsf	3,5	;RP0=1, select bank1
  8538  1839  1303               	bcf	3,6	;RP1=0, select bank1
  8539  183A  0099               	movwf	25	;volatile
  8540  183B                     l208:
  8541  183B  0008               	return
  8542  183C                     __end_of__baudios:
  8543                           
  8544                           	psect	text25
  8545  1953                     __ptext25:	
  8546 ;; *************** function _Write_USART_String *****************
  8547 ;; Defined at:
  8548 ;;		line 31 in file "USART.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  a               2    1[COMMON] PTR unsigned char 
  8551 ;;		 -> STR_3(25), data(16), 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  i               1    4[COMMON] unsigned char 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8563 ;;      Params:         2       0       0       0       0
  8564 ;;      Locals:         1       0       0       0       0
  8565 ;;      Temps:          1       0       0       0       0
  8566 ;;      Totals:         4       0       0       0       0
  8567 ;;Total ram usage:        4 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    1
  8570 ;; This function calls:
  8571 ;;		_Write_USART
  8572 ;; This function is called by:
  8573 ;;		_main
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           
  8578                           ;psect for function _Write_USART_String
  8579  1953                     _Write_USART_String:
  8580  1953                     l3905:	
  8581                           ;incstack = 0
  8582                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8583                           
  8584                           
  8585                           ;USART.c: 32:     uint8_t i;;USART.c: 33:     for(i=0;a[i]!='\0';i++){
  8586  1953  01F4               	clrf	Write_USART_String@i
  8587  1954  296A               	goto	l3911
  8588  1955                     l3907:
  8589                           
  8590                           ;USART.c: 34:         Write_USART(a[i]);
  8591  1955  0874               	movf	Write_USART_String@i,w
  8592  1956  0771               	addwf	Write_USART_String@a,w
  8593  1957  0084               	movwf	4
  8594  1958  0872               	movf	Write_USART_String@a+1,w
  8595  1959  1803               	skipnc
  8596  195A  0A72               	incf	Write_USART_String@a+1,w
  8597  195B  00FF               	movwf	btemp+1
  8598  195C  120A  158A  2000  160A  158A  	fcall	stringtab
  8599  1961  160A  158A  2056  160A  158A  	fcall	_Write_USART
  8600  1966                     l3909:
  8601                           
  8602                           ;USART.c: 35:     }
  8603  1966  3001               	movlw	1
  8604  1967  00F3               	movwf	??_Write_USART_String
  8605  1968  0873               	movf	??_Write_USART_String,w
  8606  1969  07F4               	addwf	Write_USART_String@i,f
  8607  196A                     l3911:
  8608  196A  0874               	movf	Write_USART_String@i,w
  8609  196B  0771               	addwf	Write_USART_String@a,w
  8610  196C  0084               	movwf	4
  8611  196D  0872               	movf	Write_USART_String@a+1,w
  8612  196E  1803               	skipnc
  8613  196F  0A72               	incf	Write_USART_String@a+1,w
  8614  1970  1283               	bcf	3,5	;RP0=0, select bank0
  8615  1971  1303               	bcf	3,6	;RP1=0, select bank0
  8616  1972  00FF               	movwf	btemp+1
  8617  1973  120A  158A  2000  160A  158A  	fcall	stringtab
  8618  1978  3A00               	xorlw	0
  8619  1979  1D03               	skipz
  8620  197A  297C               	goto	u6331
  8621  197B  297D               	goto	u6330
  8622  197C                     u6331:
  8623  197C  2955               	goto	l3907
  8624  197D                     u6330:
  8625  197D                     l226:
  8626  197D  0008               	return
  8627  197E                     __end_of_Write_USART_String:
  8628                           
  8629                           	psect	text26
  8630  1856                     __ptext26:	
  8631 ;; *************** function _Write_USART *****************
  8632 ;; Defined at:
  8633 ;;		line 27 in file "USART.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  a               1    wreg     unsigned char 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  a               1    0[COMMON] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8647 ;;      Params:         0       0       0       0       0
  8648 ;;      Locals:         1       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0
  8650 ;;      Totals:         1       0       0       0       0
  8651 ;;Total ram usage:        1 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_main
  8657 ;;		_Write_USART_String
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _Write_USART
  8663  1856                     _Write_USART:
  8664                           
  8665                           ;incstack = 0
  8666                           ; Regs used in _Write_USART: [wreg]
  8667                           ;Write_USART@a stored from wreg
  8668  1856  00F0               	movwf	Write_USART@a
  8669  1857                     l3007:
  8670  1857                     l217:	
  8671                           ;USART.c: 28:     while(!TRMT);
  8672                           
  8673  1857  1683               	bsf	3,5	;RP0=1, select bank1
  8674  1858  1303               	bcf	3,6	;RP1=0, select bank1
  8675  1859  1C98               	btfss	24,1	;volatile
  8676  185A  285C               	goto	u4441
  8677  185B  285D               	goto	u4440
  8678  185C                     u4441:
  8679  185C  2857               	goto	l217
  8680  185D                     u4440:
  8681  185D                     l3009:
  8682                           
  8683                           ;USART.c: 29:     TXREG=a;
  8684  185D  0870               	movf	Write_USART@a,w
  8685  185E  1283               	bcf	3,5	;RP0=0, select bank0
  8686  185F  1303               	bcf	3,6	;RP1=0, select bank0
  8687  1860  0099               	movwf	25	;volatile
  8688  1861                     l220:
  8689  1861  0008               	return
  8690  1862                     __end_of_Write_USART:
  8691                           
  8692                           	psect	text27
  8693  19F6                     __ptext27:	
  8694 ;; *************** function _Lcd_Write_String *****************
  8695 ;; Defined at:
  8696 ;;		line 81 in file "LCD.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  a               2    3[COMMON] PTR unsigned char 
  8699 ;;		 -> data(16), STR_1(15), 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;  i               2    8[COMMON] int 
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      void 
  8704 ;; Registers used:
  8705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8711 ;;      Params:         2       0       0       0       0
  8712 ;;      Locals:         2       0       0       0       0
  8713 ;;      Temps:          3       0       0       0       0
  8714 ;;      Totals:         7       0       0       0       0
  8715 ;;Total ram usage:        7 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:    2
  8718 ;; This function calls:
  8719 ;;		_LCD_CMD
  8720 ;; This function is called by:
  8721 ;;		_main
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function _Lcd_Write_String
  8727  19F6                     _Lcd_Write_String:
  8728  19F6                     l3603:	
  8729                           ;incstack = 0
  8730                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8731                           
  8732                           
  8733                           ;LCD.c: 84:  int i;;LCD.c: 85:  for(i=0;a[i]!='\0';i++)
  8734  19F6  01F8               	clrf	Lcd_Write_String@i
  8735  19F7  01F9               	clrf	Lcd_Write_String@i+1
  8736  19F8  2A1B               	goto	l3609
  8737  19F9                     l3605:
  8738                           
  8739                           ;LCD.c: 86:     LCD_CMD(a[i]);
  8740  19F9  0878               	movf	Lcd_Write_String@i,w
  8741  19FA  0773               	addwf	Lcd_Write_String@a,w
  8742  19FB  00F6               	movwf	??_Lcd_Write_String+1
  8743  19FC  0874               	movf	Lcd_Write_String@a+1,w
  8744  19FD  00F5               	movwf	??_Lcd_Write_String
  8745  19FE  1803               	skipnc
  8746  19FF  0AF5               	incf	??_Lcd_Write_String,f
  8747  1A00  1FF8               	btfss	Lcd_Write_String@i,7
  8748  1A01  2A03               	goto	u5810
  8749  1A02  03F5               	decf	??_Lcd_Write_String,f
  8750  1A03                     u5810:
  8751  1A03  0875               	movf	??_Lcd_Write_String,w
  8752  1A04  00F7               	movwf	??_Lcd_Write_String+2
  8753  1A05  0877               	movf	??_Lcd_Write_String+2,w
  8754  1A06  1283               	bcf	3,5	;RP0=0, select bank0
  8755  1A07  1303               	bcf	3,6	;RP1=0, select bank0
  8756  1A08  00FF               	movwf	btemp+1
  8757  1A09  0876               	movf	??_Lcd_Write_String+1,w
  8758  1A0A  0084               	movwf	4
  8759  1A0B  120A  158A  2000  160A  158A  	fcall	stringtab
  8760  1A10  160A  158A  2080  160A  158A  	fcall	_LCD_CMD
  8761  1A15                     l3607:
  8762  1A15  3001               	movlw	1
  8763  1A16  07F8               	addwf	Lcd_Write_String@i,f
  8764  1A17  1803               	skipnc
  8765  1A18  0AF9               	incf	Lcd_Write_String@i+1,f
  8766  1A19  3000               	movlw	0
  8767  1A1A  07F9               	addwf	Lcd_Write_String@i+1,f
  8768  1A1B                     l3609:
  8769  1A1B  0878               	movf	Lcd_Write_String@i,w
  8770  1A1C  0773               	addwf	Lcd_Write_String@a,w
  8771  1A1D  00F6               	movwf	??_Lcd_Write_String+1
  8772  1A1E  0874               	movf	Lcd_Write_String@a+1,w
  8773  1A1F  00F5               	movwf	??_Lcd_Write_String
  8774  1A20  1803               	skipnc
  8775  1A21  0AF5               	incf	??_Lcd_Write_String,f
  8776  1A22  1FF8               	btfss	Lcd_Write_String@i,7
  8777  1A23  2A25               	goto	u5820
  8778  1A24  03F5               	decf	??_Lcd_Write_String,f
  8779  1A25                     u5820:
  8780  1A25  0875               	movf	??_Lcd_Write_String,w
  8781  1A26  00F7               	movwf	??_Lcd_Write_String+2
  8782  1A27  0877               	movf	??_Lcd_Write_String+2,w
  8783  1A28  1283               	bcf	3,5	;RP0=0, select bank0
  8784  1A29  1303               	bcf	3,6	;RP1=0, select bank0
  8785  1A2A  00FF               	movwf	btemp+1
  8786  1A2B  0876               	movf	??_Lcd_Write_String+1,w
  8787  1A2C  0084               	movwf	4
  8788  1A2D  120A  158A  2000  160A  158A  	fcall	stringtab
  8789  1A32  3A00               	xorlw	0
  8790  1A33  1D03               	skipz
  8791  1A34  2A36               	goto	u5831
  8792  1A35  2A37               	goto	u5830
  8793  1A36                     u5831:
  8794  1A36  29F9               	goto	l3605
  8795  1A37                     u5830:
  8796  1A37                     l162:
  8797  1A37  0008               	return
  8798  1A38                     __end_of_Lcd_Write_String:
  8799                           
  8800                           	psect	text28
  8801  1880                     __ptext28:	
  8802 ;; *************** function _LCD_CMD *****************
  8803 ;; Defined at:
  8804 ;;		line 21 in file "LCD.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  a               1    wreg     unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  a               1    2[COMMON] unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0, pclath, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         0       0       0       0       0
  8819 ;;      Locals:         1       0       0       0       0
  8820 ;;      Temps:          1       0       0       0       0
  8821 ;;      Totals:         2       0       0       0       0
  8822 ;;Total ram usage:        2 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    1
  8825 ;; This function calls:
  8826 ;;		_Puerto
  8827 ;; This function is called by:
  8828 ;;		_Lcd_Write_String
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _LCD_CMD
  8834  1880                     _LCD_CMD:
  8835                           
  8836                           ;incstack = 0
  8837                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  8838                           ;LCD_CMD@a stored from wreg
  8839  1880  00F2               	movwf	LCD_CMD@a
  8840  1881                     l3021:
  8841                           
  8842                           ;LCD.c: 22:     RE0 = 1;
  8843  1881  1283               	bcf	3,5	;RP0=0, select bank0
  8844  1882  1303               	bcf	3,6	;RP1=0, select bank0
  8845  1883  1409               	bsf	9,0	;volatile
  8846  1884                     l3023:
  8847                           
  8848                           ;LCD.c: 23:     Puerto(a);
  8849  1884  0872               	movf	LCD_CMD@a,w
  8850  1885  160A  158A  21B8  160A  158A  	fcall	_Puerto
  8851  188A                     l3025:
  8852                           
  8853                           ;LCD.c: 24:     RE1 = 1;
  8854  188A  1283               	bcf	3,5	;RP0=0, select bank0
  8855  188B  1303               	bcf	3,6	;RP1=0, select bank0
  8856  188C  1489               	bsf	9,1	;volatile
  8857  188D                     l3027:
  8858                           
  8859                           ;LCD.c: 25:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8860  188D  3003               	movlw	3
  8861  188E  00F1               	movwf	??_LCD_CMD
  8862  188F                     u6357:
  8863  188F  0BF1               	decfsz	??_LCD_CMD,f
  8864  1890  288F               	goto	u6357
  8865  1891                     l3029:
  8866                           
  8867                           ;LCD.c: 26:     RE1 = 0;
  8868  1891  1283               	bcf	3,5	;RP0=0, select bank0
  8869  1892  1303               	bcf	3,6	;RP1=0, select bank0
  8870  1893  1089               	bcf	9,1	;volatile
  8871  1894                     l3031:
  8872                           
  8873                           ;LCD.c: 27:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8874  1894  3003               	movlw	3
  8875  1895  00F1               	movwf	??_LCD_CMD
  8876  1896                     u6367:
  8877  1896  0BF1               	decfsz	??_LCD_CMD,f
  8878  1897  2896               	goto	u6367
  8879  1898                     l3033:
  8880                           
  8881                           ;LCD.c: 28:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  8882  1898  3021               	movlw	33
  8883  1899  00F1               	movwf	??_LCD_CMD
  8884  189A                     u6377:
  8885  189A  0BF1               	decfsz	??_LCD_CMD,f
  8886  189B  289A               	goto	u6377
  8887  189C                     l141:
  8888  189C  0008               	return
  8889  189D                     __end_of_LCD_CMD:
  8890                           
  8891                           	psect	text29
  8892  18BF                     __ptext29:	
  8893 ;; *************** function _Lcd_Set_Cursor *****************
  8894 ;; Defined at:
  8895 ;;		line 67 in file "LCD.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  x               1    wreg     unsigned char 
  8898 ;;  y               1    4[COMMON] unsigned char 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  x               1    6[COMMON] unsigned char 
  8901 ;;  a               1    7[COMMON] unsigned char 
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg, status,2, status,0, pclath, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8911 ;;      Params:         1       0       0       0       0
  8912 ;;      Locals:         2       0       0       0       0
  8913 ;;      Temps:          1       0       0       0       0
  8914 ;;      Totals:         4       0       0       0       0
  8915 ;;Total ram usage:        4 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    2
  8918 ;; This function calls:
  8919 ;;		_datosLCD
  8920 ;; This function is called by:
  8921 ;;		_main
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           
  8926                           ;psect for function _Lcd_Set_Cursor
  8927  18BF                     _Lcd_Set_Cursor:
  8928                           
  8929                           ;incstack = 0
  8930                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8931                           ;Lcd_Set_Cursor@x stored from wreg
  8932  18BF  00F6               	movwf	Lcd_Set_Cursor@x
  8933  18C0                     l3591:
  8934                           
  8935                           ;LCD.c: 68:  uint8_t a;;LCD.c: 69:  if(x == 1){
  8936  18C0  0376               	decf	Lcd_Set_Cursor@x,w
  8937  18C1  1D03               	btfss	3,2
  8938  18C2  28C4               	goto	u5791
  8939  18C3  28C5               	goto	u5790
  8940  18C4                     u5791:
  8941  18C4  28D1               	goto	l3597
  8942  18C5                     u5790:
  8943  18C5                     l3593:
  8944                           
  8945                           ;LCD.c: 70:    a = 0x80 + y;
  8946  18C5  0874               	movf	Lcd_Set_Cursor@y,w
  8947  18C6  3E80               	addlw	128
  8948  18C7  00F5               	movwf	??_Lcd_Set_Cursor
  8949  18C8  0875               	movf	??_Lcd_Set_Cursor,w
  8950  18C9  00F7               	movwf	Lcd_Set_Cursor@a
  8951  18CA                     l3595:
  8952                           
  8953                           ;LCD.c: 72:   datosLCD(a);
  8954  18CA  0877               	movf	Lcd_Set_Cursor@a,w
  8955  18CB  160A  158A  209D  160A  158A  	fcall	_datosLCD
  8956                           
  8957                           ;LCD.c: 73:     }
  8958  18D0  28E2               	goto	l156
  8959  18D1                     l3597:
  8960  18D1  3002               	movlw	2
  8961  18D2  0676               	xorwf	Lcd_Set_Cursor@x,w
  8962  18D3  1D03               	btfss	3,2
  8963  18D4  28D6               	goto	u5801
  8964  18D5  28D7               	goto	u5800
  8965  18D6                     u5801:
  8966  18D6  28E2               	goto	l156
  8967  18D7                     u5800:
  8968  18D7                     l3599:
  8969                           
  8970                           ;LCD.c: 75:    a = 0xC0 + y;
  8971  18D7  0874               	movf	Lcd_Set_Cursor@y,w
  8972  18D8  3EC0               	addlw	192
  8973  18D9  00F5               	movwf	??_Lcd_Set_Cursor
  8974  18DA  0875               	movf	??_Lcd_Set_Cursor,w
  8975  18DB  00F7               	movwf	Lcd_Set_Cursor@a
  8976  18DC                     l3601:
  8977                           
  8978                           ;LCD.c: 77:   datosLCD(a);
  8979  18DC  0877               	movf	Lcd_Set_Cursor@a,w
  8980  18DD  160A  158A  209D  160A  158A  	fcall	_datosLCD
  8981  18E2                     l156:
  8982  18E2  0008               	return
  8983  18E3                     __end_of_Lcd_Set_Cursor:
  8984                           
  8985                           	psect	text30
  8986  000E                     __ptext30:	
  8987 ;; *************** function _Lcd_Init *****************
  8988 ;; Defined at:
  8989 ;;		line 47 in file "LCD.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;		None
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg, status,2, status,0, pclath, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9003 ;;      Params:         0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0
  9005 ;;      Temps:          2       0       0       0       0
  9006 ;;      Totals:         2       0       0       0       0
  9007 ;;Total ram usage:        2 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    2
  9010 ;; This function calls:
  9011 ;;		_datosLCD
  9012 ;; This function is called by:
  9013 ;;		_main
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           
  9018                           ;psect for function _Lcd_Init
  9019  000E                     _Lcd_Init:
  9020  000E                     l3565:	
  9021                           ;incstack = 0
  9022                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9023                           
  9024                           
  9025                           ;LCD.c: 48:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9026  000E  3034               	movlw	52
  9027  000F  00F5               	movwf	??_Lcd_Init+1
  9028  0010  30F1               	movlw	241
  9029  0011  00F4               	movwf	??_Lcd_Init
  9030  0012                     u6387:
  9031  0012  0BF4               	decfsz	??_Lcd_Init,f
  9032  0013  2812               	goto	u6387
  9033  0014  0BF5               	decfsz	??_Lcd_Init+1,f
  9034  0015  2812               	goto	u6387
  9035  0016  2817               	nop2
  9036  0017                     l3567:
  9037                           
  9038                           ;LCD.c: 49:     datosLCD (0x30);
  9039  0017  3030               	movlw	48
  9040  0018  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9041  001D                     l3569:
  9042                           
  9043                           ;LCD.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9044  001D  300D               	movlw	13
  9045  001E  00F5               	movwf	??_Lcd_Init+1
  9046  001F  30FB               	movlw	251
  9047  0020  00F4               	movwf	??_Lcd_Init
  9048  0021                     u6397:
  9049  0021  0BF4               	decfsz	??_Lcd_Init,f
  9050  0022  2821               	goto	u6397
  9051  0023  0BF5               	decfsz	??_Lcd_Init+1,f
  9052  0024  2821               	goto	u6397
  9053  0025  2826               	nop2
  9054                           
  9055                           ;LCD.c: 51:     datosLCD (0x30);
  9056  0026  3030               	movlw	48
  9057  0027  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9058  002C                     l3571:
  9059                           
  9060                           ;LCD.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9061  002C  3042               	movlw	66
  9062  002D  00F4               	movwf	??_Lcd_Init
  9063  002E                     u6407:
  9064  002E  0BF4               	decfsz	??_Lcd_Init,f
  9065  002F  282E               	goto	u6407
  9066  0030  0000               	nop
  9067  0031                     l3573:
  9068                           
  9069                           ;LCD.c: 53:     datosLCD (0x30);
  9070  0031  3030               	movlw	48
  9071  0032  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9072                           
  9073                           ;LCD.c: 54:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9074  0037  3042               	movlw	66
  9075  0038  00F4               	movwf	??_Lcd_Init
  9076  0039                     u6417:
  9077  0039  0BF4               	decfsz	??_Lcd_Init,f
  9078  003A  2839               	goto	u6417
  9079  003B  0000               	nop
  9080  003C                     l3575:
  9081                           
  9082                           ;LCD.c: 55:     datosLCD (0x38);
  9083  003C  3038               	movlw	56
  9084  003D  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9085  0042                     l3577:
  9086                           
  9087                           ;LCD.c: 56:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9088  0042  3027               	movlw	39
  9089  0043  00F4               	movwf	??_Lcd_Init
  9090  0044                     u6427:
  9091  0044  0BF4               	decfsz	??_Lcd_Init,f
  9092  0045  2844               	goto	u6427
  9093  0046  2847               	nop2
  9094                           
  9095                           ;LCD.c: 57:     datosLCD (0x08);
  9096  0047  3008               	movlw	8
  9097  0048  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9098  004D                     l3579:
  9099                           
  9100                           ;LCD.c: 58:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9101  004D  3027               	movlw	39
  9102  004E  00F4               	movwf	??_Lcd_Init
  9103  004F                     u6437:
  9104  004F  0BF4               	decfsz	??_Lcd_Init,f
  9105  0050  284F               	goto	u6437
  9106  0051  2852               	nop2
  9107  0052                     l3581:
  9108                           
  9109                           ;LCD.c: 59:     datosLCD (0x01);
  9110  0052  3001               	movlw	1
  9111  0053  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9112                           
  9113                           ;LCD.c: 60:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9114  0058  300D               	movlw	13
  9115  0059  00F5               	movwf	??_Lcd_Init+1
  9116  005A  30FB               	movlw	251
  9117  005B  00F4               	movwf	??_Lcd_Init
  9118  005C                     u6447:
  9119  005C  0BF4               	decfsz	??_Lcd_Init,f
  9120  005D  285C               	goto	u6447
  9121  005E  0BF5               	decfsz	??_Lcd_Init+1,f
  9122  005F  285C               	goto	u6447
  9123  0060  2861               	nop2
  9124  0061                     l3583:
  9125                           
  9126                           ;LCD.c: 61:     datosLCD (0x06);
  9127  0061  3006               	movlw	6
  9128  0062  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9129  0067                     l3585:
  9130                           
  9131                           ;LCD.c: 62:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9132  0067  3027               	movlw	39
  9133  0068  00F4               	movwf	??_Lcd_Init
  9134  0069                     u6457:
  9135  0069  0BF4               	decfsz	??_Lcd_Init,f
  9136  006A  2869               	goto	u6457
  9137  006B  286C               	nop2
  9138                           
  9139                           ;LCD.c: 63:     datosLCD (0x0C);
  9140  006C  300C               	movlw	12
  9141  006D  160A  158A  209D  120A  118A  	fcall	_datosLCD
  9142  0072                     l3587:
  9143                           
  9144                           ;LCD.c: 64:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9145  0072  3027               	movlw	39
  9146  0073  00F4               	movwf	??_Lcd_Init
  9147  0074                     u6467:
  9148  0074  0BF4               	decfsz	??_Lcd_Init,f
  9149  0075  2874               	goto	u6467
  9150  0076  2877               	nop2
  9151  0077                     l150:
  9152  0077  0008               	return
  9153  0078                     __end_of_Lcd_Init:
  9154                           
  9155                           	psect	text31
  9156  1862                     __ptext31:	
  9157 ;; *************** function _LCD_Limpia *****************
  9158 ;; Defined at:
  9159 ;;		line 41 in file "LCD.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0, pclath, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9173 ;;      Params:         0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0
  9176 ;;      Totals:         0       0       0       0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    2
  9180 ;; This function calls:
  9181 ;;		_datosLCD
  9182 ;; This function is called by:
  9183 ;;		_main
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           
  9188                           ;psect for function _LCD_Limpia
  9189  1862                     _LCD_Limpia:
  9190  1862                     l3589:	
  9191                           ;incstack = 0
  9192                           ; Regs used in _LCD_Limpia: [wreg+status,2+status,0+pclath+cstack]
  9193                           
  9194                           
  9195                           ;LCD.c: 42:     datosLCD(0);
  9196  1862  3000               	movlw	0
  9197  1863  160A  158A  209D  160A  158A  	fcall	_datosLCD
  9198                           
  9199                           ;LCD.c: 43:     datosLCD(1);
  9200  1868  3001               	movlw	1
  9201  1869  160A  158A  209D  160A  158A  	fcall	_datosLCD
  9202  186E                     l147:
  9203  186E  0008               	return
  9204  186F                     __end_of_LCD_Limpia:
  9205                           
  9206                           	psect	text32
  9207  189D                     __ptext32:	
  9208 ;; *************** function _datosLCD *****************
  9209 ;; Defined at:
  9210 ;;		line 31 in file "LCD.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  x               1    wreg     unsigned char 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  x               1    3[COMMON] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, pclath, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9224 ;;      Params:         0       0       0       0       0
  9225 ;;      Locals:         1       0       0       0       0
  9226 ;;      Temps:          2       0       0       0       0
  9227 ;;      Totals:         3       0       0       0       0
  9228 ;;Total ram usage:        3 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    1
  9231 ;; This function calls:
  9232 ;;		_Puerto
  9233 ;; This function is called by:
  9234 ;;		_LCD_Limpia
  9235 ;;		_Lcd_Init
  9236 ;;		_Lcd_Set_Cursor
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           
  9241                           ;psect for function _datosLCD
  9242  189D                     _datosLCD:
  9243                           
  9244                           ;incstack = 0
  9245                           ; Regs used in _datosLCD: [wreg+status,2+status,0+pclath+cstack]
  9246                           ;datosLCD@x stored from wreg
  9247  189D  00F3               	movwf	datosLCD@x
  9248  189E                     l3035:
  9249                           
  9250                           ;LCD.c: 32:     RE0 = 0;
  9251  189E  1283               	bcf	3,5	;RP0=0, select bank0
  9252  189F  1303               	bcf	3,6	;RP1=0, select bank0
  9253  18A0  1009               	bcf	9,0	;volatile
  9254  18A1                     l3037:
  9255                           
  9256                           ;LCD.c: 33:     Puerto(x);
  9257  18A1  0873               	movf	datosLCD@x,w
  9258  18A2  160A  158A  21B8  160A  158A  	fcall	_Puerto
  9259  18A7                     l3039:
  9260                           
  9261                           ;LCD.c: 34:     RE1 = 1;
  9262  18A7  1283               	bcf	3,5	;RP0=0, select bank0
  9263  18A8  1303               	bcf	3,6	;RP1=0, select bank0
  9264  18A9  1489               	bsf	9,1	;volatile
  9265  18AA                     l3041:
  9266                           
  9267                           ;LCD.c: 35:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9268  18AA  3003               	movlw	3
  9269  18AB  00F1               	movwf	??_datosLCD
  9270  18AC                     u6477:
  9271  18AC  0BF1               	decfsz	??_datosLCD,f
  9272  18AD  28AC               	goto	u6477
  9273  18AE                     l3043:
  9274                           
  9275                           ;LCD.c: 36:     RE1 = 0;
  9276  18AE  1283               	bcf	3,5	;RP0=0, select bank0
  9277  18AF  1303               	bcf	3,6	;RP1=0, select bank0
  9278  18B0  1089               	bcf	9,1	;volatile
  9279  18B1                     l3045:
  9280                           
  9281                           ;LCD.c: 37:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9282  18B1  3003               	movlw	3
  9283  18B2  00F1               	movwf	??_datosLCD
  9284  18B3                     u6487:
  9285  18B3  0BF1               	decfsz	??_datosLCD,f
  9286  18B4  28B3               	goto	u6487
  9287  18B5                     l3047:
  9288                           
  9289                           ;LCD.c: 38:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9290  18B5  3006               	movlw	6
  9291  18B6  00F2               	movwf	??_datosLCD+1
  9292  18B7  3030               	movlw	48
  9293  18B8  00F1               	movwf	??_datosLCD
  9294  18B9                     u6497:
  9295  18B9  0BF1               	decfsz	??_datosLCD,f
  9296  18BA  28B9               	goto	u6497
  9297  18BB  0BF2               	decfsz	??_datosLCD+1,f
  9298  18BC  28B9               	goto	u6497
  9299  18BD  0000               	nop
  9300  18BE                     l144:
  9301  18BE  0008               	return
  9302  18BF                     __end_of_datosLCD:
  9303                           
  9304                           	psect	text33
  9305  19B8                     __ptext33:	
  9306 ;; *************** function _Puerto *****************
  9307 ;; Defined at:
  9308 ;;		line 9 in file "LCD.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  x               1    wreg     unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  x               1    0[COMMON] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9322 ;;      Params:         0       0       0       0       0
  9323 ;;      Locals:         1       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0
  9325 ;;      Totals:         1       0       0       0       0
  9326 ;;Total ram usage:        1 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_LCD_CMD
  9332 ;;		_datosLCD
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           
  9337                           ;psect for function _Puerto
  9338  19B8                     _Puerto:
  9339                           
  9340                           ;incstack = 0
  9341                           ; Regs used in _Puerto: [wreg]
  9342                           ;Puerto@x stored from wreg
  9343  19B8  00F0               	movwf	Puerto@x
  9344  19B9                     l2525:
  9345                           
  9346                           ;LCD.c: 10:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  9347  19B9  1C70               	btfss	Puerto@x,0
  9348  19BA  29BC               	goto	u3211
  9349  19BB  29BD               	goto	u3210
  9350  19BC                     u3211:
  9351  19BC  29C1               	goto	l122
  9352  19BD                     u3210:
  9353  19BD                     l2527:
  9354  19BD  1283               	bcf	3,5	;RP0=0, select bank0
  9355  19BE  1303               	bcf	3,6	;RP1=0, select bank0
  9356  19BF  1408               	bsf	8,0	;volatile
  9357  19C0  29C4               	goto	l123
  9358  19C1                     l122:
  9359  19C1  1283               	bcf	3,5	;RP0=0, select bank0
  9360  19C2  1303               	bcf	3,6	;RP1=0, select bank0
  9361  19C3  1008               	bcf	8,0	;volatile
  9362  19C4                     l123:
  9363                           
  9364                           ;LCD.c: 11:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  9365  19C4  1CF0               	btfss	Puerto@x,1
  9366  19C5  29C7               	goto	u3221
  9367  19C6  29C8               	goto	u3220
  9368  19C7                     u3221:
  9369  19C7  29CA               	goto	l124
  9370  19C8                     u3220:
  9371  19C8                     l2529:
  9372  19C8  1488               	bsf	8,1	;volatile
  9373  19C9  29CB               	goto	l125
  9374  19CA                     l124:
  9375  19CA  1088               	bcf	8,1	;volatile
  9376  19CB                     l125:
  9377                           
  9378                           ;LCD.c: 12:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  9379  19CB  1D70               	btfss	Puerto@x,2
  9380  19CC  29CE               	goto	u3231
  9381  19CD  29CF               	goto	u3230
  9382  19CE                     u3231:
  9383  19CE  29D1               	goto	l126
  9384  19CF                     u3230:
  9385  19CF                     l2531:
  9386  19CF  1508               	bsf	8,2	;volatile
  9387  19D0  29D2               	goto	l127
  9388  19D1                     l126:
  9389  19D1  1108               	bcf	8,2	;volatile
  9390  19D2                     l127:
  9391                           
  9392                           ;LCD.c: 13:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  9393  19D2  1DF0               	btfss	Puerto@x,3
  9394  19D3  29D5               	goto	u3241
  9395  19D4  29D6               	goto	u3240
  9396  19D5                     u3241:
  9397  19D5  29D8               	goto	l128
  9398  19D6                     u3240:
  9399  19D6                     l2533:
  9400  19D6  1588               	bsf	8,3	;volatile
  9401  19D7  29D9               	goto	l129
  9402  19D8                     l128:
  9403  19D8  1188               	bcf	8,3	;volatile
  9404  19D9                     l129:
  9405                           
  9406                           ;LCD.c: 14:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  9407  19D9  1E70               	btfss	Puerto@x,4
  9408  19DA  29DC               	goto	u3251
  9409  19DB  29DD               	goto	u3250
  9410  19DC                     u3251:
  9411  19DC  29DF               	goto	l130
  9412  19DD                     u3250:
  9413  19DD                     l2535:
  9414  19DD  1608               	bsf	8,4	;volatile
  9415  19DE  29E0               	goto	l131
  9416  19DF                     l130:
  9417  19DF  1208               	bcf	8,4	;volatile
  9418  19E0                     l131:
  9419                           
  9420                           ;LCD.c: 15:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  9421  19E0  1EF0               	btfss	Puerto@x,5
  9422  19E1  29E3               	goto	u3261
  9423  19E2  29E4               	goto	u3260
  9424  19E3                     u3261:
  9425  19E3  29E6               	goto	l132
  9426  19E4                     u3260:
  9427  19E4                     l2537:
  9428  19E4  1688               	bsf	8,5	;volatile
  9429  19E5  29E7               	goto	l133
  9430  19E6                     l132:
  9431  19E6  1288               	bcf	8,5	;volatile
  9432  19E7                     l133:
  9433                           
  9434                           ;LCD.c: 16:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  9435  19E7  1F70               	btfss	Puerto@x,6
  9436  19E8  29EA               	goto	u3271
  9437  19E9  29EB               	goto	u3270
  9438  19EA                     u3271:
  9439  19EA  29ED               	goto	l134
  9440  19EB                     u3270:
  9441  19EB                     l2539:
  9442  19EB  1708               	bsf	8,6	;volatile
  9443  19EC  29EE               	goto	l135
  9444  19ED                     l134:
  9445  19ED  1308               	bcf	8,6	;volatile
  9446  19EE                     l135:
  9447                           
  9448                           ;LCD.c: 17:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  9449  19EE  1FF0               	btfss	Puerto@x,7
  9450  19EF  29F1               	goto	u3281
  9451  19F0  29F2               	goto	u3280
  9452  19F1                     u3281:
  9453  19F1  29F4               	goto	l136
  9454  19F2                     u3280:
  9455  19F2                     l2541:
  9456  19F2  1788               	bsf	8,7	;volatile
  9457  19F3  29F5               	goto	l138
  9458  19F4                     l136:
  9459  19F4  1388               	bcf	8,7	;volatile
  9460  19F5                     l138:
  9461  19F5  0008               	return
  9462  19F6                     __end_of_Puerto:
  9463                           
  9464                           	psect	text34
  9465  1C54                     __ptext34:	
  9466 ;; *************** function _ADC_2 *****************
  9467 ;; Defined at:
  9468 ;;		line 151 in file "lab03.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;		None
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;		None
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  4   22[None  ] float 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9482 ;;      Params:         0       0       0       0       0
  9483 ;;      Locals:         0       0       0       0       0
  9484 ;;      Temps:          0       4       0       0       0
  9485 ;;      Totals:         0       4       0       0       0
  9486 ;;Total ram usage:        4 bytes
  9487 ;; Hardware stack levels used:    1
  9488 ;; Hardware stack levels required when called:    2
  9489 ;; This function calls:
  9490 ;;		_Canal_ADC
  9491 ;;		___fldiv
  9492 ;;		___flmul
  9493 ;;		___xxtofl
  9494 ;; This function is called by:
  9495 ;;		_main
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function _ADC_2
  9501  1C54                     _ADC_2:
  9502  1C54                     l3627:	
  9503                           ;incstack = 0
  9504                           ; Regs used in _ADC_2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9505                           
  9506                           
  9507                           ;lab03.c: 152:     Canal_ADC(1);
  9508  1C54  3001               	movlw	1
  9509  1C55  00F0               	movwf	Canal_ADC@x
  9510  1C56  3000               	movlw	0
  9511  1C57  00F1               	movwf	Canal_ADC@x+1
  9512  1C58  160A  158A  2696  160A  158A  	fcall	_Canal_ADC
  9513  1C5D                     l3629:
  9514                           
  9515                           ;lab03.c: 153:     ADCON0bits.ADCS0 = 1;
  9516  1C5D  1283               	bcf	3,5	;RP0=0, select bank0
  9517  1C5E  1303               	bcf	3,6	;RP1=0, select bank0
  9518  1C5F  171F               	bsf	31,6	;volatile
  9519  1C60                     l3631:
  9520                           
  9521                           ;lab03.c: 154:     ADCON0bits.ADCS1 = 0;
  9522  1C60  139F               	bcf	31,7	;volatile
  9523  1C61                     l3633:
  9524                           
  9525                           ;lab03.c: 155:     ADCON0bits.ADON = 1;
  9526  1C61  141F               	bsf	31,0	;volatile
  9527  1C62                     l3635:
  9528                           
  9529                           ;lab03.c: 156:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  9530  1C62  30A5               	movlw	165
  9531  1C63  1283               	bcf	3,5	;RP0=0, select bank0
  9532  1C64  1303               	bcf	3,6	;RP1=0, select bank0
  9533  1C65  00D8               	movwf	??_ADC_2
  9534  1C66                     u6507:
  9535  1C66  0BD8               	decfsz	??_ADC_2,f
  9536  1C67  2C66               	goto	u6507
  9537  1C68  2C69               	nop2
  9538  1C69                     l3637:
  9539                           
  9540                           ;lab03.c: 157:     ADCON0bits.GO = 1;
  9541  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  9542  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  9543  1C6B  149F               	bsf	31,1	;volatile
  9544                           
  9545                           ;lab03.c: 158:     while (ADCON0bits.GO == 1){
  9546  1C6C  2CC6               	goto	l3641
  9547  1C6D                     l3639:
  9548                           
  9549                           ;lab03.c: 159:         volt2 = ((ADRESH * 5.0)/255);
  9550  1C6D  3043               	movlw	67
  9551  1C6E  00C1               	movwf	___fldiv@a+3
  9552  1C6F  307F               	movlw	127
  9553  1C70  00C0               	movwf	___fldiv@a+2
  9554  1C71  3000               	movlw	0
  9555  1C72  00BF               	movwf	___fldiv@a+1
  9556  1C73  3000               	movlw	0
  9557  1C74  00BE               	movwf	___fldiv@a
  9558  1C75  3040               	movlw	64
  9559  1C76  00A7               	movwf	___flmul@b+3
  9560  1C77  30A0               	movlw	160
  9561  1C78  00A6               	movwf	___flmul@b+2
  9562  1C79  3000               	movlw	0
  9563  1C7A  00A5               	movwf	___flmul@b+1
  9564  1C7B  3000               	movlw	0
  9565  1C7C  00A4               	movwf	___flmul@b
  9566  1C7D  081E               	movf	30,w	;volatile
  9567  1C7E  00D8               	movwf	??_ADC_2
  9568  1C7F  01D9               	clrf	??_ADC_2+1
  9569  1C80  01DA               	clrf	??_ADC_2+2
  9570  1C81  01DB               	clrf	??_ADC_2+3
  9571  1C82  085B               	movf	??_ADC_2+3,w
  9572  1C83  00F3               	movwf	___xxtofl@val+3
  9573  1C84  085A               	movf	??_ADC_2+2,w
  9574  1C85  00F2               	movwf	___xxtofl@val+2
  9575  1C86  0859               	movf	??_ADC_2+1,w
  9576  1C87  00F1               	movwf	___xxtofl@val+1
  9577  1C88  0858               	movf	??_ADC_2,w
  9578  1C89  00F0               	movwf	___xxtofl@val
  9579  1C8A  3001               	movlw	1
  9580  1C8B  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9581  1C90  0873               	movf	?___xxtofl+3,w
  9582  1C91  1283               	bcf	3,5	;RP0=0, select bank0
  9583  1C92  1303               	bcf	3,6	;RP1=0, select bank0
  9584  1C93  00AB               	movwf	___flmul@a+3
  9585  1C94  0872               	movf	?___xxtofl+2,w
  9586  1C95  00AA               	movwf	___flmul@a+2
  9587  1C96  0871               	movf	?___xxtofl+1,w
  9588  1C97  00A9               	movwf	___flmul@a+1
  9589  1C98  0870               	movf	?___xxtofl,w
  9590  1C99  00A8               	movwf	___flmul@a
  9591  1C9A  120A  158A  249F  160A  158A  	fcall	___flmul
  9592  1C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9593  1CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9594  1CA1  0827               	movf	?___flmul+3,w
  9595  1CA2  00C5               	movwf	___fldiv@b+3
  9596  1CA3  0826               	movf	?___flmul+2,w
  9597  1CA4  00C4               	movwf	___fldiv@b+2
  9598  1CA5  0825               	movf	?___flmul+1,w
  9599  1CA6  00C3               	movwf	___fldiv@b+1
  9600  1CA7  0824               	movf	?___flmul,w
  9601  1CA8  00C2               	movwf	___fldiv@b
  9602  1CA9  160A  118A  2190  160A  158A  	fcall	___fldiv
  9603  1CAE  1283               	bcf	3,5	;RP0=0, select bank0
  9604  1CAF  1303               	bcf	3,6	;RP1=0, select bank0
  9605  1CB0  0841               	movf	?___fldiv+3,w
  9606  1CB1  1683               	bsf	3,5	;RP0=1, select bank1
  9607  1CB2  1303               	bcf	3,6	;RP1=0, select bank1
  9608  1CB3  00CF               	movwf	(_volt2+3)^(0+128)
  9609  1CB4  1283               	bcf	3,5	;RP0=0, select bank0
  9610  1CB5  1303               	bcf	3,6	;RP1=0, select bank0
  9611  1CB6  0840               	movf	?___fldiv+2,w
  9612  1CB7  1683               	bsf	3,5	;RP0=1, select bank1
  9613  1CB8  1303               	bcf	3,6	;RP1=0, select bank1
  9614  1CB9  00CE               	movwf	(_volt2+2)^(0+128)
  9615  1CBA  1283               	bcf	3,5	;RP0=0, select bank0
  9616  1CBB  1303               	bcf	3,6	;RP1=0, select bank0
  9617  1CBC  083F               	movf	?___fldiv+1,w
  9618  1CBD  1683               	bsf	3,5	;RP0=1, select bank1
  9619  1CBE  1303               	bcf	3,6	;RP1=0, select bank1
  9620  1CBF  00CD               	movwf	(_volt2+1)^(0+128)
  9621  1CC0  1283               	bcf	3,5	;RP0=0, select bank0
  9622  1CC1  1303               	bcf	3,6	;RP1=0, select bank0
  9623  1CC2  083E               	movf	?___fldiv,w
  9624  1CC3  1683               	bsf	3,5	;RP0=1, select bank1
  9625  1CC4  1303               	bcf	3,6	;RP1=0, select bank1
  9626  1CC5  00CC               	movwf	_volt2^(0+128)
  9627  1CC6                     l3641:
  9628                           
  9629                           ;lab03.c: 158:     while (ADCON0bits.GO == 1){
  9630  1CC6  1283               	bcf	3,5	;RP0=0, select bank0
  9631  1CC7  189F               	btfsc	31,1	;volatile
  9632  1CC8  2CCA               	goto	u5851
  9633  1CC9  2CCB               	goto	u5850
  9634  1CCA                     u5851:
  9635  1CCA  2C6D               	goto	l3639
  9636  1CCB                     u5850:
  9637  1CCB                     l85:
  9638  1CCB  0008               	return
  9639  1CCC                     __end_of_ADC_2:
  9640                           
  9641                           	psect	text35
  9642  1BDD                     __ptext35:	
  9643 ;; *************** function _ADC_1 *****************
  9644 ;; Defined at:
  9645 ;;		line 140 in file "lab03.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;		None
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  4   20[None  ] float 
  9652 ;; Registers used:
  9653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9659 ;;      Params:         0       0       0       0       0
  9660 ;;      Locals:         0       0       0       0       0
  9661 ;;      Temps:          0       4       0       0       0
  9662 ;;      Totals:         0       4       0       0       0
  9663 ;;Total ram usage:        4 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:    2
  9666 ;; This function calls:
  9667 ;;		_Canal_ADC
  9668 ;;		___fldiv
  9669 ;;		___flmul
  9670 ;;		___xxtofl
  9671 ;; This function is called by:
  9672 ;;		_main
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function _ADC_1
  9678  1BDD                     _ADC_1:
  9679  1BDD                     l3611:	
  9680                           ;incstack = 0
  9681                           ; Regs used in _ADC_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9682                           
  9683                           
  9684                           ;lab03.c: 141:     Canal_ADC(0);
  9685  1BDD  3000               	movlw	0
  9686  1BDE  00F0               	movwf	Canal_ADC@x
  9687  1BDF  00F1               	movwf	Canal_ADC@x+1
  9688  1BE0  160A  158A  2696  160A  158A  	fcall	_Canal_ADC
  9689  1BE5                     l3613:
  9690                           
  9691                           ;lab03.c: 142:     ADCON0bits.ADCS0 = 1;
  9692  1BE5  1283               	bcf	3,5	;RP0=0, select bank0
  9693  1BE6  1303               	bcf	3,6	;RP1=0, select bank0
  9694  1BE7  171F               	bsf	31,6	;volatile
  9695  1BE8                     l3615:
  9696                           
  9697                           ;lab03.c: 143:     ADCON0bits.ADCS1 = 0;
  9698  1BE8  139F               	bcf	31,7	;volatile
  9699  1BE9                     l3617:
  9700                           
  9701                           ;lab03.c: 144:     ADCON0bits.ADON = 1;
  9702  1BE9  141F               	bsf	31,0	;volatile
  9703  1BEA                     l3619:
  9704                           
  9705                           ;lab03.c: 145:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
  9706  1BEA  30A5               	movlw	165
  9707  1BEB  1283               	bcf	3,5	;RP0=0, select bank0
  9708  1BEC  1303               	bcf	3,6	;RP1=0, select bank0
  9709  1BED  00D8               	movwf	??_ADC_1
  9710  1BEE                     u6517:
  9711  1BEE  0BD8               	decfsz	??_ADC_1,f
  9712  1BEF  2BEE               	goto	u6517
  9713  1BF0  2BF1               	nop2
  9714  1BF1                     l3621:
  9715                           
  9716                           ;lab03.c: 146:     ADCON0bits.GO = 1;
  9717  1BF1  1283               	bcf	3,5	;RP0=0, select bank0
  9718  1BF2  1303               	bcf	3,6	;RP1=0, select bank0
  9719  1BF3  149F               	bsf	31,1	;volatile
  9720                           
  9721                           ;lab03.c: 147:     while (ADCON0bits.GO == 1){
  9722  1BF4  2C4E               	goto	l3625
  9723  1BF5                     l3623:
  9724                           
  9725                           ;lab03.c: 148:         volt = ((ADRESH * 5.0)/255);
  9726  1BF5  3043               	movlw	67
  9727  1BF6  00C1               	movwf	___fldiv@a+3
  9728  1BF7  307F               	movlw	127
  9729  1BF8  00C0               	movwf	___fldiv@a+2
  9730  1BF9  3000               	movlw	0
  9731  1BFA  00BF               	movwf	___fldiv@a+1
  9732  1BFB  3000               	movlw	0
  9733  1BFC  00BE               	movwf	___fldiv@a
  9734  1BFD  3040               	movlw	64
  9735  1BFE  00A7               	movwf	___flmul@b+3
  9736  1BFF  30A0               	movlw	160
  9737  1C00  00A6               	movwf	___flmul@b+2
  9738  1C01  3000               	movlw	0
  9739  1C02  00A5               	movwf	___flmul@b+1
  9740  1C03  3000               	movlw	0
  9741  1C04  00A4               	movwf	___flmul@b
  9742  1C05  081E               	movf	30,w	;volatile
  9743  1C06  00D8               	movwf	??_ADC_1
  9744  1C07  01D9               	clrf	??_ADC_1+1
  9745  1C08  01DA               	clrf	??_ADC_1+2
  9746  1C09  01DB               	clrf	??_ADC_1+3
  9747  1C0A  085B               	movf	??_ADC_1+3,w
  9748  1C0B  00F3               	movwf	___xxtofl@val+3
  9749  1C0C  085A               	movf	??_ADC_1+2,w
  9750  1C0D  00F2               	movwf	___xxtofl@val+2
  9751  1C0E  0859               	movf	??_ADC_1+1,w
  9752  1C0F  00F1               	movwf	___xxtofl@val+1
  9753  1C10  0858               	movf	??_ADC_1,w
  9754  1C11  00F0               	movwf	___xxtofl@val
  9755  1C12  3001               	movlw	1
  9756  1C13  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9757  1C18  0873               	movf	?___xxtofl+3,w
  9758  1C19  1283               	bcf	3,5	;RP0=0, select bank0
  9759  1C1A  1303               	bcf	3,6	;RP1=0, select bank0
  9760  1C1B  00AB               	movwf	___flmul@a+3
  9761  1C1C  0872               	movf	?___xxtofl+2,w
  9762  1C1D  00AA               	movwf	___flmul@a+2
  9763  1C1E  0871               	movf	?___xxtofl+1,w
  9764  1C1F  00A9               	movwf	___flmul@a+1
  9765  1C20  0870               	movf	?___xxtofl,w
  9766  1C21  00A8               	movwf	___flmul@a
  9767  1C22  120A  158A  249F  160A  158A  	fcall	___flmul
  9768  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  9769  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  9770  1C29  0827               	movf	?___flmul+3,w
  9771  1C2A  00C5               	movwf	___fldiv@b+3
  9772  1C2B  0826               	movf	?___flmul+2,w
  9773  1C2C  00C4               	movwf	___fldiv@b+2
  9774  1C2D  0825               	movf	?___flmul+1,w
  9775  1C2E  00C3               	movwf	___fldiv@b+1
  9776  1C2F  0824               	movf	?___flmul,w
  9777  1C30  00C2               	movwf	___fldiv@b
  9778  1C31  160A  118A  2190  160A  158A  	fcall	___fldiv
  9779  1C36  1283               	bcf	3,5	;RP0=0, select bank0
  9780  1C37  1303               	bcf	3,6	;RP1=0, select bank0
  9781  1C38  0841               	movf	?___fldiv+3,w
  9782  1C39  1683               	bsf	3,5	;RP0=1, select bank1
  9783  1C3A  1303               	bcf	3,6	;RP1=0, select bank1
  9784  1C3B  00D3               	movwf	(_volt+3)^(0+128)
  9785  1C3C  1283               	bcf	3,5	;RP0=0, select bank0
  9786  1C3D  1303               	bcf	3,6	;RP1=0, select bank0
  9787  1C3E  0840               	movf	?___fldiv+2,w
  9788  1C3F  1683               	bsf	3,5	;RP0=1, select bank1
  9789  1C40  1303               	bcf	3,6	;RP1=0, select bank1
  9790  1C41  00D2               	movwf	(_volt+2)^(0+128)
  9791  1C42  1283               	bcf	3,5	;RP0=0, select bank0
  9792  1C43  1303               	bcf	3,6	;RP1=0, select bank0
  9793  1C44  083F               	movf	?___fldiv+1,w
  9794  1C45  1683               	bsf	3,5	;RP0=1, select bank1
  9795  1C46  1303               	bcf	3,6	;RP1=0, select bank1
  9796  1C47  00D1               	movwf	(_volt+1)^(0+128)
  9797  1C48  1283               	bcf	3,5	;RP0=0, select bank0
  9798  1C49  1303               	bcf	3,6	;RP1=0, select bank0
  9799  1C4A  083E               	movf	?___fldiv,w
  9800  1C4B  1683               	bsf	3,5	;RP0=1, select bank1
  9801  1C4C  1303               	bcf	3,6	;RP1=0, select bank1
  9802  1C4D  00D0               	movwf	_volt^(0+128)
  9803  1C4E                     l3625:
  9804                           
  9805                           ;lab03.c: 147:     while (ADCON0bits.GO == 1){
  9806  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  9807  1C4F  189F               	btfsc	31,1	;volatile
  9808  1C50  2C52               	goto	u5841
  9809  1C51  2C53               	goto	u5840
  9810  1C52                     u5841:
  9811  1C52  2BF5               	goto	l3623
  9812  1C53                     u5840:
  9813  1C53                     l79:
  9814  1C53  0008               	return
  9815  1C54                     __end_of_ADC_1:
  9816                           
  9817                           	psect	text36
  9818  1F46                     __ptext36:	
  9819 ;; *************** function ___xxtofl *****************
  9820 ;; Defined at:
  9821 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  sign            1    wreg     unsigned char 
  9824 ;;  val             4    0[COMMON] long 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;  sign            1    8[COMMON] unsigned char 
  9827 ;;  arg             4   10[COMMON] unsigned long 
  9828 ;;  exp             1    9[COMMON] unsigned char 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  4    0[COMMON] unsigned char 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9838 ;;      Params:         4       0       0       0       0
  9839 ;;      Locals:         6       0       0       0       0
  9840 ;;      Temps:          4       0       0       0       0
  9841 ;;      Totals:        14       0       0       0       0
  9842 ;;Total ram usage:       14 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; This function calls:
  9845 ;;		Nothing
  9846 ;; This function is called by:
  9847 ;;		_ADC_1
  9848 ;;		_ADC_2
  9849 ;;		_sprintf
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           
  9854                           ;psect for function ___xxtofl
  9855  1F46                     ___xxtofl:
  9856                           
  9857                           ;incstack = 0
  9858                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9859                           ;___xxtofl@sign stored from wreg
  9860  1F46  00F8               	movwf	___xxtofl@sign
  9861  1F47                     l3505:
  9862  1F47  0878               	movf	___xxtofl@sign,w
  9863  1F48  1903               	btfsc	3,2
  9864  1F49  2F4B               	goto	u5651
  9865  1F4A  2F4C               	goto	u5650
  9866  1F4B                     u5651:
  9867  1F4B  2F60               	goto	l3511
  9868  1F4C                     u5650:
  9869  1F4C                     l3507:
  9870  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9871  1F4D  2F4F               	goto	u5661
  9872  1F4E  2F50               	goto	u5660
  9873  1F4F                     u5661:
  9874  1F4F  2F60               	goto	l3511
  9875  1F50                     u5660:
  9876  1F50                     l3509:
  9877  1F50  0970               	comf	___xxtofl@val,w
  9878  1F51  00FA               	movwf	___xxtofl@arg
  9879  1F52  0971               	comf	___xxtofl@val+1,w
  9880  1F53  00FB               	movwf	___xxtofl@arg+1
  9881  1F54  0972               	comf	___xxtofl@val+2,w
  9882  1F55  00FC               	movwf	___xxtofl@arg+2
  9883  1F56  0973               	comf	___xxtofl@val+3,w
  9884  1F57  00FD               	movwf	___xxtofl@arg+3
  9885  1F58  0AFA               	incf	___xxtofl@arg,f
  9886  1F59  1903               	skipnz
  9887  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9888  1F5B  1903               	skipnz
  9889  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9890  1F5D  1903               	skipnz
  9891  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9892  1F5F  2F68               	goto	l895
  9893  1F60                     l3511:
  9894  1F60  0873               	movf	___xxtofl@val+3,w
  9895  1F61  00FD               	movwf	___xxtofl@arg+3
  9896  1F62  0872               	movf	___xxtofl@val+2,w
  9897  1F63  00FC               	movwf	___xxtofl@arg+2
  9898  1F64  0871               	movf	___xxtofl@val+1,w
  9899  1F65  00FB               	movwf	___xxtofl@arg+1
  9900  1F66  0870               	movf	___xxtofl@val,w
  9901  1F67  00FA               	movwf	___xxtofl@arg
  9902  1F68                     l895:
  9903  1F68  0873               	movf	___xxtofl@val+3,w
  9904  1F69  0472               	iorwf	___xxtofl@val+2,w
  9905  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9906  1F6B  0470               	iorwf	___xxtofl@val,w
  9907  1F6C  1D03               	skipz
  9908  1F6D  2F6F               	goto	u5671
  9909  1F6E  2F70               	goto	u5670
  9910  1F6F                     u5671:
  9911  1F6F  2F79               	goto	l3517
  9912  1F70                     u5670:
  9913  1F70                     l3513:
  9914  1F70  3000               	movlw	0
  9915  1F71  00F3               	movwf	?___xxtofl+3
  9916  1F72  3000               	movlw	0
  9917  1F73  00F2               	movwf	?___xxtofl+2
  9918  1F74  3000               	movlw	0
  9919  1F75  00F1               	movwf	?___xxtofl+1
  9920  1F76  3000               	movlw	0
  9921  1F77  00F0               	movwf	?___xxtofl
  9922  1F78  2FFF               	goto	l897
  9923  1F79                     l3517:
  9924  1F79  3096               	movlw	150
  9925  1F7A  00F4               	movwf	??___xxtofl
  9926  1F7B  0874               	movf	??___xxtofl,w
  9927  1F7C  00F9               	movwf	___xxtofl@exp
  9928  1F7D  2F8B               	goto	l3521
  9929  1F7E                     l3519:
  9930  1F7E  3001               	movlw	1
  9931  1F7F  00F4               	movwf	??___xxtofl
  9932  1F80  0874               	movf	??___xxtofl,w
  9933  1F81  07F9               	addwf	___xxtofl@exp,f
  9934  1F82  3001               	movlw	1
  9935  1F83                     u5685:
  9936  1F83  1003               	clrc
  9937  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9938  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9939  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9940  1F87  0CFA               	rrf	___xxtofl@arg,f
  9941  1F88  3EFF               	addlw	-1
  9942  1F89  1D03               	skipz
  9943  1F8A  2F83               	goto	u5685
  9944  1F8B                     l3521:
  9945  1F8B  30FE               	movlw	254
  9946  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9947  1F8D  1D03               	btfss	3,2
  9948  1F8E  2F90               	goto	u5691
  9949  1F8F  2F91               	goto	u5690
  9950  1F90                     u5691:
  9951  1F90  2F7E               	goto	l3519
  9952  1F91                     u5690:
  9953  1F91  2FAD               	goto	l901
  9954  1F92                     l3523:
  9955  1F92  3001               	movlw	1
  9956  1F93  00F4               	movwf	??___xxtofl
  9957  1F94  0874               	movf	??___xxtofl,w
  9958  1F95  07F9               	addwf	___xxtofl@exp,f
  9959  1F96                     l3525:
  9960  1F96  3001               	movlw	1
  9961  1F97  07FA               	addwf	___xxtofl@arg,f
  9962  1F98  3000               	movlw	0
  9963  1F99  1803               	skipnc
  9964  1F9A  3001               	movlw	1
  9965  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9966  1F9C  3000               	movlw	0
  9967  1F9D  1803               	skipnc
  9968  1F9E  3001               	movlw	1
  9969  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9970  1FA0  3000               	movlw	0
  9971  1FA1  1803               	skipnc
  9972  1FA2  3001               	movlw	1
  9973  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9974  1FA4                     l3527:
  9975  1FA4  3001               	movlw	1
  9976  1FA5                     u5705:
  9977  1FA5  1003               	clrc
  9978  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9979  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9980  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9981  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9982  1FAA  3EFF               	addlw	-1
  9983  1FAB  1D03               	skipz
  9984  1FAC  2FA5               	goto	u5705
  9985  1FAD                     l901:
  9986  1FAD  30FF               	movlw	255
  9987  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9988  1FAF  1D03               	btfss	3,2
  9989  1FB0  2FB2               	goto	u5711
  9990  1FB1  2FB3               	goto	u5710
  9991  1FB2                     u5711:
  9992  1FB2  2F92               	goto	l3523
  9993  1FB3                     u5710:
  9994  1FB3  2FBF               	goto	l3531
  9995  1FB4                     l3529:
  9996  1FB4  3001               	movlw	1
  9997  1FB5  02F9               	subwf	___xxtofl@exp,f
  9998  1FB6  3001               	movlw	1
  9999  1FB7  00F4               	movwf	??___xxtofl
 10000  1FB8                     u5725:
 10001  1FB8  1003               	clrc
 10002  1FB9  0DFA               	rlf	___xxtofl@arg,f
 10003  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
 10004  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
 10005  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
 10006  1FBD  0BF4               	decfsz	??___xxtofl,f
 10007  1FBE  2FB8               	goto	u5725
 10008  1FBF                     l3531:
 10009  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
 10010  1FC0  2FC2               	goto	u5731
 10011  1FC1  2FC3               	goto	u5730
 10012  1FC2                     u5731:
 10013  1FC2  2FC9               	goto	l908
 10014  1FC3                     u5730:
 10015  1FC3                     l3533:
 10016  1FC3  3002               	movlw	2
 10017  1FC4  0279               	subwf	___xxtofl@exp,w
 10018  1FC5  1803               	skipnc
 10019  1FC6  2FC8               	goto	u5741
 10020  1FC7  2FC9               	goto	u5740
 10021  1FC8                     u5741:
 10022  1FC8  2FB4               	goto	l3529
 10023  1FC9                     u5740:
 10024  1FC9                     l908:
 10025  1FC9  1879               	btfsc	___xxtofl@exp,0
 10026  1FCA  2FCC               	goto	u5751
 10027  1FCB  2FCD               	goto	u5750
 10028  1FCC                     u5751:
 10029  1FCC  2FD5               	goto	l909
 10030  1FCD                     u5750:
 10031  1FCD                     l3535:
 10032  1FCD  30FF               	movlw	255
 10033  1FCE  05FA               	andwf	___xxtofl@arg,f
 10034  1FCF  30FF               	movlw	255
 10035  1FD0  05FB               	andwf	___xxtofl@arg+1,f
 10036  1FD1  307F               	movlw	127
 10037  1FD2  05FC               	andwf	___xxtofl@arg+2,f
 10038  1FD3  30FF               	movlw	255
 10039  1FD4  05FD               	andwf	___xxtofl@arg+3,f
 10040  1FD5                     l909:
 10041  1FD5  1003               	clrc
 10042  1FD6  0CF9               	rrf	___xxtofl@exp,f
 10043  1FD7                     l3537:
 10044  1FD7  0879               	movf	___xxtofl@exp,w
 10045  1FD8  00F4               	movwf	??___xxtofl
 10046  1FD9  01F5               	clrf	??___xxtofl+1
 10047  1FDA  01F6               	clrf	??___xxtofl+2
 10048  1FDB  01F7               	clrf	??___xxtofl+3
 10049  1FDC  3018               	movlw	24
 10050  1FDD                     u5765:
 10051  1FDD  1003               	clrc
 10052  1FDE  0DF4               	rlf	??___xxtofl,f
 10053  1FDF  0DF5               	rlf	??___xxtofl+1,f
 10054  1FE0  0DF6               	rlf	??___xxtofl+2,f
 10055  1FE1  0DF7               	rlf	??___xxtofl+3,f
 10056  1FE2                     u5760:
 10057  1FE2  3EFF               	addlw	-1
 10058  1FE3  1D03               	skipz
 10059  1FE4  2FDD               	goto	u5765
 10060  1FE5  0874               	movf	??___xxtofl,w
 10061  1FE6  04FA               	iorwf	___xxtofl@arg,f
 10062  1FE7  0875               	movf	??___xxtofl+1,w
 10063  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
 10064  1FE9  0876               	movf	??___xxtofl+2,w
 10065  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
 10066  1FEB  0877               	movf	??___xxtofl+3,w
 10067  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
 10068  1FED                     l3539:
 10069  1FED  0878               	movf	___xxtofl@sign,w
 10070  1FEE  1903               	btfsc	3,2
 10071  1FEF  2FF1               	goto	u5771
 10072  1FF0  2FF2               	goto	u5770
 10073  1FF1                     u5771:
 10074  1FF1  2FF7               	goto	l3545
 10075  1FF2                     u5770:
 10076  1FF2                     l3541:
 10077  1FF2  1FF3               	btfss	___xxtofl@val+3,7
 10078  1FF3  2FF5               	goto	u5781
 10079  1FF4  2FF6               	goto	u5780
 10080  1FF5                     u5781:
 10081  1FF5  2FF7               	goto	l3545
 10082  1FF6                     u5780:
 10083  1FF6                     l3543:
 10084  1FF6  17FD               	bsf	___xxtofl@arg+3,7
 10085  1FF7                     l3545:
 10086  1FF7  087D               	movf	___xxtofl@arg+3,w
 10087  1FF8  00F3               	movwf	?___xxtofl+3
 10088  1FF9  087C               	movf	___xxtofl@arg+2,w
 10089  1FFA  00F2               	movwf	?___xxtofl+2
 10090  1FFB  087B               	movf	___xxtofl@arg+1,w
 10091  1FFC  00F1               	movwf	?___xxtofl+1
 10092  1FFD  087A               	movf	___xxtofl@arg,w
 10093  1FFE  00F0               	movwf	?___xxtofl
 10094  1FFF                     l897:
 10095  1FFF  0008               	return
 10096  2000                     __end_of___xxtofl:
 10097                           
 10098                           	psect	text37
 10099  0C9F                     __ptext37:	
 10100 ;; *************** function ___flmul *****************
 10101 ;; Defined at:
 10102 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;  b               4    4[BANK0 ] unsigned char 
 10105 ;;  a               4    8[BANK0 ] unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  prod            4   24[BANK0 ] struct .
 10108 ;;  grs             4   18[BANK0 ] unsigned long 
 10109 ;;  temp            2   28[BANK0 ] struct .
 10110 ;;  bexp            1   23[BANK0 ] unsigned char 
 10111 ;;  aexp            1   22[BANK0 ] unsigned char 
 10112 ;;  sign            1   17[BANK0 ] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  4    4[BANK0 ] unsigned char 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10122 ;;      Params:         0       8       0       0       0
 10123 ;;      Locals:         0      13       0       0       0
 10124 ;;      Temps:          0       5       0       0       0
 10125 ;;      Totals:         0      26       0       0       0
 10126 ;;Total ram usage:       26 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    1
 10129 ;; This function calls:
 10130 ;;		__Umul8_16
 10131 ;; This function is called by:
 10132 ;;		_ADC_1
 10133 ;;		_ADC_2
 10134 ;;		_fround
 10135 ;;		_scale
 10136 ;;		_sprintf
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           
 10141                           ;psect for function ___flmul
 10142  0C9F                     ___flmul:
 10143  0C9F                     l2867:	
 10144                           ;incstack = 0
 10145                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10146                           
 10147  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
 10148  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
 10149  0CA1  0827               	movf	___flmul@b+3,w
 10150  0CA2  3980               	andlw	128
 10151  0CA3  00AC               	movwf	??___flmul
 10152  0CA4  082C               	movf	??___flmul,w
 10153  0CA5  00B1               	movwf	___flmul@sign
 10154  0CA6                     l2869:
 10155  0CA6  0827               	movf	___flmul@b+3,w
 10156  0CA7  00AC               	movwf	??___flmul
 10157  0CA8  072C               	addwf	??___flmul,w
 10158  0CA9  00AD               	movwf	??___flmul+1
 10159  0CAA  082D               	movf	??___flmul+1,w
 10160  0CAB  00B7               	movwf	___flmul@bexp
 10161  0CAC                     l2871:
 10162  0CAC  1FA6               	btfss	___flmul@b+2,7
 10163  0CAD  2CAF               	goto	u4071
 10164  0CAE  2CB0               	goto	u4070
 10165  0CAF                     u4071:
 10166  0CAF  2CB1               	goto	l2875
 10167  0CB0                     u4070:
 10168  0CB0                     l2873:
 10169  0CB0  1437               	bsf	___flmul@bexp,0
 10170  0CB1                     l2875:
 10171  0CB1  0837               	movf	___flmul@bexp,w
 10172  0CB2  1903               	btfsc	3,2
 10173  0CB3  2CB5               	goto	u4081
 10174  0CB4  2CB6               	goto	u4080
 10175  0CB5                     u4081:
 10176  0CB5  2CC5               	goto	l2883
 10177  0CB6                     u4080:
 10178  0CB6                     l2877:
 10179  0CB6  0A37               	incf	___flmul@bexp,w
 10180  0CB7  1D03               	btfss	3,2
 10181  0CB8  2CBA               	goto	u4091
 10182  0CB9  2CBB               	goto	u4090
 10183  0CBA                     u4091:
 10184  0CBA  2CC3               	goto	l2881
 10185  0CBB                     u4090:
 10186  0CBB                     l2879:
 10187  0CBB  3000               	movlw	0
 10188  0CBC  00A7               	movwf	___flmul@b+3
 10189  0CBD  3000               	movlw	0
 10190  0CBE  00A6               	movwf	___flmul@b+2
 10191  0CBF  3000               	movlw	0
 10192  0CC0  00A5               	movwf	___flmul@b+1
 10193  0CC1  3000               	movlw	0
 10194  0CC2  00A4               	movwf	___flmul@b
 10195  0CC3                     l2881:
 10196  0CC3  17A6               	bsf	___flmul@b+2,7
 10197  0CC4  2CCD               	goto	l2885
 10198  0CC5                     l2883:
 10199  0CC5  3000               	movlw	0
 10200  0CC6  00A7               	movwf	___flmul@b+3
 10201  0CC7  3000               	movlw	0
 10202  0CC8  00A6               	movwf	___flmul@b+2
 10203  0CC9  3000               	movlw	0
 10204  0CCA  00A5               	movwf	___flmul@b+1
 10205  0CCB  3000               	movlw	0
 10206  0CCC  00A4               	movwf	___flmul@b
 10207  0CCD                     l2885:
 10208  0CCD  082B               	movf	___flmul@a+3,w
 10209  0CCE  3980               	andlw	128
 10210  0CCF  00AC               	movwf	??___flmul
 10211  0CD0  082C               	movf	??___flmul,w
 10212  0CD1  06B1               	xorwf	___flmul@sign,f
 10213  0CD2                     l2887:
 10214  0CD2  082B               	movf	___flmul@a+3,w
 10215  0CD3  00AC               	movwf	??___flmul
 10216  0CD4  072C               	addwf	??___flmul,w
 10217  0CD5  00AD               	movwf	??___flmul+1
 10218  0CD6  082D               	movf	??___flmul+1,w
 10219  0CD7  00B6               	movwf	___flmul@aexp
 10220  0CD8                     l2889:
 10221  0CD8  1FAA               	btfss	___flmul@a+2,7
 10222  0CD9  2CDB               	goto	u4101
 10223  0CDA  2CDC               	goto	u4100
 10224  0CDB                     u4101:
 10225  0CDB  2CDD               	goto	l2893
 10226  0CDC                     u4100:
 10227  0CDC                     l2891:
 10228  0CDC  1436               	bsf	___flmul@aexp,0
 10229  0CDD                     l2893:
 10230  0CDD  0836               	movf	___flmul@aexp,w
 10231  0CDE  1903               	btfsc	3,2
 10232  0CDF  2CE1               	goto	u4111
 10233  0CE0  2CE2               	goto	u4110
 10234  0CE1                     u4111:
 10235  0CE1  2CF1               	goto	l2901
 10236  0CE2                     u4110:
 10237  0CE2                     l2895:
 10238  0CE2  0A36               	incf	___flmul@aexp,w
 10239  0CE3  1D03               	btfss	3,2
 10240  0CE4  2CE6               	goto	u4121
 10241  0CE5  2CE7               	goto	u4120
 10242  0CE6                     u4121:
 10243  0CE6  2CEF               	goto	l2899
 10244  0CE7                     u4120:
 10245  0CE7                     l2897:
 10246  0CE7  3000               	movlw	0
 10247  0CE8  00AB               	movwf	___flmul@a+3
 10248  0CE9  3000               	movlw	0
 10249  0CEA  00AA               	movwf	___flmul@a+2
 10250  0CEB  3000               	movlw	0
 10251  0CEC  00A9               	movwf	___flmul@a+1
 10252  0CED  3000               	movlw	0
 10253  0CEE  00A8               	movwf	___flmul@a
 10254  0CEF                     l2899:
 10255  0CEF  17AA               	bsf	___flmul@a+2,7
 10256  0CF0  2CF9               	goto	l2903
 10257  0CF1                     l2901:
 10258  0CF1  3000               	movlw	0
 10259  0CF2  00AB               	movwf	___flmul@a+3
 10260  0CF3  3000               	movlw	0
 10261  0CF4  00AA               	movwf	___flmul@a+2
 10262  0CF5  3000               	movlw	0
 10263  0CF6  00A9               	movwf	___flmul@a+1
 10264  0CF7  3000               	movlw	0
 10265  0CF8  00A8               	movwf	___flmul@a
 10266  0CF9                     l2903:
 10267  0CF9  0836               	movf	___flmul@aexp,w
 10268  0CFA  1903               	btfsc	3,2
 10269  0CFB  2CFD               	goto	u4131
 10270  0CFC  2CFE               	goto	u4130
 10271  0CFD                     u4131:
 10272  0CFD  2D03               	goto	l2907
 10273  0CFE                     u4130:
 10274  0CFE                     l2905:
 10275  0CFE  0837               	movf	___flmul@bexp,w
 10276  0CFF  1D03               	btfss	3,2
 10277  0D00  2D02               	goto	u4141
 10278  0D01  2D03               	goto	u4140
 10279  0D02                     u4141:
 10280  0D02  2D0C               	goto	l2911
 10281  0D03                     u4140:
 10282  0D03                     l2907:
 10283  0D03  3000               	movlw	0
 10284  0D04  00A7               	movwf	?___flmul+3
 10285  0D05  3000               	movlw	0
 10286  0D06  00A6               	movwf	?___flmul+2
 10287  0D07  3000               	movlw	0
 10288  0D08  00A5               	movwf	?___flmul+1
 10289  0D09  3000               	movlw	0
 10290  0D0A  00A4               	movwf	?___flmul
 10291  0D0B  2FFF               	goto	l851
 10292  0D0C                     l2911:
 10293  0D0C  0824               	movf	___flmul@b,w
 10294  0D0D  00AC               	movwf	??___flmul
 10295  0D0E  082C               	movf	??___flmul,w
 10296  0D0F  00F0               	movwf	__Umul8_16@multiplicand
 10297  0D10  082A               	movf	___flmul@a+2,w
 10298  0D11  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10299  0D16  0871               	movf	?__Umul8_16+1,w
 10300  0D17  1283               	bcf	3,5	;RP0=0, select bank0
 10301  0D18  1303               	bcf	3,6	;RP1=0, select bank0
 10302  0D19  00BD               	movwf	___flmul@temp+1
 10303  0D1A  0870               	movf	?__Umul8_16,w
 10304  0D1B  00BC               	movwf	___flmul@temp
 10305  0D1C                     l2913:
 10306  0D1C  083C               	movf	___flmul@temp,w
 10307  0D1D  00AC               	movwf	??___flmul
 10308  0D1E  01AD               	clrf	??___flmul+1
 10309  0D1F  01AE               	clrf	??___flmul+2
 10310  0D20  01AF               	clrf	??___flmul+3
 10311  0D21  082F               	movf	??___flmul+3,w
 10312  0D22  00B5               	movwf	___flmul@grs+3
 10313  0D23  082E               	movf	??___flmul+2,w
 10314  0D24  00B4               	movwf	___flmul@grs+2
 10315  0D25  082D               	movf	??___flmul+1,w
 10316  0D26  00B3               	movwf	___flmul@grs+1
 10317  0D27  082C               	movf	??___flmul,w
 10318  0D28  00B2               	movwf	___flmul@grs
 10319  0D29                     l2915:
 10320  0D29  083D               	movf	___flmul@temp+1,w
 10321  0D2A  00AC               	movwf	??___flmul
 10322  0D2B  01AD               	clrf	??___flmul+1
 10323  0D2C  01AE               	clrf	??___flmul+2
 10324  0D2D  01AF               	clrf	??___flmul+3
 10325  0D2E  082F               	movf	??___flmul+3,w
 10326  0D2F  00BB               	movwf	___flmul@prod+3
 10327  0D30  082E               	movf	??___flmul+2,w
 10328  0D31  00BA               	movwf	___flmul@prod+2
 10329  0D32  082D               	movf	??___flmul+1,w
 10330  0D33  00B9               	movwf	___flmul@prod+1
 10331  0D34  082C               	movf	??___flmul,w
 10332  0D35  00B8               	movwf	___flmul@prod
 10333  0D36  0825               	movf	___flmul@b+1,w
 10334  0D37  00AC               	movwf	??___flmul
 10335  0D38  082C               	movf	??___flmul,w
 10336  0D39  00F0               	movwf	__Umul8_16@multiplicand
 10337  0D3A  0829               	movf	___flmul@a+1,w
 10338  0D3B  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10339  0D40  0871               	movf	?__Umul8_16+1,w
 10340  0D41  1283               	bcf	3,5	;RP0=0, select bank0
 10341  0D42  1303               	bcf	3,6	;RP1=0, select bank0
 10342  0D43  00BD               	movwf	___flmul@temp+1
 10343  0D44  0870               	movf	?__Umul8_16,w
 10344  0D45  00BC               	movwf	___flmul@temp
 10345  0D46                     l2917:
 10346  0D46  083C               	movf	___flmul@temp,w
 10347  0D47  00AC               	movwf	??___flmul
 10348  0D48  01AD               	clrf	??___flmul+1
 10349  0D49  01AE               	clrf	??___flmul+2
 10350  0D4A  01AF               	clrf	??___flmul+3
 10351  0D4B  082C               	movf	??___flmul,w
 10352  0D4C  07B2               	addwf	___flmul@grs,f
 10353  0D4D  082D               	movf	??___flmul+1,w
 10354  0D4E  1103               	clrz
 10355  0D4F  1803               	skipnc
 10356  0D50  3E01               	addlw	1
 10357  0D51  1903               	skipnz
 10358  0D52  2D54               	goto	u4151
 10359  0D53  07B3               	addwf	___flmul@grs+1,f
 10360  0D54                     u4151:
 10361  0D54  082E               	movf	??___flmul+2,w
 10362  0D55  1103               	clrz
 10363  0D56  1803               	skipnc
 10364  0D57  3E01               	addlw	1
 10365  0D58  1903               	skipnz
 10366  0D59  2D5B               	goto	u4152
 10367  0D5A  07B4               	addwf	___flmul@grs+2,f
 10368  0D5B                     u4152:
 10369  0D5B  082F               	movf	??___flmul+3,w
 10370  0D5C  1103               	clrz
 10371  0D5D  1803               	skipnc
 10372  0D5E  3E01               	addlw	1
 10373  0D5F  1903               	skipnz
 10374  0D60  2D62               	goto	u4153
 10375  0D61  07B5               	addwf	___flmul@grs+3,f
 10376  0D62                     u4153:
 10377  0D62                     l2919:
 10378  0D62  083D               	movf	___flmul@temp+1,w
 10379  0D63  00AC               	movwf	??___flmul
 10380  0D64  01AD               	clrf	??___flmul+1
 10381  0D65  01AE               	clrf	??___flmul+2
 10382  0D66  01AF               	clrf	??___flmul+3
 10383  0D67  082C               	movf	??___flmul,w
 10384  0D68  07B8               	addwf	___flmul@prod,f
 10385  0D69  082D               	movf	??___flmul+1,w
 10386  0D6A  1103               	clrz
 10387  0D6B  1803               	skipnc
 10388  0D6C  3E01               	addlw	1
 10389  0D6D  1903               	skipnz
 10390  0D6E  2D70               	goto	u4161
 10391  0D6F  07B9               	addwf	___flmul@prod+1,f
 10392  0D70                     u4161:
 10393  0D70  082E               	movf	??___flmul+2,w
 10394  0D71  1103               	clrz
 10395  0D72  1803               	skipnc
 10396  0D73  3E01               	addlw	1
 10397  0D74  1903               	skipnz
 10398  0D75  2D77               	goto	u4162
 10399  0D76  07BA               	addwf	___flmul@prod+2,f
 10400  0D77                     u4162:
 10401  0D77  082F               	movf	??___flmul+3,w
 10402  0D78  1103               	clrz
 10403  0D79  1803               	skipnc
 10404  0D7A  3E01               	addlw	1
 10405  0D7B  1903               	skipnz
 10406  0D7C  2D7E               	goto	u4163
 10407  0D7D  07BB               	addwf	___flmul@prod+3,f
 10408  0D7E                     u4163:
 10409  0D7E  0826               	movf	___flmul@b+2,w
 10410  0D7F  00AC               	movwf	??___flmul
 10411  0D80  082C               	movf	??___flmul,w
 10412  0D81  00F0               	movwf	__Umul8_16@multiplicand
 10413  0D82  0828               	movf	___flmul@a,w
 10414  0D83  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10415  0D88  0871               	movf	?__Umul8_16+1,w
 10416  0D89  1283               	bcf	3,5	;RP0=0, select bank0
 10417  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10418  0D8B  00BD               	movwf	___flmul@temp+1
 10419  0D8C  0870               	movf	?__Umul8_16,w
 10420  0D8D  00BC               	movwf	___flmul@temp
 10421  0D8E                     l2921:
 10422  0D8E  083C               	movf	___flmul@temp,w
 10423  0D8F  00AC               	movwf	??___flmul
 10424  0D90  01AD               	clrf	??___flmul+1
 10425  0D91  01AE               	clrf	??___flmul+2
 10426  0D92  01AF               	clrf	??___flmul+3
 10427  0D93  082C               	movf	??___flmul,w
 10428  0D94  07B2               	addwf	___flmul@grs,f
 10429  0D95  082D               	movf	??___flmul+1,w
 10430  0D96  1103               	clrz
 10431  0D97  1803               	skipnc
 10432  0D98  3E01               	addlw	1
 10433  0D99  1903               	skipnz
 10434  0D9A  2D9C               	goto	u4171
 10435  0D9B  07B3               	addwf	___flmul@grs+1,f
 10436  0D9C                     u4171:
 10437  0D9C  082E               	movf	??___flmul+2,w
 10438  0D9D  1103               	clrz
 10439  0D9E  1803               	skipnc
 10440  0D9F  3E01               	addlw	1
 10441  0DA0  1903               	skipnz
 10442  0DA1  2DA3               	goto	u4172
 10443  0DA2  07B4               	addwf	___flmul@grs+2,f
 10444  0DA3                     u4172:
 10445  0DA3  082F               	movf	??___flmul+3,w
 10446  0DA4  1103               	clrz
 10447  0DA5  1803               	skipnc
 10448  0DA6  3E01               	addlw	1
 10449  0DA7  1903               	skipnz
 10450  0DA8  2DAA               	goto	u4173
 10451  0DA9  07B5               	addwf	___flmul@grs+3,f
 10452  0DAA                     u4173:
 10453  0DAA                     l2923:
 10454  0DAA  083D               	movf	___flmul@temp+1,w
 10455  0DAB  00AC               	movwf	??___flmul
 10456  0DAC  01AD               	clrf	??___flmul+1
 10457  0DAD  01AE               	clrf	??___flmul+2
 10458  0DAE  01AF               	clrf	??___flmul+3
 10459  0DAF  082C               	movf	??___flmul,w
 10460  0DB0  07B8               	addwf	___flmul@prod,f
 10461  0DB1  082D               	movf	??___flmul+1,w
 10462  0DB2  1103               	clrz
 10463  0DB3  1803               	skipnc
 10464  0DB4  3E01               	addlw	1
 10465  0DB5  1903               	skipnz
 10466  0DB6  2DB8               	goto	u4181
 10467  0DB7  07B9               	addwf	___flmul@prod+1,f
 10468  0DB8                     u4181:
 10469  0DB8  082E               	movf	??___flmul+2,w
 10470  0DB9  1103               	clrz
 10471  0DBA  1803               	skipnc
 10472  0DBB  3E01               	addlw	1
 10473  0DBC  1903               	skipnz
 10474  0DBD  2DBF               	goto	u4182
 10475  0DBE  07BA               	addwf	___flmul@prod+2,f
 10476  0DBF                     u4182:
 10477  0DBF  082F               	movf	??___flmul+3,w
 10478  0DC0  1103               	clrz
 10479  0DC1  1803               	skipnc
 10480  0DC2  3E01               	addlw	1
 10481  0DC3  1903               	skipnz
 10482  0DC4  2DC6               	goto	u4183
 10483  0DC5  07BB               	addwf	___flmul@prod+3,f
 10484  0DC6                     u4183:
 10485  0DC6                     l2925:
 10486  0DC6  3008               	movlw	8
 10487  0DC7  00AC               	movwf	??___flmul
 10488  0DC8                     u4195:
 10489  0DC8  1003               	clrc
 10490  0DC9  0DB2               	rlf	___flmul@grs,f
 10491  0DCA  0DB3               	rlf	___flmul@grs+1,f
 10492  0DCB  0DB4               	rlf	___flmul@grs+2,f
 10493  0DCC  0DB5               	rlf	___flmul@grs+3,f
 10494  0DCD  0BAC               	decfsz	??___flmul,f
 10495  0DCE  2DC8               	goto	u4195
 10496  0DCF                     l2927:
 10497  0DCF  0825               	movf	___flmul@b+1,w
 10498  0DD0  00AC               	movwf	??___flmul
 10499  0DD1  082C               	movf	??___flmul,w
 10500  0DD2  00F0               	movwf	__Umul8_16@multiplicand
 10501  0DD3  0828               	movf	___flmul@a,w
 10502  0DD4  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10503  0DD9  0871               	movf	?__Umul8_16+1,w
 10504  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
 10505  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10506  0DDC  00BD               	movwf	___flmul@temp+1
 10507  0DDD  0870               	movf	?__Umul8_16,w
 10508  0DDE  00BC               	movwf	___flmul@temp
 10509  0DDF                     l2929:
 10510  0DDF  083C               	movf	___flmul@temp,w
 10511  0DE0  00AC               	movwf	??___flmul
 10512  0DE1  083D               	movf	___flmul@temp+1,w
 10513  0DE2  00AD               	movwf	??___flmul+1
 10514  0DE3  01AE               	clrf	??___flmul+2
 10515  0DE4  01AF               	clrf	??___flmul+3
 10516  0DE5  082C               	movf	??___flmul,w
 10517  0DE6  07B2               	addwf	___flmul@grs,f
 10518  0DE7  082D               	movf	??___flmul+1,w
 10519  0DE8  1103               	clrz
 10520  0DE9  1803               	skipnc
 10521  0DEA  3E01               	addlw	1
 10522  0DEB  1903               	skipnz
 10523  0DEC  2DEE               	goto	u4201
 10524  0DED  07B3               	addwf	___flmul@grs+1,f
 10525  0DEE                     u4201:
 10526  0DEE  082E               	movf	??___flmul+2,w
 10527  0DEF  1103               	clrz
 10528  0DF0  1803               	skipnc
 10529  0DF1  3E01               	addlw	1
 10530  0DF2  1903               	skipnz
 10531  0DF3  2DF5               	goto	u4202
 10532  0DF4  07B4               	addwf	___flmul@grs+2,f
 10533  0DF5                     u4202:
 10534  0DF5  082F               	movf	??___flmul+3,w
 10535  0DF6  1103               	clrz
 10536  0DF7  1803               	skipnc
 10537  0DF8  3E01               	addlw	1
 10538  0DF9  1903               	skipnz
 10539  0DFA  2DFC               	goto	u4203
 10540  0DFB  07B5               	addwf	___flmul@grs+3,f
 10541  0DFC                     u4203:
 10542  0DFC                     l2931:
 10543  0DFC  0824               	movf	___flmul@b,w
 10544  0DFD  00AC               	movwf	??___flmul
 10545  0DFE  082C               	movf	??___flmul,w
 10546  0DFF  00F0               	movwf	__Umul8_16@multiplicand
 10547  0E00  0829               	movf	___flmul@a+1,w
 10548  0E01  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10549  0E06  0871               	movf	?__Umul8_16+1,w
 10550  0E07  1283               	bcf	3,5	;RP0=0, select bank0
 10551  0E08  1303               	bcf	3,6	;RP1=0, select bank0
 10552  0E09  00BD               	movwf	___flmul@temp+1
 10553  0E0A  0870               	movf	?__Umul8_16,w
 10554  0E0B  00BC               	movwf	___flmul@temp
 10555  0E0C                     l2933:
 10556  0E0C  083C               	movf	___flmul@temp,w
 10557  0E0D  00AC               	movwf	??___flmul
 10558  0E0E  083D               	movf	___flmul@temp+1,w
 10559  0E0F  00AD               	movwf	??___flmul+1
 10560  0E10  01AE               	clrf	??___flmul+2
 10561  0E11  01AF               	clrf	??___flmul+3
 10562  0E12  082C               	movf	??___flmul,w
 10563  0E13  07B2               	addwf	___flmul@grs,f
 10564  0E14  082D               	movf	??___flmul+1,w
 10565  0E15  1103               	clrz
 10566  0E16  1803               	skipnc
 10567  0E17  3E01               	addlw	1
 10568  0E18  1903               	skipnz
 10569  0E19  2E1B               	goto	u4211
 10570  0E1A  07B3               	addwf	___flmul@grs+1,f
 10571  0E1B                     u4211:
 10572  0E1B  082E               	movf	??___flmul+2,w
 10573  0E1C  1103               	clrz
 10574  0E1D  1803               	skipnc
 10575  0E1E  3E01               	addlw	1
 10576  0E1F  1903               	skipnz
 10577  0E20  2E22               	goto	u4212
 10578  0E21  07B4               	addwf	___flmul@grs+2,f
 10579  0E22                     u4212:
 10580  0E22  082F               	movf	??___flmul+3,w
 10581  0E23  1103               	clrz
 10582  0E24  1803               	skipnc
 10583  0E25  3E01               	addlw	1
 10584  0E26  1903               	skipnz
 10585  0E27  2E29               	goto	u4213
 10586  0E28  07B5               	addwf	___flmul@grs+3,f
 10587  0E29                     u4213:
 10588  0E29                     l2935:
 10589  0E29  3008               	movlw	8
 10590  0E2A  00AC               	movwf	??___flmul
 10591  0E2B                     u4225:
 10592  0E2B  1003               	clrc
 10593  0E2C  0DB2               	rlf	___flmul@grs,f
 10594  0E2D  0DB3               	rlf	___flmul@grs+1,f
 10595  0E2E  0DB4               	rlf	___flmul@grs+2,f
 10596  0E2F  0DB5               	rlf	___flmul@grs+3,f
 10597  0E30  0BAC               	decfsz	??___flmul,f
 10598  0E31  2E2B               	goto	u4225
 10599  0E32  0824               	movf	___flmul@b,w
 10600  0E33  00AC               	movwf	??___flmul
 10601  0E34  082C               	movf	??___flmul,w
 10602  0E35  00F0               	movwf	__Umul8_16@multiplicand
 10603  0E36  0828               	movf	___flmul@a,w
 10604  0E37  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10605  0E3C  0871               	movf	?__Umul8_16+1,w
 10606  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
 10607  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
 10608  0E3F  00BD               	movwf	___flmul@temp+1
 10609  0E40  0870               	movf	?__Umul8_16,w
 10610  0E41  00BC               	movwf	___flmul@temp
 10611  0E42                     l2937:
 10612  0E42  083C               	movf	___flmul@temp,w
 10613  0E43  00AC               	movwf	??___flmul
 10614  0E44  083D               	movf	___flmul@temp+1,w
 10615  0E45  00AD               	movwf	??___flmul+1
 10616  0E46  01AE               	clrf	??___flmul+2
 10617  0E47  01AF               	clrf	??___flmul+3
 10618  0E48  082C               	movf	??___flmul,w
 10619  0E49  07B2               	addwf	___flmul@grs,f
 10620  0E4A  082D               	movf	??___flmul+1,w
 10621  0E4B  1103               	clrz
 10622  0E4C  1803               	skipnc
 10623  0E4D  3E01               	addlw	1
 10624  0E4E  1903               	skipnz
 10625  0E4F  2E51               	goto	u4231
 10626  0E50  07B3               	addwf	___flmul@grs+1,f
 10627  0E51                     u4231:
 10628  0E51  082E               	movf	??___flmul+2,w
 10629  0E52  1103               	clrz
 10630  0E53  1803               	skipnc
 10631  0E54  3E01               	addlw	1
 10632  0E55  1903               	skipnz
 10633  0E56  2E58               	goto	u4232
 10634  0E57  07B4               	addwf	___flmul@grs+2,f
 10635  0E58                     u4232:
 10636  0E58  082F               	movf	??___flmul+3,w
 10637  0E59  1103               	clrz
 10638  0E5A  1803               	skipnc
 10639  0E5B  3E01               	addlw	1
 10640  0E5C  1903               	skipnz
 10641  0E5D  2E5F               	goto	u4233
 10642  0E5E  07B5               	addwf	___flmul@grs+3,f
 10643  0E5F                     u4233:
 10644  0E5F                     l2939:
 10645  0E5F  0825               	movf	___flmul@b+1,w
 10646  0E60  00AC               	movwf	??___flmul
 10647  0E61  082C               	movf	??___flmul,w
 10648  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10649  0E63  082A               	movf	___flmul@a+2,w
 10650  0E64  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10651  0E69  0871               	movf	?__Umul8_16+1,w
 10652  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10653  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10654  0E6C  00BD               	movwf	___flmul@temp+1
 10655  0E6D  0870               	movf	?__Umul8_16,w
 10656  0E6E  00BC               	movwf	___flmul@temp
 10657  0E6F  083C               	movf	___flmul@temp,w
 10658  0E70  00AC               	movwf	??___flmul
 10659  0E71  083D               	movf	___flmul@temp+1,w
 10660  0E72  00AD               	movwf	??___flmul+1
 10661  0E73  01AE               	clrf	??___flmul+2
 10662  0E74  01AF               	clrf	??___flmul+3
 10663  0E75  082C               	movf	??___flmul,w
 10664  0E76  07B8               	addwf	___flmul@prod,f
 10665  0E77  082D               	movf	??___flmul+1,w
 10666  0E78  1103               	clrz
 10667  0E79  1803               	skipnc
 10668  0E7A  3E01               	addlw	1
 10669  0E7B  1903               	skipnz
 10670  0E7C  2E7E               	goto	u4241
 10671  0E7D  07B9               	addwf	___flmul@prod+1,f
 10672  0E7E                     u4241:
 10673  0E7E  082E               	movf	??___flmul+2,w
 10674  0E7F  1103               	clrz
 10675  0E80  1803               	skipnc
 10676  0E81  3E01               	addlw	1
 10677  0E82  1903               	skipnz
 10678  0E83  2E85               	goto	u4242
 10679  0E84  07BA               	addwf	___flmul@prod+2,f
 10680  0E85                     u4242:
 10681  0E85  082F               	movf	??___flmul+3,w
 10682  0E86  1103               	clrz
 10683  0E87  1803               	skipnc
 10684  0E88  3E01               	addlw	1
 10685  0E89  1903               	skipnz
 10686  0E8A  2E8C               	goto	u4243
 10687  0E8B  07BB               	addwf	___flmul@prod+3,f
 10688  0E8C                     u4243:
 10689  0E8C                     l2941:
 10690  0E8C  0826               	movf	___flmul@b+2,w
 10691  0E8D  00AC               	movwf	??___flmul
 10692  0E8E  082C               	movf	??___flmul,w
 10693  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10694  0E90  0829               	movf	___flmul@a+1,w
 10695  0E91  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10696  0E96  0871               	movf	?__Umul8_16+1,w
 10697  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10698  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10699  0E99  00BD               	movwf	___flmul@temp+1
 10700  0E9A  0870               	movf	?__Umul8_16,w
 10701  0E9B  00BC               	movwf	___flmul@temp
 10702  0E9C                     l2943:
 10703  0E9C  083C               	movf	___flmul@temp,w
 10704  0E9D  00AC               	movwf	??___flmul
 10705  0E9E  083D               	movf	___flmul@temp+1,w
 10706  0E9F  00AD               	movwf	??___flmul+1
 10707  0EA0  01AE               	clrf	??___flmul+2
 10708  0EA1  01AF               	clrf	??___flmul+3
 10709  0EA2  082C               	movf	??___flmul,w
 10710  0EA3  07B8               	addwf	___flmul@prod,f
 10711  0EA4  082D               	movf	??___flmul+1,w
 10712  0EA5  1103               	clrz
 10713  0EA6  1803               	skipnc
 10714  0EA7  3E01               	addlw	1
 10715  0EA8  1903               	skipnz
 10716  0EA9  2EAB               	goto	u4251
 10717  0EAA  07B9               	addwf	___flmul@prod+1,f
 10718  0EAB                     u4251:
 10719  0EAB  082E               	movf	??___flmul+2,w
 10720  0EAC  1103               	clrz
 10721  0EAD  1803               	skipnc
 10722  0EAE  3E01               	addlw	1
 10723  0EAF  1903               	skipnz
 10724  0EB0  2EB2               	goto	u4252
 10725  0EB1  07BA               	addwf	___flmul@prod+2,f
 10726  0EB2                     u4252:
 10727  0EB2  082F               	movf	??___flmul+3,w
 10728  0EB3  1103               	clrz
 10729  0EB4  1803               	skipnc
 10730  0EB5  3E01               	addlw	1
 10731  0EB6  1903               	skipnz
 10732  0EB7  2EB9               	goto	u4253
 10733  0EB8  07BB               	addwf	___flmul@prod+3,f
 10734  0EB9                     u4253:
 10735  0EB9  0826               	movf	___flmul@b+2,w
 10736  0EBA  00AC               	movwf	??___flmul
 10737  0EBB  082C               	movf	??___flmul,w
 10738  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10739  0EBD  082A               	movf	___flmul@a+2,w
 10740  0EBE  160A  158A  212C  120A  158A  	fcall	__Umul8_16
 10741  0EC3  0871               	movf	?__Umul8_16+1,w
 10742  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10743  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10744  0EC6  00BD               	movwf	___flmul@temp+1
 10745  0EC7  0870               	movf	?__Umul8_16,w
 10746  0EC8  00BC               	movwf	___flmul@temp
 10747  0EC9                     l2945:
 10748  0EC9  083C               	movf	___flmul@temp,w
 10749  0ECA  00AC               	movwf	??___flmul
 10750  0ECB  083D               	movf	___flmul@temp+1,w
 10751  0ECC  00AD               	movwf	??___flmul+1
 10752  0ECD  01AE               	clrf	??___flmul+2
 10753  0ECE  01AF               	clrf	??___flmul+3
 10754  0ECF  3008               	movlw	8
 10755  0ED0                     u4265:
 10756  0ED0  1003               	clrc
 10757  0ED1  0DAC               	rlf	??___flmul,f
 10758  0ED2  0DAD               	rlf	??___flmul+1,f
 10759  0ED3  0DAE               	rlf	??___flmul+2,f
 10760  0ED4  0DAF               	rlf	??___flmul+3,f
 10761  0ED5                     u4260:
 10762  0ED5  3EFF               	addlw	-1
 10763  0ED6  1D03               	skipz
 10764  0ED7  2ED0               	goto	u4265
 10765  0ED8  082C               	movf	??___flmul,w
 10766  0ED9  07B8               	addwf	___flmul@prod,f
 10767  0EDA  082D               	movf	??___flmul+1,w
 10768  0EDB  1103               	clrz
 10769  0EDC  1803               	skipnc
 10770  0EDD  3E01               	addlw	1
 10771  0EDE  1903               	skipnz
 10772  0EDF  2EE1               	goto	u4271
 10773  0EE0  07B9               	addwf	___flmul@prod+1,f
 10774  0EE1                     u4271:
 10775  0EE1  082E               	movf	??___flmul+2,w
 10776  0EE2  1103               	clrz
 10777  0EE3  1803               	skipnc
 10778  0EE4  3E01               	addlw	1
 10779  0EE5  1903               	skipnz
 10780  0EE6  2EE8               	goto	u4272
 10781  0EE7  07BA               	addwf	___flmul@prod+2,f
 10782  0EE8                     u4272:
 10783  0EE8  082F               	movf	??___flmul+3,w
 10784  0EE9  1103               	clrz
 10785  0EEA  1803               	skipnc
 10786  0EEB  3E01               	addlw	1
 10787  0EEC  1903               	skipnz
 10788  0EED  2EEF               	goto	u4273
 10789  0EEE  07BB               	addwf	___flmul@prod+3,f
 10790  0EEF                     u4273:
 10791  0EEF                     l2947:
 10792  0EEF  0832               	movf	___flmul@grs,w
 10793  0EF0  00AC               	movwf	??___flmul
 10794  0EF1  0833               	movf	___flmul@grs+1,w
 10795  0EF2  00AD               	movwf	??___flmul+1
 10796  0EF3  0834               	movf	___flmul@grs+2,w
 10797  0EF4  00AE               	movwf	??___flmul+2
 10798  0EF5  0835               	movf	___flmul@grs+3,w
 10799  0EF6  00AF               	movwf	??___flmul+3
 10800  0EF7  3018               	movlw	24
 10801  0EF8                     u4285:
 10802  0EF8  1003               	clrc
 10803  0EF9  0CAF               	rrf	??___flmul+3,f
 10804  0EFA  0CAE               	rrf	??___flmul+2,f
 10805  0EFB  0CAD               	rrf	??___flmul+1,f
 10806  0EFC  0CAC               	rrf	??___flmul,f
 10807  0EFD                     u4280:
 10808  0EFD  3EFF               	addlw	-1
 10809  0EFE  1D03               	skipz
 10810  0EFF  2EF8               	goto	u4285
 10811  0F00  082C               	movf	??___flmul,w
 10812  0F01  07B8               	addwf	___flmul@prod,f
 10813  0F02  082D               	movf	??___flmul+1,w
 10814  0F03  1103               	clrz
 10815  0F04  1803               	skipnc
 10816  0F05  3E01               	addlw	1
 10817  0F06  1903               	skipnz
 10818  0F07  2F09               	goto	u4291
 10819  0F08  07B9               	addwf	___flmul@prod+1,f
 10820  0F09                     u4291:
 10821  0F09  082E               	movf	??___flmul+2,w
 10822  0F0A  1103               	clrz
 10823  0F0B  1803               	skipnc
 10824  0F0C  3E01               	addlw	1
 10825  0F0D  1903               	skipnz
 10826  0F0E  2F10               	goto	u4292
 10827  0F0F  07BA               	addwf	___flmul@prod+2,f
 10828  0F10                     u4292:
 10829  0F10  082F               	movf	??___flmul+3,w
 10830  0F11  1103               	clrz
 10831  0F12  1803               	skipnc
 10832  0F13  3E01               	addlw	1
 10833  0F14  1903               	skipnz
 10834  0F15  2F17               	goto	u4293
 10835  0F16  07BB               	addwf	___flmul@prod+3,f
 10836  0F17                     u4293:
 10837  0F17                     l2949:
 10838  0F17  3008               	movlw	8
 10839  0F18  00AC               	movwf	??___flmul
 10840  0F19                     u4305:
 10841  0F19  1003               	clrc
 10842  0F1A  0DB2               	rlf	___flmul@grs,f
 10843  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10844  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10845  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10846  0F1E  0BAC               	decfsz	??___flmul,f
 10847  0F1F  2F19               	goto	u4305
 10848  0F20                     l2951:
 10849  0F20  0837               	movf	___flmul@bexp,w
 10850  0F21  0736               	addwf	___flmul@aexp,w
 10851  0F22  00AC               	movwf	??___flmul
 10852  0F23  01AD               	clrf	??___flmul+1
 10853  0F24  0DAD               	rlf	??___flmul+1,f
 10854  0F25  082C               	movf	??___flmul,w
 10855  0F26  3E82               	addlw	130
 10856  0F27  00BC               	movwf	___flmul@temp
 10857  0F28  082D               	movf	??___flmul+1,w
 10858  0F29  1803               	skipnc
 10859  0F2A  3E01               	addlw	1
 10860  0F2B  3EFF               	addlw	255
 10861  0F2C  00BD               	movwf	___flmul@temp+1
 10862  0F2D  2F4B               	goto	l2963
 10863  0F2E                     l2953:
 10864  0F2E  3001               	movlw	1
 10865  0F2F  00AC               	movwf	??___flmul
 10866  0F30                     u4315:
 10867  0F30  1003               	clrc
 10868  0F31  0DB8               	rlf	___flmul@prod,f
 10869  0F32  0DB9               	rlf	___flmul@prod+1,f
 10870  0F33  0DBA               	rlf	___flmul@prod+2,f
 10871  0F34  0DBB               	rlf	___flmul@prod+3,f
 10872  0F35  0BAC               	decfsz	??___flmul,f
 10873  0F36  2F30               	goto	u4315
 10874  0F37                     l2955:
 10875  0F37  1FB5               	btfss	___flmul@grs+3,7
 10876  0F38  2F3A               	goto	u4321
 10877  0F39  2F3B               	goto	u4320
 10878  0F3A                     u4321:
 10879  0F3A  2F3C               	goto	l2959
 10880  0F3B                     u4320:
 10881  0F3B                     l2957:
 10882  0F3B  1438               	bsf	___flmul@prod,0
 10883  0F3C                     l2959:
 10884  0F3C  3001               	movlw	1
 10885  0F3D  00AC               	movwf	??___flmul
 10886  0F3E                     u4335:
 10887  0F3E  1003               	clrc
 10888  0F3F  0DB2               	rlf	___flmul@grs,f
 10889  0F40  0DB3               	rlf	___flmul@grs+1,f
 10890  0F41  0DB4               	rlf	___flmul@grs+2,f
 10891  0F42  0DB5               	rlf	___flmul@grs+3,f
 10892  0F43  0BAC               	decfsz	??___flmul,f
 10893  0F44  2F3E               	goto	u4335
 10894  0F45                     l2961:
 10895  0F45  30FF               	movlw	255
 10896  0F46  07BC               	addwf	___flmul@temp,f
 10897  0F47  1803               	skipnc
 10898  0F48  0ABD               	incf	___flmul@temp+1,f
 10899  0F49  30FF               	movlw	255
 10900  0F4A  07BD               	addwf	___flmul@temp+1,f
 10901  0F4B                     l2963:
 10902  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10903  0F4C  2F4E               	goto	u4341
 10904  0F4D  2F4F               	goto	u4340
 10905  0F4E                     u4341:
 10906  0F4E  2F2E               	goto	l2953
 10907  0F4F                     u4340:
 10908  0F4F                     l2965:
 10909  0F4F  01B6               	clrf	___flmul@aexp
 10910  0F50                     l2967:
 10911  0F50  1FB5               	btfss	___flmul@grs+3,7
 10912  0F51  2F53               	goto	u4351
 10913  0F52  2F54               	goto	u4350
 10914  0F53                     u4351:
 10915  0F53  2F70               	goto	l2975
 10916  0F54                     u4350:
 10917  0F54                     l2969:
 10918  0F54  30FF               	movlw	255
 10919  0F55  0532               	andwf	___flmul@grs,w
 10920  0F56  00AC               	movwf	??___flmul
 10921  0F57  30FF               	movlw	255
 10922  0F58  0533               	andwf	___flmul@grs+1,w
 10923  0F59  00AD               	movwf	??___flmul+1
 10924  0F5A  30FF               	movlw	255
 10925  0F5B  0534               	andwf	___flmul@grs+2,w
 10926  0F5C  00AE               	movwf	??___flmul+2
 10927  0F5D  307F               	movlw	127
 10928  0F5E  0535               	andwf	___flmul@grs+3,w
 10929  0F5F  00AF               	movwf	??___flmul+3
 10930  0F60  082F               	movf	??___flmul+3,w
 10931  0F61  042E               	iorwf	??___flmul+2,w
 10932  0F62  042D               	iorwf	??___flmul+1,w
 10933  0F63  042C               	iorwf	??___flmul,w
 10934  0F64  1903               	skipnz
 10935  0F65  2F67               	goto	u4361
 10936  0F66  2F68               	goto	u4360
 10937  0F67                     u4361:
 10938  0F67  2F6B               	goto	l857
 10939  0F68                     u4360:
 10940  0F68                     l2971:
 10941  0F68  01B6               	clrf	___flmul@aexp
 10942  0F69  0AB6               	incf	___flmul@aexp,f
 10943  0F6A  2F70               	goto	l2975
 10944  0F6B                     l857:
 10945  0F6B  1C38               	btfss	___flmul@prod,0
 10946  0F6C  2F6E               	goto	u4371
 10947  0F6D  2F6F               	goto	u4370
 10948  0F6E                     u4371:
 10949  0F6E  2F70               	goto	l2975
 10950  0F6F                     u4370:
 10951  0F6F  2F68               	goto	l2971
 10952  0F70                     l2975:
 10953  0F70  0836               	movf	___flmul@aexp,w
 10954  0F71  1903               	btfsc	3,2
 10955  0F72  2F74               	goto	u4381
 10956  0F73  2F75               	goto	u4380
 10957  0F74                     u4381:
 10958  0F74  2FA6               	goto	l2985
 10959  0F75                     u4380:
 10960  0F75                     l2977:
 10961  0F75  3001               	movlw	1
 10962  0F76  07B8               	addwf	___flmul@prod,f
 10963  0F77  3000               	movlw	0
 10964  0F78  1803               	skipnc
 10965  0F79  3001               	movlw	1
 10966  0F7A  07B9               	addwf	___flmul@prod+1,f
 10967  0F7B  3000               	movlw	0
 10968  0F7C  1803               	skipnc
 10969  0F7D  3001               	movlw	1
 10970  0F7E  07BA               	addwf	___flmul@prod+2,f
 10971  0F7F  3000               	movlw	0
 10972  0F80  1803               	skipnc
 10973  0F81  3001               	movlw	1
 10974  0F82  07BB               	addwf	___flmul@prod+3,f
 10975  0F83                     l2979:
 10976  0F83  1C3B               	btfss	___flmul@prod+3,0
 10977  0F84  2F86               	goto	u4391
 10978  0F85  2F87               	goto	u4390
 10979  0F86                     u4391:
 10980  0F86  2FA6               	goto	l2985
 10981  0F87                     u4390:
 10982  0F87                     l2981:
 10983  0F87  0838               	movf	___flmul@prod,w
 10984  0F88  00AC               	movwf	??___flmul
 10985  0F89  0839               	movf	___flmul@prod+1,w
 10986  0F8A  00AD               	movwf	??___flmul+1
 10987  0F8B  083A               	movf	___flmul@prod+2,w
 10988  0F8C  00AE               	movwf	??___flmul+2
 10989  0F8D  083B               	movf	___flmul@prod+3,w
 10990  0F8E  00AF               	movwf	??___flmul+3
 10991  0F8F  3001               	movlw	1
 10992  0F90  00B0               	movwf	??___flmul+4
 10993  0F91                     u4405:
 10994  0F91  0D2F               	rlf	??___flmul+3,w
 10995  0F92  0CAF               	rrf	??___flmul+3,f
 10996  0F93  0CAE               	rrf	??___flmul+2,f
 10997  0F94  0CAD               	rrf	??___flmul+1,f
 10998  0F95  0CAC               	rrf	??___flmul,f
 10999  0F96                     u4400:
 11000  0F96  0BB0               	decfsz	??___flmul+4,f
 11001  0F97  2F91               	goto	u4405
 11002  0F98  082F               	movf	??___flmul+3,w
 11003  0F99  00BB               	movwf	___flmul@prod+3
 11004  0F9A  082E               	movf	??___flmul+2,w
 11005  0F9B  00BA               	movwf	___flmul@prod+2
 11006  0F9C  082D               	movf	??___flmul+1,w
 11007  0F9D  00B9               	movwf	___flmul@prod+1
 11008  0F9E  082C               	movf	??___flmul,w
 11009  0F9F  00B8               	movwf	___flmul@prod
 11010  0FA0                     l2983:
 11011  0FA0  3001               	movlw	1
 11012  0FA1  07BC               	addwf	___flmul@temp,f
 11013  0FA2  1803               	skipnc
 11014  0FA3  0ABD               	incf	___flmul@temp+1,f
 11015  0FA4  3000               	movlw	0
 11016  0FA5  07BD               	addwf	___flmul@temp+1,f
 11017  0FA6                     l2985:
 11018  0FA6  083D               	movf	___flmul@temp+1,w
 11019  0FA7  3A80               	xorlw	128
 11020  0FA8  00FF               	movwf	btemp+1
 11021  0FA9  3080               	movlw	128
 11022  0FAA  027F               	subwf	btemp+1,w
 11023  0FAB  1D03               	skipz
 11024  0FAC  2FAF               	goto	u4415
 11025  0FAD  30FF               	movlw	255
 11026  0FAE  023C               	subwf	___flmul@temp,w
 11027  0FAF                     u4415:
 11028  0FAF  1C03               	skipc
 11029  0FB0  2FB2               	goto	u4411
 11030  0FB1  2FB3               	goto	u4410
 11031  0FB2                     u4411:
 11032  0FB2  2FBE               	goto	l2989
 11033  0FB3                     u4410:
 11034  0FB3                     l2987:
 11035  0FB3  307F               	movlw	127
 11036  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 11037  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 11038  0FB6  00BB               	movwf	___flmul@prod+3
 11039  0FB7  3080               	movlw	128
 11040  0FB8  00BA               	movwf	___flmul@prod+2
 11041  0FB9  3000               	movlw	0
 11042  0FBA  00B9               	movwf	___flmul@prod+1
 11043  0FBB  3000               	movlw	0
 11044  0FBC  00B8               	movwf	___flmul@prod
 11045  0FBD  2FF3               	goto	l863
 11046  0FBE                     l2989:
 11047  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 11048  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 11049  0FC0  083D               	movf	___flmul@temp+1,w
 11050  0FC1  3A80               	xorlw	128
 11051  0FC2  00FF               	movwf	btemp+1
 11052  0FC3  3080               	movlw	128
 11053  0FC4  027F               	subwf	btemp+1,w
 11054  0FC5  1D03               	skipz
 11055  0FC6  2FC9               	goto	u4425
 11056  0FC7  3001               	movlw	1
 11057  0FC8  023C               	subwf	___flmul@temp,w
 11058  0FC9                     u4425:
 11059  0FC9  1803               	skipnc
 11060  0FCA  2FCC               	goto	u4421
 11061  0FCB  2FCD               	goto	u4420
 11062  0FCC                     u4421:
 11063  0FCC  2FD9               	goto	l2995
 11064  0FCD                     u4420:
 11065  0FCD                     l2991:
 11066  0FCD  3000               	movlw	0
 11067  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 11068  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 11069  0FD0  00BB               	movwf	___flmul@prod+3
 11070  0FD1  3000               	movlw	0
 11071  0FD2  00BA               	movwf	___flmul@prod+2
 11072  0FD3  3000               	movlw	0
 11073  0FD4  00B9               	movwf	___flmul@prod+1
 11074  0FD5  3000               	movlw	0
 11075  0FD6  00B8               	movwf	___flmul@prod
 11076  0FD7                     l2993:
 11077  0FD7  01B1               	clrf	___flmul@sign
 11078  0FD8  2FF3               	goto	l863
 11079  0FD9                     l2995:
 11080  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 11081  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 11082  0FDB  083C               	movf	___flmul@temp,w
 11083  0FDC  00AC               	movwf	??___flmul
 11084  0FDD  082C               	movf	??___flmul,w
 11085  0FDE  00B7               	movwf	___flmul@bexp
 11086  0FDF  30FF               	movlw	255
 11087  0FE0  05B8               	andwf	___flmul@prod,f
 11088  0FE1  30FF               	movlw	255
 11089  0FE2  05B9               	andwf	___flmul@prod+1,f
 11090  0FE3  307F               	movlw	127
 11091  0FE4  05BA               	andwf	___flmul@prod+2,f
 11092  0FE5  3000               	movlw	0
 11093  0FE6  05BB               	andwf	___flmul@prod+3,f
 11094  0FE7                     l2997:
 11095  0FE7  1C37               	btfss	___flmul@bexp,0
 11096  0FE8  2FEA               	goto	u4431
 11097  0FE9  2FEB               	goto	u4430
 11098  0FEA                     u4431:
 11099  0FEA  2FEC               	goto	l3001
 11100  0FEB                     u4430:
 11101  0FEB                     l2999:
 11102  0FEB  17BA               	bsf	___flmul@prod+2,7
 11103  0FEC                     l3001:
 11104  0FEC  0837               	movf	___flmul@bexp,w
 11105  0FED  00AC               	movwf	??___flmul
 11106  0FEE  1003               	clrc
 11107  0FEF  0C2C               	rrf	??___flmul,w
 11108  0FF0  00AD               	movwf	??___flmul+1
 11109  0FF1  082D               	movf	??___flmul+1,w
 11110  0FF2  00BB               	movwf	___flmul@prod+3
 11111  0FF3                     l863:
 11112  0FF3  0831               	movf	___flmul@sign,w
 11113  0FF4  00AC               	movwf	??___flmul
 11114  0FF5  082C               	movf	??___flmul,w
 11115  0FF6  04BB               	iorwf	___flmul@prod+3,f
 11116  0FF7                     l3003:
 11117  0FF7  083B               	movf	___flmul@prod+3,w
 11118  0FF8  00A7               	movwf	?___flmul+3
 11119  0FF9  083A               	movf	___flmul@prod+2,w
 11120  0FFA  00A6               	movwf	?___flmul+2
 11121  0FFB  0839               	movf	___flmul@prod+1,w
 11122  0FFC  00A5               	movwf	?___flmul+1
 11123  0FFD  0838               	movf	___flmul@prod,w
 11124  0FFE  00A4               	movwf	?___flmul
 11125  0FFF                     l851:
 11126  0FFF  0008               	return
 11127  1000                     __end_of___flmul:
 11128                           
 11129                           	psect	text38
 11130  192C                     __ptext38:	
 11131 ;; *************** function __Umul8_16 *****************
 11132 ;; Defined at:
 11133 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  multiplier      1    wreg     unsigned char 
 11136 ;;  multiplicand    1    0[COMMON] unsigned char 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  multiplier      1    8[COMMON] unsigned char 
 11139 ;;  word_mpld       2    6[COMMON] unsigned int 
 11140 ;;  product         2    4[COMMON] unsigned int 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  2    0[COMMON] unsigned int 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11150 ;;      Params:         2       0       0       0       0
 11151 ;;      Locals:         5       0       0       0       0
 11152 ;;      Temps:          2       0       0       0       0
 11153 ;;      Totals:         9       0       0       0       0
 11154 ;;Total ram usage:        9 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		___flmul
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           
 11164                           ;psect for function __Umul8_16
 11165  192C                     __Umul8_16:
 11166                           
 11167                           ;incstack = 0
 11168                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11169                           ;__Umul8_16@multiplier stored from wreg
 11170  192C  00F8               	movwf	__Umul8_16@multiplier
 11171  192D                     l2511:
 11172  192D  01F4               	clrf	__Umul8_16@product
 11173  192E  01F5               	clrf	__Umul8_16@product+1
 11174  192F                     l2513:
 11175  192F  0870               	movf	__Umul8_16@multiplicand,w
 11176  1930  00F2               	movwf	??__Umul8_16
 11177  1931  01F3               	clrf	??__Umul8_16+1
 11178  1932  0872               	movf	??__Umul8_16,w
 11179  1933  00F6               	movwf	__Umul8_16@word_mpld
 11180  1934  0873               	movf	??__Umul8_16+1,w
 11181  1935  00F7               	movwf	__Umul8_16@word_mpld+1
 11182  1936                     l2515:
 11183  1936  1C78               	btfss	__Umul8_16@multiplier,0
 11184  1937  2939               	goto	u3181
 11185  1938  293A               	goto	u3180
 11186  1939                     u3181:
 11187  1939  2940               	goto	l870
 11188  193A                     u3180:
 11189  193A                     l2517:
 11190  193A  0876               	movf	__Umul8_16@word_mpld,w
 11191  193B  07F4               	addwf	__Umul8_16@product,f
 11192  193C  1803               	skipnc
 11193  193D  0AF5               	incf	__Umul8_16@product+1,f
 11194  193E  0877               	movf	__Umul8_16@word_mpld+1,w
 11195  193F  07F5               	addwf	__Umul8_16@product+1,f
 11196  1940                     l870:
 11197  1940  3001               	movlw	1
 11198  1941                     u3195:
 11199  1941  1003               	clrc
 11200  1942  0DF6               	rlf	__Umul8_16@word_mpld,f
 11201  1943  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11202  1944  3EFF               	addlw	-1
 11203  1945  1D03               	skipz
 11204  1946  2941               	goto	u3195
 11205  1947  1003               	clrc
 11206  1948  0CF8               	rrf	__Umul8_16@multiplier,f
 11207  1949                     l2519:
 11208  1949  0878               	movf	__Umul8_16@multiplier,w
 11209  194A  1D03               	btfss	3,2
 11210  194B  294D               	goto	u3201
 11211  194C  294E               	goto	u3200
 11212  194D                     u3201:
 11213  194D  2936               	goto	l2515
 11214  194E                     u3200:
 11215  194E                     l2521:
 11216  194E  0875               	movf	__Umul8_16@product+1,w
 11217  194F  00F1               	movwf	?__Umul8_16+1
 11218  1950  0874               	movf	__Umul8_16@product,w
 11219  1951  00F0               	movwf	?__Umul8_16
 11220  1952                     l872:
 11221  1952  0008               	return
 11222  1953                     __end_of__Umul8_16:
 11223                           
 11224                           	psect	text39
 11225  1190                     __ptext39:	
 11226 ;; *************** function ___fldiv *****************
 11227 ;; Defined at:
 11228 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  a               4   30[BANK0 ] unsigned int 
 11231 ;;  b               4   34[BANK0 ] unsigned int 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  grs             4   50[BANK0 ] unsigned long 
 11234 ;;  rem             4   43[BANK0 ] unsigned long 
 11235 ;;  new_exp         2   48[BANK0 ] int 
 11236 ;;  aexp            1   55[BANK0 ] unsigned char 
 11237 ;;  bexp            1   54[BANK0 ] unsigned char 
 11238 ;;  sign            1   47[BANK0 ] unsigned char 
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  4   30[BANK0 ] unsigned char 
 11241 ;; Registers used:
 11242 ;;		wreg, status,2, status,0, btemp+1
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11248 ;;      Params:         0       8       0       0       0
 11249 ;;      Locals:         0      13       0       0       0
 11250 ;;      Temps:          0       5       0       0       0
 11251 ;;      Totals:         0      26       0       0       0
 11252 ;;Total ram usage:       26 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; This function calls:
 11255 ;;		Nothing
 11256 ;; This function is called by:
 11257 ;;		_ADC_1
 11258 ;;		_ADC_2
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           
 11263                           ;psect for function ___fldiv
 11264  1190                     ___fldiv:
 11265  1190                     l3363:	
 11266                           ;incstack = 0
 11267                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11268                           
 11269  1190  1283               	bcf	3,5	;RP0=0, select bank0
 11270  1191  1303               	bcf	3,6	;RP1=0, select bank0
 11271  1192  0845               	movf	___fldiv@b+3,w
 11272  1193  3980               	andlw	128
 11273  1194  00C6               	movwf	??___fldiv
 11274  1195  0846               	movf	??___fldiv,w
 11275  1196  00CF               	movwf	___fldiv@sign
 11276  1197                     l3365:
 11277  1197  0845               	movf	___fldiv@b+3,w
 11278  1198  00C6               	movwf	??___fldiv
 11279  1199  0746               	addwf	??___fldiv,w
 11280  119A  00C7               	movwf	??___fldiv+1
 11281  119B  0847               	movf	??___fldiv+1,w
 11282  119C  00D6               	movwf	___fldiv@bexp
 11283  119D                     l3367:
 11284  119D  1FC4               	btfss	___fldiv@b+2,7
 11285  119E  29A0               	goto	u5361
 11286  119F  29A1               	goto	u5360
 11287  11A0                     u5361:
 11288  11A0  29A2               	goto	l3371
 11289  11A1                     u5360:
 11290  11A1                     l3369:
 11291  11A1  1456               	bsf	___fldiv@bexp,0
 11292  11A2                     l3371:
 11293  11A2  0856               	movf	___fldiv@bexp,w
 11294  11A3  1903               	btfsc	3,2
 11295  11A4  29A6               	goto	u5371
 11296  11A5  29A7               	goto	u5370
 11297  11A6                     u5371:
 11298  11A6  29B7               	goto	l3381
 11299  11A7                     u5370:
 11300  11A7                     l3373:
 11301  11A7  0A56               	incf	___fldiv@bexp,w
 11302  11A8  1D03               	btfss	3,2
 11303  11A9  29AB               	goto	u5381
 11304  11AA  29AC               	goto	u5380
 11305  11AB                     u5381:
 11306  11AB  29B4               	goto	l3377
 11307  11AC                     u5380:
 11308  11AC                     l3375:
 11309  11AC  3000               	movlw	0
 11310  11AD  00C5               	movwf	___fldiv@b+3
 11311  11AE  3000               	movlw	0
 11312  11AF  00C4               	movwf	___fldiv@b+2
 11313  11B0  3000               	movlw	0
 11314  11B1  00C3               	movwf	___fldiv@b+1
 11315  11B2  3000               	movlw	0
 11316  11B3  00C2               	movwf	___fldiv@b
 11317  11B4                     l3377:
 11318  11B4  17C4               	bsf	___fldiv@b+2,7
 11319  11B5                     l3379:
 11320  11B5  01C5               	clrf	___fldiv@b+3
 11321  11B6  29BF               	goto	l3383
 11322  11B7                     l3381:
 11323  11B7  3000               	movlw	0
 11324  11B8  00C5               	movwf	___fldiv@b+3
 11325  11B9  3000               	movlw	0
 11326  11BA  00C4               	movwf	___fldiv@b+2
 11327  11BB  3000               	movlw	0
 11328  11BC  00C3               	movwf	___fldiv@b+1
 11329  11BD  3000               	movlw	0
 11330  11BE  00C2               	movwf	___fldiv@b
 11331  11BF                     l3383:
 11332  11BF  0841               	movf	___fldiv@a+3,w
 11333  11C0  3980               	andlw	128
 11334  11C1  00C6               	movwf	??___fldiv
 11335  11C2  0846               	movf	??___fldiv,w
 11336  11C3  06CF               	xorwf	___fldiv@sign,f
 11337  11C4                     l3385:
 11338  11C4  0841               	movf	___fldiv@a+3,w
 11339  11C5  00C6               	movwf	??___fldiv
 11340  11C6  0746               	addwf	??___fldiv,w
 11341  11C7  00C7               	movwf	??___fldiv+1
 11342  11C8  0847               	movf	??___fldiv+1,w
 11343  11C9  00D7               	movwf	___fldiv@aexp
 11344  11CA                     l3387:
 11345  11CA  1FC0               	btfss	___fldiv@a+2,7
 11346  11CB  29CD               	goto	u5391
 11347  11CC  29CE               	goto	u5390
 11348  11CD                     u5391:
 11349  11CD  29CF               	goto	l3391
 11350  11CE                     u5390:
 11351  11CE                     l3389:
 11352  11CE  1457               	bsf	___fldiv@aexp,0
 11353  11CF                     l3391:
 11354  11CF  0857               	movf	___fldiv@aexp,w
 11355  11D0  1903               	btfsc	3,2
 11356  11D1  29D3               	goto	u5401
 11357  11D2  29D4               	goto	u5400
 11358  11D3                     u5401:
 11359  11D3  29E4               	goto	l3401
 11360  11D4                     u5400:
 11361  11D4                     l3393:
 11362  11D4  0A57               	incf	___fldiv@aexp,w
 11363  11D5  1D03               	btfss	3,2
 11364  11D6  29D8               	goto	u5411
 11365  11D7  29D9               	goto	u5410
 11366  11D8                     u5411:
 11367  11D8  29E1               	goto	l3397
 11368  11D9                     u5410:
 11369  11D9                     l3395:
 11370  11D9  3000               	movlw	0
 11371  11DA  00C1               	movwf	___fldiv@a+3
 11372  11DB  3000               	movlw	0
 11373  11DC  00C0               	movwf	___fldiv@a+2
 11374  11DD  3000               	movlw	0
 11375  11DE  00BF               	movwf	___fldiv@a+1
 11376  11DF  3000               	movlw	0
 11377  11E0  00BE               	movwf	___fldiv@a
 11378  11E1                     l3397:
 11379  11E1  17C0               	bsf	___fldiv@a+2,7
 11380  11E2                     l3399:
 11381  11E2  01C1               	clrf	___fldiv@a+3
 11382  11E3  29EC               	goto	l811
 11383  11E4                     l3401:
 11384  11E4  3000               	movlw	0
 11385  11E5  00C1               	movwf	___fldiv@a+3
 11386  11E6  3000               	movlw	0
 11387  11E7  00C0               	movwf	___fldiv@a+2
 11388  11E8  3000               	movlw	0
 11389  11E9  00BF               	movwf	___fldiv@a+1
 11390  11EA  3000               	movlw	0
 11391  11EB  00BE               	movwf	___fldiv@a
 11392  11EC                     l811:
 11393  11EC  0841               	movf	___fldiv@a+3,w
 11394  11ED  0440               	iorwf	___fldiv@a+2,w
 11395  11EE  043F               	iorwf	___fldiv@a+1,w
 11396  11EF  043E               	iorwf	___fldiv@a,w
 11397  11F0  1D03               	skipz
 11398  11F1  29F3               	goto	u5421
 11399  11F2  29F4               	goto	u5420
 11400  11F3                     u5421:
 11401  11F3  2A0D               	goto	l3411
 11402  11F4                     u5420:
 11403  11F4                     l3403:
 11404  11F4  3000               	movlw	0
 11405  11F5  00C5               	movwf	___fldiv@b+3
 11406  11F6  3000               	movlw	0
 11407  11F7  00C4               	movwf	___fldiv@b+2
 11408  11F8  3000               	movlw	0
 11409  11F9  00C3               	movwf	___fldiv@b+1
 11410  11FA  3000               	movlw	0
 11411  11FB  00C2               	movwf	___fldiv@b
 11412  11FC  3080               	movlw	128
 11413  11FD  04C4               	iorwf	___fldiv@b+2,f
 11414  11FE  307F               	movlw	127
 11415  11FF  04C5               	iorwf	___fldiv@b+3,f
 11416  1200                     l3405:
 11417  1200  084F               	movf	___fldiv@sign,w
 11418  1201  00C6               	movwf	??___fldiv
 11419  1202  0846               	movf	??___fldiv,w
 11420  1203  04C5               	iorwf	___fldiv@b+3,f
 11421  1204                     l3407:
 11422  1204  0845               	movf	___fldiv@b+3,w
 11423  1205  00C1               	movwf	?___fldiv+3
 11424  1206  0844               	movf	___fldiv@b+2,w
 11425  1207  00C0               	movwf	?___fldiv+2
 11426  1208  0843               	movf	___fldiv@b+1,w
 11427  1209  00BF               	movwf	?___fldiv+1
 11428  120A  0842               	movf	___fldiv@b,w
 11429  120B  00BE               	movwf	?___fldiv
 11430  120C  2B6C               	goto	l813
 11431  120D                     l3411:
 11432  120D  0856               	movf	___fldiv@bexp,w
 11433  120E  1D03               	btfss	3,2
 11434  120F  2A11               	goto	u5431
 11435  1210  2A12               	goto	u5430
 11436  1211                     u5431:
 11437  1211  2A1B               	goto	l3417
 11438  1212                     u5430:
 11439  1212                     l3413:
 11440  1212  3000               	movlw	0
 11441  1213  00C1               	movwf	?___fldiv+3
 11442  1214  3000               	movlw	0
 11443  1215  00C0               	movwf	?___fldiv+2
 11444  1216  3000               	movlw	0
 11445  1217  00BF               	movwf	?___fldiv+1
 11446  1218  3000               	movlw	0
 11447  1219  00BE               	movwf	?___fldiv
 11448  121A  2B6C               	goto	l813
 11449  121B                     l3417:
 11450  121B  0856               	movf	___fldiv@bexp,w
 11451  121C  00C6               	movwf	??___fldiv
 11452  121D  01C7               	clrf	??___fldiv+1
 11453  121E  0847               	movf	??___fldiv+1,w
 11454  121F  00C9               	movwf	??___fldiv+3
 11455  1220  0857               	movf	___fldiv@aexp,w
 11456  1221  0246               	subwf	??___fldiv,w
 11457  1222  00C8               	movwf	??___fldiv+2
 11458  1223  1C03               	skipc
 11459  1224  03C9               	decf	??___fldiv+3,f
 11460  1225  0848               	movf	??___fldiv+2,w
 11461  1226  3E7F               	addlw	127
 11462  1227  00D0               	movwf	___fldiv@new_exp
 11463  1228  0849               	movf	??___fldiv+3,w
 11464  1229  1803               	skipnc
 11465  122A  3E01               	addlw	1
 11466  122B  3E00               	addlw	0
 11467  122C  00D1               	movwf	___fldiv@new_exp+1
 11468  122D                     l3419:
 11469  122D  0845               	movf	___fldiv@b+3,w
 11470  122E  00CE               	movwf	___fldiv@rem+3
 11471  122F  0844               	movf	___fldiv@b+2,w
 11472  1230  00CD               	movwf	___fldiv@rem+2
 11473  1231  0843               	movf	___fldiv@b+1,w
 11474  1232  00CC               	movwf	___fldiv@rem+1
 11475  1233  0842               	movf	___fldiv@b,w
 11476  1234  00CB               	movwf	___fldiv@rem
 11477  1235                     l3421:
 11478  1235  3000               	movlw	0
 11479  1236  00C5               	movwf	___fldiv@b+3
 11480  1237  3000               	movlw	0
 11481  1238  00C4               	movwf	___fldiv@b+2
 11482  1239  3000               	movlw	0
 11483  123A  00C3               	movwf	___fldiv@b+1
 11484  123B  3000               	movlw	0
 11485  123C  00C2               	movwf	___fldiv@b
 11486  123D                     l3423:
 11487  123D  3000               	movlw	0
 11488  123E  00D5               	movwf	___fldiv@grs+3
 11489  123F  3000               	movlw	0
 11490  1240  00D4               	movwf	___fldiv@grs+2
 11491  1241  3000               	movlw	0
 11492  1242  00D3               	movwf	___fldiv@grs+1
 11493  1243  3000               	movlw	0
 11494  1244  00D2               	movwf	___fldiv@grs
 11495  1245                     l3425:
 11496  1245  01D7               	clrf	___fldiv@aexp
 11497  1246  2A91               	goto	l3445
 11498  1247                     l3427:
 11499  1247  0857               	movf	___fldiv@aexp,w
 11500  1248  1903               	btfsc	3,2
 11501  1249  2A4B               	goto	u5441
 11502  124A  2A4C               	goto	u5440
 11503  124B                     u5441:
 11504  124B  2A6C               	goto	l3437
 11505  124C                     u5440:
 11506  124C                     l3429:
 11507  124C  3001               	movlw	1
 11508  124D  00C6               	movwf	??___fldiv
 11509  124E                     u5455:
 11510  124E  1003               	clrc
 11511  124F  0DCB               	rlf	___fldiv@rem,f
 11512  1250  0DCC               	rlf	___fldiv@rem+1,f
 11513  1251  0DCD               	rlf	___fldiv@rem+2,f
 11514  1252  0DCE               	rlf	___fldiv@rem+3,f
 11515  1253  0BC6               	decfsz	??___fldiv,f
 11516  1254  2A4E               	goto	u5455
 11517  1255  3001               	movlw	1
 11518  1256  00C6               	movwf	??___fldiv
 11519  1257                     u5465:
 11520  1257  1003               	clrc
 11521  1258  0DC2               	rlf	___fldiv@b,f
 11522  1259  0DC3               	rlf	___fldiv@b+1,f
 11523  125A  0DC4               	rlf	___fldiv@b+2,f
 11524  125B  0DC5               	rlf	___fldiv@b+3,f
 11525  125C  0BC6               	decfsz	??___fldiv,f
 11526  125D  2A57               	goto	u5465
 11527  125E                     l3431:
 11528  125E  1FD5               	btfss	___fldiv@grs+3,7
 11529  125F  2A61               	goto	u5471
 11530  1260  2A62               	goto	u5470
 11531  1261                     u5471:
 11532  1261  2A63               	goto	l3435
 11533  1262                     u5470:
 11534  1262                     l3433:
 11535  1262  1442               	bsf	___fldiv@b,0
 11536  1263                     l3435:
 11537  1263  3001               	movlw	1
 11538  1264  00C6               	movwf	??___fldiv
 11539  1265                     u5485:
 11540  1265  1003               	clrc
 11541  1266  0DD2               	rlf	___fldiv@grs,f
 11542  1267  0DD3               	rlf	___fldiv@grs+1,f
 11543  1268  0DD4               	rlf	___fldiv@grs+2,f
 11544  1269  0DD5               	rlf	___fldiv@grs+3,f
 11545  126A  0BC6               	decfsz	??___fldiv,f
 11546  126B  2A65               	goto	u5485
 11547  126C                     l3437:
 11548  126C  0841               	movf	___fldiv@a+3,w
 11549  126D  024E               	subwf	___fldiv@rem+3,w
 11550  126E  1D03               	skipz
 11551  126F  2A7A               	goto	u5495
 11552  1270  0840               	movf	___fldiv@a+2,w
 11553  1271  024D               	subwf	___fldiv@rem+2,w
 11554  1272  1D03               	skipz
 11555  1273  2A7A               	goto	u5495
 11556  1274  083F               	movf	___fldiv@a+1,w
 11557  1275  024C               	subwf	___fldiv@rem+1,w
 11558  1276  1D03               	skipz
 11559  1277  2A7A               	goto	u5495
 11560  1278  083E               	movf	___fldiv@a,w
 11561  1279  024B               	subwf	___fldiv@rem,w
 11562  127A                     u5495:
 11563  127A  1C03               	skipc
 11564  127B  2A7D               	goto	u5491
 11565  127C  2A7E               	goto	u5490
 11566  127D                     u5491:
 11567  127D  2A8D               	goto	l3443
 11568  127E                     u5490:
 11569  127E                     l3439:
 11570  127E  1755               	bsf	___fldiv@grs+3,6
 11571  127F                     l3441:
 11572  127F  083E               	movf	___fldiv@a,w
 11573  1280  02CB               	subwf	___fldiv@rem,f
 11574  1281  083F               	movf	___fldiv@a+1,w
 11575  1282  1C03               	skipc
 11576  1283  0F3F               	incfsz	___fldiv@a+1,w
 11577  1284  02CC               	subwf	___fldiv@rem+1,f
 11578  1285  0840               	movf	___fldiv@a+2,w
 11579  1286  1C03               	skipc
 11580  1287  0F40               	incfsz	___fldiv@a+2,w
 11581  1288  02CD               	subwf	___fldiv@rem+2,f
 11582  1289  0841               	movf	___fldiv@a+3,w
 11583  128A  1C03               	skipc
 11584  128B  0F41               	incfsz	___fldiv@a+3,w
 11585  128C  02CE               	subwf	___fldiv@rem+3,f
 11586  128D                     l3443:
 11587  128D  3001               	movlw	1
 11588  128E  00C6               	movwf	??___fldiv
 11589  128F  0846               	movf	??___fldiv,w
 11590  1290  07D7               	addwf	___fldiv@aexp,f
 11591  1291                     l3445:
 11592  1291  301A               	movlw	26
 11593  1292  0257               	subwf	___fldiv@aexp,w
 11594  1293  1C03               	skipc
 11595  1294  2A96               	goto	u5501
 11596  1295  2A97               	goto	u5500
 11597  1296                     u5501:
 11598  1296  2A47               	goto	l3427
 11599  1297                     u5500:
 11600  1297                     l3447:
 11601  1297  084E               	movf	___fldiv@rem+3,w
 11602  1298  044D               	iorwf	___fldiv@rem+2,w
 11603  1299  044C               	iorwf	___fldiv@rem+1,w
 11604  129A  044B               	iorwf	___fldiv@rem,w
 11605  129B  1903               	skipnz
 11606  129C  2A9E               	goto	u5511
 11607  129D  2A9F               	goto	u5510
 11608  129E                     u5511:
 11609  129E  2ABE               	goto	l3461
 11610  129F                     u5510:
 11611  129F                     l3449:
 11612  129F  1452               	bsf	___fldiv@grs,0
 11613  12A0  2ABE               	goto	l3461
 11614  12A1                     l3451:
 11615  12A1  3001               	movlw	1
 11616  12A2  00C6               	movwf	??___fldiv
 11617  12A3                     u5525:
 11618  12A3  1003               	clrc
 11619  12A4  0DC2               	rlf	___fldiv@b,f
 11620  12A5  0DC3               	rlf	___fldiv@b+1,f
 11621  12A6  0DC4               	rlf	___fldiv@b+2,f
 11622  12A7  0DC5               	rlf	___fldiv@b+3,f
 11623  12A8  0BC6               	decfsz	??___fldiv,f
 11624  12A9  2AA3               	goto	u5525
 11625  12AA                     l3453:
 11626  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11627  12AB  2AAD               	goto	u5531
 11628  12AC  2AAE               	goto	u5530
 11629  12AD                     u5531:
 11630  12AD  2AAF               	goto	l3457
 11631  12AE                     u5530:
 11632  12AE                     l3455:
 11633  12AE  1442               	bsf	___fldiv@b,0
 11634  12AF                     l3457:
 11635  12AF  3001               	movlw	1
 11636  12B0  00C6               	movwf	??___fldiv
 11637  12B1                     u5545:
 11638  12B1  1003               	clrc
 11639  12B2  0DD2               	rlf	___fldiv@grs,f
 11640  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11641  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11642  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11643  12B6  0BC6               	decfsz	??___fldiv,f
 11644  12B7  2AB1               	goto	u5545
 11645  12B8                     l3459:
 11646  12B8  30FF               	movlw	255
 11647  12B9  07D0               	addwf	___fldiv@new_exp,f
 11648  12BA  1803               	skipnc
 11649  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11650  12BC  30FF               	movlw	255
 11651  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11652  12BE                     l3461:
 11653  12BE  1FC4               	btfss	___fldiv@b+2,7
 11654  12BF  2AC1               	goto	u5551
 11655  12C0  2AC2               	goto	u5550
 11656  12C1                     u5551:
 11657  12C1  2AA1               	goto	l3451
 11658  12C2                     u5550:
 11659  12C2                     l3463:
 11660  12C2  01D7               	clrf	___fldiv@aexp
 11661  12C3                     l3465:
 11662  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11663  12C4  2AC6               	goto	u5561
 11664  12C5  2AC7               	goto	u5560
 11665  12C6                     u5561:
 11666  12C6  2AE3               	goto	l3473
 11667  12C7                     u5560:
 11668  12C7                     l3467:
 11669  12C7  30FF               	movlw	255
 11670  12C8  0552               	andwf	___fldiv@grs,w
 11671  12C9  00C6               	movwf	??___fldiv
 11672  12CA  30FF               	movlw	255
 11673  12CB  0553               	andwf	___fldiv@grs+1,w
 11674  12CC  00C7               	movwf	??___fldiv+1
 11675  12CD  30FF               	movlw	255
 11676  12CE  0554               	andwf	___fldiv@grs+2,w
 11677  12CF  00C8               	movwf	??___fldiv+2
 11678  12D0  307F               	movlw	127
 11679  12D1  0555               	andwf	___fldiv@grs+3,w
 11680  12D2  00C9               	movwf	??___fldiv+3
 11681  12D3  0849               	movf	??___fldiv+3,w
 11682  12D4  0448               	iorwf	??___fldiv+2,w
 11683  12D5  0447               	iorwf	??___fldiv+1,w
 11684  12D6  0446               	iorwf	??___fldiv,w
 11685  12D7  1903               	skipnz
 11686  12D8  2ADA               	goto	u5571
 11687  12D9  2ADB               	goto	u5570
 11688  12DA                     u5571:
 11689  12DA  2ADE               	goto	l827
 11690  12DB                     u5570:
 11691  12DB                     l3469:
 11692  12DB  01D7               	clrf	___fldiv@aexp
 11693  12DC  0AD7               	incf	___fldiv@aexp,f
 11694  12DD  2AE3               	goto	l3473
 11695  12DE                     l827:
 11696  12DE  1C42               	btfss	___fldiv@b,0
 11697  12DF  2AE1               	goto	u5581
 11698  12E0  2AE2               	goto	u5580
 11699  12E1                     u5581:
 11700  12E1  2AE3               	goto	l3473
 11701  12E2                     u5580:
 11702  12E2  2ADB               	goto	l3469
 11703  12E3                     l3473:
 11704  12E3  0857               	movf	___fldiv@aexp,w
 11705  12E4  1903               	btfsc	3,2
 11706  12E5  2AE7               	goto	u5591
 11707  12E6  2AE8               	goto	u5590
 11708  12E7                     u5591:
 11709  12E7  2B19               	goto	l3483
 11710  12E8                     u5590:
 11711  12E8                     l3475:
 11712  12E8  3001               	movlw	1
 11713  12E9  07C2               	addwf	___fldiv@b,f
 11714  12EA  3000               	movlw	0
 11715  12EB  1803               	skipnc
 11716  12EC  3001               	movlw	1
 11717  12ED  07C3               	addwf	___fldiv@b+1,f
 11718  12EE  3000               	movlw	0
 11719  12EF  1803               	skipnc
 11720  12F0  3001               	movlw	1
 11721  12F1  07C4               	addwf	___fldiv@b+2,f
 11722  12F2  3000               	movlw	0
 11723  12F3  1803               	skipnc
 11724  12F4  3001               	movlw	1
 11725  12F5  07C5               	addwf	___fldiv@b+3,f
 11726  12F6                     l3477:
 11727  12F6  1C45               	btfss	___fldiv@b+3,0
 11728  12F7  2AF9               	goto	u5601
 11729  12F8  2AFA               	goto	u5600
 11730  12F9                     u5601:
 11731  12F9  2B19               	goto	l3483
 11732  12FA                     u5600:
 11733  12FA                     l3479:
 11734  12FA  0842               	movf	___fldiv@b,w
 11735  12FB  00C6               	movwf	??___fldiv
 11736  12FC  0843               	movf	___fldiv@b+1,w
 11737  12FD  00C7               	movwf	??___fldiv+1
 11738  12FE  0844               	movf	___fldiv@b+2,w
 11739  12FF  00C8               	movwf	??___fldiv+2
 11740  1300  0845               	movf	___fldiv@b+3,w
 11741  1301  00C9               	movwf	??___fldiv+3
 11742  1302  3001               	movlw	1
 11743  1303  00CA               	movwf	??___fldiv+4
 11744  1304                     u5615:
 11745  1304  0D49               	rlf	??___fldiv+3,w
 11746  1305  0CC9               	rrf	??___fldiv+3,f
 11747  1306  0CC8               	rrf	??___fldiv+2,f
 11748  1307  0CC7               	rrf	??___fldiv+1,f
 11749  1308  0CC6               	rrf	??___fldiv,f
 11750  1309                     u5610:
 11751  1309  0BCA               	decfsz	??___fldiv+4,f
 11752  130A  2B04               	goto	u5615
 11753  130B  0849               	movf	??___fldiv+3,w
 11754  130C  00C5               	movwf	___fldiv@b+3
 11755  130D  0848               	movf	??___fldiv+2,w
 11756  130E  00C4               	movwf	___fldiv@b+2
 11757  130F  0847               	movf	??___fldiv+1,w
 11758  1310  00C3               	movwf	___fldiv@b+1
 11759  1311  0846               	movf	??___fldiv,w
 11760  1312  00C2               	movwf	___fldiv@b
 11761  1313                     l3481:
 11762  1313  3001               	movlw	1
 11763  1314  07D0               	addwf	___fldiv@new_exp,f
 11764  1315  1803               	skipnc
 11765  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11766  1317  3000               	movlw	0
 11767  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11768  1319                     l3483:
 11769  1319  0851               	movf	___fldiv@new_exp+1,w
 11770  131A  3A80               	xorlw	128
 11771  131B  00FF               	movwf	btemp+1
 11772  131C  3080               	movlw	128
 11773  131D  027F               	subwf	btemp+1,w
 11774  131E  1D03               	skipz
 11775  131F  2B22               	goto	u5625
 11776  1320  30FF               	movlw	255
 11777  1321  0250               	subwf	___fldiv@new_exp,w
 11778  1322                     u5625:
 11779  1322  1C03               	skipc
 11780  1323  2B25               	goto	u5621
 11781  1324  2B26               	goto	u5620
 11782  1325                     u5621:
 11783  1325  2B34               	goto	l3487
 11784  1326                     u5620:
 11785  1326                     l3485:
 11786  1326  30FF               	movlw	255
 11787  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11788  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11789  1329  00D0               	movwf	___fldiv@new_exp
 11790  132A  3000               	movlw	0
 11791  132B  00D1               	movwf	___fldiv@new_exp+1
 11792  132C  3000               	movlw	0
 11793  132D  00C5               	movwf	___fldiv@b+3
 11794  132E  3000               	movlw	0
 11795  132F  00C4               	movwf	___fldiv@b+2
 11796  1330  3000               	movlw	0
 11797  1331  00C3               	movwf	___fldiv@b+1
 11798  1332  3000               	movlw	0
 11799  1333  00C2               	movwf	___fldiv@b
 11800  1334                     l3487:
 11801  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11802  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11803  1336  0851               	movf	___fldiv@new_exp+1,w
 11804  1337  3A80               	xorlw	128
 11805  1338  00FF               	movwf	btemp+1
 11806  1339  3080               	movlw	128
 11807  133A  027F               	subwf	btemp+1,w
 11808  133B  1D03               	skipz
 11809  133C  2B3F               	goto	u5635
 11810  133D  3001               	movlw	1
 11811  133E  0250               	subwf	___fldiv@new_exp,w
 11812  133F                     u5635:
 11813  133F  1803               	skipnc
 11814  1340  2B42               	goto	u5631
 11815  1341  2B43               	goto	u5630
 11816  1342                     u5631:
 11817  1342  2B50               	goto	l833
 11818  1343                     u5630:
 11819  1343                     l3489:
 11820  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11821  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11822  1345  01D0               	clrf	___fldiv@new_exp
 11823  1346  01D1               	clrf	___fldiv@new_exp+1
 11824  1347                     l3491:
 11825  1347  3000               	movlw	0
 11826  1348  00C5               	movwf	___fldiv@b+3
 11827  1349  3000               	movlw	0
 11828  134A  00C4               	movwf	___fldiv@b+2
 11829  134B  3000               	movlw	0
 11830  134C  00C3               	movwf	___fldiv@b+1
 11831  134D  3000               	movlw	0
 11832  134E  00C2               	movwf	___fldiv@b
 11833  134F                     l3493:
 11834  134F  01CF               	clrf	___fldiv@sign
 11835  1350                     l833:
 11836  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11837  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11838  1352  0850               	movf	___fldiv@new_exp,w
 11839  1353  00C6               	movwf	??___fldiv
 11840  1354  0846               	movf	??___fldiv,w
 11841  1355  00D6               	movwf	___fldiv@bexp
 11842  1356                     l3495:
 11843  1356  1C56               	btfss	___fldiv@bexp,0
 11844  1357  2B59               	goto	u5641
 11845  1358  2B5A               	goto	u5640
 11846  1359                     u5641:
 11847  1359  2B5C               	goto	l3499
 11848  135A                     u5640:
 11849  135A                     l3497:
 11850  135A  17C4               	bsf	___fldiv@b+2,7
 11851  135B  2B60               	goto	l835
 11852  135C                     l3499:
 11853  135C  307F               	movlw	127
 11854  135D  00C6               	movwf	??___fldiv
 11855  135E  0846               	movf	??___fldiv,w
 11856  135F  05C4               	andwf	___fldiv@b+2,f
 11857  1360                     l835:
 11858  1360  0856               	movf	___fldiv@bexp,w
 11859  1361  00C6               	movwf	??___fldiv
 11860  1362  1003               	clrc
 11861  1363  0C46               	rrf	??___fldiv,w
 11862  1364  00C7               	movwf	??___fldiv+1
 11863  1365  0847               	movf	??___fldiv+1,w
 11864  1366  00C5               	movwf	___fldiv@b+3
 11865  1367  084F               	movf	___fldiv@sign,w
 11866  1368  00C6               	movwf	??___fldiv
 11867  1369  0846               	movf	??___fldiv,w
 11868  136A  04C5               	iorwf	___fldiv@b+3,f
 11869  136B  2A04               	goto	l3407
 11870  136C                     l813:
 11871  136C  0008               	return
 11872  136D                     __end_of___fldiv:
 11873                           
 11874                           	psect	text40
 11875  1E96                     __ptext40:	
 11876 ;; *************** function _Canal_ADC *****************
 11877 ;; Defined at:
 11878 ;;		line 10 in file "ADC.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  x               2    0[COMMON] unsigned short 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;		None
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  2    0[COMMON] unsigned int 
 11885 ;; Registers used:
 11886 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11892 ;;      Params:         2       0       0       0       0
 11893 ;;      Locals:         0       0       0       0       0
 11894 ;;      Temps:          0       0       0       0       0
 11895 ;;      Totals:         2       0       0       0       0
 11896 ;;Total ram usage:        2 bytes
 11897 ;; Hardware stack levels used:    1
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_ADC_1
 11902 ;;		_ADC_2
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           
 11907                           ;psect for function _Canal_ADC
 11908  1E96                     _Canal_ADC:
 11909  1E96                     l3011:	
 11910                           ;incstack = 0
 11911                           ; Regs used in _Canal_ADC: [wreg-fsr0h+status,2+status,0]
 11912                           
 11913                           
 11914                           ;ADC.c: 11:     switch(x){
 11915  1E96  2F0E               	goto	l3015
 11916  1E97                     l173:	
 11917                           ;ADC.c: 13:         case 0:
 11918                           
 11919                           
 11920                           ;ADC.c: 14:             ADCON0bits.CHS3 = 0;
 11921  1E97  1283               	bcf	3,5	;RP0=0, select bank0
 11922  1E98  1303               	bcf	3,6	;RP1=0, select bank0
 11923  1E99  129F               	bcf	31,5	;volatile
 11924                           
 11925                           ;ADC.c: 15:             ADCON0bits.CHS2 = 0;
 11926  1E9A  121F               	bcf	31,4	;volatile
 11927                           
 11928                           ;ADC.c: 16:             ADCON0bits.CHS1 = 0;
 11929  1E9B  119F               	bcf	31,3	;volatile
 11930                           
 11931                           ;ADC.c: 17:             ADCON0bits.CHS0 = 0;
 11932  1E9C  111F               	bcf	31,2	;volatile
 11933                           
 11934                           ;ADC.c: 18:             break;
 11935  1E9D  2F45               	goto	l191
 11936  1E9E                     l175:	
 11937                           ;ADC.c: 19:         case 1:
 11938                           
 11939                           
 11940                           ;ADC.c: 20:             ADCON0bits.CHS3 = 0;
 11941  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
 11942  1E9F  1303               	bcf	3,6	;RP1=0, select bank0
 11943  1EA0  129F               	bcf	31,5	;volatile
 11944                           
 11945                           ;ADC.c: 21:             ADCON0bits.CHS2 = 0;
 11946  1EA1  121F               	bcf	31,4	;volatile
 11947                           
 11948                           ;ADC.c: 22:             ADCON0bits.CHS1 = 0;
 11949  1EA2  119F               	bcf	31,3	;volatile
 11950                           
 11951                           ;ADC.c: 23:             ADCON0bits.CHS0 = 1;
 11952  1EA3  151F               	bsf	31,2	;volatile
 11953                           
 11954                           ;ADC.c: 24:             break;
 11955  1EA4  2F45               	goto	l191
 11956  1EA5                     l176:	
 11957                           ;ADC.c: 25:         case 2:
 11958                           
 11959                           
 11960                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
 11961  1EA5  1283               	bcf	3,5	;RP0=0, select bank0
 11962  1EA6  1303               	bcf	3,6	;RP1=0, select bank0
 11963  1EA7  129F               	bcf	31,5	;volatile
 11964                           
 11965                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
 11966  1EA8  121F               	bcf	31,4	;volatile
 11967                           
 11968                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
 11969  1EA9  159F               	bsf	31,3	;volatile
 11970                           
 11971                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
 11972  1EAA  111F               	bcf	31,2	;volatile
 11973                           
 11974                           ;ADC.c: 30:             break;
 11975  1EAB  2F45               	goto	l191
 11976  1EAC                     l177:	
 11977                           ;ADC.c: 31:         case 3:
 11978                           
 11979                           
 11980                           ;ADC.c: 32:             ADCON0bits.CHS3 = 0;
 11981  1EAC  1283               	bcf	3,5	;RP0=0, select bank0
 11982  1EAD  1303               	bcf	3,6	;RP1=0, select bank0
 11983  1EAE  129F               	bcf	31,5	;volatile
 11984                           
 11985                           ;ADC.c: 33:             ADCON0bits.CHS2 = 0;
 11986  1EAF  121F               	bcf	31,4	;volatile
 11987                           
 11988                           ;ADC.c: 34:             ADCON0bits.CHS1 = 1;
 11989  1EB0  159F               	bsf	31,3	;volatile
 11990                           
 11991                           ;ADC.c: 35:             ADCON0bits.CHS0 = 1;
 11992  1EB1  151F               	bsf	31,2	;volatile
 11993                           
 11994                           ;ADC.c: 36:             break;
 11995  1EB2  2F45               	goto	l191
 11996  1EB3                     l178:	
 11997                           ;ADC.c: 37:         case 4:
 11998                           
 11999                           
 12000                           ;ADC.c: 38:             ADCON0bits.CHS3 = 0;
 12001  1EB3  1283               	bcf	3,5	;RP0=0, select bank0
 12002  1EB4  1303               	bcf	3,6	;RP1=0, select bank0
 12003  1EB5  129F               	bcf	31,5	;volatile
 12004                           
 12005                           ;ADC.c: 39:             ADCON0bits.CHS2 = 1;
 12006  1EB6  161F               	bsf	31,4	;volatile
 12007                           
 12008                           ;ADC.c: 40:             ADCON0bits.CHS1 = 0;
 12009  1EB7  119F               	bcf	31,3	;volatile
 12010                           
 12011                           ;ADC.c: 41:             ADCON0bits.CHS0 = 0;
 12012  1EB8  111F               	bcf	31,2	;volatile
 12013                           
 12014                           ;ADC.c: 42:             break;
 12015  1EB9  2F45               	goto	l191
 12016  1EBA                     l179:	
 12017                           ;ADC.c: 43:         case 5:
 12018                           
 12019                           
 12020                           ;ADC.c: 44:             ADCON0bits.CHS3 = 0;
 12021  1EBA  1283               	bcf	3,5	;RP0=0, select bank0
 12022  1EBB  1303               	bcf	3,6	;RP1=0, select bank0
 12023  1EBC  129F               	bcf	31,5	;volatile
 12024                           
 12025                           ;ADC.c: 45:             ADCON0bits.CHS2 = 1;
 12026  1EBD  161F               	bsf	31,4	;volatile
 12027                           
 12028                           ;ADC.c: 46:             ADCON0bits.CHS1 = 0;
 12029  1EBE  119F               	bcf	31,3	;volatile
 12030                           
 12031                           ;ADC.c: 47:             ADCON0bits.CHS0 = 1;
 12032  1EBF  151F               	bsf	31,2	;volatile
 12033                           
 12034                           ;ADC.c: 48:             break;
 12035  1EC0  2F45               	goto	l191
 12036  1EC1                     l180:	
 12037                           ;ADC.c: 49:         case 6:
 12038                           
 12039                           
 12040                           ;ADC.c: 50:             ADCON0bits.CHS3 = 0;
 12041  1EC1  1283               	bcf	3,5	;RP0=0, select bank0
 12042  1EC2  1303               	bcf	3,6	;RP1=0, select bank0
 12043  1EC3  129F               	bcf	31,5	;volatile
 12044                           
 12045                           ;ADC.c: 51:             ADCON0bits.CHS2 = 1;
 12046  1EC4  161F               	bsf	31,4	;volatile
 12047                           
 12048                           ;ADC.c: 52:             ADCON0bits.CHS1 = 1;
 12049  1EC5  159F               	bsf	31,3	;volatile
 12050                           
 12051                           ;ADC.c: 53:             ADCON0bits.CHS0 = 0;
 12052  1EC6  111F               	bcf	31,2	;volatile
 12053                           
 12054                           ;ADC.c: 54:             break;
 12055  1EC7  2F45               	goto	l191
 12056  1EC8                     l181:	
 12057                           ;ADC.c: 55:         case 7:
 12058                           
 12059                           
 12060                           ;ADC.c: 56:             ADCON0bits.CHS3 = 0;
 12061  1EC8  1283               	bcf	3,5	;RP0=0, select bank0
 12062  1EC9  1303               	bcf	3,6	;RP1=0, select bank0
 12063  1ECA  129F               	bcf	31,5	;volatile
 12064                           
 12065                           ;ADC.c: 57:             ADCON0bits.CHS2 = 1;
 12066  1ECB  161F               	bsf	31,4	;volatile
 12067                           
 12068                           ;ADC.c: 58:             ADCON0bits.CHS1 = 1;
 12069  1ECC  159F               	bsf	31,3	;volatile
 12070                           
 12071                           ;ADC.c: 59:             ADCON0bits.CHS0 = 1;
 12072  1ECD  151F               	bsf	31,2	;volatile
 12073                           
 12074                           ;ADC.c: 60:             break;
 12075  1ECE  2F45               	goto	l191
 12076  1ECF                     l182:	
 12077                           ;ADC.c: 61:         case 8:
 12078                           
 12079                           
 12080                           ;ADC.c: 62:             ADCON0bits.CHS3 = 1;
 12081  1ECF  1283               	bcf	3,5	;RP0=0, select bank0
 12082  1ED0  1303               	bcf	3,6	;RP1=0, select bank0
 12083  1ED1  169F               	bsf	31,5	;volatile
 12084                           
 12085                           ;ADC.c: 63:             ADCON0bits.CHS2 = 0;
 12086  1ED2  121F               	bcf	31,4	;volatile
 12087                           
 12088                           ;ADC.c: 64:             ADCON0bits.CHS1 = 0;
 12089  1ED3  119F               	bcf	31,3	;volatile
 12090                           
 12091                           ;ADC.c: 65:             ADCON0bits.CHS0 = 0;
 12092  1ED4  111F               	bcf	31,2	;volatile
 12093                           
 12094                           ;ADC.c: 66:             break;
 12095  1ED5  2F45               	goto	l191
 12096  1ED6                     l183:	
 12097                           ;ADC.c: 67:         case 9:
 12098                           
 12099                           
 12100                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
 12101  1ED6  1283               	bcf	3,5	;RP0=0, select bank0
 12102  1ED7  1303               	bcf	3,6	;RP1=0, select bank0
 12103  1ED8  169F               	bsf	31,5	;volatile
 12104                           
 12105                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
 12106  1ED9  121F               	bcf	31,4	;volatile
 12107                           
 12108                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
 12109  1EDA  119F               	bcf	31,3	;volatile
 12110                           
 12111                           ;ADC.c: 71:             ADCON0bits.CHS0 = 1;
 12112  1EDB  151F               	bsf	31,2	;volatile
 12113                           
 12114                           ;ADC.c: 72:             break;
 12115  1EDC  2F45               	goto	l191
 12116  1EDD                     l184:	
 12117                           ;ADC.c: 73:         case 10:
 12118                           
 12119                           
 12120                           ;ADC.c: 74:             ADCON0bits.CHS3 = 1;
 12121  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
 12122  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
 12123  1EDF  169F               	bsf	31,5	;volatile
 12124                           
 12125                           ;ADC.c: 75:             ADCON0bits.CHS2 = 0;
 12126  1EE0  121F               	bcf	31,4	;volatile
 12127                           
 12128                           ;ADC.c: 76:             ADCON0bits.CHS1 = 1;
 12129  1EE1  159F               	bsf	31,3	;volatile
 12130                           
 12131                           ;ADC.c: 77:             ADCON0bits.CHS0 = 0;
 12132  1EE2  111F               	bcf	31,2	;volatile
 12133                           
 12134                           ;ADC.c: 78:             break;
 12135  1EE3  2F45               	goto	l191
 12136  1EE4                     l185:	
 12137                           ;ADC.c: 79:         case 11:
 12138                           
 12139                           
 12140                           ;ADC.c: 80:             ADCON0bits.CHS3 = 1;
 12141  1EE4  1283               	bcf	3,5	;RP0=0, select bank0
 12142  1EE5  1303               	bcf	3,6	;RP1=0, select bank0
 12143  1EE6  169F               	bsf	31,5	;volatile
 12144                           
 12145                           ;ADC.c: 81:             ADCON0bits.CHS2 = 0;
 12146  1EE7  121F               	bcf	31,4	;volatile
 12147                           
 12148                           ;ADC.c: 82:             ADCON0bits.CHS1 = 1;
 12149  1EE8  159F               	bsf	31,3	;volatile
 12150                           
 12151                           ;ADC.c: 83:             ADCON0bits.CHS0 = 1;
 12152  1EE9  151F               	bsf	31,2	;volatile
 12153                           
 12154                           ;ADC.c: 84:             break;
 12155  1EEA  2F45               	goto	l191
 12156  1EEB                     l186:	
 12157                           ;ADC.c: 85:         case 12:
 12158                           
 12159                           
 12160                           ;ADC.c: 86:             ADCON0bits.CHS3 = 1;
 12161  1EEB  1283               	bcf	3,5	;RP0=0, select bank0
 12162  1EEC  1303               	bcf	3,6	;RP1=0, select bank0
 12163  1EED  169F               	bsf	31,5	;volatile
 12164                           
 12165                           ;ADC.c: 87:             ADCON0bits.CHS2 = 1;
 12166  1EEE  161F               	bsf	31,4	;volatile
 12167                           
 12168                           ;ADC.c: 88:             ADCON0bits.CHS1 = 0;
 12169  1EEF  119F               	bcf	31,3	;volatile
 12170                           
 12171                           ;ADC.c: 89:             ADCON0bits.CHS0 = 0;
 12172  1EF0  111F               	bcf	31,2	;volatile
 12173                           
 12174                           ;ADC.c: 90:             break;
 12175  1EF1  2F45               	goto	l191
 12176  1EF2                     l187:	
 12177                           ;ADC.c: 91:         case 13:
 12178                           
 12179                           
 12180                           ;ADC.c: 92:             ADCON0bits.CHS3 = 1;
 12181  1EF2  1283               	bcf	3,5	;RP0=0, select bank0
 12182  1EF3  1303               	bcf	3,6	;RP1=0, select bank0
 12183  1EF4  169F               	bsf	31,5	;volatile
 12184                           
 12185                           ;ADC.c: 93:             ADCON0bits.CHS2 = 1;
 12186  1EF5  161F               	bsf	31,4	;volatile
 12187                           
 12188                           ;ADC.c: 94:             ADCON0bits.CHS1 = 0;
 12189  1EF6  119F               	bcf	31,3	;volatile
 12190                           
 12191                           ;ADC.c: 95:             ADCON0bits.CHS0 = 1;
 12192  1EF7  151F               	bsf	31,2	;volatile
 12193                           
 12194                           ;ADC.c: 96:             break;
 12195  1EF8  2F45               	goto	l191
 12196  1EF9                     l188:	
 12197                           ;ADC.c: 97:         case 14:
 12198                           
 12199                           
 12200                           ;ADC.c: 98:             ADCON0bits.CHS3 = 1;
 12201  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
 12202  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
 12203  1EFB  169F               	bsf	31,5	;volatile
 12204                           
 12205                           ;ADC.c: 99:             ADCON0bits.CHS2 = 1;
 12206  1EFC  161F               	bsf	31,4	;volatile
 12207                           
 12208                           ;ADC.c: 100:             ADCON0bits.CHS1 = 1;
 12209  1EFD  159F               	bsf	31,3	;volatile
 12210                           
 12211                           ;ADC.c: 101:             ADCON0bits.CHS0 = 0;
 12212  1EFE  111F               	bcf	31,2	;volatile
 12213                           
 12214                           ;ADC.c: 102:             break;
 12215  1EFF  2F45               	goto	l191
 12216  1F00                     l189:	
 12217                           ;ADC.c: 103:         case 15:
 12218                           
 12219                           
 12220                           ;ADC.c: 104:             ADCON0bits.CHS3 = 1;
 12221  1F00  1283               	bcf	3,5	;RP0=0, select bank0
 12222  1F01  1303               	bcf	3,6	;RP1=0, select bank0
 12223  1F02  169F               	bsf	31,5	;volatile
 12224                           
 12225                           ;ADC.c: 105:             ADCON0bits.CHS2 = 1;
 12226  1F03  161F               	bsf	31,4	;volatile
 12227                           
 12228                           ;ADC.c: 106:             ADCON0bits.CHS1 = 1;
 12229  1F04  159F               	bsf	31,3	;volatile
 12230                           
 12231                           ;ADC.c: 107:             ADCON0bits.CHS0 = 1;
 12232  1F05  151F               	bsf	31,2	;volatile
 12233                           
 12234                           ;ADC.c: 108:             break;
 12235  1F06  2F45               	goto	l191
 12236  1F07                     l190:	
 12237                           ;ADC.c: 109:         default:
 12238                           
 12239                           
 12240                           ;ADC.c: 110:             ADCON0bits.CHS3 = 0;
 12241  1F07  1283               	bcf	3,5	;RP0=0, select bank0
 12242  1F08  1303               	bcf	3,6	;RP1=0, select bank0
 12243  1F09  129F               	bcf	31,5	;volatile
 12244                           
 12245                           ;ADC.c: 111:             ADCON0bits.CHS2 = 0;
 12246  1F0A  121F               	bcf	31,4	;volatile
 12247                           
 12248                           ;ADC.c: 112:             ADCON0bits.CHS1 = 0;
 12249  1F0B  119F               	bcf	31,3	;volatile
 12250                           
 12251                           ;ADC.c: 113:             ADCON0bits.CHS0 = 0;
 12252  1F0C  111F               	bcf	31,2	;volatile
 12253                           
 12254                           ;ADC.c: 114:             break;
 12255  1F0D  2F45               	goto	l191
 12256  1F0E                     l3015:
 12257                           
 12258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12259                           ; Switch size 1, requested type "simple"
 12260                           ; Number of cases is 1, Range of values is 0 to 0
 12261                           ; switch strategies available:
 12262                           ; Name         Instructions Cycles
 12263                           ; simple_byte            4     3 (average)
 12264                           ; direct_byte           11     8 (fixed)
 12265                           ; jumptable            260     6 (fixed)
 12266                           ;	Chosen strategy is simple_byte
 12267  1F0E  0871               	movf	Canal_ADC@x+1,w
 12268  1F0F  3A00               	xorlw	0	; case 0
 12269  1F10  1903               	skipnz
 12270  1F11  2F13               	goto	l4009
 12271  1F12  2F07               	goto	l190
 12272  1F13                     l4009:
 12273                           
 12274                           ; Switch size 1, requested type "simple"
 12275                           ; Number of cases is 16, Range of values is 0 to 15
 12276                           ; switch strategies available:
 12277                           ; Name         Instructions Cycles
 12278                           ; simple_byte           49    25 (average)
 12279                           ; direct_byte           56     8 (fixed)
 12280                           ; jumptable            260     6 (fixed)
 12281                           ;	Chosen strategy is simple_byte
 12282  1F13  0870               	movf	Canal_ADC@x,w
 12283  1F14  3A00               	xorlw	0	; case 0
 12284  1F15  1903               	skipnz
 12285  1F16  2E97               	goto	l173
 12286  1F17  3A01               	xorlw	1	; case 1
 12287  1F18  1903               	skipnz
 12288  1F19  2E9E               	goto	l175
 12289  1F1A  3A03               	xorlw	3	; case 2
 12290  1F1B  1903               	skipnz
 12291  1F1C  2EA5               	goto	l176
 12292  1F1D  3A01               	xorlw	1	; case 3
 12293  1F1E  1903               	skipnz
 12294  1F1F  2EAC               	goto	l177
 12295  1F20  3A07               	xorlw	7	; case 4
 12296  1F21  1903               	skipnz
 12297  1F22  2EB3               	goto	l178
 12298  1F23  3A01               	xorlw	1	; case 5
 12299  1F24  1903               	skipnz
 12300  1F25  2EBA               	goto	l179
 12301  1F26  3A03               	xorlw	3	; case 6
 12302  1F27  1903               	skipnz
 12303  1F28  2EC1               	goto	l180
 12304  1F29  3A01               	xorlw	1	; case 7
 12305  1F2A  1903               	skipnz
 12306  1F2B  2EC8               	goto	l181
 12307  1F2C  3A0F               	xorlw	15	; case 8
 12308  1F2D  1903               	skipnz
 12309  1F2E  2ECF               	goto	l182
 12310  1F2F  3A01               	xorlw	1	; case 9
 12311  1F30  1903               	skipnz
 12312  1F31  2ED6               	goto	l183
 12313  1F32  3A03               	xorlw	3	; case 10
 12314  1F33  1903               	skipnz
 12315  1F34  2EDD               	goto	l184
 12316  1F35  3A01               	xorlw	1	; case 11
 12317  1F36  1903               	skipnz
 12318  1F37  2EE4               	goto	l185
 12319  1F38  3A07               	xorlw	7	; case 12
 12320  1F39  1903               	skipnz
 12321  1F3A  2EEB               	goto	l186
 12322  1F3B  3A01               	xorlw	1	; case 13
 12323  1F3C  1903               	skipnz
 12324  1F3D  2EF2               	goto	l187
 12325  1F3E  3A03               	xorlw	3	; case 14
 12326  1F3F  1903               	skipnz
 12327  1F40  2EF9               	goto	l188
 12328  1F41  3A01               	xorlw	1	; case 15
 12329  1F42  1903               	skipnz
 12330  1F43  2F00               	goto	l189
 12331  1F44  2F07               	goto	l190
 12332  1F45                     l191:
 12333  1F45  0008               	return
 12334  1F46                     __end_of_Canal_ADC:
 12335  007E                     btemp	set	126	;btemp
 12336  007E                     wtemp0	set	126
 12337                           
 12338                           	psect	config
 12339                           
 12340                           ;Config register CONFIG1 @ 0x2007
 12341                           ;	Oscillator Selection bits
 12342                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 12343                           ;	Watchdog Timer Enable bit
 12344                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12345                           ;	Power-up Timer Enable bit
 12346                           ;	PWRTE = OFF, PWRT disabled
 12347                           ;	RE3/MCLR pin function select bit
 12348                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12349                           ;	Code Protection bit
 12350                           ;	CP = OFF, Program memory code protection is disabled
 12351                           ;	Data Code Protection bit
 12352                           ;	CPD = OFF, Data memory code protection is disabled
 12353                           ;	Brown Out Reset Selection bits
 12354                           ;	BOREN = ON, BOR enabled
 12355                           ;	Internal External Switchover bit
 12356                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12357                           ;	Fail-Safe Clock Monitor Enabled bit
 12358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12359                           ;	Low Voltage Programming Enable bit
 12360                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12361                           ;	In-Circuit Debugger Mode bit
 12362                           ;	DEBUG = 0x1, unprogrammed default
 12363  2007                     	org	8199
 12364  2007  23D1               	dw	9169
 12365                           
 12366                           ;Config register CONFIG2 @ 0x2008
 12367                           ;	Brown-out Reset Selection bit
 12368                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12369                           ;	Flash Program Memory Self Write Enable bits
 12370                           ;	WRT = OFF, Write protection off
 12371  2008                     	org	8200
 12372  2008  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    144
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     44      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 25
		 -> STR_3(CODE[25]), data(BANK1[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> data(BANK1[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Write_USART_String->_Write_USART
    _Lcd_Write_String->_LCD_CMD
    _LCD_CMD->_Puerto
    _Lcd_Set_Cursor->_datosLCD
    _Lcd_Init->_datosLCD
    _LCD_Limpia->_datosLCD
    _datosLCD->_Puerto
    _ADC_2->___xxtofl
    _ADC_1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_2->___fldiv
    _ADC_1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   47610
                                             41 BANK1      3     3      0
                              _ADC_1
                              _ADC_2
                         _LCD_Limpia
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _Write_USART
                 _Write_USART_String
                           __baudios
                         _config_ADC
                           _config_P
                       _config_rcsta
                       _config_txsta
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   32312
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     609
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_P                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __baudios                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     198
                                              1 COMMON     2     2      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Limpia                                           0     0      0     198
                           _datosLCD
 ---------------------------------------------------------------------------------
 (2) _datosLCD                                             3     3      0     198
                                              1 COMMON     3     3      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (3) _Puerto                                               1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_2                                                4     4      0    6846
                                             56 BANK0      4     4      0
                          _Canal_ADC
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_1                                                4     4      0    6846
                                             56 BANK0      4     4      0
                          _Canal_ADC
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Canal_ADC                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_1
     _Canal_ADC
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_2
     _Canal_ADC
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _LCD_Limpia
     _datosLCD
       _Puerto
   _Lcd_Init
     _datosLCD
       _Puerto
   _Lcd_Set_Cursor
     _datosLCD
       _Puerto
   _Lcd_Write_String
     _LCD_CMD
       _Puerto
   _Write_USART
   _Write_USART_String
     _Write_USART
   __baudios
   _config_ADC
   _config_P
   _config_rcsta
   _config_txsta
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 17:41:48 2021

               ___fldiv@aexp 0057                 ___fldiv@bexp 0056                            pc 0002  
               ___fldiv@sign 004F                  ?_LCD_Limpia 0070                           l73 187F  
                         l85 1CCB                           l79 1C53                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076  
       __size_of_Write_USART 000C                          l130 19DF                          l122 19C1  
                        l131 19E0                          l123 19C4                          l211 1855  
                        l132 19E6                          l124 19CA                          l220 1861  
                        l133 19E7                          l125 19CB                          l141 189C  
                        l134 19ED                          l126 19D1                          l150 0077  
                        l214 1843                          l135 19EE                          l127 19D2  
                        l136 19F4                          l128 19D8                          l144 18BE  
                        l208 183B                          l129 19D9                          l217 1857  
                        l401 05C6                          l138 19F5                          l162 1A37  
                        l226 197D                          l147 186E                          l180 1EC1  
                        l156 18E2                          l181 1EC8                          l173 1E97  
                        l341 0C9E                          l190 1F07                          l182 1ECF  
                        l430 192B                          l334 1577                          l183 1ED6  
                        l175 1E9E                          l191 1F45                          l184 1EDD  
                        l176 1EA5                          l424 07F2                          l185 1EE4  
                        l177 1EAC                          l169 1836                          l409 072D  
                        l186 1EEB                          l178 1EB3                          l602 1152  
                        l187 1EF2                          l179 1EBA                          l363 013D  
                        l188 1EF9                          l428 1913                          l189 1F00  
                        l614 1A98                          l622 1DD0                          l615 1AB4  
                        l623 1DE9                          l631 1D47                          l616 1AC9  
                        l464 1BDC                          l801 1906                          l641 1D47  
                        l609 1182                          l394 0582                          l811 11EC  
                        l619 1D64                          l627 000D                          l813 136C  
                        l901 1FAD                          l645 10D1                          l581 093F  
                        l638 1D32                          l646 1043                          l734 1A7B  
                        l656 10C4                          l744 19B7                          l833 1350  
                        l761 1659                          l649 1094                          l594 1B76  
                        l835 1360                          l827 12DE                          l851 0FFF  
                        l755 15DB                          l915 1014                          l908 1FC9  
                        l780 1771                          l684 1B1D                          l909 1FD5  
                        l870 1940                          l598 118F                          l863 0FF3  
                        l759 1682                          l599 10F4                          l872 1952  
                        l776 174D                          l768 17FF                          l857 0F6B  
                        l786 1793                          l797 17F3                          l789 17D1  
                        l798 17FF                          l895 1F68                          l897 1FFF  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          fsr0 0004                          indf 0000  
               ___awmod@sign 0076                 ___flmul@aexp 0036                 ___flmul@bexp 0037  
               ___flmul@sign 0031                 ___flmul@temp 003C                 ___flmul@prod 0038  
__size_of_Write_USART_String 002B              __end_of_LCD_CMD 189D                 ___fltol@exp1 005B  
                       l3001 0FEC                         l3011 1E96                         l3003 0FF7  
                       l3021 1881                         l3015 1F0E                         l3031 1894  
                       l3023 1884                         l3007 1857                         l3111 100B  
                       l3103 0C72                         l3041 18AA                         l3033 1898  
                       l3025 188A                         l3009 185D                         l3201 114C  
                       l3121 1028                         l3113 1011                         l3043 18AE  
                       l3035 189E                         l3027 188D                         l3203 1156  
                       l3211 1170                         l3131 1044                         l3051 1376  
                       l3115 1013                         l3107 1004                         l3045 18B1  
                       l3037 18A1                         l3029 1891                         l3301 1CCC  
                       l3141 106D                         l3133 104A                         l3125 1031  
                       l3109 1005                         l2511 192D                         l3047 18B5  
                       l3039 18A7                         l3311 1CF8                         l3303 1CD9  
                       l3231 1921                         l3223 1907                         l3151 1098  
                       l3143 107B                         l3135 1059                         l3119 1015  
                       l3063 1534                         l3071 0949                         l4007 0153  
                       l4009 1F13                         l3401 11E4                         l2521 194E  
                       l2513 192F                         l3313 1D00                         l3241 1B8A  
                       l3233 1927                         l3225 1909                         l3217 1177  
                       l3209 115E                         l3145 1085                         l3137 105B  
                       l3057 1483                         l3049 1370                         l2601 1B39  
                       l3081 0A3F                         l3073 0950                         l3403 11F4  
                       l3411 120D                         l2515 1936                         l2531 19CF  
                       l3331 1D27                         l3323 1D0E                         l3315 1D02  
                       l3307 1CE2                         l3251 1BC4                         l3243 1B97  
                       l3227 190D                         l3219 1187                         l3171 10D2  
                       l3147 1086                         l3139 1064                         l3059 1489  
                       l2611 1B55                         l2603 1B3C                         l3091 0AFB  
                       l3067 0943                         l3421 1235                         l3413 1212  
                       l3405 1200                         l2517 193A                         l2541 19F2  
                       l2533 19D6                         l2525 19B9                         l3261 1A7C  
                       l2701 15B9                         l3333 1D37                         l3317 1D06  
                       l3325 1D20                         l3309 1CF7                         l3253 1BC5  
                       l3245 1B9B                         l3237 1B77                         l3341 1AD5  
                       l3229 191A                         l3173 10DF                         l3165 10B9  
                       l3157 10A0                         l3149 108E                         l2621 1B72  
                       l2613 1B5B                         l2605 1B43                         l3085 0AC7  
                       l3069 0947                         l3431 125E                         l3423 123D  
                       l3407 1204                         l2519 1949                         l3511 1F60  
                       l2535 19DD                         l2527 19BD                         l3263 1A90  
                       l2711 15D0                         l2703 15BD                         l3335 1D3C  
                       l3255 1BCE                         l3247 1BA4                         l3239 1B87  
                       l3351 1B0F                         l3343 1AE2                         l3191 1119  
                       l3183 10F5                         l3167 10C9                         l3159 10B2  
                       l2631 1A43                         l2551 08E5                         l2543 08D7  
                       l2615 1B62                         l2607 1B47                         l3079 0A38  
                       l3441 127F                         l3433 1262                         l3425 1245  
                       l3417 121B                         l3521 1F8B                         l3513 1F70  
                       l3505 1F47                         l2537 19E4                         l2529 19C8  
                       l3601 18DC                         l3265 1AAC                         l3281 1D84  
                       l3273 1D48                         l2801 172B                         l2721 15E9  
                       l2713 15D1                         l2705 15BE                         l3249 1BB6  
                       l3257 1BD4                         l3345 1AE6                         l3353 1B15  
                       l3337 1ACA                         l3193 1122                         l3185 10FD  
                       l3177 10E8                         l2641 1A69                         l2633 1A4A  
                       l2625 1A38                         l2561 08FA                         l2553 08E9  
                       l2545 08DA                         l2609 1B4B                         l2617 1B68  
                       l3097 0BE3                         l3089 0AF4                         l3451 12A1  
                       l3443 128D                         l3435 1263                         l3427 1247  
                       l3419 122D                         l3371 11A2                         l3363 1190  
                       l3531 1FBF                         l3523 1F92                         l3507 1F4C  
                       l3611 1BDD                         l2539 19EB                         l3603 19F6  
                       l3267 1AC6                         l3283 1DA8                         l3275 1D5C  
                       l2803 1730                         l2731 15FD                         l2723 15ED  
                       l2707 15C3                         l2715 15D3                         l3347 1AF8  
                       l3339 1AD2                         l3195 1134                         l3187 110E  
                       l2643 1A6A                         l2635 1A4E                         l2627 1A3A  
                       l2651 197E                         l2571 091D                         l2563 08FD  
                       l2555 08EE                         l2547 08DE                         l2619 1B6D  
                       l3099 0BEA                         l3453 12AA                         l3461 12BE  
                       l3429 124C                         l3437 126C                         l3445 1291  
                       l3373 11A7                         l3381 11B7                         l3365 1197  
                       l2901 0CF1                         l3541 1FF2                         l3533 1FC3  
                       l3525 1F96                         l3517 1F79                         l3509 1F50  
                       l3621 1BF1                         l3613 1BE5                         l3605 19F9  
                       l3269 1AC8                         l3285 1DAC                         l3277 1D78  
                       l3293 0003                         l2821 1778                         l2813 1763  
                       l2805 173F                         l2741 1611                         l2733 1601  
                       l2725 15F1                         l2717 15E1                         l2709 15C8  
                       l3357 18E3                         l3349 1B06                         l3197 1142  
                       l3189 1110                         l2645 1A71                         l2637 1A52  
                       l2629 1A40                         l2661 1996                         l2653 1984  
                       l2581 0936                         l2573 0923                         l2565 0904  
                       l2557 08F2                         l2549 08E3                         l3701 019A  
                       l3463 12C2                         l3455 12AE                         l3447 1297  
                       l3439 127E                         l3391 11CF                         l3383 11BF  
                       l3375 11AC                         l3367 119D                         l2911 0D0C  
                       l2903 0CF9                         l3543 1FF6                         l3535 1FCD  
                       l3527 1FA4                         l3519 1F7E                         l3623 1BF5  
                       l3615 1BE8                         l3631 1C60                         l3607 1A15  
                       l3551 1873                         l3287 1DE6                         l3279 1D80  
                       l3295 000B                         l2831 1786                         l2823 177A  
                       l2815 176C                         l2807 1755                         l2743 1615  
                       l2735 1605                         l2727 15F5                         l2719 15E5  
                       l2751 1625                         l3359 18E7                         l3199 1143  
                       l2639 1A63                         l2647 1A77                         l2663 19A0  
                       l2655 1987                         l2583 093B                         l2575 0924  
                       l2567 0908                         l2559 08F4                         l2591 1B23  
                       l3711 01DF                         l3703 01B3                         l3481 1313  
                       l3473 12E3                         l3465 12C3                         l3457 12AF  
                       l3449 129F                         l3393 11D4                         l3385 11C4  
                       l3377 11B4                         l3369 11A1                         l2921 0D8E  
                       l2913 0D1C                         l2905 0CFE                         l3545 1FF7  
                       l3537 1FD7                         l3529 1FB4                         l3625 1C4E  
                       l3617 1BE9                         l3641 1CC6                         l3633 1C61  
                       l3609 1A1B                         l3553 1875                         l3561 183C  
                       l3289 1DE8                         l3297 000D                         l2841 179D  
                       l2833 178A                         l2825 177F                         l2817 1770  
                       l2809 175A                         l2761 1668                         l2753 1626  
                       l2745 1619                         l2737 1609                         l2729 15F9  
                       l2681 158A                         l2673 1578                         l2665 19A6  
                       l2657 198E                         l2577 092B                         l2569 090C  
                       l2593 1B28                         l3801 0557                         l3721 0215  
                       l3713 01E5                         l3705 01B7                         l3491 1347  
                       l3475 12E8                         l3483 1319                         l3467 12C7  
                       l3459 12B8                         l3395 11D9                         l3387 11CA  
                       l3379 11B5                         l2931 0DFC                         l2923 0DAA  
                       l2915 0D29                         l2907 0D03                         l3539 1FED  
                       l3619 1BEA                         l3635 1C62                         l3627 1C54  
                       l3571 002C                         l3555 1833                         l3563 1842  
                       l2851 17DB                         l2843 17AB                         l2835 1790  
                       l2819 1775                         l2827 1781                         l2771 1686  
                       l2763 166C                         l2755 163D                         l2747 161D  
                       l2739 160D                         l2683 158F                         l2691 159F  
                       l2675 157F                         l2667 19AD                         l2659 1992  
                       l2579 0931                         l2595 1B2A                         l2587 1B1E  
                       l3811 059D                         l3803 0576                         l3731 02BC  
                       l3723 0234                         l3715 01F8                         l3707 01BB  
                       l3651 0092                         l3643 007B                         l3493 134F  
                       l3485 1326                         l3477 12F6                         l3469 12DB  
                       l3397 11E1                         l3389 11CE                         l2941 0E8C  
                       l2933 0E0C                         l2925 0DC6                         l2917 0D46  
                       l3637 1C69                         l3629 1C5D                         l3581 0052  
                       l3573 0031                         l3565 000E                         l3557 1837  
                       l3549 186F                         l2861 17EF                         l2853 17E3  
                       l2845 17AF                         l2781 16AF                         l2829 1785  
                       l2773 168B                         l2765 166D                         l2757 165D  
                       l2749 1621                         l2693 15A7                         l2685 1594  
                       l2677 1585                         l2669 19B3                         l2597 1B2E  
                       l2589 1B1F                         l3821 05D4                         l3813 05AA  
                       l3805 058A                         l3741 0344                         l3725 027F  
                       l3717 020B                         l3709 01D4                         l3733 02C4  
                       l3661 00D2                         l3653 0096                         l3645 0080  
                       l3495 1356                         l3487 1334                         l3479 12FA  
                       l3399 11E2                         l2951 0F20                         l2943 0E9C  
                       l2935 0E29                         l2927 0DCF                         l2919 0D62  
                       l2871 0CAC                         l3639 1C6D                         l3583 0061  
                       l3575 003C                         l3567 0017                         l3591 18C0  
                       l3911 196A                         l3559 184C                         l2863 17FA  
                       l2855 17E8                         l2847 17CD                         l2839 1798  
                       l2791 16C3                         l2783 16B3                         l2767 1676  
                       l2759 1666                         l2695 15AC                         l2687 159C  
                       l2679 1589                         l2599 1B33                         l3831 0693  
                       l3823 05DB                         l3815 05B9                         l3807 0593  
                       l3751 03A6                         l3743 036B                         l3735 02D3  
                       l3727 0298                         l3719 020F                         l3671 00F9  
                       l3663 00D6                         l3655 00A6                         l3647 0086  
                       l3497 135A                         l3489 1343                         l2961 0F45  
                       l2953 0F2E                         l2945 0EC9                         l2937 0E42  
                       l2929 0DDF                         l2881 0CC3                         l2873 0CB0  
                       l3585 0067                         l3577 0042                         l3569 001D  
                       l3593 18C5                         l3905 1953                         l2865 17FE  
                       l2857 17E9                         l2849 17D6                         l2793 16CC  
                       l2785 16BC                         l2777 1694                         l2769 167A  
                       l2697 15B2                         l2689 159D                         l3841 0708  
                       l3833 06B2                         l3825 05DF                         l3817 05C0  
                       l3809 0597                         l3761 0421                         l3753 03C4  
                       l3745 037A                         l3737 031A                         l3729 02A1  
                       l3673 00FC                         l3681 0139                         l3657 00AA  
                       l3665 00E6                         l3649 008D                         l3921 1E08  
                       l3913 1DEA                         l3499 135C                         l2971 0F68  
                       l2955 0F37                         l2963 0F4B                         l2947 0EEF  
                       l2939 0E5F                         l2891 0CDC                         l2883 0CC5  
                       l2875 0CB1                         l2867 0C9F                         l3587 0072  
                       l3579 004D                         l3595 18CA                         l3907 1955  
                       l2859 17ED                         l2787 16BE                         l2779 16AB  
                       l2795 16D1                         l2699 15B3                         l3851 0727  
                       l3843 070C                         l3835 06BE                         l3827 05FD  
                       l3819 05CF                         l3771 0472                         l3763 046E  
                       l3747 0395                         l3739 0329                         l3691 0167  
                       l3683 013B                         l3675 0111                         l3667 00F4  
                       l3659 00BF                         l3931 1E28                         l3923 1E0D  
                       l3915 1DEF                         l2981 0F87                         l2965 0F4F  
                       l2957 0F3B                         l2949 0F17                         l2893 0CDD  
                       l2885 0CCD                         l2877 0CB6                         l2869 0CA6  
                       l3589 1862                         l3597 18D1                         l3909 1966  
                       l2797 16E7                         l2789 16C2                         l3861 075F  
                       l3853 0738                         l3845 0712                         l3829 0658  
                       l3837 06F9                         l3781 04D4                         l3765 0470  
                       l3757 03E3                         l3749 039E                         l3693 016B  
                       l3677 0124                         l3669 00F5                         l3941 1E63  
                       l3933 1E2D                         l3925 1E12                         l3917 1DF4  
                       l2991 0FCD                         l2983 0FA0                         l2975 0F70  
                       l2967 0F50                         l2959 0F3C                         l2895 0CE2  
                       l2887 0CD2                         l2879 0CBB                         l3599 18D7  
                       l2799 1725                         l3871 078C                         l3863 076B  
                       l3855 073F                         l3839 0701                         l3783 04E0  
                       l3791 04F5                         l3775 04A9                         l3759 03EC  
                       l3695 016F                         l3847 0719                         l3687 013F  
                       l3679 0128                         l3951 1E84                         l3943 1E69  
                       l3935 1E49                         l3927 1E1A                         l3919 1E03  
                       l2993 0FD7                         l2977 0F75                         l2985 0FA6  
                       l2969 0F54                         l2897 0CE7                         l2889 0CD8  
                       l3881 07B1                         l3873 0790                         l3865 0771  
                       l3857 074E                         l3849 071F                         l3793 0502  
                       l3785 04E7                         l3777 04B3                         l3697 017D  
                       l3689 015B                         l3945 1E6F                         l3937 1E51  
                       l3929 1E23                         l2995 0FD9                         l2987 0FB3  
                       l2979 0F83                         l2899 0CEF                         l3883 07B8  
                       l3875 079B                         l3867 0775                         l3859 0757  
                       l3795 0510                         l3787 04F0                         l3779 04CE  
                       l3699 0181                         l3947 1E78                         l3939 1E5A  
                       l2997 0FE7                         l2989 0FBE                         l3885 07BC  
                       l3877 07A7                         l3869 0783                         l3797 0517  
                       l3893 07DC                         l3949 1E7E                         l2999 0FEB  
                       l3887 07C8                         l3879 07AB                         l3799 051C  
                       l3895 07EE                         l3889 07D4                         STR_1 08B9  
                       STR_2 08C8                         STR_3 08A0                         u3200 194E  
                       u4000 17BE                         u3201 194D                         u3210 19BD  
                       u4010 17CD                         u3211 19BC                         u4011 17CC  
                       u4100 0CDC                         u3220 19C8                         u4020 17D6  
                       u3300 08E9                         u4101 0CDB                         u3221 19C7  
                       u4021 17D5                         u4005 17B9                         u3301 08E8  
                       u4110 0CE2                         u3230 19CF                         u4030 17DB  
                       u3310 08FA                         u4111 0CE1                         u3231 19CE  
                       u4031 17DA                         u3311 08F9                         u4120 0CE7  
                       u3240 19D6                         u4040 17E8                         u3400 1B2E  
                       u4201 0DEE                         u4121 0CE6                         u3241 19D5  
                       u4041 17E7                         u3401 1B2D                         u4202 0DF5  
                       u4130 0CFE                         u3250 19DD                         u4050 17ED  
                       u5010 1927                         u3330 090C                         u3410 1B39  
                       u4211 0E1B                         u4203 0DFC                         u4131 0CFD  
                       u3251 19DC                         u4051 17EC                         u5011 1926  
                       u3331 090B                         u3411 1B38                         u3180 193A  
                       u4212 0E22                         u4140 0D03                         u3260 19E4  
                       u5100 1AAC                         u4060 17FE                         u5020 1B87  
                       u3500 1A52                         u3181 1939                         u4213 0E29  
                       u4141 0D02                         u3261 19E3                         u5101 1AAB  
                       u4061 17FD                         u5021 1B86                         u5005 191B  
                       u3501 1A51                         u3325 08FE                         u4070 0CB0  
                       u3270 19EB                         u5110 1AC6                         u3350 091D  
                       u3430 1B4B                         u4231 0E51                         u4151 0D54  
                       u4071 0CAF                         u3271 19EA                         u5111 1AC5  
                       u3351 091C                         u3431 1B4A                         u4400 0F96  
                       u4320 0F3B                         u4232 0E58                         u4152 0D5B  
                       u4080 0CB6                         u3280 19F2                         u5120 1D5C  
                       u5200 1CD9                         u5040 1B9B                         u3520 1A63  
                       u3600 19B3                         u3440 1B55                         u6000 0344  
                       u4321 0F3A                         u4305 0F19                         u4241 0E7E  
                       u4233 0E5F                         u4225 0E2B                         u4161 0D70  
                       u4153 0D62                         u4081 0CB5                         u3281 19F1  
                       u5121 1D5B                         u5201 1CD8                         u5041 1B9A  
                       u3521 1A62                         u3601 19B2                         u3345 090D  
                       u3441 1B54                         u3425 1B3D                         u6001 0343  
                       u4410 0FB3                         u4242 0E85                         u4162 0D77  
                       u4090 0CBB                         u5130 1D78                         u3610 1589  
                       u5210 1CF0                         u3370 0931                         u3290 08DE  
                       u6010 036B                         u3195 1941                         u4411 0FB2  
                       u4315 0F30                         u4251 0EAB                         u4243 0E8C  
                       u4171 0D9C                         u4163 0D7E                         u4091 0CBA  
                       u5115 1AC2                         u5131 1D77                         u3611 1588  
                       u5035 1B8C                         u3515 1A53                         u3371 0930  
                       u3355 0919                         u3291 08DD                         u6011 036A  
                       u4420 0FCD                         u4340 0F4F                         u4260 0ED5  
                       u4252 0EB2                         u4172 0DA3                         u5140 1D84  
                       u3700 163D                         u3620 158F                         u5220 1D06  
                       u5060 1BB6                         u5300 1AD2                         u3540 1A77  
                       u3380 0936                         u3460 1B68                         u6100 0510  
                       u6020 037A                         u4421 0FCC                         u4405 0F91  
                       u4341 0F4E                         u4253 0EB9                         u4181 0DB8  
                       u4173 0DAA                         u5141 1D83                         u3701 163C  
                       u3621 158E                         u5221 1D05                         u5061 1BB5  
                       u5301 1AD1                         u3541 1A76                         u3525 1A5F  
                       u3381 0935                         u3365 0925                         u3461 1B67  
                       u3445 1B51                         u6101 050F                         u6021 0379  
                       u4430 0FEB                         u4350 0F54                         u4182 0DBF  
                       u3710 1648                         u3630 1594                         u5230 1D0D  
                       u3550 1984                         u3470 1B6D                         u3390 1B23  
                       u6030 0395                         u4431 0FEA                         u4415 0FAF  
                       u4351 0F53                         u4335 0F3E                         u4271 0EE1  
                       u4183 0DC6                         u5151 1D93                         u3711 1646  
                       u3631 1593                         u5231 1D0C                         u5215 1CEB  
                       u5055 1B9D                         u3535 1A6B                         u3551 1983  
                       u3471 1B6C                         u3455 1B5C                         u3391 1B22  
                       u6031 0394                         u5400 11D4                         u4360 0F68  
                       u4280 0EFD                         u4272 0EE8                         u4440 185D  
                       u5160 1DAC                         u5152 1D94                         u3800 16AF  
                       u3720 1649                         u3640 15B2                         u5080 1BD4  
                       u5320 1AE6                         u3480 1A40                         u6200 071F  
                       u6120 0589                         u5401 11D3                         u4425 0FC9  
                       u4361 0F67                         u4273 0EEF                         u4265 0ED0  
                       u4441 185C                         u5161 1DAB                         u5153 1D99  
                       u3801 16AE                         u3705 1639                         u3641 15B1  
                       u5081 1BD3                         u5065 1BB2                         u5321 1AE5  
                       u3481 1A3F                         u4505 14A6                         u6201 071E  
                       u6121 0588                         u6025 0376                         u5410 11D9  
                       u4370 0F6F                         u5090 1A90                         u5154 1D9A  
                       u3810 16B3                         u3730 165D                         u3650 15BD  
                       u5250 1D1F                         u5330 1AF8                         u3570 1996  
                       u4450 1376                         u4530 0947                         u6210 0727  
                       u6130 05AA                         u6050 04A8                         u5411 11D8  
                       u4371 0F6E                         u4291 0F09                         u4195 0DC8  
                       u5091 1A8F                         u5171 1DBB                         u5155 1D9F  
                       u3811 16B2                         u3731 165C                         u3651 15BC  
                       u5251 1D1E                         u5075 1BC6                         u5331 1AF7  
                       u5315 1AD7                         u3571 1995                         u4515 14F3  
                       u4451 1375                         u4531 0946                         u6211 0726  
                       u6131 05A9                         u6115 051F                         u6051 04A7  
                       u5500 1297                         u5420 11F4                         u4380 0F75  
                       u4292 0F10                         u5180 1DE6                         u5172 1DBC  
                       u5156 1DA0                         u3820 16C2                         u3740 166C  
                       u3660 15C3                         u5260 1D26                         u3580 19A0  
                       u4700 100B                         u4620 0AFB                         u4540 0950  
                       u6300 07C8                         u6220 0738                         u6140 05B9  
                       u6060 04B3                         u5501 1296                         u5421 11F3  
                       u4381 0F74                         u4293 0F17                         u4285 0EF8  
                       u5181 1DE5                         u5173 1DC1                         u3821 16C1  
                       u3741 166B                         u3661 15C2                         u5261 1D25  
                       u5245 1D0F                         u3581 199F                         u3565 1988  
                       u4525 153F                         u4701 100A                         u4621 0AFA  
                       u4605 0A8E                         u4541 094F                         u6301 07C7  
                       u6221 0737                         u6141 05B8                         u6061 04B2  
                       u6045 0475                         u5510 129F                         u5430 1212  
                       u4390 0F87                         u5174 1DC2                         u5190 000B  
                       u3910 1770                         u3670 15C8                         u5350 1B15  
                       u4710 1011                         u6310 07D4                         u6230 074E  
                       u6150 05D4                         u6070 04CE                         u5511 129E  
                       u5431 1211                         u4391 0F86                         u5175 1DC7  
                       u5191 000A                         u3911 176F                         u3671 15C7  
                       u5351 1B14                         u5335 1AF4                         u3495 1A44  
                       u4711 1010                         u4615 0ACA                         u6311 07D3  
                       u6231 074D                         u6151 05D3                         u6135 05A6  
                       u6071 04CD                         u6055 04A4                         u5600 12FA  
                       u5440 124C                         u5360 11A1                         u5176 1DC8  
                       u3920 1775                         u3840 16E7                         u3760 1682  
                       u3680 15E1                         u5280 1D37                         u4720 1028  
                       u6320 07EE                         u6240 075F                         u6080 04E0  
                       u5601 12F9                         u5441 124B                         u5361 11A0  
                       u5185 1DE2                         u3921 1774                         u3905 1765  
                       u3841 16E6                         u3761 1681                         u3681 15E0  
                       u5281 1D36                         u5345 1B07                         u4721 1027  
                       u3585 199C                         u4465 1393                         u6321 07ED  
                       u6241 075E                         u6225 0734                         u6145 05B5  
                       u6081 04DF                         u5610 1309                         u5530 12AE  
                       u5370 11A7                         u6330 197D                         u3930 177F  
                       u3770 1686                         u3690 15E5                         u5290 1D3C  
                       u4810 10B1                         u4730 1042                         u4490 1489  
                       u6250 076B                         u6090 0502                         u5531 12AD  
                       u5371 11A6                         u6331 197C                         u3931 177E  
                       u3851 16FE                         u3843 16E3                         u3835 16C5  
                       u3771 1685                         u3755 166F                         u3691 15E4  
                       u5291 1D3B                         u5275 1D29                         u4811 10B0  
                       u4731 1041                         u3595 19A7                         u4491 1488  
                       u4475 13ED                         u4635 0B1B                         u4555 0970  
                       u6251 076A                         u6235 074A                         u6091 0501  
                       u5620 1326                         u5380 11AC                         u3940 1785  
                       u3860 1712                         u3852 16FF                         u3780 168B  
                       u4900 1152                         u4820 10B8                         u4660 0BEA  
                       u4580 0A3F                         u6260 0775                         u6180 0700  
                       _RCIF 0065                         u5621 1325                         u5525 12A3  
                       u5381 11AB                         u3941 1784                         u3861 1713  
                       u3853 1704                         u3781 168A                         u4901 1151  
                       u4821 10B7                         u4805 10A1                         u4485 1442  
                       u4661 0BE9                         u4645 0B57                         u4581 0A3E  
                       u4565 09AC                         u6261 0774                         u6181 06FF  
                       u6165 065B                         u5630 1343                         u5550 12C2  
                       u5470 1262                         u5390 11CE                         u5710 1FB3  
                       u3950 178A                         u3870 1730                         u3862 1718  
                       u3854 1705                         u4910 1156                         u4750 107B  
                       u6270 0783                         u6190 0718                         u5631 1342  
                       u5615 1304                         u5551 12C1                         u5471 1261  
                       u5455 124E                         u5391 11CD                         u5711 1FB2  
                       u6407 002E                         u3951 1789                         u3871 172F  
                       u3863 1719                         u3855 170A                         u3791 169D  
                       u4911 1155                         u4751 107A                         u4655 0BA2  
                       u4575 09F7                         u6271 0782                         u6191 0717  
                       u6175 06C1                         u6095 04FE                         u5640 135A  
                       u5560 12C7                         u5800 18D7                         u3960 1790  
                       u3880 1755                         u3856 170B                         u3792 16A4  
                       u4920 115D                         u4840 10C9                         u6280 079B  
                       u5641 1359                         u5625 1322                         u5561 12C6  
                       u5545 12B1                         u5465 1257                         u5705 1FA5  
                       u6417 0039                         u5801 18D6                         u3961 178F  
                       u3881 1754                         u3793 16AB                         u4921 115C  
                       u4841 10C8                         u4745 1066                         u6281 079A  
                       u5570 12DB                         u5490 127E                         u5730 1FC3  
                       u5650 1F4C                         u5810 1A03                         u3970 1797  
                       u3890 175A                         u4850 10DF                         u4770 1094  
                       u6290 07B1                         u5635 133F                         u5571 12DA  
                       u5491 127D                         u5731 1FC2                         u5651 1F4B  
                       u6507 1C66                         u6427 0044                         u3971 1796  
                       u3891 1759                         u4851 10DE                         u4835 10BB  
                       u4771 1093                         u4755 1077                         u4675 0BFD  
                       u4595 0A52                         u6291 07B0                         u6275 077F  
                       u6347 1E8C                         u5580 12E2                         u5740 1FC9  
                       u5660 1F50                         u5820 1A25                         u3980 179D  
                       u4940 116F                         u4860 10F3                         u4780 1098  
                       u5900 0138                         u5581 12E1                         u5485 1265  
                       u5741 1FC8                         u5725 1FB8                         u5661 1F4F  
                       u6517 1BEE                         u6437 004F                         u6357 188F  
                       u3981 179C                         u4941 116E                         u4861 10F2  
                       u4781 1097                         u4765 1087                         u4685 0C39  
                       u6285 0797                         u5901 0137                         u5590 12E8  
                       u5750 1FCD                         u5670 1F70                         u5830 1A37  
                       u3990 17AF                         u4950 1176                         u4790 109F  
                       u5910 0167                         u5591 12E7                         u5495 127A  
                       u5751 1FCC                         u5671 1F6F                         u6447 005C  
                       u6367 1896                         u5831 1A36                         u3991 17AE  
                       u4951 1175                         u4935 115F                         u4791 109E  
                       u4695 0C75                         u5911 0166                         u5760 1FE2  
                       u5840 1C53                         u4880 1134                         u5920 016B  
                       u5841 1C52                         u6457 0069                         u6377 189A  
                       u4881 1133                         u5921 016A                         u5770 1FF2  
                       u5690 1F91                         u5850 1CCB                         u4970 1187  
                       u5930 019A                         u5771 1FF1                         u5691 1F90  
                       u5851 1CCA                         u6467 0074                         u6387 0012  
                       u4971 1186                         u4875 111B                         u5931 0199  
                       u5780 1FF6                         u4980 190D                         u5940 01D4  
                       u5860 0086                         u5781 1FF5                         u5765 1FDD  
                       u5685 1F83                         u6477 18AC                         u6397 0021  
                       u4981 190C                         u4965 1179                         u4885 1130  
                       u5941 01D3                         u5861 0085                         u5790 18C5  
                       u5950 020F                         u5870 00A6                         u6487 18B3  
                       u5791 18C4                         u4895 1145                         u5951 020E  
                       u5871 00A5                         u5960 0298                         u5880 00E6  
                       u6497 18B9                         u5961 0297                         u5881 00E5  
                       u5970 02BC                         u5890 00F4                         u4995 1914  
                       u5971 02BB                         u5891 00F3                         u5980 02D3  
                       u5981 02D2                         u5990 0329                         u5991 0328  
                       u5985 02CF                         u5995 0325                         _TRMT 04C1  
                       _data 00D4            ?_Lcd_Write_String 0073                         _main 1DEA  
                       btemp 007E                         _volt 00D0                         start 0000  
             ??_config_rcsta 0070           ??_Lcd_Write_String 0075              ___fldiv@new_exp 0050  
             ??_config_txsta 0070                 _sprintf$1066 00AE                ___fltol@sign1 005A  
            __end_of___fladd 1800                        ?_main 0070                        _ADC_1 1BDD  
                      _ADC_2 1C54              __end_of___fldiv 136D              __end_of___awdiv 0940  
            __end_of___flneg 000E              __end_of___awmod 1B77              __end_of___flmul 1000  
            __end_of___flsub 1907              __end_of___fltol 1D48                        _ANSEL 0188  
            __end_of___lldiv 1BDD              ___awdiv@divisor 0077              __end_of___llmod 1B1E  
            __end_of___lwdiv 1A7C              __end_of___lwmod 19B8              ___awdiv@counter 0020  
                      _RCREG 001A                        _SPBRG 0099                        _PORTC 0007  
                      _PORTD 0008                        _PORTE 0009      __size_of_Lcd_Set_Cursor 0024  
                      _TRISA 0085                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019              __end_of_dpowers 08A0                        _scale 0940  
            __end_of_isdigit 1015                        _volt2 00CC                        pclath 000A  
        __size_of_LCD_Limpia 000D                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07F3           __size_of_Canal_ADC 00B0             __end_of_Lcd_Init 0078  
            __initialization 07F3                 __end_of_main 1E96                       ??_main 00C9  
                     ?_ADC_1 0070                       ?_ADC_2 0070                    ??_LCD_CMD 0071  
       __size_of__tdiv_to_l_ 00BD                       _ADCON1 009F             ___llmod@dividend 0074  
                     ?_scale 003E                       _ADRESH 001E             ___awdiv@dividend 0079  
                     _ANSELH 0189             __end_of__baudios 183C             __end_of___xxtofl 2000  
           __end_of_datosLCD 18BF             __end_of__powers_ 0844             __end_of_config_P 1880  
                     _Puerto 19B8                       ___flge 1D48                       ___fleq 1A7C  
                  ??___fladd 005A                       ___wmul 1907                    ??___fldiv 0046  
                  ??___awdiv 007B                    ??___flneg 0074                    ??___awmod 0074  
                  ??___flmul 002C                    ??___flsub 007E                    ??___fltol 0055  
                  ??___lldiv 0078                    ??___llmod 0078                    ??___lwdiv 007A  
                  ??___lwmod 0074                       _fround 136D             ___awdiv@quotient 0022  
            ___awmod@divisor 0070              ___awmod@counter 0075                    ??_isdigit 0070  
         __size_of__Umul8_16 0027         __end_of_config_rcsta 1844            __end_of_Canal_ADC 1F46  
       __end_of_config_txsta 1856                    ??_sprintf 00A9              Lcd_Set_Cursor@a 0077  
            Lcd_Set_Cursor@x 0076              Lcd_Set_Cursor@y 0074                   ___flge@ff1 0070  
                 ___flge@ff2 0074                 ___xxtofl@arg 007A                 ___xxtofl@exp 0079  
               ___xxtofl@val 0070                   ___fleq@ff1 0070                   ___fleq@ff2 0074  
    __end_of__initialization 07FC                   ___flneg@f1 0070                __end_of_ADC_1 1C54  
              __end_of_ADC_2 1CCC                   ___fltol@f1 0051               __pcstackCOMMON 0070  
               ??_LCD_Limpia 0074                __end_of_scale 0C9F                      ??_ADC_1 0058  
                    ??_ADC_2 0058               _Lcd_Set_Cursor 18BF                   __div_to_l_ 10D2  
                  ?_Lcd_Init 0070              __div_to_l_@exp1 0025              __div_to_l_@cntr 0024  
                    ??_scale 0042              __div_to_l_@quot 0020                 sprintf@width 00B9  
               Write_USART@a 0070                   __pbssBANK1 00CC           __end_of_LCD_Limpia 186F  
              __div_to_l_@f1 0070                __div_to_l_@f2 0074            __end_of__Umul8_16 1953  
                 __pmaintext 1DEA                      ?_Puerto 0070                      ?___flge 0070  
                    ?___fleq 0070                      ?___wmul 0070                ??_Write_USART 0070  
                    ?_fround 003E    __size_of_Lcd_Write_String 0042       __end_of_Lcd_Set_Cursor 18E3  
                  ?__baudios 0070                      _LCD_CMD 1880   __end_of_Write_USART_String 197E  
                 _config_ADC 1833                    ?___xxtofl 0070                    ?_datosLCD 0070  
                 ??_Lcd_Init 0074                    ?_config_P 0070                   __stringtab 0800  
          __end_of__npowers_ 0878                   _scale$1065 004C              __size_of_Puerto 003E  
                    Puerto@x 0070              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 1578                      ___fldiv 1190                      ___awdiv 08D7  
                    ___flneg 0003                      ___awmod 1B1E                      ___flmul 0C9F  
                    ___flsub 18E3                      ___fltol 1CCC                      ___lldiv 1B77  
            __size_of___wmul 0025                      ___llmod 1ACA                      ___lwdiv 1A38  
                    ___lwmod 197E        __size_of_config_rcsta 0008                   ??__baudios 0070  
            __size_of_fround 020B              ?_Lcd_Set_Cursor 0074                      __ptext1 0078  
                    __ptext2 0940        __size_of_config_txsta 000A                      __ptext3 1B1E  
                    __ptext4 08D7                      __ptext5 1003                      __ptext6 136D  
                    __ptext7 197E                      __ptext8 1A38                      __ptext9 1015  
                ?__div_to_l_ 0070                      _dpowers 0878          __end_of_Write_USART 1862  
                    _isdigit 1003                   ??___xxtofl 0074             ___awmod@dividend 0072  
                 ??_datosLCD 0071                      _sprintf 0078                   ??_config_P 0070  
                    clrloop0 1845         end_of_initialization 07FC              ___lldiv@divisor 0070  
            ___lldiv@counter 007D                 _config_rcsta 183C                 _config_txsta 184C  
                  _RCSTAbits 0018               __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074  
              ??__tdiv_to_l_ 0078                  ___fladd@grs 0065                  ?_config_ADC 0070  
              ___xxtofl@sign 0078                  ___fldiv@grs 0052                  ___fldiv@rem 004B  
                  _Canal_ADC 1E96            Lcd_Write_String@a 0073            Lcd_Write_String@i 0078  
                ___flmul@grs 0032                    _TXSTAbits 0098          __size_of__div_to_l_ 00BE  
             __end_of_Puerto 19F6               __end_of___flge 1DEA               __end_of___fleq 1ACA  
                _Write_USART 1856               __end_of___wmul 192C             _Lcd_Write_String 19F6  
             __end_of_fround 1578          start_initialization 07F3          __end_of__tdiv_to_l_ 10D2  
                 ?_Canal_ADC 0070            __size_of_Lcd_Init 006A              ___llmod@divisor 0070  
            ___llmod@counter 0079          __size_of_config_ADC 0004                     ??_Puerto 0070  
                   ??___flge 0078                     ??___fleq 0078                     ??___wmul 0074  
                  __Umul8_16 192C                     ??_fround 0042                sprintf@tmpval 00BB  
                  ___fladd@a 0056                    ___fladd@b 0052                     LCD_CMD@a 0072  
                   ?_LCD_CMD 0070                   fround@prec 0051                    ___fldiv@a 003E  
                  ___fldiv@b 0042            __size_of__baudios 0005                    ___flmul@a 0028  
                  ___flmul@b 0024                    ___flsub@a 0066                    ___flsub@b 006A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of___xxtofl 00BA            __size_of_datosLCD 0022            __size_of_config_P 0011  
                sprintf@flag 00B7                  sprintf@eexp 00BF                  sprintf@fval 00C1  
         _Write_USART_String 1953                  sprintf@prec 00C6             ___lwdiv@dividend 0078  
           ??_Lcd_Set_Cursor 0075          ?_Write_USART_String 0071                     ?___fladd 0052  
                   ?___fldiv 003E                     ?___awdiv 0077                     ?___flneg 0070  
                   ?___awmod 0070                     ?___flmul 0024                     ?___flsub 0066  
                   ?___fltol 0051                     ?___lldiv 0070                     ?___llmod 0070  
                  __npowers_ 0844                   ?__Umul8_16 0070                     ?___lwdiv 0076  
                   ?___lwmod 0070                    __pstrings 0800                  __tdiv_to_l_ 1015  
             __size_of_ADC_1 0077               __size_of_ADC_2 0078                 ??__div_to_l_ 0078  
                   ?_isdigit 0070         ??_Write_USART_String 0073             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 035F                  ??_Canal_ADC 0072  
                  datosLCD@x 0073               ___wmul@product 0074                    clear_ram0 1844  
         __end_of__div_to_l_ 1190                   _ADCON0bits 001F                  __stringbase 080F  
          ___wmul@multiplier 0070                 ??_config_ADC 0070             __size_of_LCD_CMD 001D  
                   _Lcd_Init 000E     __end_of_Lcd_Write_String 1A38           __end_of_config_ADC 1837  
                ??__Umul8_16 0072                 ?_Write_USART 0070             __size_of___fladd 0288  
           __size_of___fldiv 01DD             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 0059             __size_of___flmul 0361             __size_of___flsub 0024  
           __size_of___fltol 007C             __size_of___lldiv 0066             __size_of___llmod 0054  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                     __baudios 1837  
                _fround$1063 004D                  _fround$1064 0049           __end_of__stringtab 0810  
                _isdigit$882 0070                   Canal_ADC@x 0070                   sprintf@val 00B3  
                   ___xxtofl 1F46             __size_of_isdigit 0012                     _datosLCD 189D  
            ___lwdiv@divisor 0076              ___lwdiv@counter 007D                     __ptext10 10D2  
                   __ptext11 1907                     __ptext20 184C                     __ptext12 1ACA  
                   __ptext21 183C                     __ptext13 1B77                     __ptext30 000E  
                   __ptext22 186F                     __ptext14 1CCC                     __ptext31 1862  
                   __ptext23 1833                     __ptext15 18E3                     __ptext40 1E96  
                   __ptext32 189D                     __ptext24 1837                     __ptext16 1578  
                   __ptext33 19B8                     __ptext25 1953                     __ptext17 0003  
                   __ptext34 1C54                     __ptext26 1856                     __ptext18 1D48  
                   __ptext35 1BDD                     __ptext27 19F6                     __ptext19 1A7C  
                   __ptext36 1F46                     __ptext28 1880                     __ptext37 0C9F  
                   __ptext29 18BF                     __ptext38 192C                     __ptext39 1190  
                   __powers_ 0810                     _config_P 186F             __size_of_sprintf 077B  
              __size_of_main 00AC                   _LCD_Limpia 1862          Write_USART_String@a 0071  
        Write_USART_String@i 0074                     isdigit@c 0071                     scale@scl 0050  
                  sprintf@ap 00B2             __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024  
                  sprintf@sp 00C5             __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074                    stringcode 080A                 ?__tdiv_to_l_ 0070  
     __Umul8_16@multiplicand 0070                     sprintf@c 00C8                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                   stringdir 080A                     stringtab 0800                ___fladd@signs 0062  
               ___fladd@aexp 0063                 ___fladd@bexp 0064         __Umul8_16@multiplier 0078  
              ?_config_rcsta 0070            __Umul8_16@product 0074                ?_config_txsta 0070  
