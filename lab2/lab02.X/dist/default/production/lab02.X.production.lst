

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 13:26:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  000B                     _INTCON	set	11
   215  0009                     _PORTE	set	9
   216  0006                     _PORTB	set	6
   217  0005                     _PORTA	set	5
   218  0009                     _PORTEbits	set	9
   219  0001                     _TMR0	set	1
   220  001E                     _ADRESH	set	30
   221  001F                     _ADCON0bits	set	31
   222  0008                     _PORTD	set	8
   223  0006                     _PORTBbits	set	6
   224  000B                     _INTCONbits	set	11
   225  0007                     _PORTC	set	7
   226  000C                     _PIR1bits	set	12
   227  001F                     _ADCON0	set	31
   228  005A                     _TMR0IF	set	90
   229  0096                     _IOCB	set	150
   230  0081                     _OPTION_REG	set	129
   231  0089                     _TRISE	set	137
   232  0085                     _TRISA	set	133
   233  0086                     _TRISB	set	134
   234  0088                     _TRISD	set	136
   235  0087                     _TRISC	set	135
   236  008C                     _PIE1bits	set	140
   237  009F                     _ADCON1	set	159
   238  0189                     _ANSELH	set	393
   239  0188                     _ANSEL	set	392
   240                           
   241                           	psect	cinit
   242  0011                     start_initialization:	
   243                           ; #config settings
   244                           
   245  0011                     __initialization:
   246                           
   247                           ; Clear objects allocated to COMMON
   248  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   249  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   250  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   251  0014  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   252                           
   253                           ; Clear objects allocated to BANK0
   254  0015  1283               	bcf	3,5	;RP0=0, select bank0
   255  0016  1303               	bcf	3,6	;RP1=0, select bank0
   256  0017  01A0               	clrf	__pbssBANK0& (0+127)
   257  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   258  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   259  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   260  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   261  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   262  001D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   263  001E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   264  001F                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  001F                     __end_of__initialization:
   268  001F  0183               	clrf	3
   269  0020  120A  118A  2966   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMMON
   272  0079                     __pbssCOMMON:
   273  0079                     _banders:
   274  0079                     	ds	2
   275  007B                     _Contador:
   276  007B                     	ds	2
   277                           
   278                           	psect	bssBANK0
   279  0020                     __pbssBANK0:
   280  0020                     _val_low:
   281  0020                     	ds	2
   282  0022                     _val_high:
   283  0022                     	ds	2
   284  0024                     _conta:
   285  0024                     	ds	2
   286  0026                     _valor_adc:
   287  0026                     	ds	2
   288                           
   289                           	psect	cstackCOMMON
   290  0070                     __pcstackCOMMON:
   291  0070                     ?_Display:
   292  0070                     ?_Config_P:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_Config_Int:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_Banderas:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_Sep_Nb:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_ADC_INIT:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_ADC_INTERRUPCION:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_Multiplexado:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ??_Multiplexado:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_isr:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_main:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_ADC_READ:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ADC_READ@canal:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 2 bytes @ 0x0
   330  0070                     	ds	2
   331  0072                     ??_ADC_READ:
   332  0072                     Multiplexado@num:	
   333                           ; 1 bytes @ 0x2
   334                           
   335                           
   336                           ; 1 bytes @ 0x2
   337  0072                     	ds	1
   338  0073                     ??_Display:
   339  0073                     ??_isr:	
   340                           ; 1 bytes @ 0x3
   341                           
   342                           
   343                           ; 1 bytes @ 0x3
   344  0073                     	ds	6
   345                           
   346                           	psect	cstackBANK0
   347  0028                     __pcstackBANK0:
   348  0028                     ??_Config_P:
   349  0028                     ??_Config_Int:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0028                     ??_Banderas:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0028                     ??_Sep_Nb:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0028                     ??_ADC_INIT:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0028                     ??_ADC_INTERRUPCION:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  0028                     	ds	2
   367  002A                     ??_main:
   368                           
   369                           	psect	maintext
   370  0166                     __pmaintext:	
   371                           ; 1 bytes @ 0x2
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 107 in file "lab2.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : B00/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels required when called:    4
   397 ;; This function calls:
   398 ;;		_ADC_INIT
   399 ;;		_ADC_INTERRUPCION
   400 ;;		_Banderas
   401 ;;		_Config_Int
   402 ;;		_Config_P
   403 ;;		_Sep_Nb
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  0166                     _main:
   412  0166                     l1183:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   415                           
   416                           
   417                           ;lab2.c: 108:     ANSELH = 0b00000000;
   418  0166  120A  118A  2212  120A  118A  	fcall	_Config_P
   419                           
   420                           ;lab2.c: 109: 
   421  016B  120A  118A  2236  120A  118A  	fcall	_Config_Int
   422  0170                     l1185:
   423                           
   424                           ;lab2.c: 110:     PORTA = 0;
   425  0170  120A  118A  224A  120A  118A  	fcall	_ADC_INIT
   426  0175                     l1187:
   427                           
   428                           ;lab2.c: 111:     PORTB = 0;
   429  0175  120A  118A  2243  120A  118A  	fcall	_ADC_INTERRUPCION
   430  017A                     l1189:
   431                           
   432                           ;lab2.c: 116: }
   433  017A  1283               	bcf	3,5	;RP0=0, select bank0
   434  017B  1303               	bcf	3,6	;RP1=0, select bank0
   435  017C  0825               	movf	_conta+1,w
   436  017D  3A80               	xorlw	128
   437  017E  00FF               	movwf	btemp+1
   438  017F  3080               	movlw	128
   439  0180  027F               	subwf	btemp+1,w
   440  0181  1D03               	skipz
   441  0182  2985               	goto	u305
   442  0183  3001               	movlw	1
   443  0184  0224               	subwf	_conta,w
   444  0185                     u305:
   445  0185  1C03               	skipc
   446  0186  2988               	goto	u301
   447  0187  2989               	goto	u300
   448  0188                     u301:
   449  0188  2992               	goto	l1195
   450  0189                     u300:
   451  0189                     l1191:
   452                           
   453                           ;lab2.c: 117: 
   454  0189  1283               	bcf	3,5	;RP0=0, select bank0
   455  018A  1303               	bcf	3,6	;RP1=0, select bank0
   456  018B  01A4               	clrf	_conta
   457  018C  01A5               	clrf	_conta+1
   458  018D                     l1193:
   459                           
   460                           ;lab2.c: 119: 
   461  018D  120A  118A  21FE  120A  118A  	fcall	_Banderas
   462  0192                     l1195:
   463                           
   464                           ;lab2.c: 122:     OPTION_REG = 0b10000001;
   465  0192  120A  118A  21B4  120A  118A  	fcall	_Sep_Nb
   466  0197                     l1197:
   467                           
   468                           ;lab2.c: 123:     INTCON = 0b10101001;
   469  0197  1283               	bcf	3,5	;RP0=0, select bank0
   470  0198  1303               	bcf	3,6	;RP1=0, select bank0
   471  0199  0827               	movf	_valor_adc+1,w
   472  019A  027C               	subwf	_Contador+1,w
   473  019B  1D03               	skipz
   474  019C  299F               	goto	u315
   475  019D  0826               	movf	_valor_adc,w
   476  019E  027B               	subwf	_Contador,w
   477  019F                     u315:
   478  019F  1803               	skipnc
   479  01A0  29A2               	goto	u311
   480  01A1  29A3               	goto	u310
   481  01A2                     u311:
   482  01A2  29A5               	goto	l1201
   483  01A3                     u310:
   484  01A3                     l1199:
   485                           
   486                           ;lab2.c: 124:     IOCB = 0b00000011;
   487  01A3  1409               	bsf	9,0	;volatile
   488                           
   489                           ;lab2.c: 126: 
   490  01A4  297A               	goto	l1189
   491  01A5                     l1201:
   492  01A5  087C               	movf	_Contador+1,w
   493  01A6  0227               	subwf	_valor_adc+1,w
   494  01A7  1D03               	skipz
   495  01A8  29AB               	goto	u325
   496  01A9  087B               	movf	_Contador,w
   497  01AA  0226               	subwf	_valor_adc,w
   498  01AB                     u325:
   499  01AB  1803               	skipnc
   500  01AC  29AE               	goto	u321
   501  01AD  29AF               	goto	u320
   502  01AE                     u321:
   503  01AE  297A               	goto	l1189
   504  01AF                     u320:
   505  01AF                     l1203:
   506                           
   507                           ;lab2.c: 127: void Display(void){
   508  01AF  1009               	bcf	9,0	;volatile
   509  01B0  297A               	goto	l1189
   510  01B1  120A  118A  280E   	ljmp	start
   511  01B4                     __end_of_main:
   512                           
   513                           	psect	text1
   514  01B4                     __ptext1:	
   515 ;; *************** function _Sep_Nb *****************
   516 ;; Defined at:
   517 ;;		line 183 in file "lab2.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0
   533 ;;      Temps:          0       2       0       0       0
   534 ;;      Totals:         0       2       0       0       0
   535 ;;Total ram usage:        2 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    3
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _Sep_Nb
   547  01B4                     _Sep_Nb:
   548  01B4                     l1141:	
   549                           ;incstack = 0
   550                           ; Regs used in _Sep_Nb: [wreg+status,2+status,0]
   551                           
   552  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   553  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   554  01B6  0827               	movf	_valor_adc+1,w
   555  01B7  00A9               	movwf	??_Sep_Nb+1
   556  01B8  0826               	movf	_valor_adc,w
   557  01B9  00A8               	movwf	??_Sep_Nb
   558  01BA  3004               	movlw	4
   559  01BB                     u215:
   560  01BB  1003               	clrc
   561  01BC  0CA9               	rrf	??_Sep_Nb+1,f
   562  01BD  0CA8               	rrf	??_Sep_Nb,f
   563  01BE  3EFF               	addlw	-1
   564  01BF  1D03               	skipz
   565  01C0  29BB               	goto	u215
   566  01C1  300F               	movlw	15
   567  01C2  0528               	andwf	??_Sep_Nb,w
   568  01C3  00A0               	movwf	_val_low
   569  01C4  3000               	movlw	0
   570  01C5  0529               	andwf	??_Sep_Nb+1,w
   571  01C6  00A1               	movwf	_val_low+1
   572  01C7                     l1143:
   573  01C7  300F               	movlw	15
   574  01C8  0526               	andwf	_valor_adc,w
   575  01C9  00A8               	movwf	??_Sep_Nb
   576  01CA  3000               	movlw	0
   577  01CB  0527               	andwf	_valor_adc+1,w
   578  01CC  00A9               	movwf	??_Sep_Nb+1
   579  01CD  0EA8               	swapf	??_Sep_Nb,f
   580  01CE  0EA9               	swapf	??_Sep_Nb+1,f
   581  01CF  30F0               	movlw	240
   582  01D0  05A9               	andwf	??_Sep_Nb+1,f
   583  01D1  0828               	movf	??_Sep_Nb,w
   584  01D2  390F               	andlw	15
   585  01D3  04A9               	iorwf	??_Sep_Nb+1,f
   586  01D4  30F0               	movlw	240
   587  01D5  05A8               	andwf	??_Sep_Nb,f
   588  01D6  0828               	movf	??_Sep_Nb,w
   589  01D7  00A2               	movwf	_val_high
   590  01D8  0829               	movf	??_Sep_Nb+1,w
   591  01D9  00A3               	movwf	_val_high+1
   592  01DA                     l173:
   593  01DA  0008               	return
   594  01DB                     __end_of_Sep_Nb:
   595                           
   596                           	psect	text2
   597  0212                     __ptext2:	
   598 ;; *************** function _Config_P *****************
   599 ;; Defined at:
   600 ;;		line 136 in file "lab2.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    3
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _Config_P
   630  0212                     _Config_P:
   631  0212                     l1109:	
   632                           ;incstack = 0
   633                           ; Regs used in _Config_P: [wreg+status,2]
   634                           
   635                           
   636                           ;lab2.c: 137: }
   637  0212  1683               	bsf	3,5	;RP0=1, select bank1
   638  0213  1303               	bcf	3,6	;RP1=0, select bank1
   639  0214  0188               	clrf	8	;volatile
   640  0215                     l1111:
   641                           
   642                           ;lab2.c: 138: 
   643  0215  3007               	movlw	7
   644  0216  0086               	movwf	6	;volatile
   645  0217                     l1113:
   646                           
   647                           ;lab2.c: 139: void Banderas(void){
   648  0217  0185               	clrf	5	;volatile
   649  0218                     l1115:
   650                           
   651                           ;lab2.c: 140:     if (banders == 1){
   652  0218  0189               	clrf	9	;volatile
   653  0219                     l1117:
   654                           
   655                           ;lab2.c: 142:     } else if (banders == 0){
   656  0219  1683               	bsf	3,5	;RP0=1, select bank3
   657  021A  1703               	bsf	3,6	;RP1=1, select bank3
   658  021B  0188               	clrf	8	;volatile
   659  021C                     l1119:
   660                           
   661                           ;lab2.c: 143:         banders = 1;
   662  021C  0189               	clrf	9	;volatile
   663  021D                     l1121:
   664                           
   665                           ;lab2.c: 145: 
   666  021D  1283               	bcf	3,5	;RP0=0, select bank0
   667  021E  1303               	bcf	3,6	;RP1=0, select bank0
   668  021F  0185               	clrf	5	;volatile
   669  0220                     l1123:
   670                           
   671                           ;lab2.c: 146: }
   672  0220  0186               	clrf	6	;volatile
   673  0221                     l1125:
   674                           
   675                           ;lab2.c: 147: 
   676  0221  0187               	clrf	7	;volatile
   677  0222                     l1127:
   678                           
   679                           ;lab2.c: 148: void Sep_Nb(void){
   680  0222  0188               	clrf	8	;volatile
   681  0223                     l1129:
   682                           
   683                           ;lab2.c: 149:     val_low = (0b11110000 & valor_adc) >> 4;
   684  0223  0189               	clrf	9	;volatile
   685  0224                     l155:
   686  0224  0008               	return
   687  0225                     __end_of_Config_P:
   688                           
   689                           	psect	text3
   690  0236                     __ptext3:	
   691 ;; *************** function _Config_Int *****************
   692 ;; Defined at:
   693 ;;		line 155 in file "lab2.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    3
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _Config_Int
   723  0236                     _Config_Int:
   724  0236                     l1131:	
   725                           ;incstack = 0
   726                           ; Regs used in _Config_Int: [wreg]
   727                           
   728  0236  3004               	movlw	4
   729  0237  1283               	bcf	3,5	;RP0=0, select bank0
   730  0238  1303               	bcf	3,6	;RP1=0, select bank0
   731  0239  0081               	movwf	1	;volatile
   732  023A  3081               	movlw	129
   733  023B  1683               	bsf	3,5	;RP0=1, select bank1
   734  023C  1303               	bcf	3,6	;RP1=0, select bank1
   735  023D  0081               	movwf	1	;volatile
   736  023E  30A9               	movlw	169
   737  023F  008B               	movwf	11	;volatile
   738  0240  3003               	movlw	3
   739  0241  0096               	movwf	22	;volatile
   740  0242                     l158:
   741  0242  0008               	return
   742  0243                     __end_of_Config_Int:
   743                           
   744                           	psect	text4
   745  01FE                     __ptext4:	
   746 ;; *************** function _Banderas *****************
   747 ;; Defined at:
   748 ;;		line 174 in file "lab2.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    3
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _Banderas
   778  01FE                     _Banderas:
   779  01FE                     l1133:	
   780                           ;incstack = 0
   781                           ; Regs used in _Banderas: [wreg+status,2+status,0]
   782                           
   783  01FE  0379               	decf	_banders,w
   784  01FF  047A               	iorwf	_banders+1,w
   785  0200  1D03               	btfss	3,2
   786  0201  2A03               	goto	u191
   787  0202  2A04               	goto	u190
   788  0203                     u191:
   789  0203  2A07               	goto	l1137
   790  0204                     u190:
   791  0204                     l1135:
   792  0204  01F9               	clrf	_banders
   793  0205  01FA               	clrf	_banders+1
   794  0206  2A11               	goto	l170
   795  0207                     l1137:
   796  0207  0879               	movf	_banders,w
   797  0208  047A               	iorwf	_banders+1,w
   798  0209  1D03               	btfss	3,2
   799  020A  2A0C               	goto	u201
   800  020B  2A0D               	goto	u200
   801  020C                     u201:
   802  020C  2A11               	goto	l170
   803  020D                     u200:
   804  020D                     l1139:
   805  020D  3001               	movlw	1
   806  020E  00F9               	movwf	_banders
   807  020F  3000               	movlw	0
   808  0210  00FA               	movwf	_banders+1
   809  0211                     l170:
   810  0211  0008               	return
   811  0212                     __end_of_Banderas:
   812                           
   813                           	psect	text5
   814  0243                     __ptext5:	
   815 ;; *************** function _ADC_INTERRUPCION *****************
   816 ;; Defined at:
   817 ;;		line 53 in file "./ADC.h"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		None
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    3
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _ADC_INTERRUPCION
   847  0243                     _ADC_INTERRUPCION:
   848  0243                     l1093:	
   849                           ;incstack = 0
   850                           ; Regs used in _ADC_INTERRUPCION: []
   851                           
   852                           
   853                           ;./ADC.h: 54:     PIE1bits.ADIE = 1;
   854  0243  1683               	bsf	3,5	;RP0=1, select bank1
   855  0244  1303               	bcf	3,6	;RP1=0, select bank1
   856  0245  170C               	bsf	12,6	;volatile
   857                           
   858                           ;./ADC.h: 55:     PIR1bits.ADIF = 1;
   859  0246  1283               	bcf	3,5	;RP0=0, select bank0
   860  0247  1303               	bcf	3,6	;RP1=0, select bank0
   861  0248  170C               	bsf	12,6	;volatile
   862  0249                     l76:
   863  0249  0008               	return
   864  024A                     __end_of_ADC_INTERRUPCION:
   865                           
   866                           	psect	text6
   867  024A                     __ptext6:	
   868 ;; *************** function _ADC_INIT *****************
   869 ;; Defined at:
   870 ;;		line 41 in file "./ADC.h"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		status,2
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         0       0       0       0       0
   888 ;;Total ram usage:        0 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    3
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _ADC_INIT
   900  024A                     _ADC_INIT:
   901  024A                     l1079:	
   902                           ;incstack = 0
   903                           ; Regs used in _ADC_INIT: [status,2]
   904                           
   905                           
   906                           ;./ADC.h: 42:     ADCON1 = 0b00000000;
   907  024A  1683               	bsf	3,5	;RP0=1, select bank1
   908  024B  1303               	bcf	3,6	;RP1=0, select bank1
   909  024C  019F               	clrf	31	;volatile
   910  024D                     l67:
   911  024D  0008               	return
   912  024E                     __end_of_ADC_INIT:
   913                           
   914                           	psect	text7
   915  0023                     __ptext7:	
   916 ;; *************** function _isr *****************
   917 ;; Defined at:
   918 ;;		line 59 in file "lab2.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0
   934 ;;      Temps:          6       0       0       0       0
   935 ;;      Totals:         6       0       0       0       0
   936 ;;Total ram usage:        6 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    2
   939 ;; This function calls:
   940 ;;		_ADC_READ
   941 ;;		_Display
   942 ;; This function is called by:
   943 ;;		Interrupt level 1
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _isr
   949  0023                     _isr:
   950  0023                     i1l1145:
   951                           
   952                           ;lab2.c: 61:     }
   953  0023  1C0B               	btfss	11,0	;volatile
   954  0024  2826               	goto	u22_21
   955  0025  2827               	goto	u22_20
   956  0026                     u22_21:
   957  0026  2884               	goto	i1l1163
   958  0027                     u22_20:
   959  0027                     i1l1147:
   960                           
   961                           ;lab2.c: 62: 
   962  0027  100B               	bcf	11,0	;volatile
   963                           
   964                           ;lab2.c: 63:     if (TMR0IF){
   965  0028  1283               	bcf	3,5	;RP0=0, select bank0
   966  0029  1303               	bcf	3,6	;RP1=0, select bank0
   967  002A  1C06               	btfss	6,0	;volatile
   968  002B  282D               	goto	u23_21
   969  002C  282E               	goto	u23_20
   970  002D                     u23_21:
   971  002D  283B               	goto	i1l1151
   972  002E                     u23_20:
   973  002E                     i1l1149:
   974                           
   975                           ;lab2.c: 65:         TMR0 = 4;
   976  002E  3002               	movlw	2
   977  002F  00F5               	movwf	??_isr+2
   978  0030  3004               	movlw	4
   979  0031  00F4               	movwf	??_isr+1
   980  0032  30BA               	movlw	186
   981  0033  00F3               	movwf	??_isr
   982  0034                     u33_27:
   983  0034  0BF3               	decfsz	??_isr,f
   984  0035  2834               	goto	u33_27
   985  0036  0BF4               	decfsz	??_isr+1,f
   986  0037  2834               	goto	u33_27
   987  0038  0BF5               	decfsz	??_isr+2,f
   988  0039  2834               	goto	u33_27
   989  003A  0000               	nop
   990  003B                     i1l1151:
   991                           
   992                           ;lab2.c: 68: }
   993  003B  1283               	bcf	3,5	;RP0=0, select bank0
   994  003C  1303               	bcf	3,6	;RP1=0, select bank0
   995  003D  1806               	btfsc	6,0	;volatile
   996  003E  2840               	goto	u24_21
   997  003F  2841               	goto	u24_20
   998  0040                     u24_21:
   999  0040  2856               	goto	i1l1155
  1000  0041                     u24_20:
  1001  0041                     i1l1153:
  1002                           
  1003                           ;lab2.c: 69: 
  1004  0041  3001               	movlw	1
  1005  0042  07FB               	addwf	_Contador,f
  1006  0043  1803               	skipnc
  1007  0044  0AFC               	incf	_Contador+1,f
  1008  0045  3000               	movlw	0
  1009  0046  07FC               	addwf	_Contador+1,f
  1010                           
  1011                           ;lab2.c: 70: 
  1012  0047  087B               	movf	_Contador,w
  1013  0048  0088               	movwf	8	;volatile
  1014                           
  1015                           ;lab2.c: 71: 
  1016  0049  3002               	movlw	2
  1017  004A  00F5               	movwf	??_isr+2
  1018  004B  3004               	movlw	4
  1019  004C  00F4               	movwf	??_isr+1
  1020  004D  30BA               	movlw	186
  1021  004E  00F3               	movwf	??_isr
  1022  004F                     u34_27:
  1023  004F  0BF3               	decfsz	??_isr,f
  1024  0050  284F               	goto	u34_27
  1025  0051  0BF4               	decfsz	??_isr+1,f
  1026  0052  284F               	goto	u34_27
  1027  0053  0BF5               	decfsz	??_isr+2,f
  1028  0054  284F               	goto	u34_27
  1029  0055  0000               	nop
  1030  0056                     i1l1155:
  1031                           
  1032                           ;lab2.c: 73:     Config_P();
  1033  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0058  1C86               	btfss	6,1	;volatile
  1036  0059  285B               	goto	u25_21
  1037  005A  285C               	goto	u25_20
  1038  005B                     u25_21:
  1039  005B  2869               	goto	i1l1159
  1040  005C                     u25_20:
  1041  005C                     i1l1157:
  1042                           
  1043                           ;lab2.c: 74:     Config_Int();
  1044  005C  3002               	movlw	2
  1045  005D  00F5               	movwf	??_isr+2
  1046  005E  3004               	movlw	4
  1047  005F  00F4               	movwf	??_isr+1
  1048  0060  30BA               	movlw	186
  1049  0061  00F3               	movwf	??_isr
  1050  0062                     u35_27:
  1051  0062  0BF3               	decfsz	??_isr,f
  1052  0063  2862               	goto	u35_27
  1053  0064  0BF4               	decfsz	??_isr+1,f
  1054  0065  2862               	goto	u35_27
  1055  0066  0BF5               	decfsz	??_isr+2,f
  1056  0067  2862               	goto	u35_27
  1057  0068  0000               	nop
  1058  0069                     i1l1159:
  1059                           
  1060                           ;lab2.c: 76:     ADC_INTERRUPCION();
  1061  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1062  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1063  006B  1886               	btfsc	6,1	;volatile
  1064  006C  286E               	goto	u26_21
  1065  006D  286F               	goto	u26_20
  1066  006E                     u26_21:
  1067  006E  2884               	goto	i1l1163
  1068  006F                     u26_20:
  1069  006F                     i1l1161:
  1070                           
  1071                           ;lab2.c: 77: 
  1072  006F  30FF               	movlw	255
  1073  0070  07FB               	addwf	_Contador,f
  1074  0071  1803               	skipnc
  1075  0072  0AFC               	incf	_Contador+1,f
  1076  0073  30FF               	movlw	255
  1077  0074  07FC               	addwf	_Contador+1,f
  1078                           
  1079                           ;lab2.c: 78: 
  1080  0075  087B               	movf	_Contador,w
  1081  0076  0088               	movwf	8	;volatile
  1082                           
  1083                           ;lab2.c: 79: 
  1084  0077  3002               	movlw	2
  1085  0078  00F5               	movwf	??_isr+2
  1086  0079  3004               	movlw	4
  1087  007A  00F4               	movwf	??_isr+1
  1088  007B  30BA               	movlw	186
  1089  007C  00F3               	movwf	??_isr
  1090  007D                     u36_27:
  1091  007D  0BF3               	decfsz	??_isr,f
  1092  007E  287D               	goto	u36_27
  1093  007F  0BF4               	decfsz	??_isr+1,f
  1094  0080  287D               	goto	u36_27
  1095  0081  0BF5               	decfsz	??_isr+2,f
  1096  0082  287D               	goto	u36_27
  1097  0083  0000               	nop
  1098  0084                     i1l1163:
  1099                           
  1100                           ;lab2.c: 83: 
  1101  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0086  1F0C               	btfss	12,6	;volatile
  1104  0087  2889               	goto	u27_21
  1105  0088  288A               	goto	u27_20
  1106  0089                     u27_21:
  1107  0089  28B3               	goto	i1l135
  1108  008A                     u27_20:
  1109  008A                     i1l1165:
  1110                           
  1111                           ;lab2.c: 84:             Banderas();
  1112  008A  130C               	bcf	12,6	;volatile
  1113  008B                     i1l1167:
  1114                           
  1115                           ;lab2.c: 86: 
  1116  008B  3008               	movlw	8
  1117  008C  00F0               	movwf	ADC_READ@canal
  1118  008D  3000               	movlw	0
  1119  008E  00F1               	movwf	ADC_READ@canal+1
  1120  008F  120A  118A  2225  120A  118A  	fcall	_ADC_READ
  1121  0094                     i1l1169:
  1122                           
  1123                           ;lab2.c: 88:         if (valor_adc > Contador) {
  1124  0094  3003               	movlw	3
  1125  0095  00F4               	movwf	??_isr+1
  1126  0096  3097               	movlw	151
  1127  0097  00F3               	movwf	??_isr
  1128  0098                     u37_27:
  1129  0098  0BF3               	decfsz	??_isr,f
  1130  0099  2898               	goto	u37_27
  1131  009A  0BF4               	decfsz	??_isr+1,f
  1132  009B  2898               	goto	u37_27
  1133  009C  289D               	nop2
  1134  009D                     i1l1171:
  1135                           
  1136                           ;lab2.c: 89:             PORTEbits.RE0 = 1;
  1137  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1138  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1139  009F  149F               	bsf	31,1	;volatile
  1140                           
  1141                           ;lab2.c: 90: 
  1142  00A0  28AD               	goto	i1l1177
  1143  00A1                     i1l1173:
  1144                           
  1145                           ;lab2.c: 93:         }
  1146  00A1  081E               	movf	30,w	;volatile
  1147  00A2  00F3               	movwf	??_isr
  1148  00A3  01F4               	clrf	??_isr+1
  1149  00A4  0873               	movf	??_isr,w
  1150  00A5  00A6               	movwf	_valor_adc
  1151  00A6  0874               	movf	??_isr+1,w
  1152  00A7  00A7               	movwf	_valor_adc+1
  1153  00A8                     i1l1175:
  1154                           
  1155                           ;lab2.c: 94:     }
  1156  00A8  120A  118A  21DB  120A  118A  	fcall	_Display
  1157  00AD                     i1l1177:
  1158                           
  1159                           ;lab2.c: 90: 
  1160  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00AF  189F               	btfsc	31,1	;volatile
  1163  00B0  28B2               	goto	u28_21
  1164  00B1  28B3               	goto	u28_20
  1165  00B2                     u28_21:
  1166  00B2  28A1               	goto	i1l1173
  1167  00B3                     u28_20:
  1168  00B3                     i1l135:	
  1169                           ;lab2.c: 96: }
  1170                           
  1171                           
  1172                           ;lab2.c: 98: 
  1173  00B3  1D0B               	btfss	11,2	;volatile
  1174  00B4  28B6               	goto	u29_21
  1175  00B5  28B7               	goto	u29_20
  1176  00B6                     u29_21:
  1177  00B6  28C0               	goto	i1l140
  1178  00B7                     u29_20:
  1179  00B7                     i1l1179:
  1180                           
  1181                           ;lab2.c: 99: 
  1182  00B7  110B               	bcf	11,2	;volatile
  1183  00B8                     i1l1181:
  1184                           
  1185                           ;lab2.c: 100: 
  1186  00B8  3004               	movlw	4
  1187  00B9  0081               	movwf	1	;volatile
  1188                           
  1189                           ;lab2.c: 101: void Config_P(void){
  1190  00BA  3001               	movlw	1
  1191  00BB  07A4               	addwf	_conta,f
  1192  00BC  1803               	skipnc
  1193  00BD  0AA5               	incf	_conta+1,f
  1194  00BE  3000               	movlw	0
  1195  00BF  07A5               	addwf	_conta+1,f
  1196  00C0                     i1l140:
  1197  00C0  0878               	movf	??_isr+5,w
  1198  00C1  008A               	movwf	10
  1199  00C2  0877               	movf	??_isr+4,w
  1200  00C3  0084               	movwf	4
  1201  00C4  0E76               	swapf	??_isr+3,w
  1202  00C5  0083               	movwf	3
  1203  00C6  0EFE               	swapf	btemp,f
  1204  00C7  0E7E               	swapf	btemp,w
  1205  00C8  0009               	retfie
  1206  00C9                     __end_of_isr:
  1207                           
  1208                           	psect	intentry
  1209  0004                     __pintentry:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1212                           
  1213  0004                     interrupt_function:
  1214  007E                     saved_w	set	btemp
  1215  0004  00FE               	movwf	btemp
  1216  0005  0E03               	swapf	3,w
  1217  0006  00F6               	movwf	??_isr+3
  1218  0007  0804               	movf	4,w
  1219  0008  00F7               	movwf	??_isr+4
  1220  0009  080A               	movf	10,w
  1221  000A  00F8               	movwf	??_isr+5
  1222  000B  120A  118A  2823   	ljmp	_isr
  1223                           
  1224                           	psect	text8
  1225  01DB                     __ptext8:	
  1226 ;; *************** function _Display *****************
  1227 ;; Defined at:
  1228 ;;		line 162 in file "lab2.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    1
  1249 ;; This function calls:
  1250 ;;		_Multiplexado
  1251 ;; This function is called by:
  1252 ;;		_isr
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _Display
  1258  01DB                     _Display:
  1259  01DB                     i1l1095:	
  1260                           ;incstack = 0
  1261                           ; Regs used in _Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1262                           
  1263  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1264  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1265  01DD  0189               	clrf	9	;volatile
  1266  01DE                     i1l1097:
  1267  01DE  0879               	movf	_banders,w
  1268  01DF  047A               	iorwf	_banders+1,w
  1269  01E0  1D03               	btfss	3,2
  1270  01E1  29E3               	goto	u17_21
  1271  01E2  29E4               	goto	u17_20
  1272  01E3                     u17_21:
  1273  01E3  29EE               	goto	i1l1103
  1274  01E4                     u17_20:
  1275  01E4                     i1l1099:
  1276  01E4  0820               	movf	_val_low,w
  1277  01E5  120A  118A  20C9  120A  118A  	fcall	_Multiplexado
  1278  01EA                     i1l1101:
  1279  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1280  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1281  01EC  1489               	bsf	9,1	;volatile
  1282  01ED  29FD               	goto	i1l164
  1283  01EE                     i1l1103:
  1284  01EE  0379               	decf	_banders,w
  1285  01EF  047A               	iorwf	_banders+1,w
  1286  01F0  1D03               	btfss	3,2
  1287  01F1  29F3               	goto	u18_21
  1288  01F2  29F4               	goto	u18_20
  1289  01F3                     u18_21:
  1290  01F3  29FD               	goto	i1l164
  1291  01F4                     u18_20:
  1292  01F4                     i1l1105:
  1293  01F4  0822               	movf	_val_high,w
  1294  01F5  120A  118A  20C9  120A  118A  	fcall	_Multiplexado
  1295  01FA                     i1l1107:
  1296  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01FC  1509               	bsf	9,2	;volatile
  1299  01FD                     i1l164:
  1300  01FD  0008               	return
  1301  01FE                     __end_of_Display:
  1302                           
  1303                           	psect	text9
  1304  00C9                     __ptext9:	
  1305 ;; *************** function _Multiplexado *****************
  1306 ;; Defined at:
  1307 ;;		line 37 in file "./Multiplexado.h"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  num             1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  num             1    2[COMMON] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0
  1323 ;;      Temps:          2       0       0       0       0
  1324 ;;      Totals:         3       0       0       0       0
  1325 ;;Total ram usage:        3 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_Display
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _Multiplexado
  1336  00C9                     _Multiplexado:
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _Multiplexado: [wreg-fsr0h+status,2+status,0]
  1340                           ;Multiplexado@num stored from wreg
  1341  00C9  00F2               	movwf	Multiplexado@num
  1342  00CA                     i1l1005:
  1343                           
  1344                           ;./Multiplexado.h: 38:     TRISC = 0;
  1345  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1346  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1347  00CC  0187               	clrf	7	;volatile
  1348                           
  1349                           ;./Multiplexado.h: 39:     PORTC = 0;
  1350  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1351  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1352  00CF  0187               	clrf	7	;volatile
  1353                           
  1354                           ;./Multiplexado.h: 40:     switch (num){
  1355  00D0  28FE               	goto	i1l1073
  1356  00D1                     i1l1007:
  1357                           
  1358                           ;./Multiplexado.h: 42:             PORTC = 0x3F;
  1359  00D1  303F               	movlw	63
  1360  00D2  0087               	movwf	7	;volatile
  1361                           
  1362                           ;./Multiplexado.h: 43:             break;
  1363  00D3  2965               	goto	i1l113
  1364  00D4                     i1l1009:
  1365                           
  1366                           ;./Multiplexado.h: 45:             PORTC = 0x06;
  1367  00D4  3006               	movlw	6
  1368  00D5  0087               	movwf	7	;volatile
  1369                           
  1370                           ;./Multiplexado.h: 46:             break;
  1371  00D6  2965               	goto	i1l113
  1372  00D7                     i1l1011:
  1373                           
  1374                           ;./Multiplexado.h: 48:             PORTC = 0x5B;
  1375  00D7  305B               	movlw	91
  1376  00D8  0087               	movwf	7	;volatile
  1377                           
  1378                           ;./Multiplexado.h: 49:             break;
  1379  00D9  2965               	goto	i1l113
  1380  00DA                     i1l1013:
  1381                           
  1382                           ;./Multiplexado.h: 51:             PORTC = 0x4F;
  1383  00DA  304F               	movlw	79
  1384  00DB  0087               	movwf	7	;volatile
  1385                           
  1386                           ;./Multiplexado.h: 52:             break;
  1387  00DC  2965               	goto	i1l113
  1388  00DD                     i1l1015:
  1389                           
  1390                           ;./Multiplexado.h: 54:             PORTC = 0x66;
  1391  00DD  3066               	movlw	102
  1392  00DE  0087               	movwf	7	;volatile
  1393                           
  1394                           ;./Multiplexado.h: 55:             break;
  1395  00DF  2965               	goto	i1l113
  1396  00E0                     i1l1017:
  1397                           
  1398                           ;./Multiplexado.h: 57:             PORTC = 0x6D;
  1399  00E0  306D               	movlw	109
  1400  00E1  0087               	movwf	7	;volatile
  1401                           
  1402                           ;./Multiplexado.h: 58:             break;
  1403  00E2  2965               	goto	i1l113
  1404  00E3                     i1l1019:
  1405                           
  1406                           ;./Multiplexado.h: 60:             PORTC = 0x7D;
  1407  00E3  307D               	movlw	125
  1408  00E4  0087               	movwf	7	;volatile
  1409                           
  1410                           ;./Multiplexado.h: 61:             break;
  1411  00E5  2965               	goto	i1l113
  1412  00E6                     i1l1021:
  1413                           
  1414                           ;./Multiplexado.h: 63:             PORTC = 0x07;
  1415  00E6  3007               	movlw	7
  1416  00E7  0087               	movwf	7	;volatile
  1417                           
  1418                           ;./Multiplexado.h: 64:             break;
  1419  00E8  2965               	goto	i1l113
  1420  00E9                     i1l1023:
  1421                           
  1422                           ;./Multiplexado.h: 66:             PORTC = 0x7F;
  1423  00E9  307F               	movlw	127
  1424  00EA  0087               	movwf	7	;volatile
  1425                           
  1426                           ;./Multiplexado.h: 67:             break;
  1427  00EB  2965               	goto	i1l113
  1428  00EC                     i1l1025:
  1429                           
  1430                           ;./Multiplexado.h: 69:             PORTC = 0x6F;
  1431  00EC  306F               	movlw	111
  1432  00ED  0087               	movwf	7	;volatile
  1433                           
  1434                           ;./Multiplexado.h: 70:             break;
  1435  00EE  2965               	goto	i1l113
  1436  00EF                     i1l1027:
  1437                           
  1438                           ;./Multiplexado.h: 72:             PORTC = 0x77;
  1439  00EF  3077               	movlw	119
  1440  00F0  0087               	movwf	7	;volatile
  1441                           
  1442                           ;./Multiplexado.h: 73:             break;
  1443  00F1  2965               	goto	i1l113
  1444  00F2                     i1l1029:
  1445                           
  1446                           ;./Multiplexado.h: 75:             PORTC = 0x1F;
  1447  00F2  301F               	movlw	31
  1448  00F3  0087               	movwf	7	;volatile
  1449                           
  1450                           ;./Multiplexado.h: 76:             break;
  1451  00F4  2965               	goto	i1l113
  1452  00F5                     i1l1031:
  1453                           
  1454                           ;./Multiplexado.h: 78:             PORTC = 0x4E;
  1455  00F5  304E               	movlw	78
  1456  00F6  0087               	movwf	7	;volatile
  1457                           
  1458                           ;./Multiplexado.h: 79:             break;
  1459  00F7  2965               	goto	i1l113
  1460  00F8                     i1l1033:
  1461                           
  1462                           ;./Multiplexado.h: 81:             PORTC = 0x3D;
  1463  00F8  303D               	movlw	61
  1464  00F9  0087               	movwf	7	;volatile
  1465                           
  1466                           ;./Multiplexado.h: 82:             break;
  1467  00FA  2965               	goto	i1l113
  1468  00FB                     i1l1037:
  1469                           
  1470                           ;./Multiplexado.h: 87:             PORTC = 0x47;
  1471  00FB  3047               	movlw	71
  1472  00FC  0087               	movwf	7	;volatile
  1473                           
  1474                           ;./Multiplexado.h: 88:             break;
  1475  00FD  2965               	goto	i1l113
  1476  00FE                     i1l1073:
  1477  00FE  0872               	movf	Multiplexado@num,w
  1478  00FF  00F0               	movwf	??_Multiplexado
  1479  0100  01F1               	clrf	??_Multiplexado+1
  1480                           
  1481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1482                           ; Switch size 1, requested type "simple"
  1483                           ; Number of cases is 1, Range of values is 0 to 0
  1484                           ; switch strategies available:
  1485                           ; Name         Instructions Cycles
  1486                           ; simple_byte            4     3 (average)
  1487                           ; direct_byte           11     8 (fixed)
  1488                           ; jumptable            260     6 (fixed)
  1489                           ;	Chosen strategy is simple_byte
  1490  0101  0871               	movf	??_Multiplexado+1,w
  1491  0102  3A00               	xorlw	0	; case 0
  1492  0103  1903               	skipnz
  1493  0104  2906               	goto	i1l1245
  1494  0105  28D1               	goto	i1l1007
  1495  0106                     i1l1245:
  1496                           
  1497                           ; Switch size 1, requested type "simple"
  1498                           ; Number of cases is 31, Range of values is 0 to 240
  1499                           ; switch strategies available:
  1500                           ; Name         Instructions Cycles
  1501                           ; simple_byte           94    48 (average)
  1502                           ; jumptable            260     6 (fixed)
  1503                           ;	Chosen strategy is simple_byte
  1504  0106  0870               	movf	??_Multiplexado,w
  1505  0107  3A00               	xorlw	0	; case 0
  1506  0108  1903               	skipnz
  1507  0109  28D1               	goto	i1l1007
  1508  010A  3A01               	xorlw	1	; case 1
  1509  010B  1903               	skipnz
  1510  010C  28D4               	goto	i1l1009
  1511  010D  3A03               	xorlw	3	; case 2
  1512  010E  1903               	skipnz
  1513  010F  28D7               	goto	i1l1011
  1514  0110  3A01               	xorlw	1	; case 3
  1515  0111  1903               	skipnz
  1516  0112  28DA               	goto	i1l1013
  1517  0113  3A07               	xorlw	7	; case 4
  1518  0114  1903               	skipnz
  1519  0115  28DD               	goto	i1l1015
  1520  0116  3A01               	xorlw	1	; case 5
  1521  0117  1903               	skipnz
  1522  0118  28E0               	goto	i1l1017
  1523  0119  3A03               	xorlw	3	; case 6
  1524  011A  1903               	skipnz
  1525  011B  28E3               	goto	i1l1019
  1526  011C  3A01               	xorlw	1	; case 7
  1527  011D  1903               	skipnz
  1528  011E  28E6               	goto	i1l1021
  1529  011F  3A0F               	xorlw	15	; case 8
  1530  0120  1903               	skipnz
  1531  0121  28E9               	goto	i1l1023
  1532  0122  3A01               	xorlw	1	; case 9
  1533  0123  1903               	skipnz
  1534  0124  28EC               	goto	i1l1025
  1535  0125  3A03               	xorlw	3	; case 10
  1536  0126  1903               	skipnz
  1537  0127  28EF               	goto	i1l1027
  1538  0128  3A01               	xorlw	1	; case 11
  1539  0129  1903               	skipnz
  1540  012A  28F2               	goto	i1l1029
  1541  012B  3A07               	xorlw	7	; case 12
  1542  012C  1903               	skipnz
  1543  012D  28F5               	goto	i1l1031
  1544  012E  3A01               	xorlw	1	; case 13
  1545  012F  1903               	skipnz
  1546  0130  28F8               	goto	i1l1033
  1547  0131  3A03               	xorlw	3	; case 14
  1548  0132  1903               	skipnz
  1549  0133  28DA               	goto	i1l1013
  1550  0134  3A01               	xorlw	1	; case 15
  1551  0135  1903               	skipnz
  1552  0136  28FB               	goto	i1l1037
  1553  0137  3A1F               	xorlw	31	; case 16
  1554  0138  1903               	skipnz
  1555  0139  28E9               	goto	i1l1023
  1556  013A  3A30               	xorlw	48	; case 32
  1557  013B  1903               	skipnz
  1558  013C  28DD               	goto	i1l1015
  1559  013D  3A10               	xorlw	16	; case 48
  1560  013E  1903               	skipnz
  1561  013F  28F5               	goto	i1l1031
  1562  0140  3A70               	xorlw	112	; case 64
  1563  0141  1903               	skipnz
  1564  0142  28D7               	goto	i1l1011
  1565  0143  3A10               	xorlw	16	; case 80
  1566  0144  1903               	skipnz
  1567  0145  28EF               	goto	i1l1027
  1568  0146  3A30               	xorlw	48	; case 96
  1569  0147  1903               	skipnz
  1570  0148  28E3               	goto	i1l1019
  1571  0149  3A10               	xorlw	16	; case 112
  1572  014A  1903               	skipnz
  1573  014B  28DA               	goto	i1l1013
  1574  014C  3AF0               	xorlw	240	; case 128
  1575  014D  1903               	skipnz
  1576  014E  28D4               	goto	i1l1009
  1577  014F  3A10               	xorlw	16	; case 144
  1578  0150  1903               	skipnz
  1579  0151  28EC               	goto	i1l1025
  1580  0152  3A30               	xorlw	48	; case 160
  1581  0153  1903               	skipnz
  1582  0154  28E0               	goto	i1l1017
  1583  0155  3A10               	xorlw	16	; case 176
  1584  0156  1903               	skipnz
  1585  0157  28F8               	goto	i1l1033
  1586  0158  3A70               	xorlw	112	; case 192
  1587  0159  1903               	skipnz
  1588  015A  28DA               	goto	i1l1013
  1589  015B  3A10               	xorlw	16	; case 208
  1590  015C  1903               	skipnz
  1591  015D  28F2               	goto	i1l1029
  1592  015E  3A30               	xorlw	48	; case 224
  1593  015F  1903               	skipnz
  1594  0160  28E6               	goto	i1l1021
  1595  0161  3A10               	xorlw	16	; case 240
  1596  0162  1903               	skipnz
  1597  0163  28FB               	goto	i1l1037
  1598  0164  28D1               	goto	i1l1007
  1599  0165                     i1l113:
  1600  0165  0008               	return
  1601  0166                     __end_of_Multiplexado:
  1602                           
  1603                           	psect	text10
  1604  0225                     __ptext10:	
  1605 ;; *************** function _ADC_READ *****************
  1606 ;; Defined at:
  1607 ;;		line 45 in file "./ADC.h"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  canal           2    0[COMMON] unsigned short 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  2    0[COMMON] unsigned int 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         2       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0
  1624 ;;      Totals:         2       0       0       0       0
  1625 ;;Total ram usage:        2 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_isr
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _ADC_READ
  1636  0225                     _ADC_READ:
  1637  0225                     i1l1081:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
  1640                           
  1641                           
  1642                           ;./ADC.h: 46:     switch (canal){
  1643  0225  2A2B               	goto	i1l1087
  1644  0226                     i1l1083:
  1645                           
  1646                           ;./ADC.h: 48:             ADCON0 = 0b01100001;
  1647  0226  3061               	movlw	97
  1648  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0229  009F               	movwf	31	;volatile
  1651                           
  1652                           ;./ADC.h: 49:             break;
  1653  022A  2A35               	goto	i1l73
  1654  022B                     i1l1087:
  1655                           
  1656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1657                           ; Switch size 1, requested type "simple"
  1658                           ; Number of cases is 1, Range of values is 0 to 0
  1659                           ; switch strategies available:
  1660                           ; Name         Instructions Cycles
  1661                           ; simple_byte            4     3 (average)
  1662                           ; direct_byte           11     8 (fixed)
  1663                           ; jumptable            260     6 (fixed)
  1664                           ;	Chosen strategy is simple_byte
  1665  022B  0871               	movf	ADC_READ@canal+1,w
  1666  022C  3A00               	xorlw	0	; case 0
  1667  022D  1903               	skipnz
  1668  022E  2A30               	goto	i1l1247
  1669  022F  2A35               	goto	i1l73
  1670  0230                     i1l1247:
  1671                           
  1672                           ; Switch size 1, requested type "simple"
  1673                           ; Number of cases is 1, Range of values is 8 to 8
  1674                           ; switch strategies available:
  1675                           ; Name         Instructions Cycles
  1676                           ; simple_byte            4     3 (average)
  1677                           ; direct_byte           14    11 (fixed)
  1678                           ; jumptable            263     9 (fixed)
  1679                           ;	Chosen strategy is simple_byte
  1680  0230  0870               	movf	ADC_READ@canal,w
  1681  0231  3A08               	xorlw	8	; case 8
  1682  0232  1903               	skipnz
  1683  0233  2A26               	goto	i1l1083
  1684  0234  2A35               	goto	i1l73
  1685  0235                     i1l73:
  1686  0235  0008               	return
  1687  0236                     __end_of_ADC_READ:
  1688  007E                     btemp	set	126	;btemp
  1689  007E                     wtemp0	set	126
  1690                           
  1691                           	psect	config
  1692                           
  1693                           ;Config register CONFIG1 @ 0x2007
  1694                           ;	Oscillator Selection bits
  1695                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1696                           ;	Watchdog Timer Enable bit
  1697                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1698                           ;	Power-up Timer Enable bit
  1699                           ;	PWRTE = OFF, PWRT disabled
  1700                           ;	RE3/MCLR pin function select bit
  1701                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1702                           ;	Code Protection bit
  1703                           ;	CP = OFF, Program memory code protection is disabled
  1704                           ;	Data Code Protection bit
  1705                           ;	CPD = OFF, Data memory code protection is disabled
  1706                           ;	Brown Out Reset Selection bits
  1707                           ;	BOREN = OFF, BOR disabled
  1708                           ;	Internal External Switchover bit
  1709                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1710                           ;	Fail-Safe Clock Monitor Enabled bit
  1711                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1712                           ;	Low Voltage Programming Enable bit
  1713                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1714                           ;	In-Circuit Debugger Mode bit
  1715                           ;	DEBUG = 0x1, unprogrammed default
  1716  2007                     	org	8199
  1717  2007  20D1               	dw	8401
  1718                           
  1719                           ;Config register CONFIG2 @ 0x2008
  1720                           ;	Brown-out Reset Selection bit
  1721                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1722                           ;	Flash Program Memory Self Write Enable bits
  1723                           ;	WRT = OFF, Write protection off
  1724  2008                     	org	8200
  1725  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      2      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _Display->_Multiplexado

Critical Paths under _main in BANK0

    _main->_Sep_Nb

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _ADC_INIT
                   _ADC_INTERRUPCION
                           _Banderas
                         _Config_Int
                           _Config_P
                             _Sep_Nb
 ---------------------------------------------------------------------------------
 (1) _Sep_Nb                                               2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Config_P                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Int                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Banderas                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INTERRUPCION                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0     120
                                              3 COMMON     6     6      0
                           _ADC_READ
                            _Display
 ---------------------------------------------------------------------------------
 (3) _Display                                              0     0      0      22
                       _Multiplexado
 ---------------------------------------------------------------------------------
 (4) _Multiplexado                                         3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_READ                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_INIT
   _ADC_INTERRUPCION
   _Banderas
   _Config_Int
   _Config_P
   _Sep_Nb

 _isr (ROOT)
   _ADC_READ
   _Display
     _Multiplexado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 13:26:21 2021

                       l67 024D                         l76 0249                        l170 0211  
                      l155 0224                        l173 01DA                        l158 0242  
                      u200 020D                        u201 020C                        u300 0189  
                      u301 0188                        u310 01A3                        u215 01BB  
                      u311 01A2                        u320 01AF                        u321 01AE  
                      u305 0185                        u315 019F                        u325 01AB  
                      u190 0204                        u191 0203                        _isr 0023  
                      fsr0 0004                       l1111 0215                       l1121 021D  
                     l1113 0217                       l1201 01A5                       l1131 0236  
                     l1123 0220                       l1115 0218                       l1203 01AF  
                     l1133 01FE                       l1125 0221                       l1117 0219  
                     l1109 0212                       l1141 01B4                       l1135 0204  
                     l1127 0222                       l1119 021C                       l1143 01C7  
                     l1137 0207                       l1129 0223                       l1139 020D  
                     l1093 0243                       l1079 024A                       l1191 0189  
                     l1183 0166                       l1193 018D                       l1185 0170  
                     l1195 0192                       l1187 0175                       l1197 0197  
                     l1189 017A                       l1199 01A3                       ?_isr 0070  
                     _IOCB 0096                       i1l73 0235                       _TMR0 0001  
         __end_of_ADC_INIT 024E           __end_of_ADC_READ 0236                       _main 0166  
                     btemp 007E                       start 000E            __end_of_Display 01FE  
                    ??_isr 0073                      ?_main 0070                      _ANSEL 0188  
                    i1l113 0165                      i1l140 00C0                      i1l135 00B3  
                    i1l164 01FD                      u22_20 0027                      u22_21 0026  
                    u23_20 002E                      u23_21 002D                      u24_20 0041  
                    u24_21 0040                      u17_20 01E4                      u25_20 005C  
                    u17_21 01E3                      u25_21 005B                      u33_27 0034  
                    u18_20 01F4                      u26_20 006F                      u18_21 01F3  
                    u26_21 006E                      u34_27 004F                      u27_20 008A  
                    u27_21 0089                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u35_27 0062                      u28_20 00B3                      u28_21 00B2  
               _Config_Int 0236                      u36_27 007D                      u29_20 00B7  
                    u29_21 00B6                      u37_27 0098                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _conta 0024                      pclath 000A  
         __end_of_Banderas 0212                      status 0003                      wtemp0 007E  
          Multiplexado@num 0072           __end_of_Config_P 0225            __initialization 0011  
             __end_of_main 01B4                     ??_main 002A                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                     _ANSELH 0189  
                   i1l1011 00D7                     i1l1021 00E6                     i1l1013 00DA  
                   i1l1005 00CA                     i1l1101 01EA                     i1l1031 00F5  
                   i1l1023 00E9                     i1l1015 00DD                     i1l1007 00D1  
                   i1l1103 01EE                     i1l1033 00F8                     i1l1025 00EC  
                   i1l1017 00E0                     i1l1009 00D4                     i1l1105 01F4  
                   i1l1027 00EF                     i1l1019 00E3                     i1l1107 01FA  
                   i1l1037 00FB                     i1l1029 00F2                     i1l1151 003B  
                   i1l1081 0225                     i1l1073 00FE                     i1l1161 006F  
                   i1l1153 0041                     i1l1145 0023                     i1l1083 0226  
                   i1l1171 009D                     i1l1155 0056                     i1l1147 0027  
                   i1l1163 0084                     i1l1245 0106                     i1l1181 00B8  
                   i1l1173 00A1                     i1l1165 008A                     i1l1157 005C  
                   i1l1149 002E                     i1l1247 0230                     i1l1087 022B  
                   i1l1095 01DB                     i1l1175 00A8                     i1l1167 008B  
                   i1l1159 0069                     i1l1097 01DE                     i1l1177 00AD  
                   i1l1169 0094                     i1l1099 01E4                     i1l1179 00B7  
                   _INTCON 000B                     _TMR0IF 005A                  ??_Display 0073  
         _ADC_INTERRUPCION 0243                     _Sep_Nb 01B4                  ?_ADC_INIT 0070  
                ?_ADC_READ 0070                ?_Config_Int 0070                     saved_w 007E  
  __end_of__initialization 001F             __pcstackCOMMON 0070                  ?_Banderas 0070  
               ??_ADC_INIT 0028                 ??_ADC_READ 0072                  ?_Config_P 0070  
               __pbssBANK0 0020        __size_of_Config_Int 000D                    ?_Sep_Nb 0070  
               __pmaintext 0166                 __pintentry 0004                 ??_Banderas 0028  
               ??_Config_P 0028                    _Display 01DB            __size_of_Sep_Nb 0027  
            ?_Multiplexado 0070                    _banders 0079                    __ptext1 01B4  
                  __ptext2 0212                    __ptext3 0236                    __ptext4 01FE  
                  __ptext5 0243                    __ptext6 024A                    __ptext7 0023  
                  __ptext8 01DB                    __ptext9 00C9   __end_of_ADC_INTERRUPCION 024A  
             __size_of_isr 00A6                    _val_low 0020       end_of_initialization 001F  
           ??_Multiplexado 0070                  _PORTBbits 0006                  _PORTEbits 0009  
             ??_Config_Int 0028          __size_of_ADC_INIT 0004          __size_of_ADC_READ 0011  
       __end_of_Config_Int 0243             __end_of_Sep_Nb 01DB        start_initialization 0011  
            ADC_READ@canal 0070          __size_of_Banderas 0014                __end_of_isr 00C9  
        __size_of_Config_P 0013                   ??_Sep_Nb 0028                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0028       __end_of_Multiplexado 0166  
                 ?_Display 0070                   _ADC_INIT 024A                   _ADC_READ 0225  
        ?_ADC_INTERRUPCION 0070         ??_ADC_INTERRUPCION 0028          interrupt_function 0004  
                 _PIE1bits 008C                   _PIR1bits 000C                  _valor_adc 0026  
               _ADCON0bits 001F                   _Banderas 01FE                   _Config_P 0212  
                 _Contador 007B           __size_of_Display 0023      __size_of_Multiplexado 009D  
                 __ptext10 0225              __size_of_main 004E                   _val_high 0022  
             _Multiplexado 00C9                 _INTCONbits 000B                   intlevel1 0000  
               _OPTION_REG 0081  __size_of_ADC_INTERRUPCION 0007  
